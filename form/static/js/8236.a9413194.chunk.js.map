{"version":3,"file":"static/js/8236.a9413194.chunk.js","mappings":"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","sources":["pages/Editor/IntegrationEditor/AddDatasourceSecurely.tsx","pages/Editor/IntegrationEditor/MockDataSources.tsx","pages/Editor/IntegrationEditor/NewApi.tsx","pages/Editor/IntegrationEditor/DatasourceHome.tsx","pages/Editor/IntegrationEditor/NewQuery.tsx","pages/Editor/IntegrationEditor/AIDataSources.tsx","pages/Editor/IntegrationEditor/CreateNewDatasourceTab.tsx","pages/Editor/gitSync/components/DeployPreview.tsx","pages/Editor/gitSync/components/StatusLoader.tsx","pages/Editor/gitSync/components/GitChangesList/ExpandableChange.tsx","pages/Editor/gitSync/components/GitChangesList/StaticChange.tsx","pages/Editor/gitSync/components/GitChangesList/PageChanges.tsx","pages/Editor/gitSync/components/GitChangesList/index.tsx","pages/Editor/gitSync/components/ConflictInfo.tsx","pages/Editor/gitSync/components/DiscardChangesWarning.tsx","pages/Editor/gitSync/components/PushFailedWarning.tsx","pages/Editor/gitSync/components/DiscardChangesError.tsx","pages/Editor/gitSync/Tabs/Deploy.tsx","pages/Editor/gitSync/components/MergeStatus.tsx","pages/Editor/gitSync/Tabs/Merge.tsx","pages/Editor/gitSync/components/GitErrorPopup.tsx","pages/Editor/gitSync/Tabs/GitConnectionV2/Steps.tsx","pages/Editor/gitSync/Tabs/GitConnectionV2/styles.tsx","pages/Editor/gitSync/Tabs/GitConnectionV2/constants.ts","pages/Editor/gitSync/Tabs/GitConnectionV2/ChooseGitProvider.tsx","pages/Editor/gitSync/Tabs/GitConnectionV2/GenerateSSH.tsx","pages/Editor/gitSync/components/CopyButton.tsx","pages/Editor/gitSync/Tabs/GitConnectionV2/AddDeployKey.tsx","pages/Editor/gitSync/Tabs/GitConnectionV2/index.tsx","pages/Editor/gitSync/Tabs/ConnectionSuccess.tsx","pages/Editor/gitSync/components/ReconnectSSHError.tsx","pages/Editor/gitSync/GitSyncModal/GitSyncModalV2.tsx","pages/Editor/gitSync/GitSyncModal/index.tsx","pages/Editor/gitSync/Menu.tsx","pages/Editor/gitSync/components/Link.tsx","pages/Editor/gitSync/RepoLimitExceededErrorModal.tsx","pages/Editor/gitSync/hooks/useHover.ts","pages/Editor/gitSync/hooks/useActiveHoverIndex.ts","pages/Editor/gitSync/hooks/useFilteredBranches.ts","pages/Editor/gitSync/hooks/useSSHKeyPair.ts","pages/Editor/gitSync/hooks/useGitConnect.ts","pages/Editor/gitSync/utils.ts","pages/Templates/TemplatesLayoutWithFilters.tsx","pages/Templates/TemplatesModal/TemplatesListLayoutSwitcher.tsx","pages/common/SpinnerLoader.tsx","pages/common/SuccessTick.tsx"],"sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { Flex, Text } from \"design-system\";\nimport { getAssetUrl } from \"@appsmith/utils/airgapHelpers\";\nimport { ASSETS_CDN_URL } from \"constants/ThirdPartyConstants\";\nimport {\n  createMessage,\n  DATASOURCE_SECURELY_TITLE,\n} from \"@appsmith/constants/messages\";\n\nconst Wrapper = styled(Flex)`\n  background: var(--ads-v2-color-blue-100);\n  border-radius: var(--ads-v2-border-radius);\n  padding: var(--ads-v2-spaces-7);\n  align-items: center;\n`;\n\nfunction AddDatasourceSecurely() {\n  return (\n    <Wrapper>\n      <img\n        alt={createMessage(DATASOURCE_SECURELY_TITLE)}\n        src={getAssetUrl(`${ASSETS_CDN_URL}/secure-lock.svg`)}\n      />\n      <Flex flexDirection=\"column\" ml=\"spaces-4\">\n        <Text color=\"var(--ads-v2-color-gray-700)\" kind=\"heading-m\">\n          {createMessage(DATASOURCE_SECURELY_TITLE)}\n        </Text>\n        <Text color=\"var(--ads-v2-color-gray-600)\" kind=\"body-m\">\n          Connect a datasource to start building workflows. Your passwords are{\" \"}\n          <u>AES-256 encrypted</u> and we never store any of your data.\n        </Text>\n      </Flex>\n    </Wrapper>\n  );\n}\n\nexport default AddDatasourceSecurely;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport type { MockDatasource } from \"entities/Datasource\";\nimport { getPluginImages } from \"@appsmith/selectors/entitiesSelector\";\nimport { addMockDatasourceToWorkspace } from \"actions/datasourceActions\";\nimport { getCurrentWorkspaceId } from \"@appsmith/selectors/selectedWorkspaceSelectors\";\nimport { getQueryParams } from \"utils/URLUtils\";\nimport type { AppState } from \"@appsmith/reducers\";\nimport AnalyticsUtil from \"@appsmith/utils/AnalyticsUtil\";\nimport { getAssetUrl } from \"@appsmith/utils/airgapHelpers\";\nimport { DatasourceCreateEntryPoints } from \"constants/Datasource\";\n\nconst MockDataSourceWrapper = styled.div`\n  overflow: auto;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  gap: 16px;\n  min-width: 150px;\n  align-items: center;\n  margin-top: 8px;\n`;\n\nconst Description = styled.div`\n  color: var(--ads-v2-color-fg-muted);\n  font-size: 13px;\n  font-weight: 400;\n  line-height: 17px;\n  letter-spacing: -0.24px;\n`;\n\nfunction MockDataSources(props: { mockDatasources: MockDatasource[] }) {\n  const workspaceId = useSelector(getCurrentWorkspaceId);\n  return (\n    <MockDataSourceWrapper className=\"t--mock-datasource-list\">\n      {props.mockDatasources.map((datasource: MockDatasource, idx) => {\n        return (\n          <MockDatasourceCard\n            datasource={datasource}\n            key={`${datasource.name}_${datasource.packageName}_${idx}`}\n            workspaceId={workspaceId}\n          />\n        );\n      })}\n    </MockDataSourceWrapper>\n  );\n}\n\nexport default MockDataSources;\n\nconst CardWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  height: 64px;\n  border-radius: var(--ads-v2-border-radius);\n  &:hover {\n    background-color: var(--ads-v2-color-bg-subtle);\n    cursor: pointer;\n  }\n`;\n\nconst DatasourceImage = styled.img`\n  height: 34px;\n  width: auto;\n  margin: 0 auto;\n  max-width: 100%;\n`;\n\nconst DatasourceName = styled.span`\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 24px;\n  letter-spacing: -0.24px;\n  color: var(--ads-v2-color-fg);\n`;\n\nconst DatasourceCardHeader = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 13px;\n  padding-left: 13.5px;\n`;\n\nconst DatasourceNameWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\ninterface MockDatasourceCardProps {\n  datasource: MockDatasource;\n  workspaceId: string;\n}\n\nexport function MockDatasourceCard(props: MockDatasourceCardProps) {\n  const { datasource, workspaceId } = props;\n  const dispatch = useDispatch();\n  const pluginImages = useSelector(getPluginImages);\n  const plugins = useSelector((state: AppState) => {\n    return state.entities.plugins.list;\n  });\n  const currentPlugin = plugins.find(\n    (eachPlugin) => eachPlugin.packageName === datasource.packageName,\n  );\n  if (!currentPlugin) {\n    return null;\n  }\n\n  const addMockDataSource = () => {\n    AnalyticsUtil.logEvent(\"ADD_MOCK_DATASOURCE_CLICK\", {\n      datasourceName: datasource.name,\n      workspaceId,\n      packageName: currentPlugin.packageName,\n      pluginName: currentPlugin.name,\n      from: DatasourceCreateEntryPoints.CREATE_NEW_DATASOURCE,\n    });\n\n    AnalyticsUtil.logEvent(\"CREATE_DATA_SOURCE_CLICK\", {\n      mockDatasourceName: datasource.name,\n      pluginName: currentPlugin.name,\n      pluginPackageName: currentPlugin.packageName,\n    });\n\n    const queryParams = getQueryParams();\n\n    dispatch(\n      addMockDatasourceToWorkspace(\n        datasource.name,\n        workspaceId,\n        currentPlugin.id,\n        currentPlugin.packageName,\n        queryParams.isGeneratePageMode,\n      ),\n    );\n  };\n\n  return (\n    <CardWrapper className=\"t--mock-datasource\" onClick={addMockDataSource}>\n      <DatasourceCardHeader className=\"t--datasource-name\">\n        <DatasourceImage\n          alt=\"Datasource\"\n          data-testid=\"mock-datasource-image\"\n          src={getAssetUrl(pluginImages[currentPlugin.id])}\n        />\n        <DatasourceNameWrapper data-testid=\"mock-datasource-name-wrapper\">\n          <DatasourceName data-testid=\"mockdatasource-name\">\n            {datasource.name}\n          </DatasourceName>\n          <Description data-testid=\"mockdatasource-description\">\n            {datasource.description}\n          </Description>\n        </DatasourceNameWrapper>\n      </DatasourceCardHeader>\n    </CardWrapper>\n  );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { connect, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport {\n  createDatasourceFromForm,\n  createTempDatasourceFromForm,\n} from \"actions/datasourceActions\";\nimport type { AppState } from \"@appsmith/reducers\";\nimport CurlLogo from \"assets/images/Curl-logo.svg\";\nimport PlusLogo from \"assets/images/Plus-logo.svg\";\nimport type { GenerateCRUDEnabledPluginMap, Plugin } from \"api/PluginApi\";\nimport AnalyticsUtil from \"@appsmith/utils/AnalyticsUtil\";\nimport { CURL } from \"constants/AppsmithActionConstants/ActionConstants\";\nimport { PluginPackageName, PluginType } from \"entities/Action\";\nimport { getQueryParams } from \"utils/URLUtils\";\nimport { getGenerateCRUDEnabledPluginMap } from \"@appsmith/selectors/entitiesSelector\";\nimport { getIsGeneratePageInitiator } from \"utils/GenerateCrudUtil\";\nimport { curlImportPageURL } from \"@appsmith/RouteBuilder\";\nimport { getAssetUrl } from \"@appsmith/utils/airgapHelpers\";\nimport { Spinner } from \"design-system\";\nimport { useEditorType } from \"@appsmith/hooks\";\nimport { useParentEntityInfo } from \"@appsmith/hooks/datasourceEditorHooks\";\nimport { createNewApiActionBasedOnEditorType } from \"@appsmith/actions/helpers\";\nimport type { ActionParentEntityTypeInterface } from \"@appsmith/entities/Engine/actionHelpers\";\n\nexport const StyledContainer = styled.div`\n  flex: 1;\n  margin-top: 8px;\n  .textBtn {\n    font-size: 16px;\n    line-height: 24px;\n    margin: 0;\n    justify-content: center;\n    text-align: center;\n    letter-spacing: -0.24px;\n    color: var(--ads-v2-color-fg);\n    font-weight: 400;\n    text-decoration: none !important;\n    flex-wrap: wrap;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n  @media (min-width: 2500px) {\n    .textBtn {\n      font-size: 18px;\n    }\n  }\n  @media (min-width: 2500px) {\n    .eachCard {\n      width: 240px;\n      height: 200px;\n    }\n    .apiImage {\n      margin-top: 25px;\n      margin-bottom: 20px;\n      height: 80px;\n    }\n    .curlImage {\n      width: 100px;\n    }\n    .createIcon {\n      height: 70px;\n    }\n  }\n`;\n\nexport const ApiCardsContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  gap: 16px;\n  text-align: center;\n  min-width: 150px;\n  border-radius: 4px;\n  align-items: center;\n\n  .create-new-api {\n    &:hover {\n      cursor: pointer;\n    }\n  }\n`;\n\nexport const ApiCard = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  height: 64px;\n  border-radius: var(--ads-v2-border-radius);\n\n  &:hover {\n    background-color: var(--ads-v2-color-bg-subtle);\n    cursor: pointer;\n  }\n\n  .content-icon {\n    height: 34px;\n    width: auto;\n    margin: 0 auto;\n    max-width: 100%;\n  }\n\n  .cta {\n    display: none;\n    margin-right: 32px;\n  }\n\n  &:hover {\n    .cta {\n      display: flex;\n    }\n  }\n`;\n\nexport const CardContentWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 13px;\n  padding-left: 13.5px;\n`;\n\ninterface ApiHomeScreenProps {\n  history: {\n    replace: (data: string) => void;\n    push: (data: string) => void;\n  };\n  location: {\n    search: string;\n  };\n  pageId: string;\n  plugins: Plugin[];\n  createDatasourceFromForm: (data: any) => void;\n  isCreating: boolean;\n  showUnsupportedPluginDialog: (callback: any) => void;\n  createTempDatasourceFromForm: (data: any) => void;\n  showSaasAPIs: boolean; // If this is true, only SaaS APIs will be shown\n  createNewApiActionBasedOnEditorType: (\n    editorType: string,\n    editorId: string,\n    parentEntityId: string,\n    parentEntityType: ActionParentEntityTypeInterface,\n    apiType: string,\n  ) => void;\n  isOnboardingScreen?: boolean;\n}\n\ntype Props = ApiHomeScreenProps;\n\nexport const API_ACTION = {\n  IMPORT_CURL: \"IMPORT_CURL\",\n  CREATE_NEW_API: \"CREATE_NEW_API\",\n  CREATE_NEW_GRAPHQL_API: \"CREATE_NEW_GRAPHQL_API\",\n  CREATE_DATASOURCE_FORM: \"CREATE_DATASOURCE_FORM\",\n  AUTH_API: \"AUTH_API\",\n};\n\nfunction NewApiScreen(props: Props) {\n  const {\n    history,\n    isCreating,\n    isOnboardingScreen,\n    pageId,\n    plugins,\n    showSaasAPIs,\n  } = props;\n  const editorType = useEditorType(location.pathname);\n  const { editorId, parentEntityId, parentEntityType } =\n    useParentEntityInfo(editorType);\n  const generateCRUDSupportedPlugin: GenerateCRUDEnabledPluginMap = useSelector(\n    getGenerateCRUDEnabledPluginMap,\n  );\n  const [authApiPlugin, setAuthAPiPlugin] = useState<Plugin | undefined>();\n\n  useEffect(() => {\n    const plugin = plugins.find((p) => p.name === \"REST API\");\n    setAuthAPiPlugin(plugin);\n  }, [plugins]);\n\n  const handleCreateAuthApiDatasource = useCallback(() => {\n    if (authApiPlugin) {\n      AnalyticsUtil.logEvent(\"CREATE_DATA_SOURCE_AUTH_API_CLICK\", {\n        pluginId: authApiPlugin.id,\n      });\n      AnalyticsUtil.logEvent(\"CREATE_DATA_SOURCE_CLICK\", {\n        pluginName: authApiPlugin.name,\n        pluginPackageName: authApiPlugin.packageName,\n      });\n      props.createTempDatasourceFromForm({\n        pluginId: authApiPlugin.id,\n      });\n    }\n  }, [authApiPlugin, props.createTempDatasourceFromForm]);\n\n  const handleCreateNew = (source: string) => {\n    AnalyticsUtil.logEvent(\"CREATE_DATA_SOURCE_CLICK\", {\n      source,\n    });\n    props.createNewApiActionBasedOnEditorType(\n      editorType,\n      editorId,\n      // Set parentEntityId as (parentEntityId or if it is onboarding screen then set it as pageId) else empty string\n      parentEntityId || (isOnboardingScreen && pageId) || \"\",\n      parentEntityType,\n      source === API_ACTION.CREATE_NEW_GRAPHQL_API\n        ? PluginPackageName.GRAPHQL\n        : PluginPackageName.REST_API,\n    );\n  };\n\n  // On click of any API card, handleOnClick action should be called to check if user came from generate-page flow.\n  // if yes then show UnsupportedDialog for the API which are not supported to generate CRUD page.\n  const handleOnClick = (actionType: string, params?: any) => {\n    const queryParams = getQueryParams();\n    const isGeneratePageInitiator = getIsGeneratePageInitiator(\n      queryParams.isGeneratePageMode,\n    );\n    if (\n      isGeneratePageInitiator &&\n      !params?.skipValidPluginCheck &&\n      !generateCRUDSupportedPlugin[params?.pluginId]\n    ) {\n      // show modal informing user that this will break the generate flow.\n      props?.showUnsupportedPluginDialog(() =>\n        handleOnClick(actionType, { skipValidPluginCheck: true, ...params }),\n      );\n      return;\n    }\n    switch (actionType) {\n      case API_ACTION.CREATE_NEW_API:\n      case API_ACTION.CREATE_NEW_GRAPHQL_API:\n        handleCreateNew(actionType);\n        break;\n      case API_ACTION.IMPORT_CURL: {\n        AnalyticsUtil.logEvent(\"IMPORT_API_CLICK\", {\n          importSource: CURL,\n        });\n        AnalyticsUtil.logEvent(\"CREATE_DATA_SOURCE_CLICK\", {\n          source: CURL,\n        });\n\n        delete queryParams.isGeneratePageMode;\n        const curlImportURL = curlImportPageURL({\n          pageId,\n          params: {\n            from: \"datasources\",\n            ...queryParams,\n          },\n        });\n\n        history.push(curlImportURL);\n        break;\n      }\n      case API_ACTION.CREATE_DATASOURCE_FORM: {\n        props.createTempDatasourceFromForm({\n          pluginId: params.pluginId,\n          type: params.type,\n        });\n        break;\n      }\n      case API_ACTION.AUTH_API: {\n        handleCreateAuthApiDatasource();\n        break;\n      }\n      default:\n    }\n  };\n\n  // Api plugins with Graphql\n  const API_PLUGINS = plugins.filter((p) =>\n    !showSaasAPIs\n      ? p.packageName === PluginPackageName.GRAPHQL\n      : p.type === PluginType.SAAS || p.type === PluginType.REMOTE,\n  );\n\n  return (\n    <StyledContainer>\n      <ApiCardsContainer data-testid=\"newapi-datasource-card-container\">\n        {!showSaasAPIs && (\n          <>\n            <ApiCard\n              className=\"t--createBlankApiCard create-new-api\"\n              onClick={() => handleOnClick(API_ACTION.CREATE_NEW_API)}\n            >\n              <CardContentWrapper data-testid=\"newapi-datasource-content-wrapper\">\n                <img\n                  alt=\"New\"\n                  className=\"curlImage t--plusImage content-icon\"\n                  src={PlusLogo}\n                />\n                <p className=\"textBtn\">REST API</p>\n              </CardContentWrapper>\n              {isCreating && <Spinner className=\"cta\" size={25} />}\n            </ApiCard>\n            <ApiCard\n              className=\"t--createBlankApiGraphqlCard\"\n              onClick={() => handleOnClick(API_ACTION.CREATE_NEW_GRAPHQL_API)}\n            >\n              <CardContentWrapper>\n                <img\n                  alt=\"New\"\n                  className=\"curlImage t--plusImage content-icon\"\n                  src={PlusLogo}\n                />\n                <p className=\"textBtn\">GraphQL API</p>\n              </CardContentWrapper>\n            </ApiCard>\n            {authApiPlugin && (\n              <ApiCard\n                className=\"t--createAuthApiDatasource\"\n                onClick={() => handleOnClick(API_ACTION.AUTH_API)}\n              >\n                <CardContentWrapper>\n                  <img\n                    alt=\"OAuth2\"\n                    className=\"authApiImage t--authApiImage content-icon\"\n                    src={getAssetUrl(authApiPlugin.iconLocation)}\n                  />\n                  <p className=\"t--plugin-name textBtn\">Authenticated API</p>\n                </CardContentWrapper>\n              </ApiCard>\n            )}\n          </>\n        )}\n        {API_PLUGINS.map((p) => (\n          <ApiCard\n            className={`t--createBlankApi-${p.packageName}`}\n            key={p.id}\n            onClick={() => {\n              AnalyticsUtil.logEvent(\"CREATE_DATA_SOURCE_CLICK\", {\n                pluginName: p.name,\n                pluginPackageName: p.packageName,\n              });\n              handleOnClick(API_ACTION.CREATE_DATASOURCE_FORM, {\n                pluginId: p.id,\n              });\n            }}\n          >\n            <CardContentWrapper>\n              <img\n                alt={p.name}\n                className={\n                  \"content-icon saasImage t--saas-\" + p.packageName + \"-image\"\n                }\n                src={getAssetUrl(p.iconLocation)}\n              />\n              <p className=\"t--plugin-name textBtn\">{p.name}</p>\n            </CardContentWrapper>\n          </ApiCard>\n        ))}\n        {!showSaasAPIs && (\n          <ApiCard\n            className=\"t--createBlankCurlCard\"\n            onClick={() => handleOnClick(API_ACTION.IMPORT_CURL)}\n          >\n            <CardContentWrapper>\n              <img\n                alt=\"CURL\"\n                className=\"curlImage t--curlImage content-icon\"\n                src={CurlLogo}\n              />\n              <p className=\"textBtn\">CURL import</p>\n            </CardContentWrapper>\n          </ApiCard>\n        )}\n      </ApiCardsContainer>\n    </StyledContainer>\n  );\n}\n\nconst mapStateToProps = (state: AppState) => ({\n  plugins: state.entities.plugins.list,\n});\n\nconst mapDispatchToProps = {\n  createDatasourceFromForm,\n  createTempDatasourceFromForm,\n  createNewApiActionBasedOnEditorType,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewApiScreen);\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { connect } from \"react-redux\";\nimport { initialize } from \"redux-form\";\nimport {\n  getDBPlugins,\n  getPluginImages,\n  getMostPopularPlugins,\n} from \"@appsmith/selectors/entitiesSelector\";\nimport type { Plugin } from \"api/PluginApi\";\nimport { DATASOURCE_DB_FORM } from \"@appsmith/constants/forms\";\nimport {\n  createDatasourceFromForm,\n  createTempDatasourceFromForm,\n} from \"actions/datasourceActions\";\nimport type { AppState } from \"@appsmith/reducers\";\nimport AnalyticsUtil from \"@appsmith/utils/AnalyticsUtil\";\nimport { getCurrentApplication } from \"@appsmith/selectors/applicationSelectors\";\nimport type { ApplicationPayload } from \"@appsmith/constants/ReduxActionConstants\";\nimport { getQueryParams } from \"utils/URLUtils\";\nimport { getGenerateCRUDEnabledPluginMap } from \"@appsmith/selectors/entitiesSelector\";\nimport type { GenerateCRUDEnabledPluginMap } from \"api/PluginApi\";\nimport { getIsGeneratePageInitiator } from \"utils/GenerateCrudUtil\";\nimport { getAssetUrl } from \"@appsmith/utils/airgapHelpers\";\nimport { ApiCard, API_ACTION, CardContentWrapper } from \"./NewApi\";\nimport { PluginPackageName, PluginType } from \"entities/Action\";\nimport { Spinner } from \"design-system\";\nimport PlusLogo from \"assets/images/Plus-logo.svg\";\nimport {\n  createMessage,\n  CREATE_NEW_DATASOURCE_REST_API,\n} from \"@appsmith/constants/messages\";\nimport { createNewApiActionBasedOnEditorType } from \"@appsmith/actions/helpers\";\nimport type { ActionParentEntityTypeInterface } from \"@appsmith/entities/Engine/actionHelpers\";\n\n// This function remove the given key from queryParams and return string\nconst removeQueryParams = (paramKeysToRemove: Array<string>) => {\n  const queryParams = getQueryParams();\n  let queryString = \"\";\n  const queryParamKeys = Object.keys(queryParams);\n  if (queryParamKeys && queryParamKeys.length) {\n    queryParamKeys.map((key) => {\n      if (!paramKeysToRemove.includes(key)) {\n        queryString +=\n          encodeURIComponent(key) + \"=\" + encodeURIComponent(queryParams[key]);\n      }\n    });\n    return \"?\" + queryString;\n  }\n  return \"\";\n};\n\nconst DatasourceHomePage = styled.div`\n  .textBtn {\n    justify-content: center;\n    text-align: center;\n    color: var(--ads-v2-color-fg);\n    font-weight: 400;\n    text-decoration: none !important;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    font-size: 16px;\n    line-height: 24px;\n    letter-spacing: -0.24px;\n    margin: 0;\n  }\n`;\n\nconst DatasourceCardsContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  gap: 16px;\n  text-align: center;\n  min-width: 150px;\n  border-radius: 4px;\n  align-items: center;\n`;\n\nconst DatasourceCard = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  height: 64px;\n  border-radius: var(--ads-v2-border-radius);\n  &:hover {\n    background: var(--ads-v2-color-bg-subtle);\n    cursor: pointer;\n  }\n\n  .dataSourceImage {\n    height: 34px;\n    width: auto;\n    margin: 0 auto;\n    max-width: 100%;\n  }\n\n  .cta {\n    display: none;\n    margin-right: 32px;\n  }\n\n  &:hover {\n    .cta {\n      display: flex;\n    }\n  }\n`;\n\nconst DatasourceContentWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 13px;\n  padding-left: 13.5px;\n`;\n\ninterface DatasourceHomeScreenProps {\n  editorType: string;\n  editorId: string;\n  parentEntityId: string;\n  parentEntityType: ActionParentEntityTypeInterface;\n  location: {\n    search: string;\n  };\n  history: {\n    replace: (data: string) => void;\n    push: (data: string) => void;\n  };\n  showMostPopularPlugins?: boolean;\n  isCreating?: boolean;\n  showUnsupportedPluginDialog: (callback: any) => void;\n  isAirgappedInstance?: boolean;\n}\n\ninterface ReduxDispatchProps {\n  initializeForm: (data: Record<string, any>) => void;\n  createDatasource: (data: any) => void;\n  createTempDatasource: (data: any) => void;\n  createNewApiActionBasedOnEditorType: (\n    editorType: string,\n    editorId: string,\n    parentEntityId: string,\n    parentEntityType: ActionParentEntityTypeInterface,\n    apiType: string,\n  ) => void;\n}\n\ninterface ReduxStateProps {\n  plugins: Plugin[];\n  currentApplication?: ApplicationPayload;\n  pluginImages: Record<string, string>;\n  isSaving: boolean;\n  generateCRUDSupportedPlugin: GenerateCRUDEnabledPluginMap;\n}\n\ntype Props = ReduxStateProps & DatasourceHomeScreenProps & ReduxDispatchProps;\n\nclass DatasourceHomeScreen extends React.Component<Props> {\n  goToCreateDatasource = (\n    pluginId: string,\n    pluginName: string,\n    params?: any,\n  ) => {\n    const {\n      currentApplication,\n      generateCRUDSupportedPlugin,\n      history,\n      showUnsupportedPluginDialog,\n    } = this.props;\n\n    const isGeneratePageInitiator = getIsGeneratePageInitiator();\n\n    /* When isGeneratePageMode is generate page (i.e., Navigating from generate-page) before creating datasource check is it supported datasource for generate template from db?\n        If YES => continue creating datasource\n        If NO =>\n          Show user a UnsupportedPluginDialog to choose\n            1. \"create unsupported datasource\"\n            2. \"continue\" generate page flow by selecting other supported datasource\n        goToCreateDatasource function is passed as a callback with params.skipValidPluginCheck = true.\n        Whenever user click on \"continue\" in UnsupportedPluginDialog, this callback function is invoked.\n    */\n    if (isGeneratePageInitiator && !params?.skipValidPluginCheck) {\n      AnalyticsUtil.logEvent(\"GEN_CRUD_PAGE_DATA_SOURCE_CLICK\", {\n        appName: currentApplication?.name,\n        plugin: pluginName,\n        packageName: params?.packageName,\n      });\n      if (!generateCRUDSupportedPlugin[pluginId]) {\n        // show modal informing user that this will break the generate flow.\n        showUnsupportedPluginDialog(() => {\n          const URL =\n            window.location.pathname +\n            removeQueryParams([\"isGeneratePageMode\"]);\n          history.replace(URL);\n          this.goToCreateDatasource(pluginId, pluginName, {\n            skipValidPluginCheck: true,\n          });\n        });\n        return;\n      }\n    }\n\n    this.props.createTempDatasource({\n      pluginId,\n    });\n  };\n\n  handleOnClick = () => {\n    const { editorId, editorType, parentEntityId, parentEntityType } =\n      this.props;\n    AnalyticsUtil.logEvent(\"CREATE_DATA_SOURCE_CLICK\", {\n      source: API_ACTION.CREATE_NEW_API,\n    });\n    this.props.createNewApiActionBasedOnEditorType(\n      editorType,\n      editorId,\n      parentEntityId,\n      parentEntityType,\n      PluginPackageName.REST_API,\n    );\n  };\n\n  render() {\n    const {\n      currentApplication,\n      isCreating,\n      pluginImages,\n      plugins,\n      showMostPopularPlugins,\n    } = this.props;\n\n    return (\n      <DatasourceHomePage>\n        <DatasourceCardsContainer data-testid=\"database-datasource-card-container\">\n          {plugins.map((plugin, idx) => {\n            return plugin.type === PluginType.API ? (\n              !!showMostPopularPlugins ? (\n                <ApiCard\n                  className=\"t--createBlankApiCard create-new-api\"\n                  key={`${plugin.id}_${idx}`}\n                  onClick={() => this.handleOnClick()}\n                >\n                  <CardContentWrapper data-testid=\"newapi-datasource-content-wrapper\">\n                    <img\n                      alt=\"New\"\n                      className=\"curlImage t--plusImage content-icon\"\n                      src={PlusLogo}\n                    />\n                    <p className=\"textBtn\">\n                      {createMessage(CREATE_NEW_DATASOURCE_REST_API)}\n                    </p>\n                  </CardContentWrapper>\n                  {isCreating && <Spinner className=\"cta\" size={25} />}\n                </ApiCard>\n              ) : null\n            ) : (\n              <DatasourceCard\n                data-testid=\"database-datasource-card\"\n                key={`${plugin.id}_${idx}`}\n                onClick={() => {\n                  AnalyticsUtil.logEvent(\"CREATE_DATA_SOURCE_CLICK\", {\n                    appName: currentApplication?.name,\n                    pluginName: plugin.name,\n                    pluginPackageName: plugin.packageName,\n                  });\n                  this.goToCreateDatasource(plugin.id, plugin.name, {\n                    packageName: plugin.packageName,\n                  });\n                }}\n              >\n                <DatasourceContentWrapper data-testid=\"database-datasource-content-wrapper\">\n                  <img\n                    alt=\"Datasource\"\n                    className=\"dataSourceImage\"\n                    data-testid=\"database-datasource-image\"\n                    src={getAssetUrl(pluginImages[plugin.id])}\n                  />\n                  <p className=\"t--plugin-name textBtn\">{plugin.name}</p>\n                </DatasourceContentWrapper>\n              </DatasourceCard>\n            );\n          })}\n        </DatasourceCardsContainer>\n      </DatasourceHomePage>\n    );\n  }\n}\n\nconst mapStateToProps = (\n  state: AppState,\n  props: { showMostPopularPlugins?: boolean; isAirgappedInstance?: boolean },\n) => {\n  const { datasources } = state.entities;\n  const mostPopularPlugins = getMostPopularPlugins(state);\n  const filteredMostPopularPlugins: Plugin[] = !!props?.isAirgappedInstance\n    ? mostPopularPlugins.filter(\n        (plugin: Plugin) =>\n          plugin?.packageName !== PluginPackageName.GOOGLE_SHEETS,\n      )\n    : mostPopularPlugins;\n  return {\n    pluginImages: getPluginImages(state),\n    plugins: !!props?.showMostPopularPlugins\n      ? filteredMostPopularPlugins\n      : getDBPlugins(state),\n    currentApplication: getCurrentApplication(state),\n    isSaving: datasources.loading,\n    generateCRUDSupportedPlugin: getGenerateCRUDEnabledPluginMap(state),\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    initializeForm: (data: Record<string, any>) =>\n      dispatch(initialize(DATASOURCE_DB_FORM, data)),\n    createDatasource: (data: any) => dispatch(createDatasourceFromForm(data)),\n    createTempDatasource: (data: any) =>\n      dispatch(createTempDatasourceFromForm(data)),\n    createNewApiActionBasedOnEditorType: (\n      editorType: string,\n      editorId: string,\n      parentEntityId: string,\n      parentEntityType: ActionParentEntityTypeInterface,\n      apiType: string,\n    ) =>\n      dispatch(\n        createNewApiActionBasedOnEditorType(\n          editorType,\n          editorId,\n          parentEntityId,\n          parentEntityType,\n          apiType,\n        ),\n      ),\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(DatasourceHomeScreen);\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport DataSourceHome from \"./DatasourceHome\";\nimport type { ActionParentEntityTypeInterface } from \"@appsmith/entities/Engine/actionHelpers\";\n\nconst QueryHomePage = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 8px;\n  .sectionHeader {\n    font-weight: ${(props) => props.theme.fontWeights[2]};\n    font-size: ${(props) => props.theme.fontSizes[4]}px;\n    margin-top: 10px;\n  }\n`;\n\ninterface QueryHomeScreenProps {\n  editorId: string;\n  editorType: string;\n  parentEntityId: string;\n  parentEntityType: ActionParentEntityTypeInterface;\n  isCreating: boolean;\n  location: {\n    search: string;\n  };\n  history: {\n    replace: (data: string) => void;\n    push: (data: string) => void;\n  };\n  showMostPopularPlugins?: boolean;\n  showUnsupportedPluginDialog: (callback: any) => void;\n  isAirgappedInstance?: boolean;\n}\n\nclass QueryHomeScreen extends React.Component<QueryHomeScreenProps> {\n  render() {\n    const {\n      editorId,\n      editorType,\n      history,\n      isAirgappedInstance,\n      isCreating,\n      location,\n      parentEntityId,\n      parentEntityType,\n      showMostPopularPlugins,\n      showUnsupportedPluginDialog,\n    } = this.props;\n\n    return (\n      <QueryHomePage>\n        <DataSourceHome\n          editorId={editorId}\n          editorType={editorType}\n          history={history}\n          isAirgappedInstance={isAirgappedInstance}\n          isCreating={isCreating}\n          location={location}\n          parentEntityId={parentEntityId}\n          parentEntityType={parentEntityType}\n          showMostPopularPlugins={showMostPopularPlugins}\n          showUnsupportedPluginDialog={showUnsupportedPluginDialog}\n        />\n      </QueryHomePage>\n    );\n  }\n}\n\nexport default QueryHomeScreen;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { createTempDatasourceFromForm } from \"actions/datasourceActions\";\nimport type { AppState } from \"@appsmith/reducers\";\nimport type { Plugin } from \"api/PluginApi\";\nimport AnalyticsUtil from \"@appsmith/utils/AnalyticsUtil\";\nimport { PluginType } from \"entities/Action\";\nimport { getAssetUrl } from \"@appsmith/utils/airgapHelpers\";\n\nexport const StyledContainer = styled.div`\n  flex: 1;\n  margin-top: 8px;\n  .textBtn {\n    font-size: 16px;\n    line-height: 24px;\n    margin: 0;\n    justify-content: center;\n    text-align: center;\n    letter-spacing: -0.24px;\n    color: var(--ads-v2-color-fg);\n    font-weight: 400;\n    text-decoration: none !important;\n    flex-wrap: wrap;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n  @media (min-width: 2500px) {\n    .textBtn {\n      font-size: 18px;\n    }\n  }\n  @media (min-width: 2500px) {\n    .eachCard {\n      width: 240px;\n      height: 200px;\n    }\n    .apiImage {\n      margin-top: 25px;\n      margin-bottom: 20px;\n      height: 80px;\n    }\n    .curlImage {\n      width: 100px;\n    }\n    .createIcon {\n      height: 70px;\n    }\n  }\n`;\n\nexport const DatasourceCardsContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  gap: 16px;\n  text-align: center;\n  min-width: 150px;\n  border-radius: 4px;\n  align-items: center;\n\n  .create-new-api {\n    &:hover {\n      cursor: pointer;\n    }\n  }\n`;\n\nexport const DatasourceCard = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  height: 64px;\n  border-radius: var(--ads-v2-border-radius);\n\n  &:hover {\n    background-color: var(--ads-v2-color-bg-subtle);\n    cursor: pointer;\n  }\n\n  .content-icon {\n    height: 34px;\n    width: auto;\n    margin: 0 auto;\n    max-width: 100%;\n  }\n\n  .cta {\n    display: none;\n    margin-right: 32px;\n  }\n\n  &:hover {\n    .cta {\n      display: flex;\n    }\n  }\n`;\n\nexport const CardContentWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 13px;\n  padding-left: 13.5px;\n`;\n\ninterface Props {\n  history: {\n    replace: (data: string) => void;\n    push: (data: string) => void;\n  };\n  location: {\n    search: string;\n  };\n  pageId: string;\n  plugins: Plugin[];\n  isCreating: boolean;\n  showUnsupportedPluginDialog: (callback: any) => void;\n  createTempDatasourceFromForm: (data: any) => void;\n  showSaasAPIs: boolean; // If this is true, only SaaS APIs will be shown\n}\n\nfunction AIDataSources(props: Props) {\n  const { plugins } = props;\n\n  const handleOnClick = (plugin: Plugin) => {\n    AnalyticsUtil.logEvent(\"CREATE_DATA_SOURCE_CLICK\", {\n      pluginName: plugin.name,\n      pluginPackageName: plugin.packageName,\n    });\n\n    props.createTempDatasourceFromForm({\n      pluginId: plugin.id,\n      type: plugin.type,\n    });\n  };\n\n  // AI Plugins\n  const aiPlugins = plugins\n    .sort((a, b) => {\n      // Sort the AI plugins alphabetically\n      return a.name.localeCompare(b.name);\n    })\n    .filter((p) => p.type === PluginType.AI);\n\n  return (\n    <StyledContainer>\n      <DatasourceCardsContainer data-testid=\"newai-datasource-card-container\">\n        {aiPlugins.map((plugin) => (\n          <DatasourceCard\n            className={`t--createBlankApi-${plugin.packageName}`}\n            key={plugin.id}\n            onClick={() => {\n              handleOnClick(plugin);\n            }}\n          >\n            <CardContentWrapper>\n              <img\n                alt={plugin.name}\n                className={\n                  \"content-icon saasImage t--saas-\" +\n                  plugin.packageName +\n                  \"-image\"\n                }\n                src={getAssetUrl(plugin.iconLocation)}\n              />\n              <p className=\"t--plugin-name textBtn\">{plugin.name}</p>\n            </CardContentWrapper>\n          </DatasourceCard>\n        ))}\n      </DatasourceCardsContainer>\n    </StyledContainer>\n  );\n}\n\nconst mapStateToProps = (state: AppState) => ({\n  plugins: state.entities.plugins.list,\n});\n\nconst mapDispatchToProps = {\n  createTempDatasourceFromForm,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AIDataSources);\n","import AddDatasourceSecurely from \"./AddDatasourceSecurely\";\nimport React, { useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { thinScrollbar } from \"constants/DefaultTheme\";\nimport type { AppState } from \"@appsmith/reducers\";\nimport { getCurrentAppWorkspace } from \"@appsmith/selectors/selectedWorkspaceSelectors\";\nimport { selectFeatureFlags } from \"@appsmith/selectors/featureFlagsSelectors\";\nimport { isGACEnabled } from \"@appsmith/utils/planHelpers\";\nimport { getHasCreateDatasourcePermission } from \"@appsmith/utils/BusinessFeatures/permissionPageHelpers\";\nimport {\n  getDatasources,\n  getMockDatasources,\n} from \"@appsmith/selectors/entitiesSelector\";\nimport {\n  getCurrentApplicationId,\n  getCurrentPageId,\n} from \"selectors/editorSelectors\";\nimport { connect } from \"react-redux\";\nimport type { Datasource, MockDatasource } from \"entities/Datasource\";\nimport scrollIntoView from \"scroll-into-view-if-needed\";\nimport { Text } from \"design-system\";\nimport MockDataSources from \"./MockDataSources\";\nimport NewApiScreen from \"./NewApi\";\nimport NewQueryScreen from \"./NewQuery\";\nimport { isAirgapped } from \"@appsmith/utils/airgapHelpers\";\nimport history from \"utils/history\";\nimport { showDebuggerFlag } from \"selectors/debuggerSelectors\";\nimport {\n  createMessage,\n  CREATE_NEW_DATASOURCE_DATABASE_HEADER,\n  CREATE_NEW_DATASOURCE_MOST_POPULAR_HEADER,\n  SAMPLE_DATASOURCES,\n} from \"@appsmith/constants/messages\";\nimport { Divider } from \"design-system\";\nimport {\n  getApplicationByIdFromWorkspaces,\n  getCurrentApplicationIdForCreateNewApp,\n} from \"@appsmith/selectors/applicationSelectors\";\nimport { useEditorType } from \"@appsmith/hooks\";\nimport { useParentEntityInfo } from \"@appsmith/hooks/datasourceEditorHooks\";\nimport AIDataSources from \"./AIDataSources\";\nimport Debugger from \"../DataSourceEditor/Debugger\";\n\nconst NewIntegrationsContainer = styled.div`\n  ${thinScrollbar};\n  overflow: auto;\n  flex: 1;\n  & > div {\n    margin-bottom: var(--ads-spaces-9);\n  }\n`;\n\nconst StyledDivider = styled(Divider)`\n  margin-bottom: var(--ads-spaces-9);\n`;\n\ninterface MockDataSourcesProps {\n  mockDatasources: MockDatasource[];\n  active: boolean;\n}\n\nfunction UseMockDatasources({ active, mockDatasources }: MockDataSourcesProps) {\n  const useMockRef = useRef<HTMLDivElement>(null);\n  const isMounted = useRef(false);\n  useEffect(() => {\n    if (active && useMockRef.current) {\n      isMounted.current &&\n        scrollIntoView(useMockRef.current, {\n          behavior: \"smooth\",\n          scrollMode: \"always\",\n          block: \"start\",\n          boundary: document.getElementById(\"new-integrations-wrapper\"),\n        });\n    } else {\n      isMounted.current = true;\n    }\n  }, [active]);\n  return (\n    <div id=\"mock-database\" ref={useMockRef}>\n      <Text kind=\"heading-m\">{createMessage(SAMPLE_DATASOURCES)}</Text>\n      <MockDataSources mockDatasources={mockDatasources} />\n    </div>\n  );\n}\n\nfunction CreateNewAPI({\n  active,\n  history,\n  isCreating,\n  isOnboardingScreen,\n  pageId,\n  showUnsupportedPluginDialog,\n}: any) {\n  const newAPIRef = useRef<HTMLDivElement>(null);\n  const isMounted = useRef(false);\n\n  useEffect(() => {\n    if (active && newAPIRef.current) {\n      isMounted.current &&\n        scrollIntoView(newAPIRef.current, {\n          behavior: \"smooth\",\n          scrollMode: \"always\",\n          block: \"start\",\n          boundary: document.getElementById(\"new-integrations-wrapper\"),\n        });\n    } else {\n      isMounted.current = true;\n    }\n  }, [active]);\n  return (\n    <div id=\"new-api\" ref={newAPIRef}>\n      <Text kind=\"heading-m\">APIs</Text>\n      <NewApiScreen\n        history={history}\n        isCreating={isCreating}\n        isOnboardingScreen={isOnboardingScreen}\n        location={location}\n        pageId={pageId}\n        showSaasAPIs={false}\n        showUnsupportedPluginDialog={showUnsupportedPluginDialog}\n      />\n    </div>\n  );\n}\n\nfunction CreateNewDatasource({\n  active,\n  history,\n  isCreating,\n  isOnboardingScreen,\n  pageId,\n  showMostPopularPlugins,\n  showUnsupportedPluginDialog,\n}: any) {\n  const editorType = useEditorType(location.pathname);\n  const { editorId, parentEntityId, parentEntityType } =\n    useParentEntityInfo(editorType);\n  const newDatasourceRef = useRef<HTMLDivElement>(null);\n  useEffect(() => {\n    if (active && newDatasourceRef.current) {\n      scrollIntoView(newDatasourceRef.current, {\n        behavior: \"smooth\",\n        scrollMode: \"always\",\n        block: \"start\",\n        boundary: document.getElementById(\"new-integrations-wrapper\"),\n      });\n    }\n  }, [active]);\n\n  const isAirgappedInstance = isAirgapped();\n\n  return (\n    <div id=\"new-datasources\" ref={newDatasourceRef}>\n      <Text kind=\"heading-m\">\n        {showMostPopularPlugins\n          ? createMessage(CREATE_NEW_DATASOURCE_MOST_POPULAR_HEADER)\n          : createMessage(CREATE_NEW_DATASOURCE_DATABASE_HEADER)}\n      </Text>\n      <NewQueryScreen\n        editorId={editorId}\n        editorType={editorType}\n        history={history}\n        isAirgappedInstance={isAirgappedInstance}\n        isCreating={isCreating}\n        location={location}\n        parentEntityId={parentEntityId || (isOnboardingScreen && pageId) || \"\"}\n        parentEntityType={parentEntityType}\n        showMostPopularPlugins={showMostPopularPlugins}\n        showUnsupportedPluginDialog={showUnsupportedPluginDialog}\n      />\n    </div>\n  );\n}\n\nfunction CreateNewSaasIntegration({\n  active,\n  history,\n  isCreating,\n  pageId,\n  showUnsupportedPluginDialog,\n}: any) {\n  const newSaasAPIRef = useRef<HTMLDivElement>(null);\n  const isMounted = useRef(false);\n  const isAirgappedInstance = isAirgapped();\n\n  useEffect(() => {\n    if (active && newSaasAPIRef.current) {\n      isMounted.current &&\n        scrollIntoView(newSaasAPIRef.current, {\n          behavior: \"smooth\",\n          scrollMode: \"always\",\n          block: \"start\",\n          boundary: document.getElementById(\"new-integrations-wrapper\"),\n        });\n    } else {\n      isMounted.current = true;\n    }\n  }, [active]);\n  return !isAirgappedInstance ? (\n    <>\n      <StyledDivider />\n      <div id=\"new-saas-api\" ref={newSaasAPIRef}>\n        <Text kind=\"heading-m\">SaaS integrations</Text>\n        <NewApiScreen\n          history={history}\n          isCreating={isCreating}\n          location={location}\n          pageId={pageId}\n          showSaasAPIs\n          showUnsupportedPluginDialog={showUnsupportedPluginDialog}\n        />\n      </div>\n    </>\n  ) : null;\n}\n\nfunction CreateNewAIIntegration({\n  history,\n  isCreating,\n  pageId,\n  showUnsupportedPluginDialog,\n}: any) {\n  const isAirgappedInstance = isAirgapped();\n\n  return !isAirgappedInstance ? (\n    <>\n      <StyledDivider />\n      <div id=\"new-ai-query\">\n        <Text kind=\"heading-m\">AI integrations</Text>\n        <AIDataSources\n          history={history}\n          isCreating={isCreating}\n          location={location}\n          pageId={pageId}\n          showSaasAPIs\n          showUnsupportedPluginDialog={showUnsupportedPluginDialog}\n        />\n      </div>\n    </>\n  ) : null;\n}\n\ninterface CreateNewDatasourceScreenProps {\n  isCreating: boolean;\n  dataSources: Datasource[];\n  mockDatasources: MockDatasource[];\n  applicationId: string;\n  canCreateDatasource?: boolean;\n  showDebugger: boolean;\n  pageId: string;\n  isOnboardingScreen?: boolean;\n}\n\ninterface CreateNewDatasourceScreenState {\n  unsupportedPluginDialogVisible: boolean;\n}\n\nclass CreateNewDatasourceTab extends React.Component<\n  CreateNewDatasourceScreenProps,\n  CreateNewDatasourceScreenState\n> {\n  unsupportedPluginContinueAction: () => void;\n  constructor(props: CreateNewDatasourceScreenProps) {\n    super(props);\n    this.unsupportedPluginContinueAction = () => null;\n    this.state = {\n      unsupportedPluginDialogVisible: false,\n    };\n  }\n\n  showUnsupportedPluginDialog = (callback: () => void) => {\n    this.setState({\n      unsupportedPluginDialogVisible: true,\n    });\n    this.unsupportedPluginContinueAction = callback;\n  };\n  render() {\n    const {\n      canCreateDatasource = false,\n      dataSources,\n      isCreating,\n      isOnboardingScreen,\n      pageId,\n      showDebugger,\n    } = this.props;\n    if (!canCreateDatasource) return null;\n    const mockDataSection =\n      this.props.mockDatasources.length > 0 ? (\n        <UseMockDatasources\n          active={false}\n          mockDatasources={this.props.mockDatasources}\n        />\n      ) : null;\n    return (\n      <>\n        <NewIntegrationsContainer className=\"p-4\" id=\"new-integrations-wrapper\">\n          {dataSources.length === 0 && <AddDatasourceSecurely />}\n          {dataSources.length === 0 &&\n            this.props.mockDatasources.length > 0 && (\n              <>\n                {mockDataSection}\n                <StyledDivider />\n              </>\n            )}\n          <CreateNewDatasource\n            active={false}\n            history={history}\n            isCreating={isCreating}\n            isOnboardingScreen={!!isOnboardingScreen}\n            location={location}\n            pageId={pageId}\n            showMostPopularPlugins\n            showUnsupportedPluginDialog={this.showUnsupportedPluginDialog}\n          />\n          <StyledDivider />\n          <CreateNewAPI\n            active={false}\n            history={history}\n            isCreating={isCreating}\n            isOnboardingScreen={!!isOnboardingScreen}\n            location={location}\n            pageId={pageId}\n            showUnsupportedPluginDialog={this.showUnsupportedPluginDialog}\n          />\n          <StyledDivider />\n          <CreateNewDatasource\n            active={false}\n            history={history}\n            isCreating={isCreating}\n            location={location}\n            pageId={pageId}\n            showUnsupportedPluginDialog={this.showUnsupportedPluginDialog}\n          />\n          <CreateNewSaasIntegration\n            active={false}\n            history={history}\n            isCreating={isCreating}\n            location={location}\n            pageId={pageId}\n            showUnsupportedPluginDialog={this.showUnsupportedPluginDialog}\n          />\n          <CreateNewAIIntegration\n            history={history}\n            isCreating={isCreating}\n            pageId={pageId}\n            showUnsupportedPluginDialog={this.showUnsupportedPluginDialog}\n          />\n          {dataSources.length > 0 && this.props.mockDatasources.length > 0 && (\n            <>\n              <StyledDivider />\n              {mockDataSection}\n            </>\n          )}\n        </NewIntegrationsContainer>\n        {showDebugger && <Debugger />}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state: AppState) => {\n  const onboardingAppId = getCurrentApplicationIdForCreateNewApp(state);\n  const onboardingApplication = getApplicationByIdFromWorkspaces(\n    state,\n    onboardingAppId || \"\",\n  );\n  const pageId = !!onboardingAppId\n    ? onboardingApplication?.defaultPageId || \"\"\n    : getCurrentPageId(state);\n  const showDebugger = showDebuggerFlag(state);\n  const userWorkspacePermissions =\n    getCurrentAppWorkspace(state).userPermissions ?? [];\n\n  const featureFlags = selectFeatureFlags(state);\n  const isFeatureEnabled = isGACEnabled(featureFlags);\n\n  const canCreateDatasource = getHasCreateDatasourcePermission(\n    isFeatureEnabled,\n    userWorkspacePermissions,\n  );\n\n  return {\n    dataSources: getDatasources(state),\n    mockDatasources: getMockDatasources(state),\n    isCreating: state.ui.apiPane.isCreating,\n    applicationId: getCurrentApplicationId(state),\n    canCreateDatasource,\n    showDebugger,\n    pageId,\n  };\n};\n\nexport default connect(mapStateToProps)(CreateNewDatasourceTab);\n","import React from \"react\";\n\nimport styled from \"styled-components\";\nimport { useSelector } from \"react-redux\";\nimport {\n  getCurrentPageId,\n  getApplicationLastDeployedAt,\n} from \"selectors/editorSelectors\";\nimport {\n  createMessage,\n  LATEST_DP_SUBTITLE,\n  LATEST_DP_TITLE,\n} from \"@appsmith/constants/messages\";\nimport SuccessTick from \"pages/common/SuccessTick\";\nimport { howMuchTimeBeforeText } from \"utils/helpers\";\nimport AnalyticsUtil from \"@appsmith/utils/AnalyticsUtil\";\nimport { viewerURL } from \"@appsmith/RouteBuilder\";\nimport { Link, Text } from \"design-system\";\nimport { importSvg } from \"design-system-old\";\n\nconst CloudyIcon = importSvg(\n  async () => import(\"assets/icons/ads/cloudy-line.svg\"),\n);\n\nconst Container = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: row;\n  gap: ${(props) => props.theme.spaces[6]}px;\n\n  .cloud-icon {\n    stroke: var(--ads-v2-color-fg);\n  }\n`;\n\nexport default function DeployPreview(props: { showSuccess: boolean }) {\n  const pageId = useSelector(getCurrentPageId) as string;\n  const lastDeployedAt = useSelector(getApplicationLastDeployedAt);\n\n  const showDeployPreview = () => {\n    AnalyticsUtil.logEvent(\"GS_LAST_DEPLOYED_PREVIEW_LINK_CLICK\", {\n      source: \"GIT_DEPLOY_MODAL\",\n    });\n    const path = viewerURL({\n      pageId,\n    });\n    window.open(path, \"_blank\");\n  };\n\n  const lastDeployedAtMsg = lastDeployedAt\n    ? `${createMessage(LATEST_DP_SUBTITLE)} ${howMuchTimeBeforeText(\n        lastDeployedAt,\n        {\n          lessThanAMinute: true,\n        },\n      )} ago`\n    : \"\";\n  return lastDeployedAt ? (\n    <Container className=\"t--git-deploy-preview\">\n      <div>\n        {props.showSuccess ? (\n          <SuccessTick height=\"30px\" width=\"30px\" />\n        ) : (\n          <CloudyIcon className=\"cloud-icon\" />\n        )}\n      </div>\n      <div>\n        <Link endIcon=\"right-arrow\" onClick={showDeployPreview}>\n          {createMessage(LATEST_DP_TITLE)}\n        </Link>\n        <Text color=\"var(--ads-v2-color-fg-muted)\" kind=\"body-s\">\n          {lastDeployedAtMsg}\n        </Text>\n      </div>\n    </Container>\n  ) : null;\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport SpinnerLoader from \"pages/common/SpinnerLoader\";\nimport { Text } from \"design-system\";\n\nconst LoaderWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-top: ${(props) => `${props.theme.spaces[3]}px`};\n`;\n\nfunction StatusLoader({ loaderMsg }: { loaderMsg: string }) {\n  return (\n    <LoaderWrapper data-testId=\"t--git-merge-loader\">\n      <SpinnerLoader size=\"md\" />\n      <Text kind={\"body-m\"} style={{ marginLeft: 8 }}>\n        {loaderMsg}\n      </Text>\n    </LoaderWrapper>\n  );\n}\n\nexport default StatusLoader;\n","import {\n  Collapsible,\n  CollapsibleContent,\n  CollapsibleHeader,\n  Icon,\n  Text,\n} from \"design-system\";\nimport React from \"react\";\nimport type { GitStatusData } from \"reducers/uiReducers/gitSyncReducer\";\nimport styled from \"styled-components\";\n\nconst TitleText = styled(Text)`\n  font-weight: 500;\n`;\n\nconst StyledCollapsible = styled(Collapsible)`\n  gap: 0;\n`;\n\nconst StyledCollapsibleHeader = styled(CollapsibleHeader)`\n  padding-top: 0;\n  padding-bottom: 0;\n`;\n\nexport enum ExpandableChangeKind {\n  DATASOURCES = \"DATASOURCES\",\n  JSOBJECTS = \"JSOBJECTS\",\n  PAGES = \"PAGES\",\n  QUERIES = \"QUERIES\",\n  JSLIBS = \"JSLIBS\",\n}\n\ninterface ChangeDef {\n  modified: string[];\n  added: string[];\n  removed: string[];\n  singular: string;\n  plural: string;\n  iconName: string;\n}\n\nconst allChangeDefs: Record<\n  ExpandableChangeKind,\n  (status: GitStatusData) => ChangeDef\n> = {\n  [ExpandableChangeKind.PAGES]: (status: GitStatusData) => ({\n    modified: status.pagesModified,\n    added: status.pagesAdded,\n    removed: status.pagesRemoved,\n    singular: \"page\",\n    plural: \"pages\",\n    iconName: \"widget\",\n  }),\n  [ExpandableChangeKind.DATASOURCES]: (status: GitStatusData) => ({\n    modified: status.datasourcesModified,\n    added: status.datasourcesAdded,\n    removed: status.datasourcesRemoved,\n    singular: \"datasource\",\n    plural: \"datasources\",\n    iconName: \"database-2-line\",\n  }),\n  [ExpandableChangeKind.QUERIES]: (status: GitStatusData) => ({\n    modified: status.queriesModified,\n    added: status.queriesAdded,\n    removed: status.queriesRemoved,\n    singular: \"query\",\n    plural: \"queries\",\n    iconName: \"query\",\n  }),\n  [ExpandableChangeKind.JSOBJECTS]: (status: GitStatusData) => ({\n    modified: status.jsObjectsModified,\n    added: status.jsObjectsAdded,\n    removed: status.jsObjectsRemoved,\n    singular: \"js object\",\n    plural: \"js objects\",\n    iconName: \"js\",\n  }),\n  [ExpandableChangeKind.JSLIBS]: (status: GitStatusData) => ({\n    modified: status.jsLibsModified,\n    added: status.jsLibsAdded,\n    removed: status.jsLibsRemoved,\n    singular: \"js lib\",\n    plural: \"js libs\",\n    iconName: \"package\",\n  }),\n};\n\ninterface ChangeSubListProps {\n  action: string;\n  entities: string[];\n  iconName: string;\n}\n\nexport function ChangeSubList({\n  action,\n  entities = [],\n  iconName,\n}: ChangeSubListProps) {\n  const sublist = entities.map((entity) => {\n    const entityNameArr = entity.split(\"/\");\n    const entityName = entityNameArr[entityNameArr.length - 1];\n\n    return (\n      <div className=\"flex items-center space-x-1.5\" key={entity}>\n        {iconName && (\n          <Icon color={\"var(--ads-v2-color-fg)\"} name={iconName} size=\"md\" />\n        )}\n        <Text color={\"var(--ads-v2-color-fg)\"} kind=\"body-m\">\n          {`${entityName} ${action}`}\n        </Text>\n      </div>\n    );\n  });\n  // eslint-disable-next-line react/jsx-no-useless-fragment\n  return <>{sublist}</>;\n}\n\ninterface ChangeProps {\n  kind: ExpandableChangeKind;\n  status: GitStatusData;\n  filter?: (entity: string) => boolean;\n}\n\nexport function ExpandableChange({ filter, kind, status }: ChangeProps) {\n  const { added, iconName, modified, plural, removed, singular } =\n    allChangeDefs[kind](status);\n\n  const filteredModified =\n    typeof filter === \"function\" ? modified.filter(filter) : modified;\n  const filteredAdded =\n    typeof filter === \"function\" ? added.filter(filter) : added;\n  const filteredRemoved =\n    typeof filter === \"function\" ? removed.filter(filter) : removed;\n\n  const isModified = !!filteredModified.length;\n  const isAdded = !!filteredAdded.length;\n  const isRemoved = !!filteredRemoved.length;\n  const hasOnlyOneChange =\n    [isModified ? 1 : 0, isAdded ? 1 : 0, isRemoved ? 1 : 0].reduce(\n      (a, v) => a + v,\n    ) === 1;\n\n  const totalChanges =\n    filteredModified.length + filteredAdded.length + filteredRemoved.length;\n\n  const getMessage = (count: number, action: string) =>\n    `${count} ${count === 1 ? `${singular}` : `${plural}`} ${action}`;\n\n  const getTitleMessage = () => {\n    let action = \"\";\n    if (hasOnlyOneChange) {\n      if (isModified) {\n        action = \"edited\";\n      } else if (isAdded) {\n        action = \"added\";\n      } else if (isRemoved) {\n        action = \"removed\";\n      }\n    } else {\n      action = \"modified\";\n    }\n\n    return getMessage(totalChanges, action);\n  };\n\n  if (totalChanges === 0) {\n    return null;\n  }\n\n  return (\n    <div data-testid={`t--status-change-${kind}`}>\n      <StyledCollapsible className=\"space-y-2\">\n        <StyledCollapsibleHeader>\n          <div className=\"flex item-center space-x-1.5\">\n            {iconName && (\n              <Icon\n                color={\"var(--ads-v2-color-fg)\"}\n                name={iconName}\n                size=\"md\"\n              />\n            )}\n            <TitleText>{getTitleMessage()}</TitleText>\n          </div>\n        </StyledCollapsibleHeader>\n        <CollapsibleContent className=\"ml-6 space-y-1\">\n          {isModified && (\n            <ChangeSubList\n              action=\"edited\"\n              entities={filteredModified}\n              iconName={iconName}\n            />\n          )}\n          {isAdded && (\n            <ChangeSubList\n              action=\"added\"\n              entities={filteredAdded}\n              iconName={iconName}\n            />\n          )}\n          {isRemoved && (\n            <ChangeSubList\n              action=\"removed\"\n              entities={filteredRemoved}\n              iconName={iconName}\n            />\n          )}\n        </CollapsibleContent>\n      </StyledCollapsible>\n    </div>\n  );\n}\n","import React from \"react\";\nimport type { GitStatusData } from \"reducers/uiReducers/gitSyncReducer\";\nimport { Icon, Text } from \"design-system\";\nimport {\n  NOT_PUSHED_YET,\n  TRY_TO_PULL,\n  createMessage,\n} from \"@appsmith/constants/messages\";\nimport styled from \"styled-components\";\n\nconst TitleText = styled(Text)`\n  font-weight: 500;\n`;\n\nexport enum StaticChangeKind {\n  SETTINGS = \"SETTINGS\",\n  THEME = \"THEME\",\n  PACKAGES = \"PACKAGES\",\n  MODULES = \"MODULES\",\n  REMOTE_AHEAD = \"REMOTE_AHEAD\",\n  REMOTE_BEHIND = \"REMOTE_BEHIND\",\n}\n\ninterface StaticChangeDef {\n  condition: boolean;\n  message: string;\n  iconName: string;\n}\n\nconst allStaticChangeDefs: Record<\n  StaticChangeKind,\n  (status: GitStatusData) => StaticChangeDef\n> = {\n  [StaticChangeKind.REMOTE_AHEAD]: (status: GitStatusData) => ({\n    condition: (status.aheadCount ?? 0) > 0,\n    message: `${status.aheadCount ?? 0} ${\n      (status.aheadCount ?? 0) > 0 ? \"commits\" : \"commit\"\n    } ahead. ${createMessage(NOT_PUSHED_YET)}`,\n    iconName: \"git-commit\",\n  }),\n\n  [StaticChangeKind.REMOTE_BEHIND]: (status: GitStatusData) => ({\n    condition: (status.behindCount ?? 0) > 0,\n    message: `${status.behindCount ?? 0} ${\n      (status.behindCount ?? 0) > 0 ? \"commits\" : \"commit\"\n    } behind. ${createMessage(TRY_TO_PULL)}`,\n    iconName: \"git-commit\",\n  }),\n  [StaticChangeKind.SETTINGS]: (status: GitStatusData) => ({\n    condition: status.modified.includes(\"application.json\"),\n    message: \"Application settings modified\",\n    iconName: \"settings-2-line\",\n  }),\n  [StaticChangeKind.THEME]: (status: GitStatusData) => ({\n    condition: status.modified.includes(\"theme.json\"),\n    message: \"Theme modified\",\n    iconName: \"sip-line\",\n  }),\n  [StaticChangeKind.PACKAGES]: (status: GitStatusData) => ({\n    condition: (status.modifiedPackages ?? 0) > 0,\n    message: `${status.modifiedPackages ?? 0} ${\n      (status.modifiedPackages ?? 0) > 0 ? \"packages\" : \"package\"\n    } modified`,\n    iconName: \"package\",\n  }),\n  [StaticChangeKind.MODULES]: (status: GitStatusData) => ({\n    condition: (status.modifiedModules ?? 0) > 0,\n    message: `${status.modifiedModules ?? 0} ${\n      (status.modifiedModules ?? 0) > 0 ? \"modules\" : \"module\"\n    } modified`,\n    iconName: \"package\",\n  }),\n};\n\ninterface StaticChangeProps {\n  kind: StaticChangeKind;\n  status: GitStatusData;\n}\n\nexport default function StaticChange({ kind, status }: StaticChangeProps) {\n  const { condition, iconName, message } = allStaticChangeDefs[kind](status);\n  if (!condition) {\n    return null;\n  }\n  return (\n    <div\n      className=\"flex items-center space-x-1.5\"\n      data-testid={`t--status-change-${kind}`}\n    >\n      {iconName && (\n        <Icon color={\"var(--ads-v2-color-fg)\"} name={iconName} size=\"md\" />\n      )}\n      <TitleText color={\"var(--ads-v2-color-fg)\"}>{message}</TitleText>\n    </div>\n  );\n}\n","import {\n  Collapsible,\n  CollapsibleContent,\n  CollapsibleHeader,\n  Icon,\n  Text,\n} from \"design-system\";\nimport React, { useMemo } from \"react\";\nimport type { GitStatusData } from \"reducers/uiReducers/gitSyncReducer\";\nimport { ExpandableChange, ExpandableChangeKind } from \"./ExpandableChange\";\nimport styled from \"styled-components\";\n\nconst TitleText = styled(Text)`\n  font-weight: 500;\n`;\n\nconst StyledCollapsible = styled(Collapsible)`\n  gap: 0;\n`;\n\nconst StyledCollapsibleHeader = styled(CollapsibleHeader)`\n  padding-top: 0;\n  padding-bottom: 0;\n`;\n\n/**\n * show collapsible if jsobject, queries are changed, irrespective of page changes\n * show static when only page is changed\n */\n\ninterface SinglePageChangeProps {\n  page: string;\n  status: GitStatusData;\n}\n\nfunction SinglePageChange({ page, status }: SinglePageChangeProps) {\n  const changeFlags = useMemo(() => {\n    const flags = {\n      isPageModified: status.pagesModified.includes(page),\n      isPageAdded: status.pagesAdded.includes(page),\n      isPageRemoved: status.pagesRemoved.includes(page),\n\n      isJsObjectModified: status.jsObjectsModified.some((jsObject) =>\n        jsObject.startsWith(page),\n      ),\n      isJsObjectAdded: status.jsObjectsAdded.some((jsObject) =>\n        jsObject.startsWith(page),\n      ),\n      isJsObjectRemoved: status.jsObjectsRemoved.some((jsObject) =>\n        jsObject.startsWith(page),\n      ),\n\n      isQueryModified: status.queriesModified.some((query) =>\n        query.startsWith(page),\n      ),\n      isQueryAdded: status.queriesAdded.some((query) => query.startsWith(page)),\n      isQueryRemoved: status.queriesRemoved.some((query) =>\n        query.startsWith(page),\n      ),\n    };\n    return flags;\n  }, [status]);\n\n  const titleText = useMemo(() => {\n    let text = `${page} `;\n    if (changeFlags.isPageAdded) {\n      text += \"added\";\n    } else if (changeFlags.isPageRemoved) {\n      text += \"removed\";\n    } else if (changeFlags.isPageModified) {\n      text += \"modified\";\n    } else if (\n      changeFlags.isJsObjectModified ||\n      changeFlags.isQueryModified ||\n      changeFlags.isJsObjectAdded ||\n      changeFlags.isQueryAdded ||\n      changeFlags.isJsObjectRemoved ||\n      changeFlags.isQueryRemoved\n    ) {\n      text += \"modified\";\n    }\n    return text;\n  }, [page, changeFlags]);\n\n  const showCollapsible = useMemo(() => {\n    return (\n      changeFlags.isJsObjectModified ||\n      changeFlags.isJsObjectAdded ||\n      changeFlags.isJsObjectRemoved ||\n      changeFlags.isQueryModified ||\n      changeFlags.isQueryAdded ||\n      changeFlags.isQueryRemoved\n    );\n  }, [changeFlags]);\n\n  const titleComp = (\n    <div className=\"flex item-center space-x-1.5\">\n      <Icon color={\"var(--ads-v2-color-fg)\"} name=\"page-line\" size=\"md\" />\n      <TitleText>{titleText}</TitleText>\n    </div>\n  );\n\n  if (!showCollapsible) {\n    return (\n      <div data-testid={`t--status-change-PAGE-${page.replace(\" \", \"_\")}`}>\n        {titleComp}\n      </div>\n    );\n  }\n\n  return (\n    <div data-testid={`t--status-change-PAGE-${page.replace(\" \", \"_\")}`}>\n      <StyledCollapsible className=\"space-y-2\">\n        <StyledCollapsibleHeader arrowPosition=\"start\">\n          {titleComp}\n        </StyledCollapsibleHeader>\n        <CollapsibleContent className=\"ml-6 space-y-2\">\n          <ExpandableChange\n            filter={(entity) => entity.startsWith(`${page}/`)}\n            kind={ExpandableChangeKind.QUERIES}\n            status={status}\n          />\n          <ExpandableChange\n            filter={(entity) => entity.startsWith(`${page}/`)}\n            kind={ExpandableChangeKind.JSOBJECTS}\n            status={status}\n          />\n        </CollapsibleContent>\n      </StyledCollapsible>\n    </div>\n  );\n}\n\ninterface PageChangesProps {\n  status: GitStatusData;\n}\n\nexport default function PageChanges({ status }: PageChangesProps) {\n  const {\n    jsObjectsAdded,\n    jsObjectsModified,\n    jsObjectsRemoved,\n    pagesAdded,\n    pagesModified,\n    pagesRemoved,\n    queriesAdded,\n    queriesModified,\n    queriesRemoved,\n  } = status;\n\n  const staticPageChangeSet = new Set([\n    ...pagesModified,\n    ...pagesAdded,\n    ...pagesRemoved,\n  ]);\n\n  const staticPageChanges = Array.from(staticPageChangeSet).sort();\n\n  const expandablePageChangeSet = new Set([\n    ...jsObjectsModified.map((jsObject) => jsObject.split(\"/\")[0]),\n    ...jsObjectsAdded.map((jsObject) => jsObject.split(\"/\")[0]),\n    ...jsObjectsRemoved.map((jsObject) => jsObject.split(\"/\")[0]),\n    ...queriesModified.map((query) => query.split(\"/\")[0]),\n    ...queriesAdded.map((query) => query.split(\"/\")[0]),\n    ...queriesRemoved.map((query) => query.split(\"/\")[0]),\n  ]);\n\n  const expandablePageChanges = Array.from(expandablePageChangeSet).sort();\n\n  const allPagesChangeSet = new Set([\n    ...staticPageChanges,\n    ...expandablePageChanges,\n  ]);\n\n  if (allPagesChangeSet.size === 0) return null;\n\n  return (\n    <>\n      {Array.from(allPagesChangeSet).map((page) => {\n        return <SinglePageChange key={page} page={page} status={status} />;\n      })}\n    </>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector } from \"react-redux\";\nimport {\n  getGitStatus,\n  getIsFetchingGitStatus,\n} from \"selectors/gitSyncSelectors\";\nimport { Callout } from \"design-system\";\nimport { ExpandableChange, ExpandableChangeKind } from \"./ExpandableChange\";\nimport StaticChange, { StaticChangeKind } from \"./StaticChange\";\nimport PageChanges from \"./PageChanges\";\n\nconst CalloutContainer = styled.div`\n  margin-top: 16px;\n`;\n\nconst SkeletonLoader = styled.div`\n  width: 50%;\n  height: 18px;\n  background: linear-gradient(\n    90deg,\n    var(--ads-v2-color-black-75) 0%,\n    rgba(240, 240, 240, 0) 100%\n  );\n  margin-top: 16px;\n  margin-bottom: 16px;\n`;\n\nexport default function GitChangesList() {\n  const status = useSelector(getGitStatus);\n  const statusLoading = useSelector(getIsFetchingGitStatus);\n\n  if (statusLoading) {\n    return <SkeletonLoader data-testid=\"t--status-change-skeleton-loading\" />;\n  }\n\n  if (!status) {\n    return null;\n  }\n\n  return (\n    <div className=\"my-4 space-y-2\" data-testid={\"t--git-status-changes\"}>\n      <StaticChange kind={StaticChangeKind.REMOTE_BEHIND} status={status} />\n      <StaticChange kind={StaticChangeKind.REMOTE_AHEAD} status={status} />\n      <PageChanges status={status} />\n      <ExpandableChange\n        kind={ExpandableChangeKind.DATASOURCES}\n        status={status}\n      />\n      <ExpandableChange kind={ExpandableChangeKind.JSLIBS} status={status} />\n      <StaticChange kind={StaticChangeKind.SETTINGS} status={status} />\n      <StaticChange kind={StaticChangeKind.THEME} status={status} />\n      <StaticChange kind={StaticChangeKind.PACKAGES} status={status} />\n      <StaticChange kind={StaticChangeKind.MODULES} status={status} />\n      {status?.migrationMessage ? (\n        <CalloutContainer>\n          <Callout kind=\"info\">{status.migrationMessage}</Callout>\n        </CalloutContainer>\n      ) : null}\n    </div>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport {\n  createMessage,\n  GIT_CONFLICTING_INFO,\n  LEARN_MORE,\n  OPEN_REPO,\n} from \"@appsmith/constants/messages\";\nimport { Button, Callout } from \"design-system\";\nimport { Space } from \"./StyledComponents\";\n\nconst Row = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst StyledButton = styled(Button)`\n  margin-right: ${(props) => props.theme.spaces[3]}px;\n`;\n\ninterface Props {\n  browserSupportedRemoteUrl: string;\n  learnMoreLink: string;\n}\n\nconst ConflictInfoContainer = styled.div`\n  margin-top: ${(props) => props.theme.spaces[7]}px;\n  margin-bottom: ${(props) => props.theme.spaces[7]}px;\n`;\n\nexport default function ConflictInfo({\n  browserSupportedRemoteUrl,\n  learnMoreLink,\n}: Props) {\n  const handleClickOnOpenRepo = () => {\n    window.open(browserSupportedRemoteUrl, \"_blank\");\n  };\n\n  return (\n    <ConflictInfoContainer data-testid=\"t--conflict-info-container\">\n      <Callout\n        data-testid=\"t--conflict-info-error-warning\"\n        kind=\"error\"\n        links={[\n          {\n            children: createMessage(LEARN_MORE),\n            to: learnMoreLink,\n          },\n        ]}\n      >\n        {createMessage(GIT_CONFLICTING_INFO)}\n      </Callout>\n      <Space size={3} />\n      <Row>\n        <StyledButton\n          data-testid=\"t--git-repo-button\"\n          kind=\"secondary\"\n          onClick={handleClickOnOpenRepo}\n        >\n          {createMessage(OPEN_REPO)}\n        </StyledButton>\n      </Row>\n    </ConflictInfoContainer>\n  );\n}\n","import React from \"react\";\nimport {\n  createMessage,\n  DISCARD_CHANGES_WARNING,\n  DISCARD_MESSAGE,\n} from \"@appsmith/constants/messages\";\nimport { Callout, Text } from \"design-system\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  margin: 8px 0 16px;\n`;\n\nexport default function DiscardChangesWarning({\n  onCloseDiscardChangesWarning,\n}: any) {\n  const discardDocUrl =\n    \"https://docs.appsmith.com/advanced-concepts/version-control-with-git/commit-and-push\";\n\n  return (\n    <Container>\n      <Callout\n        data-testid=\"t--discard-callout\"\n        isClosable\n        kind=\"error\"\n        links={[\n          {\n            children: \"Learn more\",\n            endIcon: \"right-arrow\",\n            to: discardDocUrl,\n            target: \"_blank\",\n          },\n        ]}\n        onClose={onCloseDiscardChangesWarning}\n      >\n        <Text kind=\"heading-xs\">{createMessage(DISCARD_CHANGES_WARNING)}</Text>\n        <br />\n        {createMessage(DISCARD_MESSAGE)}\n      </Callout>\n    </Container>\n  );\n}\n","import { Callout } from \"design-system\";\nimport { Text, TextType } from \"design-system-old\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  margin: 8px 0 16px;\n`;\n\nexport default function PushFailedWarning({ closeHandler, error }: any) {\n  return (\n    <Container className=\"ankita\">\n      <Callout isClosable kind=\"error\" onClose={closeHandler}>\n        <>\n          <Text type={TextType.H5}>{error.errorType}</Text>\n          <br />\n          <Text type={TextType.P3}>{error.message}</Text>\n        </>\n      </Callout>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport type { GitErrorType } from \"reducers/uiReducers/gitSyncReducer\";\nimport styled from \"styled-components\";\nimport { Callout } from \"design-system\";\nimport type { CalloutProps } from \"design-system/build/Callout/Callout.types\";\n\nconst Container = styled.div`\n  margin: 8px 0 16px;\n`;\n\nexport default function DiscardFailedWarning({\n  closeHandler,\n  error,\n}: {\n  closeHandler: () => void;\n  error: GitErrorType[\"error\"];\n}) {\n  const calloutOptions: CalloutProps = {\n    isClosable: true,\n    kind: \"error\",\n    onClose: () => closeHandler(),\n    children: error.message,\n  };\n  return (\n    <Container data-cy={\"discard-error\"}>\n      <Callout {...calloutOptions} />\n    </Container>\n  );\n}\n","import React, { useEffect, useRef, useState } from \"react\";\nimport {\n  ARE_YOU_SURE,\n  COMMIT_AND_PUSH,\n  COMMIT_TO,\n  COMMITTING_AND_PUSHING_CHANGES,\n  createMessage,\n  DISCARD_CHANGES,\n  DISCARDING_AND_PULLING_CHANGES,\n  FETCH_GIT_STATUS,\n  GIT_NO_UPDATED_TOOLTIP,\n  GIT_UPSTREAM_CHANGES,\n  PULL_CHANGES,\n  READ_DOCUMENTATION,\n} from \"@appsmith/constants/messages\";\nimport styled from \"styled-components\";\nimport {\n  Button,\n  Callout,\n  Input,\n  ModalBody,\n  ModalFooter,\n  Text,\n  Tooltip,\n} from \"design-system\";\nimport {\n  getConflictFoundDocUrlDeploy,\n  getGitCommitAndPushError,\n  getGitDiscardError,\n  getGitStatus,\n  getIsCommitSuccessful,\n  getIsCommittingInProgress,\n  getIsDiscardInProgress,\n  getIsFetchingGitStatus,\n  getIsPullingProgress,\n  getPullFailed,\n  getUpstreamErrorDocUrl,\n} from \"selectors/gitSyncSelectors\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { getCurrentAppGitMetaData } from \"@appsmith/selectors/applicationSelectors\";\nimport DeployPreview from \"../components/DeployPreview\";\nimport {\n  clearCommitErrorState,\n  clearCommitSuccessfulState,\n  clearDiscardErrorState,\n  commitToRepoInit,\n  discardChanges,\n  gitPullInit,\n} from \"actions/gitSyncActions\";\nimport StatusLoader from \"../components/StatusLoader\";\nimport Statusbar, {\n  StatusbarWrapper,\n} from \"pages/Editor/gitSync/components/Statusbar\";\nimport GitChangesList from \"../components/GitChangesList\";\nimport ConflictInfo from \"../components/ConflictInfo\";\n\nimport { isEllipsisActive, isMacOrIOS } from \"utils/helpers\";\nimport AnalyticsUtil from \"@appsmith/utils/AnalyticsUtil\";\nimport {\n  getApplicationLastDeployedAt,\n  getCurrentApplication,\n} from \"selectors/editorSelectors\";\nimport GIT_ERROR_CODES from \"constants/GitErrorCodes\";\nimport { Container, Space } from \"../components/StyledComponents\";\nimport DiscardChangesWarning from \"../components/DiscardChangesWarning\";\nimport { changeInfoSinceLastCommit } from \"../utils\";\nimport type { GitStatusData } from \"reducers/uiReducers/gitSyncReducer\";\nimport PushFailedWarning from \"../components/PushFailedWarning\";\nimport DiscardFailedWarning from \"../components/DiscardChangesError\";\n\nconst Section = styled.div`\n  margin-top: 0;\n  margin-bottom: ${(props) => props.theme.spaces[7]}px;\n`;\n\nconst Row = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst FIRST_COMMIT = \"First Commit\";\nconst NO_CHANGES_TO_COMMIT = \"No changes to commit\";\n\nfunction SubmitWrapper(props: {\n  children: React.ReactNode;\n  onSubmit: () => void;\n}) {\n  const onKeyDown = (e: React.KeyboardEvent) => {\n    const triggerSubmit = isMacOrIOS()\n      ? e.metaKey && e.key === \"Enter\"\n      : e.ctrlKey && e.key === \"Enter\";\n    if (triggerSubmit) props.onSubmit();\n  };\n\n  return <div onKeyDown={onKeyDown}>{props.children}</div>;\n}\n\nfunction Deploy() {\n  const lastDeployedAt = useSelector(getApplicationLastDeployedAt);\n  const isCommittingInProgress = useSelector(getIsCommittingInProgress);\n  const isDiscardInProgress = useSelector(getIsDiscardInProgress) || false;\n  const gitMetaData = useSelector(getCurrentAppGitMetaData);\n  const gitStatus = useSelector(getGitStatus) as GitStatusData;\n  const isFetchingGitStatus = useSelector(getIsFetchingGitStatus);\n  const isPullingProgress = useSelector(getIsPullingProgress);\n  const isCommitAndPushSuccessful = useSelector(getIsCommitSuccessful);\n  const hasChangesToCommit = !gitStatus?.isClean;\n  const commitAndPushError = useSelector(getGitCommitAndPushError);\n  const discardError = useSelector(getGitDiscardError);\n  const pullFailed = useSelector(getPullFailed);\n  const commitInputRef = useRef<HTMLInputElement>(null);\n  const upstreamErrorDocumentUrl = useSelector(getUpstreamErrorDocUrl);\n  const [commitMessage, setCommitMessage] = useState(\n    gitMetaData?.remoteUrl && lastDeployedAt ? \"\" : FIRST_COMMIT,\n  );\n  const [shouldDiscard, setShouldDiscard] = useState(false);\n  const [isDiscarding, setIsDiscarding] = useState(isDiscardInProgress);\n  const [showDiscardWarning, setShowDiscardWarning] = useState(false);\n\n  const currentBranch = gitMetaData?.branchName;\n  const dispatch = useDispatch();\n\n  const currentApplication = useSelector(getCurrentApplication);\n  const { changeReasonText, isAutoUpdate, isManualUpdate } =\n    changeInfoSinceLastCommit(currentApplication);\n\n  const handleCommit = (doPush: boolean) => {\n    setShowDiscardWarning(false);\n    AnalyticsUtil.logEvent(\"GS_COMMIT_AND_PUSH_BUTTON_CLICK\", {\n      source: \"GIT_DEPLOY_MODAL\",\n      isAutoUpdate,\n      isManualUpdate,\n    });\n    if (currentBranch) {\n      dispatch(\n        commitToRepoInit({\n          commitMessage: commitMessage.trim(),\n          doPush,\n        }),\n      );\n    }\n  };\n\n  const handlePull = () => {\n    AnalyticsUtil.logEvent(\"GS_PULL_GIT_CLICK\", {\n      source: \"GIT_DEPLOY_MODAL\",\n    });\n    if (currentBranch) {\n      dispatch(gitPullInit());\n    }\n  };\n\n  const commitButtonText = createMessage(COMMIT_AND_PUSH);\n\n  useEffect(() => {\n    return () => {\n      dispatch(clearCommitSuccessfulState());\n    };\n  }, []);\n\n  const commitButtonDisabled =\n    !hasChangesToCommit || !commitMessage || commitMessage.trim().length < 1;\n  const commitButtonLoading = isCommittingInProgress;\n\n  const commitRequired = !gitStatus?.isClean;\n  const isConflicting = !isFetchingGitStatus && !!pullFailed;\n  const commitInputDisabled =\n    isConflicting ||\n    !hasChangesToCommit ||\n    isCommittingInProgress ||\n    isCommitAndPushSuccessful ||\n    isDiscarding;\n  const pullRequired =\n    commitAndPushError?.code ===\n    GIT_ERROR_CODES.PUSH_FAILED_REMOTE_COUNTERPART_IS_AHEAD;\n\n  const showCommitButton =\n    !isConflicting &&\n    !pullRequired &&\n    !isFetchingGitStatus &&\n    !isCommittingInProgress &&\n    !isDiscarding;\n  const isCommitting =\n    !!commitButtonLoading &&\n    (commitRequired || showCommitButton) &&\n    !isDiscarding;\n  const showDiscardChangesButton =\n    !isFetchingGitStatus &&\n    !isCommittingInProgress &&\n    hasChangesToCommit &&\n    !isDiscarding &&\n    !isCommitting;\n  const commitMessageDisplay = hasChangesToCommit\n    ? commitMessage\n    : NO_CHANGES_TO_COMMIT;\n\n  useEffect(() => {\n    if (!commitInputDisabled && commitInputRef.current) {\n      commitInputRef.current.focus();\n    }\n  }, [commitInputDisabled]);\n\n  const gitConflictDocumentUrl = useSelector(getConflictFoundDocUrlDeploy);\n\n  // const autogrowHeight = useAutoGrow(commitMessageDisplay, 37);\n\n  const onDiscardInit = () => {\n    AnalyticsUtil.logEvent(\"GIT_DISCARD_WARNING\", {\n      source: \"GIT_DISCARD_BUTTON_PRESS_1\",\n    });\n    setShowDiscardWarning(true);\n    setShouldDiscard(true);\n    dispatch(clearDiscardErrorState());\n  };\n  const onDiscardChanges = () => {\n    AnalyticsUtil.logEvent(\"GIT_DISCARD\", {\n      source: \"GIT_DISCARD_BUTTON_PRESS_2\",\n    });\n    dispatch(discardChanges());\n    setShowDiscardWarning(false);\n    setShouldDiscard(true);\n    setIsDiscarding(true);\n  };\n  const onCloseDiscardWarning = () => {\n    AnalyticsUtil.logEvent(\"GIT_DISCARD_CANCEL\", {\n      source: \"GIT_DISCARD_WARNING_BANNER_CLOSE_CLICK\",\n    });\n    setShowDiscardWarning(false);\n    setShouldDiscard(false);\n  };\n\n  useEffect(() => {\n    if (discardError) {\n      setIsDiscarding(false);\n      setShouldDiscard(false);\n    }\n  }, [discardError]);\n\n  const scrollWrapperRef = React.createRef<HTMLDivElement>();\n  useEffect(() => {\n    if (scrollWrapperRef.current) {\n      setTimeout(() => {\n        const top = scrollWrapperRef.current?.scrollHeight || 0;\n        scrollWrapperRef.current?.scrollTo({\n          top: top,\n        });\n      }, 100);\n    }\n  }, [scrollWrapperRef]);\n\n  const showPullButton =\n    !isFetchingGitStatus &&\n    ((pullRequired && !isConflicting) ||\n      (gitStatus?.behindCount > 0 && gitStatus?.isClean));\n\n  function handleCommitAndPushErrorClose() {\n    dispatch(clearCommitErrorState());\n  }\n\n  function handleDiscardErrorClose() {\n    dispatch(clearDiscardErrorState());\n  }\n\n  return (\n    <>\n      <ModalBody>\n        <Container\n          data-testid={\"t--deploy-tab-container\"}\n          ref={scrollWrapperRef}\n          style={{ minHeight: 360 }}\n        >\n          <Section>\n            {hasChangesToCommit && (\n              <Text\n                color={\"var(--ads-v2-color-fg-emphasis)\"}\n                data-testid={\"t--git-deploy-change-reason-text\"}\n                kind=\"heading-s\"\n              >\n                {changeReasonText}\n              </Text>\n            )}\n            <GitChangesList />\n            <SubmitWrapper\n              onSubmit={() => {\n                if (!commitButtonDisabled) handleCommit(true);\n              }}\n            >\n              <Input\n                autoFocus\n                className=\"t--commit-comment-input\"\n                isDisabled={commitInputDisabled}\n                label={\n                  <Row>\n                    <Text style={{ minWidth: \"fit-content\" }}>\n                      {createMessage(COMMIT_TO)}\n                    </Text>\n                    <Tooltip\n                      content={currentBranch}\n                      isDisabled={\n                        !isEllipsisActive(\n                          document.getElementById(\n                            \"git-branch-name-commmit-tab\",\n                          ),\n                        )\n                      }\n                    >\n                      <Text\n                        className=\"branch\"\n                        color={\"var(--ads-v2-color-fg-brand)\"}\n                        id=\"git-branch-name-commmit-tab\"\n                        style={{\n                          overflow: \"hidden\",\n                          textOverflow: \"ellipsis\",\n                          whiteSpace: \"nowrap\",\n                        }}\n                      >\n                        &nbsp;{currentBranch}\n                      </Text>\n                    </Tooltip>\n                  </Row>\n                }\n                onChange={setCommitMessage}\n                placeholder={\"Your commit message here\"}\n                ref={commitInputRef}\n                renderAs=\"textarea\"\n                size=\"md\"\n                type=\"text\"\n                value={commitMessageDisplay}\n              />\n            </SubmitWrapper>\n            {isFetchingGitStatus && (\n              <StatusLoader loaderMsg={createMessage(FETCH_GIT_STATUS)} />\n            )}\n            {/* <Space size={11} /> */}\n            {pullRequired && !isConflicting && (\n              <>\n                <Callout\n                  kind=\"warning\"\n                  links={[\n                    {\n                      children: createMessage(READ_DOCUMENTATION),\n                      onClick: () => {\n                        AnalyticsUtil.logEvent(\n                          \"GS_GIT_DOCUMENTATION_LINK_CLICK\",\n                          {\n                            source: \"UPSTREAM_CHANGES_LINK_ON_GIT_DEPLOY_MODAL\",\n                          },\n                        );\n                      },\n                      to: upstreamErrorDocumentUrl,\n                      target: \"_blank\",\n                    },\n                  ]}\n                >\n                  {createMessage(GIT_UPSTREAM_CHANGES)}\n                </Callout>\n                <Space size={3} />\n              </>\n            )}\n            {isConflicting && (\n              <ConflictInfo\n                browserSupportedRemoteUrl={\n                  gitMetaData?.browserSupportedRemoteUrl || \"\"\n                }\n                learnMoreLink={gitConflictDocumentUrl}\n              />\n            )}\n\n            {commitAndPushError && (\n              <PushFailedWarning\n                closeHandler={handleCommitAndPushErrorClose}\n                error={commitAndPushError}\n              />\n            )}\n            {isCommitting && !isDiscarding && (\n              <StatusbarWrapper>\n                <Statusbar\n                  completed={!commitButtonLoading}\n                  message={createMessage(COMMITTING_AND_PUSHING_CHANGES)}\n                  period={6}\n                />\n              </StatusbarWrapper>\n            )}\n\n            {isDiscarding && !isCommitting && (\n              <StatusbarWrapper>\n                <Statusbar\n                  completed={!isDiscarding}\n                  message={createMessage(DISCARDING_AND_PULLING_CHANGES)}\n                  period={6}\n                />\n              </StatusbarWrapper>\n            )}\n          </Section>\n\n          {discardError && (\n            <DiscardFailedWarning\n              closeHandler={handleDiscardErrorClose}\n              error={discardError}\n            />\n          )}\n\n          {showDiscardWarning && (\n            <DiscardChangesWarning\n              onCloseDiscardChangesWarning={onCloseDiscardWarning}\n            />\n          )}\n\n          {!pullRequired && !isConflicting && (\n            <DeployPreview showSuccess={isCommitAndPushSuccessful} />\n          )}\n        </Container>\n      </ModalBody>\n      <ModalFooter key=\"footer\" style={{ minHeight: 52 }}>\n        {showPullButton && (\n          <Button\n            className=\"t--pull-button\"\n            isLoading={isPullingProgress}\n            onClick={handlePull}\n            size=\"md\"\n          >\n            {createMessage(PULL_CHANGES)}\n          </Button>\n        )}\n\n        {showDiscardChangesButton && (\n          <Button\n            className=\"t--discard-button discard-changes-link\"\n            isDisabled={!showDiscardChangesButton}\n            isLoading={\n              isPullingProgress || isFetchingGitStatus || isCommittingInProgress\n            }\n            kind=\"error\"\n            onClick={() =>\n              shouldDiscard ? onDiscardChanges() : onDiscardInit()\n            }\n            size=\"md\"\n          >\n            {showDiscardWarning\n              ? createMessage(ARE_YOU_SURE)\n              : createMessage(DISCARD_CHANGES)}\n          </Button>\n        )}\n        {showCommitButton && (\n          <Tooltip\n            content={createMessage(GIT_NO_UPDATED_TOOLTIP)}\n            isDisabled={showCommitButton && !commitButtonLoading}\n            placement=\"top\"\n          >\n            <Button\n              className=\"t--commit-button\"\n              isDisabled={commitButtonDisabled}\n              isLoading={commitButtonLoading}\n              onClick={() => handleCommit(true)}\n              size=\"md\"\n            >\n              {commitButtonText}\n            </Button>\n          </Tooltip>\n        )}\n      </ModalFooter>\n    </>\n  );\n}\n\nexport default Deploy;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport StatusLoader from \"./StatusLoader\";\nimport { Icon, Text } from \"design-system\";\n\nconst Flex = styled.div`\n  display: flex;\n`;\n\nexport const MERGE_STATUS_STATE = {\n  FETCHING: \"FETCHING\",\n  MERGEABLE: \"MERGEABLE\",\n  NOT_MERGEABLE: \"NOT_MERGEABLE\",\n  NONE: \"NONE\",\n  ERROR: \"ERROR\",\n};\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  margin-top: ${(props) => `${props.theme.spaces[3]}px`};\n  width: 45%;\n  align-items: flex-start;\n  gap: 5px;\n  .ads-v2-icon {\n    margin-top: 3px;\n  }\n`;\n\nfunction MergeStatus({\n  message = \"\",\n  status,\n}: {\n  status: string;\n  message?: string;\n}) {\n  switch (status) {\n    case MERGE_STATUS_STATE.FETCHING:\n      return (\n        <Flex>\n          <StatusLoader loaderMsg={message} />\n        </Flex>\n      );\n    case MERGE_STATUS_STATE.MERGEABLE:\n      return (\n        <Flex>\n          <Wrapper>\n            <Text color=\"var(--ads-v2-color-fg-success)\" kind=\"body-m\">\n              {message}\n            </Text>\n          </Wrapper>\n        </Flex>\n      );\n    case MERGE_STATUS_STATE.NOT_MERGEABLE:\n    case MERGE_STATUS_STATE.ERROR:\n      return (\n        <Flex>\n          <Wrapper>\n            <Icon\n              color=\"var(--ads-v2-color-fg-error)\"\n              name=\"alert-line\"\n              size=\"md\"\n            />\n            <Text color=\"var(--ads-v2-color-fg-error)\" kind=\"body-m\">\n              {message}\n            </Text>\n          </Wrapper>\n        </Flex>\n      );\n    default:\n      return null;\n  }\n}\n\nexport default MergeStatus;\n","import React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { Container, Space } from \"../components/StyledComponents\";\n\nimport {\n  BRANCH_PROTECTION_PROTECTED,\n  CANNOT_MERGE_DUE_TO_UNCOMMITTED_CHANGES,\n  createMessage,\n  FETCH_GIT_STATUS,\n  FETCH_MERGE_STATUS,\n  IS_MERGING,\n  MERGE_CHANGES,\n  MERGED_SUCCESSFULLY,\n  SELECT_BRANCH_TO_MERGE,\n} from \"@appsmith/constants/messages\";\n\nimport styled, { useTheme } from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getCurrentAppGitMetaData } from \"@appsmith/selectors/applicationSelectors\";\nimport {\n  getConflictFoundDocUrlMerge,\n  getFetchingBranches,\n  getGitBranches,\n  getGitStatus,\n  getIsFetchingGitStatus,\n  getIsFetchingMergeStatus,\n  getIsMergeInProgress,\n  getMergeError,\n  getMergeStatus,\n  getProtectedBranchesSelector,\n} from \"selectors/gitSyncSelectors\";\nimport type { DropdownOptions } from \"../../GeneratePage/components/constants\";\nimport {\n  fetchBranchesInit,\n  fetchMergeStatusInit,\n  mergeBranchInit,\n  resetMergeStatus,\n} from \"actions/gitSyncActions\";\nimport MergeStatus, { MERGE_STATUS_STATE } from \"../components/MergeStatus\";\nimport ConflictInfo from \"../components/ConflictInfo\";\nimport Statusbar, {\n  StatusbarWrapper,\n} from \"pages/Editor/gitSync/components/Statusbar\";\nimport { getIsStartingWithRemoteBranches } from \"pages/Editor/gitSync/utils\";\nimport { Classes } from \"../constants\";\nimport SuccessTick from \"pages/common/SuccessTick\";\nimport {\n  Button,\n  Option,\n  Select,\n  Text,\n  Icon,\n  ModalFooter,\n  ModalBody,\n} from \"design-system\";\nimport AnalyticsUtil from \"@appsmith/utils/AnalyticsUtil\";\nimport type { Theme } from \"constants/DefaultTheme\";\n\nconst Row = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nfunction MergeSuccessIndicator() {\n  const theme = useTheme() as Theme;\n\n  return (\n    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n      <SuccessTick height=\"36px\" style={{ marginBottom: 0 }} width=\"30px\" />\n      <Text\n        color={\"var(--ads-v2-color-fg)\"}\n        kind=\"heading-s\"\n        style={{ marginLeft: theme.spaces[2] }}\n      >\n        {createMessage(MERGED_SUCCESSFULLY)}\n      </Text>\n    </div>\n  );\n}\n\nexport default function Merge() {\n  const dispatch = useDispatch();\n  const gitMetaData = useSelector(getCurrentAppGitMetaData);\n  const gitBranches = useSelector(getGitBranches);\n  const isFetchingBranches = useSelector(getFetchingBranches);\n  const isFetchingMergeStatus = useSelector(getIsFetchingMergeStatus);\n  const mergeStatus = useSelector(getMergeStatus);\n  const gitStatus: any = useSelector(getGitStatus);\n  const mergeError = useSelector(getMergeError);\n  const isMergeAble = mergeStatus?.isMergeAble && gitStatus?.isClean;\n  const isFetchingGitStatus = useSelector(getIsFetchingGitStatus);\n  const protectedBranches = useSelector(getProtectedBranchesSelector);\n  let mergeStatusMessage = !gitStatus?.isClean\n    ? createMessage(CANNOT_MERGE_DUE_TO_UNCOMMITTED_CHANGES)\n    : mergeStatus?.message;\n  // const pullFailed: any = useSelector(getPullFailed);\n  const currentBranch = gitMetaData?.branchName;\n  const isMerging = useSelector(getIsMergeInProgress);\n  const [showMergeSuccessIndicator, setShowMergeSuccessIndicator] =\n    useState(false);\n\n  const [selectedBranchOption, setSelectedBranchOption] = useState<{\n    label: string;\n    value: string;\n  }>();\n\n  /**\n   * Removes the current branch from the list\n   * Also filters the remote branches\n   */\n  const branchList = useMemo(() => {\n    const branchOptions: DropdownOptions = [];\n    let index = 0;\n    while (true) {\n      if (index === gitBranches.length) break;\n      const branchObj = gitBranches[index];\n\n      if (currentBranch !== branchObj.branchName) {\n        if (!branchObj.default) {\n          branchOptions.push({\n            label: branchObj.branchName,\n            value: branchObj.branchName,\n          });\n        } else {\n          branchOptions.unshift({\n            label: branchObj.branchName,\n            value: branchObj.branchName,\n          });\n        }\n      }\n\n      const nextBranchObj = gitBranches[index + 1];\n      if (\n        getIsStartingWithRemoteBranches(\n          branchObj.branchName,\n          nextBranchObj?.branchName,\n        )\n      )\n        break;\n\n      index++;\n    }\n    // TODO add bellow header if dropdown supports section header\n    // branchOptions.unshift({\n    //   label: \"Local branches\",\n    //   isSectionHeader: true,\n    // });\n    return branchOptions;\n  }, [gitBranches]);\n\n  const currentBranchDropdownOption = {\n    label: currentBranch || \"\",\n    value: currentBranch || \"\",\n  };\n\n  const handleMergeSuccess = () => {\n    setShowMergeSuccessIndicator(true);\n  };\n\n  const mergeHandler = useCallback(() => {\n    AnalyticsUtil.logEvent(\"GS_MERGE_CHANGES_BUTTON_CLICK\", {\n      source: \"GIT_MERGE_MODAL\",\n    });\n    if (currentBranch && selectedBranchOption?.value) {\n      dispatch(\n        mergeBranchInit({\n          payload: {\n            sourceBranch: currentBranch,\n            destinationBranch: selectedBranchOption?.value,\n          },\n          onSuccessCallback: handleMergeSuccess,\n        }),\n      );\n    }\n  }, [currentBranch, selectedBranchOption?.value, dispatch]);\n\n  useEffect(() => {\n    dispatch(fetchBranchesInit());\n    return () => {\n      dispatch(resetMergeStatus());\n    };\n  }, []);\n\n  useEffect(() => {\n    // when user selects a branch to merge\n    if (currentBranch && selectedBranchOption?.value) {\n      dispatch(\n        fetchMergeStatusInit({\n          sourceBranch: currentBranch,\n          destinationBranch: selectedBranchOption?.value,\n        }),\n      );\n      setShowMergeSuccessIndicator(false);\n    }\n  }, [currentBranch, selectedBranchOption?.value, dispatch]);\n\n  const mergeBtnDisabled = isFetchingMergeStatus || !isMergeAble;\n\n  let status = MERGE_STATUS_STATE.NONE;\n  if (isFetchingGitStatus) {\n    status = MERGE_STATUS_STATE.FETCHING;\n    mergeStatusMessage = createMessage(FETCH_GIT_STATUS);\n  } else if (!gitStatus?.isClean) {\n    status = MERGE_STATUS_STATE.NOT_MERGEABLE;\n  } else if (isFetchingMergeStatus) {\n    status = MERGE_STATUS_STATE.FETCHING;\n    mergeStatusMessage = createMessage(FETCH_MERGE_STATUS);\n  } else if (mergeStatus && mergeStatus?.isMergeAble) {\n    status = MERGE_STATUS_STATE.MERGEABLE;\n  } else if (mergeStatus && !mergeStatus?.isMergeAble) {\n    status = MERGE_STATUS_STATE.NOT_MERGEABLE;\n  } else if (mergeError) {\n    status = MERGE_STATUS_STATE.ERROR;\n    mergeStatusMessage = mergeError.error.message;\n  }\n\n  // should check after added error code for conflicting\n  const isConflicting = (mergeStatus?.conflictingFiles?.length || 0) > 0;\n  const showMergeButton =\n    !isConflicting && !mergeError && !isFetchingGitStatus && !isMerging;\n  const gitConflictDocumentUrl = useSelector(getConflictFoundDocUrlMerge);\n  return (\n    <>\n      <ModalBody>\n        <Container\n          style={{ minHeight: 360, overflow: \"unset\", paddingBottom: \"4px\" }}\n        >\n          <Text color={\"var(--ads-v2-color-fg-emphasis)\"} kind=\"heading-s\">\n            {createMessage(SELECT_BRANCH_TO_MERGE)}\n          </Text>\n          <Space size={2} />\n          <Row style={{ overflow: \"unset\", paddingBottom: \"4px\" }}>\n            <Select\n              className=\"t--merge-branch-dropdown-destination\"\n              dropdownClassName={Classes.MERGE_DROPDOWN}\n              dropdownMatchSelectWidth\n              getPopupContainer={(triggerNode) => triggerNode.parentNode}\n              isDisabled={\n                isFetchingBranches || isFetchingMergeStatus || isMerging\n              }\n              isValid={status !== MERGE_STATUS_STATE.NOT_MERGEABLE}\n              onSelect={(value?: string) => {\n                if (value)\n                  setSelectedBranchOption({ label: value, value: value });\n              }}\n              showSearch\n              size=\"md\"\n              value={selectedBranchOption}\n            >\n              {branchList.map((branch) => {\n                const isProtected = protectedBranches.includes(\n                  branch?.value ?? \"\",\n                );\n                return (\n                  <Option disabled={isProtected} key={branch.value}>\n                    {branch.value}\n                    {isProtected\n                      ? ` (${createMessage(BRANCH_PROTECTION_PROTECTED)})`\n                      : \"\"}\n                  </Option>\n                );\n              })}\n            </Select>\n\n            <Space horizontal size={3} />\n            <Icon\n              color={\"var(--ads-v2-color-fg-subtle)\"}\n              name=\"arrow-left-s-line\"\n              size=\"lg\"\n            />\n            <Space horizontal size={3} />\n            <Select\n              className=\"textInput\"\n              isDisabled\n              options={[currentBranchDropdownOption]}\n              size=\"md\"\n              value={currentBranchDropdownOption}\n            >\n              <Option>{currentBranchDropdownOption.label}</Option>\n            </Select>\n          </Row>\n          <MergeStatus message={mergeStatusMessage} status={status} />\n          <Space size={10} />\n          {isConflicting ? (\n            <ConflictInfo\n              browserSupportedRemoteUrl={\n                gitMetaData?.browserSupportedRemoteUrl || \"\"\n              }\n              learnMoreLink={gitConflictDocumentUrl}\n            />\n          ) : null}\n\n          {showMergeSuccessIndicator ? <MergeSuccessIndicator /> : null}\n          {isMerging ? (\n            <StatusbarWrapper>\n              <Statusbar\n                completed={!isMerging}\n                message={createMessage(IS_MERGING)}\n                period={6}\n              />\n            </StatusbarWrapper>\n          ) : null}\n        </Container>\n      </ModalBody>\n      <ModalFooter style={{ minHeight: 52 }}>\n        {!showMergeSuccessIndicator && showMergeButton ? (\n          <Button\n            className=\"t--git-merge-button\"\n            data-testid=\"t--git-merge-button\"\n            isDisabled={mergeBtnDisabled}\n            isLoading={isMerging}\n            onClick={mergeHandler}\n            size=\"md\"\n          >\n            {createMessage(MERGE_CHANGES)}\n          </Button>\n        ) : null}\n      </ModalFooter>\n    </>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Overlay, Classes } from \"@blueprintjs/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setIsGitErrorPopupVisible } from \"actions/gitSyncActions\";\nimport {\n  getConflictFoundDocUrlDeploy,\n  getIsGitErrorPopupVisible,\n} from \"selectors/gitSyncSelectors\";\nimport {\n  createMessage,\n  CONFLICTS_FOUND_WHILE_PULLING_CHANGES,\n} from \"@appsmith/constants/messages\";\nimport { Space } from \"./StyledComponents\";\nimport { Colors } from \"constants/Colors\";\n\nimport ConflictInfo from \"../components/ConflictInfo\";\nimport { getCurrentAppGitMetaData } from \"@appsmith/selectors/applicationSelectors\";\nimport { Button } from \"design-system\";\n\nconst StyledGitErrorPopup = styled.div`\n  & {\n    .${Classes.OVERLAY} {\n      position: fixed;\n      bottom: 0;\n      left: 0;\n      right: 0;\n      display: flex;\n      justify-content: center;\n\n      .${Classes.OVERLAY_CONTENT} {\n        overflow: hidden;\n        bottom: ${(props) =>\n          `calc(${props.theme.bottomBarHeight} + ${props.theme.spaces[3]}px)`};\n        left: ${(props) => props.theme.spaces[3]}px;\n        background-color: ${Colors.WHITE};\n      }\n    }\n\n    .git-error-popup {\n      width: 364px;\n      padding: ${(props) => props.theme.spaces[7]}px;\n\n      display: flex;\n      flex-direction: column;\n    }\n  }\n`;\n\nfunction Header({ closePopup }: { closePopup: () => void }) {\n  const title = createMessage(CONFLICTS_FOUND_WHILE_PULLING_CHANGES);\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"space-between\",\n      }}\n    >\n      <div style={{ display: \"flex\", alignItems: \"center\" }}>\n        <span className=\"title\">{title}</span>\n      </div>\n      <Button\n        isIconButton\n        kind=\"tertiary\"\n        onClick={closePopup}\n        size=\"sm\"\n        startIcon=\"close-modal\"\n      />\n    </div>\n  );\n}\n\nfunction GitErrorPopup() {\n  const dispatch = useDispatch();\n  const isGitErrorPopupVisible = useSelector(getIsGitErrorPopupVisible);\n  const hidePopup = () => {\n    dispatch(setIsGitErrorPopupVisible({ isVisible: false }));\n  };\n\n  const gitConflictDocumentUrl = useSelector(getConflictFoundDocUrlDeploy);\n  const gitMetaData = useSelector(getCurrentAppGitMetaData);\n  const browserSupportedRemoteUrl =\n    gitMetaData?.browserSupportedRemoteUrl || \"\";\n  const isConflicting = true; // refactored\n\n  return (\n    <StyledGitErrorPopup>\n      <Overlay\n        hasBackdrop\n        isOpen={isGitErrorPopupVisible}\n        onClose={hidePopup}\n        transitionDuration={25}\n        usePortal={false}\n      >\n        <div className={Classes.OVERLAY_CONTENT}>\n          <div className=\"git-error-popup\">\n            <Header closePopup={hidePopup} />\n            <Space size={2} />\n            {isConflicting && (\n              <ConflictInfo\n                browserSupportedRemoteUrl={browserSupportedRemoteUrl}\n                learnMoreLink={gitConflictDocumentUrl}\n              />\n            )}\n          </div>\n        </div>\n      </Overlay>\n    </StyledGitErrorPopup>\n  );\n}\n\nexport default GitErrorPopup;\n","import { Button, Divider, Text } from \"design-system\";\nimport noop from \"lodash/noop\";\nimport React, { Fragment } from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  display: flex;\n  margin-bottom: 16px;\n  align-items: center;\n`;\n\nconst StepButton = styled(Button)`\n  display: flex;\n  align-items: center;\n\n  .ads-v2-button__content {\n    padding: 4px;\n  }\n\n  .ads-v2-button__content-children {\n    font-weight: var(--ads-v2-font-weight-bold);\n  }\n\n  .ads-v2-button__content-children > * {\n    font-weight: var(--ads-v2-font-weight-bold);\n  }\n`;\n\ninterface StepNumberProps {\n  active: boolean;\n}\n\nconst StepNumber = styled.div<StepNumberProps>`\n  width: 20px;\n  height: 20px;\n  border-radius: 10px;\n  border-style: solid;\n  border-width: 1px;\n  border-color: ${(p) =>\n    p.active\n      ? \"var(--ads-v2-color-border-success)\"\n      : \"var(--ads-v2-color-border-emphasis)\"};\n  background-color: ${(p) =>\n    p.active\n      ? \"var(--ads-v2-color-bg-success)\"\n      : \"var(--ads-v2-color-bg-subtle)\"};\n  color: ${(p) =>\n    p.active\n      ? \"var(--ads-v2-color-border-success)\"\n      : \"var(--ads-v2-color-text)\"};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  line-height: 1;\n  margin-right: 4px;\n  flex-shrink: 0;\n`;\n\nconst StepText = styled(Text)`\n  font-weight: 500;\n`;\n\nconst StepLine = styled(Divider)`\n  width: initial;\n  margin-left: 8px;\n  margin-right: 8px;\n  flex: 1;\n`;\n\ninterface StepsProps {\n  steps: {\n    key: string;\n    text: string;\n  }[];\n  activeKey: string;\n  onActiveKeyChange: (activeKey: string) => void;\n}\n\nfunction Steps({\n  activeKey,\n  onActiveKeyChange = noop,\n  steps = [],\n}: StepsProps) {\n  const activeIndex = steps.findIndex((s) => s.key === activeKey);\n\n  return (\n    <Container>\n      {steps.map((step, index) => {\n        return (\n          <Fragment key={step.key}>\n            {index > 0 && <StepLine />}\n            <StepButton\n              isDisabled={index > activeIndex}\n              kind=\"tertiary\"\n              onClick={() => {\n                if (index < activeIndex) {\n                  onActiveKeyChange(step.key);\n                }\n              }}\n              role=\"button\"\n              size=\"md\"\n              style={{ opacity: index > activeIndex ? 0.6 : 1 }}\n            >\n              <StepNumber active={step.key === activeKey}>\n                {index + 1}\n              </StepNumber>\n              <StepText>{step.text}</StepText>\n            </StepButton>\n          </Fragment>\n        );\n      })}\n    </Container>\n  );\n}\n\nexport default Steps;\n","import { Callout, Text } from \"design-system\";\nimport styled from \"styled-components\";\n\nexport const WellContainer = styled.div`\n  padding: 16px;\n  border-radius: 4px;\n  background-color: var(--ads-v2-color-gray-100);\n  margin-bottom: 16px;\n  flex: 1;\n  flex-shrink: 1;\n  overflow-y: auto;\n`;\n\nexport const WellTitleContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 16px;\n  justify-content: space-between;\n`;\n\nexport const WellTitle = styled(Text)`\n  font-weight: 600;\n`;\n\nexport const WellText = styled(Text)`\n  margin-bottom: 16px;\n`;\n\nexport const FieldContainer = styled.div`\n  margin-bottom: 16px;\n`;\n\nexport const FieldControl = styled.div`\n  padding-left: 24px;\n`;\n\nexport const FieldQuestion = styled(Text)`\n  margin-bottom: 16px;\n`;\n\nexport const DemoImage = styled.img`\n  width: 100%;\n  height: 300px;\n  object-fit: cover;\n  object-position: 50% 0;\n  background-color: var(--ads-color-black-200);\n`;\n\nexport const ErrorCallout = styled(Callout)`\n  margin-bottom: 16px;\n`;\n","import { getAssetUrl } from \"@appsmith/utils/airgapHelpers\";\nimport { ASSETS_CDN_URL } from \"constants/ThirdPartyConstants\";\n\nexport const GIT_CONNECT_STEPS = {\n  CHOOSE_PROVIDER: \"choose-provider\",\n  GENERATE_SSH_KEY: \"generate-ssh-key\",\n  ADD_DEPLOY_KEY: \"add-deploy-key\",\n};\n\nexport const GIT_DEMO_GIF = {\n  create_repo: {\n    github: getAssetUrl(`${ASSETS_CDN_URL}/Github_create_empty_repo.gif`),\n    gitlab: getAssetUrl(`${ASSETS_CDN_URL}/Gitlab_create_a_repo.gif`),\n    bitbucket: getAssetUrl(`${ASSETS_CDN_URL}/Bitbucket_create_a_repo.gif`),\n  },\n  copy_remoteurl: {\n    github: getAssetUrl(`${ASSETS_CDN_URL}/Github_SSHkey.gif`),\n    gitlab: getAssetUrl(`${ASSETS_CDN_URL}/Gitlab_SSHKey.gif`),\n    bitbucket: getAssetUrl(`${ASSETS_CDN_URL}/Bitbucket_Copy_SSHKey.gif`),\n  },\n  add_deploykey: {\n    github: getAssetUrl(`${ASSETS_CDN_URL}/Github_add_deploykey.gif`),\n    gitlab: getAssetUrl(`${ASSETS_CDN_URL}/Gitlab_add_deploy_key.gif`),\n    bitbucket: getAssetUrl(`${ASSETS_CDN_URL}/Bitbucket_add_a_deploykey.gif`),\n  },\n};\n","import React from \"react\";\nimport {\n  DemoImage,\n  FieldContainer,\n  FieldControl,\n  FieldQuestion,\n  WellContainer,\n  WellTitle,\n  WellTitleContainer,\n} from \"./styles\";\nimport {\n  Callout,\n  Checkbox,\n  Collapsible,\n  CollapsibleContent,\n  CollapsibleHeader,\n  Icon,\n  Radio,\n  RadioGroup,\n  Text,\n} from \"design-system\";\nimport styled from \"styled-components\";\nimport { GIT_DEMO_GIF } from \"./constants\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ReduxActionTypes } from \"@appsmith/constants/ReduxActionConstants\";\nimport { setWorkspaceIdForImport } from \"@appsmith/actions/applicationActions\";\nimport { setIsGitSyncModalOpen } from \"actions/gitSyncActions\";\nimport { GitSyncModalTab } from \"entities/GitSync\";\nimport { getCurrentAppWorkspace } from \"@appsmith/selectors/selectedWorkspaceSelectors\";\nimport history from \"utils/history\";\nimport noop from \"lodash/noop\";\nimport { hasCreateNewAppPermission } from \"@appsmith/utils/permissionHelpers\";\nimport { useIsMobileDevice } from \"utils/hooks/useDeviceDetect\";\nimport {\n  CHOOSE_A_GIT_PROVIDER_STEP,\n  CHOOSE_GIT_PROVIDER_QUESTION,\n  HOW_TO_CREATE_EMPTY_REPO,\n  IMPORT_APP_IF_NOT_EMPTY,\n  IS_EMPTY_REPO_QUESTION,\n  I_HAVE_EXISTING_REPO,\n  NEED_EMPTY_REPO_MESSAGE,\n  createMessage,\n} from \"@appsmith/constants/messages\";\nimport AnalyticsUtil from \"@appsmith/utils/AnalyticsUtil\";\nimport { getCurrentApplicationId } from \"selectors/editorSelectors\";\n\nconst WellInnerContainer = styled.div`\n  padding-left: 16px;\n`;\n\nconst CheckboxTextContainer = styled.div`\n  display: flex;\n  justify-content: flex-start;\n`;\n\nexport type GitProvider = \"github\" | \"gitlab\" | \"bitbucket\" | \"others\";\n\ninterface ChooseGitProviderState {\n  gitProvider?: GitProvider;\n  gitEmptyRepoExists: string;\n  gitExistingRepoExists: boolean;\n}\ninterface ChooseGitProviderProps {\n  onChange: (args: Partial<ChooseGitProviderState>) => void;\n  value: Partial<ChooseGitProviderState>;\n  isImport?: boolean;\n}\n\nfunction ChooseGitProvider({\n  isImport = false,\n  onChange = noop,\n  value = {},\n}: ChooseGitProviderProps) {\n  const appId = useSelector(getCurrentApplicationId);\n  const workspace = useSelector(getCurrentAppWorkspace);\n  const isMobile = useIsMobileDevice();\n\n  const dispatch = useDispatch();\n  const handleImport = () => {\n    history.push(\"/applications\");\n\n    dispatch({\n      type: ReduxActionTypes.GIT_INFO_INIT,\n    });\n    dispatch(\n      setWorkspaceIdForImport({\n        editorId: appId || \"\",\n        workspaceId: workspace.id,\n      }),\n    );\n\n    dispatch(\n      setIsGitSyncModalOpen({\n        isOpen: true,\n        tab: GitSyncModalTab.GIT_CONNECTION,\n      }),\n    );\n    AnalyticsUtil.logEvent(\"GS_IMPORT_VIA_GIT_DURING_GC\");\n  };\n\n  const hasCreateNewApplicationPermission =\n    hasCreateNewAppPermission(workspace.userPermissions) && !isMobile;\n\n  return (\n    <>\n      <WellContainer>\n        <WellTitleContainer>\n          <WellTitle kind=\"heading-s\" renderAs=\"h3\">\n            {createMessage(CHOOSE_A_GIT_PROVIDER_STEP)}\n          </WellTitle>\n        </WellTitleContainer>\n        <WellInnerContainer>\n          <FieldContainer>\n            <FieldQuestion renderAs=\"p\">\n              i. {createMessage(CHOOSE_GIT_PROVIDER_QUESTION)}{\" \"}\n              <Text color=\"var(--ads-v2-color-red-600)\">*</Text>\n            </FieldQuestion>\n            <FieldControl>\n              <RadioGroup\n                onChange={(v) => {\n                  if (\n                    v === \"github\" ||\n                    v === \"gitlab\" ||\n                    v === \"bitbucket\" ||\n                    v === \"others\"\n                  ) {\n                    onChange({ gitProvider: v });\n                  }\n                }}\n                orientation=\"horizontal\"\n                value={value?.gitProvider}\n              >\n                <Radio\n                  data-testid=\"t--git-provider-radio-github\"\n                  value=\"github\"\n                >\n                  Github\n                </Radio>\n                <Radio\n                  data-testid=\"t--git-provider-radio-gitlab\"\n                  value=\"gitlab\"\n                >\n                  Gitlab\n                </Radio>\n                <Radio\n                  data-testid=\"t--git-provider-radio-bitbucket\"\n                  value=\"bitbucket\"\n                >\n                  Bitbucket\n                </Radio>\n                <Radio\n                  data-testid=\"t--git-provider-radio-others\"\n                  value=\"others\"\n                >\n                  Others\n                </Radio>\n              </RadioGroup>\n            </FieldControl>\n          </FieldContainer>\n          {!isImport && (\n            <FieldContainer>\n              <FieldQuestion\n                renderAs=\"p\"\n                style={{ opacity: !value?.gitProvider ? 0.5 : 1 }}\n              >\n                ii. {createMessage(IS_EMPTY_REPO_QUESTION)}{\" \"}\n                <Text color=\"var(--ads-v2-color-red-600)\">*</Text>\n              </FieldQuestion>\n              <FieldControl>\n                <RadioGroup\n                  isDisabled={!value?.gitProvider}\n                  onChange={(v) => onChange({ gitEmptyRepoExists: v })}\n                  orientation=\"horizontal\"\n                  value={value?.gitEmptyRepoExists}\n                >\n                  <Radio data-testid=\"t--existing-empty-repo-yes\" value=\"yes\">\n                    Yes\n                  </Radio>\n                  <Radio data-testid=\"t--existing-empty-repo-no\" value=\"no\">\n                    No\n                  </Radio>\n                </RadioGroup>\n              </FieldControl>\n            </FieldContainer>\n          )}\n          {!isImport &&\n            value?.gitProvider !== \"others\" &&\n            value?.gitEmptyRepoExists === \"no\" && (\n              <Collapsible isOpen>\n                <CollapsibleHeader arrowPosition=\"end\">\n                  <Icon name=\"play-circle-line\" size=\"md\" />\n                  <Text>{createMessage(HOW_TO_CREATE_EMPTY_REPO)}</Text>\n                </CollapsibleHeader>\n                <CollapsibleContent>\n                  <DemoImage\n                    alt={`Create an empty repo in ${value?.gitProvider}}`}\n                    src={\n                      GIT_DEMO_GIF.create_repo[value?.gitProvider || \"github\"]\n                    }\n                  />\n                </CollapsibleContent>\n              </Collapsible>\n            )}\n          {!isImport &&\n            value?.gitProvider === \"others\" &&\n            value?.gitEmptyRepoExists === \"no\" && (\n              <Callout kind=\"warning\">\n                {createMessage(NEED_EMPTY_REPO_MESSAGE)}\n              </Callout>\n            )}\n        </WellInnerContainer>\n      </WellContainer>\n      {!isImport && value?.gitEmptyRepoExists === \"no\" ? (\n        <Callout\n          kind=\"info\"\n          links={\n            hasCreateNewApplicationPermission\n              ? [{ children: \"Import via git\", onClick: handleImport }]\n              : []\n          }\n        >\n          {createMessage(IMPORT_APP_IF_NOT_EMPTY)}\n        </Callout>\n      ) : null}\n      {isImport && (\n        <Checkbox\n          data-testid=\"t--existing-repo-checkbox\"\n          isSelected={value?.gitExistingRepoExists}\n          onChange={(v) => onChange({ gitExistingRepoExists: v })}\n        >\n          <CheckboxTextContainer>\n            <Text renderAs=\"p\">{createMessage(I_HAVE_EXISTING_REPO)}</Text>\n            <Text color=\"var(--ads-v2-color-red-600)\" renderAs=\"p\">\n              &nbsp;*\n            </Text>\n          </CheckboxTextContainer>\n        </Checkbox>\n      )}\n    </>\n  );\n}\n\nexport default ChooseGitProvider;\n","import React, { useState } from \"react\";\nimport {\n  DemoImage,\n  ErrorCallout,\n  FieldContainer,\n  WellContainer,\n  WellText,\n  WellTitle,\n  WellTitleContainer,\n} from \"./styles\";\nimport {\n  Button,\n  Collapsible,\n  CollapsibleContent,\n  CollapsibleHeader,\n  Icon,\n  Input,\n  Text,\n} from \"design-system\";\nimport { isValidGitRemoteUrl } from \"../../utils\";\nimport {\n  COPY_SSH_URL_MESSAGE,\n  ERROR_REPO_NOT_EMPTY_MESSAGE,\n  ERROR_REPO_NOT_EMPTY_TITLE,\n  GENERATE_SSH_KEY_STEP,\n  HOW_TO_COPY_REMOTE_URL,\n  PASTE_SSH_URL_INFO,\n  READ_DOCS,\n  REMOTE_URL_INPUT_LABEL,\n  createMessage,\n} from \"@appsmith/constants/messages\";\nimport type { GitProvider } from \"./ChooseGitProvider\";\nimport { GIT_DEMO_GIF } from \"./constants\";\nimport noop from \"lodash/noop\";\n\ninterface GenerateSSHState {\n  gitProvider?: GitProvider;\n  remoteUrl: string;\n}\ninterface GenerateSSHProps {\n  onChange: (args: Partial<GenerateSSHState>) => void;\n  value: Partial<GenerateSSHState>;\n  errorData?: any;\n}\n\nfunction GenerateSSH({\n  errorData,\n  onChange = noop,\n  value = {},\n}: GenerateSSHProps) {\n  const [isTouched, setIsTouched] = useState(false);\n  const isInvalid =\n    isTouched &&\n    (typeof value?.remoteUrl !== \"string\" ||\n      !isValidGitRemoteUrl(value?.remoteUrl));\n\n  const handleChange = (v: string) => {\n    setIsTouched(true);\n    onChange({ remoteUrl: v });\n  };\n\n  return (\n    <>\n      {/* hardcoding messages because server doesn't support feature flag. Will change this later */}\n      {errorData && errorData?.responseMeta?.error?.code === \"AE-GIT-4033\" && (\n        <ErrorCallout kind=\"error\">\n          <Text kind=\"heading-xs\" renderAs=\"h3\">\n            {createMessage(ERROR_REPO_NOT_EMPTY_TITLE)}\n          </Text>\n          <Text renderAs=\"p\">\n            {createMessage(ERROR_REPO_NOT_EMPTY_MESSAGE)}\n          </Text>\n        </ErrorCallout>\n      )}\n      <WellContainer>\n        <WellTitleContainer>\n          <WellTitle kind=\"heading-s\" renderAs=\"h3\">\n            {createMessage(GENERATE_SSH_KEY_STEP)}\n          </WellTitle>\n          <Button\n            href=\"https://docs.appsmith.com/advanced-concepts/version-control-with-git/connecting-to-git-repository\"\n            kind=\"tertiary\"\n            renderAs=\"a\"\n            size=\"sm\"\n            startIcon=\"book-line\"\n            target=\"_blank\"\n          >\n            {\" \"}\n            {createMessage(READ_DOCS)}\n          </Button>\n        </WellTitleContainer>\n        <WellText renderAs=\"p\">{createMessage(COPY_SSH_URL_MESSAGE)}</WellText>\n        <FieldContainer>\n          <Input\n            data-testid=\"git-connect-remote-url-input\"\n            errorMessage={isInvalid ? createMessage(PASTE_SSH_URL_INFO) : \"\"}\n            isRequired\n            label={createMessage(REMOTE_URL_INPUT_LABEL)}\n            onChange={handleChange}\n            placeholder=\"git@example.com:user/repository.git\"\n            size=\"md\"\n            value={value?.remoteUrl}\n          />\n        </FieldContainer>\n        {value?.gitProvider !== \"others\" && (\n          <Collapsible isOpen>\n            <CollapsibleHeader arrowPosition=\"end\">\n              <Icon name=\"play-circle-line\" size=\"md\" />\n              <Text>{createMessage(HOW_TO_COPY_REMOTE_URL)}</Text>\n            </CollapsibleHeader>\n            <CollapsibleContent>\n              <DemoImage\n                alt={`Copy and paste remote url from ${value?.gitProvider}`}\n                src={\n                  GIT_DEMO_GIF.copy_remoteurl[value?.gitProvider || \"github\"]\n                }\n              />\n            </CollapsibleContent>\n          </Collapsible>\n        )}\n      </WellContainer>\n    </>\n  );\n}\n\nexport default GenerateSSH;\n","import type { CSSProperties } from \"react\";\nimport React, { useRef, useState } from \"react\";\nimport { Button, Icon, Tooltip } from \"design-system\";\nimport styled from \"styled-components\";\nimport copy from \"copy-to-clipboard\";\nimport noop from \"lodash/noop\";\n\nexport const TooltipWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const IconContainer = styled.div``;\n\ninterface CopyButtonProps {\n  style?: CSSProperties;\n  value?: string;\n  delay?: number;\n  onCopy?: () => void;\n  tooltipMessage?: string;\n  isDisabled?: boolean;\n  testIdSuffix?: string;\n}\n\nexport function CopyButton({\n  delay = 2000,\n  isDisabled = false,\n  onCopy = noop,\n  style,\n  testIdSuffix = \"generic\",\n  tooltipMessage,\n  value,\n}: CopyButtonProps) {\n  const timerRef = useRef<number>();\n  const [showCopied, setShowCopied] = useState(false);\n\n  const stopShowingCopiedAfterDelay = () => {\n    timerRef.current = setTimeout(() => {\n      setShowCopied(false);\n    }, delay);\n  };\n  const copyToClipboard = () => {\n    if (value) {\n      copy(value);\n      setShowCopied(true);\n      stopShowingCopiedAfterDelay();\n    }\n    onCopy();\n  };\n\n  return (\n    <>\n      {showCopied ? (\n        <IconContainer style={style}>\n          <Icon\n            color=\"var(--ads-v2-color-fg-success)\"\n            name=\"check-line\"\n            size=\"lg\"\n          />\n        </IconContainer>\n      ) : (\n        <TooltipWrapper style={style}>\n          <Tooltip content={tooltipMessage}>\n            <Button\n              data-testid={`t--copy-${testIdSuffix}`}\n              isDisabled={isDisabled}\n              isIconButton\n              kind=\"tertiary\"\n              onClick={copyToClipboard}\n              size=\"sm\"\n              startIcon=\"duplicate\"\n            />\n          </Tooltip>\n        </TooltipWrapper>\n      )}{\" \"}\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport {\n  DemoImage,\n  ErrorCallout,\n  FieldContainer,\n  WellContainer,\n  WellText,\n  WellTitle,\n  WellTitleContainer,\n} from \"./styles\";\nimport {\n  Button,\n  Checkbox,\n  Collapsible,\n  CollapsibleContent,\n  CollapsibleHeader,\n  Icon,\n  Link,\n  Option,\n  Select,\n  Text,\n  toast,\n} from \"design-system\";\nimport styled from \"styled-components\";\nimport { CopyButton } from \"../../components/CopyButton\";\nimport AnalyticsUtil from \"@appsmith/utils/AnalyticsUtil\";\nimport {\n  ADD_DEPLOY_KEY_STEP_TITLE,\n  CONSENT_ADDED_DEPLOY_KEY,\n  COPY_SSH_KEY,\n  ERROR_SSH_KEY_MISCONF_MESSAGE,\n  ERROR_SSH_KEY_MISCONF_TITLE,\n  HOW_TO_ADD_DEPLOY_KEY,\n  READ_DOCS,\n  createMessage,\n} from \"@appsmith/constants/messages\";\nimport { useSSHKeyPair } from \"../../hooks\";\nimport type { GitProvider } from \"./ChooseGitProvider\";\nimport { GIT_DEMO_GIF } from \"./constants\";\nimport noop from \"lodash/noop\";\nimport { useSelector } from \"react-redux\";\nimport { getIsGitSyncModalOpen } from \"selectors/gitSyncSelectors\";\n\nexport const DeployedKeyContainer = styled.div`\n  height: 36px;\n  border: 1px solid var(--ads-v2-color-border);\n  padding: 8px;\n  box-sizing: border-box;\n  border-radius: var(--ads-v2-border-radius);\n  background-color: #fff;\n  align-items: center;\n  display: flex;\n`;\n\nexport const FlexRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  gap: 3px;\n`;\n\nexport const KeyType = styled.span`\n  font-size: 10px;\n  text-transform: uppercase;\n  color: var(--ads-v2-color-fg);\n  font-weight: 700;\n`;\n\nexport const KeyText = styled.span`\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  flex: 1;\n  font-size: 10px;\n  color: var(--ads-v2-color-fg);\n  direction: rtl;\n  margin-right: 8px;\n`;\n\nconst StyledSelect = styled(Select)`\n  margin-bottom: 4px;\n  background-color: white;\n  width: initial;\n\n  .rc-select-selector {\n    min-width: 100px;\n  }\n\n  input {\n    width: 100px !important;\n  }\n`;\n\nconst CheckboxTextContainer = styled.div`\n  display: flex;\n  justify-content: flex-start;\n`;\n\nconst DummyKey = styled.div`\n  height: 36px;\n\n  background: linear-gradient(\n    90deg,\n    var(--ads-color-black-200) 0%,\n    rgba(240, 240, 240, 0) 100%\n  );\n`;\n\nconst getRepositorySettingsUrl = (\n  gitProvider?: GitProvider,\n  remoteUrl?: string,\n) => {\n  if (!gitProvider) {\n    return \"\";\n  }\n\n  const ownerRepo = remoteUrl?.split(\":\")?.[1]?.split(\".git\")?.[0];\n\n  if (!ownerRepo) {\n    return \"\";\n  }\n\n  switch (gitProvider) {\n    case \"github\":\n      return `https://github.com/${ownerRepo}/settings/keys`;\n    case \"gitlab\":\n      return `https://gitlab.com/${ownerRepo}/-/settings/repository`;\n    case \"bitbucket\":\n      return `https://bitbucket.org/${ownerRepo}/admin/access-keys/`;\n    default:\n      return \"\";\n  }\n};\n\ninterface AddDeployKeyState {\n  gitProvider?: GitProvider;\n  isAddedDeployKey: boolean;\n  remoteUrl: string;\n}\ninterface AddDeployKeyProps {\n  onChange: (args: Partial<AddDeployKeyState>) => void;\n  value: Partial<AddDeployKeyState>;\n  isImport?: boolean;\n  errorData?: any;\n  connectLoading?: boolean;\n}\n\nfunction AddDeployKey({\n  connectLoading = false,\n  errorData,\n  isImport = false,\n  onChange = noop,\n  value = {},\n}: AddDeployKeyProps) {\n  const isModalOpen = useSelector(getIsGitSyncModalOpen);\n  const [fetched, setFetched] = useState(false);\n  const [sshKeyType, setSshKeyType] = useState<string>();\n  const {\n    deployKeyDocUrl,\n    fetchingSSHKeyPair,\n    fetchSSHKeyPair,\n    generateSSHKey,\n    generatingSSHKey,\n    SSHKeyPair,\n  } = useSSHKeyPair();\n\n  useEffect(() => {\n    if (isModalOpen && !isImport) {\n      if (!fetched) {\n        fetchSSHKeyPair({\n          onSuccessCallback: () => {\n            setFetched(true);\n          },\n          onErrorCallback: () => {\n            setFetched(true);\n          },\n        });\n      }\n    } else {\n      if (!fetched) {\n        setFetched(true);\n      }\n    }\n  }, [isImport, isModalOpen, fetched]);\n\n  useEffect(() => {\n    if (isModalOpen && fetched && !fetchingSSHKeyPair) {\n      if (SSHKeyPair && SSHKeyPair.includes(\"rsa\")) {\n        setSshKeyType(\"RSA\");\n      } else if (\n        !SSHKeyPair &&\n        value?.remoteUrl &&\n        value.remoteUrl.toString().toLocaleLowerCase().includes(\"azure\")\n      ) {\n        setSshKeyType(\"RSA\");\n      } else {\n        setSshKeyType(\"ECDSA\");\n      }\n    }\n  }, [isModalOpen, fetched, fetchingSSHKeyPair, SSHKeyPair]);\n\n  useEffect(() => {\n    if (\n      isModalOpen &&\n      ((sshKeyType && !SSHKeyPair) ||\n        (sshKeyType && !SSHKeyPair?.includes(sshKeyType.toLowerCase())))\n    ) {\n      generateSSHKey(sshKeyType, {\n        onSuccessCallback: () => {\n          toast.show(\"SSH Key generated successfully\", { kind: \"success\" });\n        },\n      });\n    }\n  }, [sshKeyType, SSHKeyPair, isModalOpen]);\n\n  const repositorySettingsUrl = getRepositorySettingsUrl(\n    value?.gitProvider,\n    value?.remoteUrl,\n  );\n\n  const loading = fetchingSSHKeyPair || generatingSSHKey;\n\n  return (\n    <>\n      {errorData &&\n        errorData?.responseMeta?.error?.code !== \"AE-GIT-4033\" &&\n        errorData?.responseMeta?.error?.code !== \"AE-GIT-4032\" && (\n          <ErrorCallout kind=\"error\">\n            <Text kind=\"heading-xs\" renderAs=\"h3\">\n              {errorData?.responseMeta?.error?.errorType}\n            </Text>\n            <Text renderAs=\"p\">{errorData?.responseMeta?.error?.message}</Text>\n          </ErrorCallout>\n        )}\n\n      {/* hardcoding message because server doesn't support feature flag. Will change this later */}\n      {errorData && errorData?.responseMeta?.error?.code === \"AE-GIT-4032\" && (\n        <ErrorCallout kind=\"error\">\n          <Text kind=\"heading-xs\" renderAs=\"h3\">\n            {createMessage(ERROR_SSH_KEY_MISCONF_TITLE)}\n          </Text>\n          <Text renderAs=\"p\">\n            {createMessage(ERROR_SSH_KEY_MISCONF_MESSAGE)}\n          </Text>\n        </ErrorCallout>\n      )}\n\n      <WellContainer>\n        <WellTitleContainer>\n          <WellTitle kind=\"heading-s\" renderAs=\"h3\">\n            {createMessage(ADD_DEPLOY_KEY_STEP_TITLE)}\n          </WellTitle>\n          <Button\n            href={\n              deployKeyDocUrl ||\n              \"https://docs.appsmith.com/advanced-concepts/version-control-with-git/connecting-to-git-repository\"\n            }\n            kind=\"tertiary\"\n            renderAs=\"a\"\n            size=\"sm\"\n            startIcon=\"book-line\"\n            target=\"_blank\"\n          >\n            {\" \"}\n            {createMessage(READ_DOCS)}\n          </Button>\n        </WellTitleContainer>\n\n        <WellText renderAs=\"p\">\n          Copy below SSH key and paste it in your{\" \"}\n          {!!repositorySettingsUrl && value.gitProvider !== \"others\" ? (\n            <Link\n              rel=\"noreferrer\"\n              style={{ display: \"inline\" }}\n              target=\"_blank\"\n              to={repositorySettingsUrl}\n            >\n              repository settings.\n            </Link>\n          ) : (\n            \"repository settings.\"\n          )}{\" \"}\n          Now, give write access to it.\n        </WellText>\n        <FieldContainer>\n          <StyledSelect\n            onChange={(v) => setSshKeyType(v)}\n            size=\"sm\"\n            value={sshKeyType}\n          >\n            <Option value=\"ECDSA\">ECDSA 256</Option>\n            <Option value=\"RSA\">RSA 4096</Option>\n          </StyledSelect>\n          {!loading ? (\n            <DeployedKeyContainer>\n              <Icon\n                color=\"var(--ads-v2-color-fg)\"\n                name=\"key-2-line\"\n                size=\"md\"\n                style={{ marginRight: 4 }}\n              />\n              <KeyType>{sshKeyType}</KeyType>\n              <KeyText>{SSHKeyPair}</KeyText>\n              {!connectLoading && (\n                <CopyButton\n                  onCopy={() => {\n                    AnalyticsUtil.logEvent(\"GS_COPY_SSH_KEY_BUTTON_CLICK\");\n                  }}\n                  tooltipMessage={createMessage(COPY_SSH_KEY)}\n                  value={SSHKeyPair}\n                />\n              )}\n            </DeployedKeyContainer>\n          ) : (\n            <DummyKey />\n          )}\n        </FieldContainer>\n        {value?.gitProvider !== \"others\" && (\n          <Collapsible isOpen>\n            <CollapsibleHeader arrowPosition=\"end\">\n              <Icon name=\"play-circle-line\" size=\"md\" />\n              <Text>{createMessage(HOW_TO_ADD_DEPLOY_KEY)}</Text>\n            </CollapsibleHeader>\n            <CollapsibleContent>\n              <DemoImage\n                alt={`Add deploy key in ${value?.gitProvider}`}\n                src={GIT_DEMO_GIF.add_deploykey[value?.gitProvider || \"github\"]}\n              />\n            </CollapsibleContent>\n          </Collapsible>\n        )}\n      </WellContainer>\n      <Checkbox\n        data-testid=\"t--added-deploy-key-checkbox\"\n        isSelected={value?.isAddedDeployKey}\n        onChange={(v) => onChange({ isAddedDeployKey: v })}\n      >\n        <CheckboxTextContainer>\n          <Text renderAs=\"p\">{createMessage(CONSENT_ADDED_DEPLOY_KEY)}</Text>\n          <Text color=\"var(--ads-v2-color-red-600)\" renderAs=\"p\">\n            &nbsp;*\n          </Text>\n        </CheckboxTextContainer>\n      </Checkbox>\n    </>\n  );\n}\n\nexport default AddDeployKey;\n","import React, { useState } from \"react\";\nimport { Button, ModalBody, ModalFooter } from \"design-system\";\nimport Steps from \"./Steps\";\nimport type { GitProvider } from \"./ChooseGitProvider\";\nimport ChooseGitProvider from \"./ChooseGitProvider\";\nimport GenerateSSH from \"./GenerateSSH\";\nimport AddDeployKey from \"./AddDeployKey\";\nimport styled from \"styled-components\";\nimport { GIT_CONNECT_STEPS } from \"./constants\";\nimport { useGitConnect } from \"../../hooks\";\nimport { isValidGitRemoteUrl } from \"../../utils\";\nimport { importAppFromGit } from \"actions/gitSyncActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getIsImportingApplicationViaGit } from \"selectors/gitSyncSelectors\";\nimport {\n  ADD_DEPLOY_KEY_STEP,\n  CHOOSE_A_GIT_PROVIDER_STEP,\n  CONFIGURE_GIT,\n  CONNECT_GIT_TEXT,\n  GENERATE_SSH_KEY_STEP,\n  GIT_CONNECT_WAITING,\n  GIT_IMPORT_WAITING,\n  PREVIOUS_STEP,\n  createMessage,\n} from \"@appsmith/constants/messages\";\nimport GitSyncStatusbar from \"../../components/Statusbar\";\nimport AnalyticsUtil from \"@appsmith/utils/AnalyticsUtil\";\n\nconst StyledModalBody = styled(ModalBody)`\n  flex: 1;\n  overflow-y: initial;\n  display: flex;\n  flex-direction: column;\n  min-height: min-content;\n  max-height: calc(\n    100vh - 200px - 32px - 56px - 44px\n  ); // 200px offset, 32px outer padding, 56px footer, 44px header\n`;\n\ninterface StyledModalFooterProps {\n  loading?: boolean;\n}\n\nconst StyledModalFooter = styled(ModalFooter)<StyledModalFooterProps>`\n  justify-content: space-between;\n  flex-direction: ${(p) => (!p.loading ? \"row-reverse\" : \"row\")};\n`;\n\nconst StatusbarWrapper = styled.div`\n  margin-top: 16px;\n\n  > div {\n    display: flex;\n    height: initial;\n    align-items: center;\n  }\n\n  > div > div {\n    margin-top: 0px;\n    width: 200px;\n    margin-right: 12px;\n  }\n\n  > div > p {\n    margin-top: 0;\n  }\n`;\n\nconst steps = [\n  {\n    key: GIT_CONNECT_STEPS.CHOOSE_PROVIDER,\n    text: createMessage(CHOOSE_A_GIT_PROVIDER_STEP),\n  },\n  {\n    key: GIT_CONNECT_STEPS.GENERATE_SSH_KEY,\n    text: createMessage(GENERATE_SSH_KEY_STEP),\n  },\n  {\n    key: GIT_CONNECT_STEPS.ADD_DEPLOY_KEY,\n    text: createMessage(ADD_DEPLOY_KEY_STEP),\n  },\n];\n\nconst possibleSteps = steps.map((s) => s.key);\n\nconst nextStepText = {\n  [GIT_CONNECT_STEPS.CHOOSE_PROVIDER]: createMessage(CONFIGURE_GIT),\n  [GIT_CONNECT_STEPS.GENERATE_SSH_KEY]: createMessage(GENERATE_SSH_KEY_STEP),\n  [GIT_CONNECT_STEPS.ADD_DEPLOY_KEY]: createMessage(CONNECT_GIT_TEXT),\n};\n\ninterface FormDataState {\n  gitProvider?: GitProvider;\n  gitEmptyRepoExists?: string;\n  gitExistingRepoExists?: boolean;\n  remoteUrl?: string;\n  isAddedDeployKey?: boolean;\n  sshKeyType?: \"RSA\" | \"ECDSA\";\n}\n\ninterface GitConnectionV2Props {\n  isImport?: boolean;\n}\n\nfunction GitConnectionV2({ isImport = false }: GitConnectionV2Props) {\n  const [errorData, setErrorData] = useState<any>();\n  const isImportingViaGit = useSelector(getIsImportingApplicationViaGit);\n  const dispatch = useDispatch();\n\n  const [formData, setFormData] = useState<FormDataState>({\n    gitProvider: undefined,\n    gitEmptyRepoExists: undefined,\n    gitExistingRepoExists: false,\n    remoteUrl: undefined,\n    isAddedDeployKey: false,\n    sshKeyType: \"ECDSA\",\n  });\n\n  const handleChange = (partialFormData: Partial<FormDataState>) => {\n    setFormData((s) => ({ ...s, ...partialFormData }));\n  };\n\n  const [activeStep, setActiveStep] = useState<string>(\n    GIT_CONNECT_STEPS.CHOOSE_PROVIDER,\n  );\n  const currentIndex = steps.findIndex((s) => s.key === activeStep);\n\n  const { connectToGit, isConnectingToGit } = useGitConnect();\n\n  const isDisabled = {\n    [GIT_CONNECT_STEPS.CHOOSE_PROVIDER]: !isImport\n      ? !formData.gitProvider ||\n        !formData.gitEmptyRepoExists ||\n        formData.gitEmptyRepoExists === \"no\"\n      : !formData.gitProvider || !formData.gitExistingRepoExists,\n    [GIT_CONNECT_STEPS.GENERATE_SSH_KEY]:\n      typeof formData?.remoteUrl !== \"string\" ||\n      !isValidGitRemoteUrl(formData?.remoteUrl),\n    [GIT_CONNECT_STEPS.ADD_DEPLOY_KEY]: !formData.isAddedDeployKey,\n  };\n\n  const handlePreviousStep = () => {\n    if (currentIndex > 0) {\n      setActiveStep(steps[currentIndex - 1].key);\n    }\n  };\n\n  const handleNextStep = () => {\n    if (currentIndex < steps.length) {\n      switch (activeStep) {\n        case GIT_CONNECT_STEPS.CHOOSE_PROVIDER: {\n          setActiveStep(GIT_CONNECT_STEPS.GENERATE_SSH_KEY);\n          AnalyticsUtil.logEvent(\"GS_CONFIGURE_GIT\");\n          break;\n        }\n        case GIT_CONNECT_STEPS.GENERATE_SSH_KEY: {\n          setActiveStep(GIT_CONNECT_STEPS.ADD_DEPLOY_KEY);\n          AnalyticsUtil.logEvent(\"GS_GENERATE_KEY_BUTTON_CLICK\", {\n            repoUrl: formData?.remoteUrl,\n            connectFlow: \"v2\",\n          });\n          break;\n        }\n        case GIT_CONNECT_STEPS.ADD_DEPLOY_KEY: {\n          const gitProfile = {\n            authorName: \"\",\n            authorEmail: \"\",\n            useGlobalProfile: true,\n          };\n          if (formData.remoteUrl) {\n            if (!isImport) {\n              connectToGit(\n                {\n                  remoteUrl: formData.remoteUrl,\n                  gitProfile,\n                },\n                {\n                  onErrorCallback: (error: any, response?: any) => {\n                    // AE-GIT-4033 is repo not empty error\n                    if (response?.responseMeta?.error?.code === \"AE-GIT-4033\") {\n                      setActiveStep(GIT_CONNECT_STEPS.GENERATE_SSH_KEY);\n                    }\n                    const errorResponse = response || error?.response?.data;\n                    setErrorData(errorResponse);\n                  },\n                },\n              );\n              AnalyticsUtil.logEvent(\n                \"GS_CONNECT_BUTTON_ON_GIT_SYNC_MODAL_CLICK\",\n                { repoUrl: formData?.remoteUrl, connectFlow: \"v2\" },\n              );\n            } else {\n              dispatch(\n                importAppFromGit({\n                  payload: {\n                    remoteUrl: formData.remoteUrl,\n                    gitProfile,\n                    // isDefaultProfile: true,\n                  },\n                  onErrorCallback(error, response) {\n                    const errorResponse = response || error?.response?.data;\n                    setErrorData(errorResponse);\n                  },\n                }),\n              );\n            }\n          }\n          break;\n        }\n      }\n    }\n  };\n\n  const stepProps = {\n    onChange: handleChange,\n    value: formData,\n    isImport,\n    errorData,\n  };\n\n  const loading =\n    (!isImport && isConnectingToGit) || (isImport && isImportingViaGit);\n\n  return (\n    <>\n      <StyledModalBody>\n        {possibleSteps.includes(activeStep) && (\n          <Steps\n            activeKey={activeStep}\n            onActiveKeyChange={setActiveStep}\n            steps={steps}\n          />\n        )}\n        {activeStep === GIT_CONNECT_STEPS.CHOOSE_PROVIDER && (\n          <ChooseGitProvider {...stepProps} />\n        )}\n        {activeStep === GIT_CONNECT_STEPS.GENERATE_SSH_KEY && (\n          <GenerateSSH {...stepProps} />\n        )}\n        {activeStep === GIT_CONNECT_STEPS.ADD_DEPLOY_KEY && (\n          <AddDeployKey {...stepProps} connectLoading={loading} />\n        )}\n      </StyledModalBody>\n      <StyledModalFooter loading={loading}>\n        {loading && (\n          <StatusbarWrapper className=\"t--connect-statusbar\">\n            <GitSyncStatusbar\n              completed={!loading}\n              message={createMessage(\n                isImport ? GIT_IMPORT_WAITING : GIT_CONNECT_WAITING,\n              )}\n              period={4}\n            />\n          </StatusbarWrapper>\n        )}\n        {!loading && (\n          <Button\n            data-testid=\"t--git-connect-next-button\"\n            endIcon={\n              currentIndex < steps.length - 1 ? \"arrow-right-s-line\" : undefined\n            }\n            isDisabled={isDisabled[activeStep]}\n            onClick={handleNextStep}\n            size=\"md\"\n          >\n            {nextStepText[activeStep]}\n          </Button>\n        )}\n        {possibleSteps.includes(activeStep) && currentIndex > 0 && !loading && (\n          <Button\n            isDisabled={loading}\n            kind=\"secondary\"\n            onClick={handlePreviousStep}\n            size=\"md\"\n            startIcon=\"arrow-left-s-line\"\n          >\n            {createMessage(PREVIOUS_STEP)}\n          </Button>\n        )}\n      </StyledModalFooter>\n    </>\n  );\n}\n\nexport default GitConnectionV2;\n","import {\n  fetchBranchesInit,\n  setGitSettingsModalOpenAction,\n  setIsGitSyncModalOpen,\n} from \"actions/gitSyncActions\";\nimport {\n  GIT_CONNECT_SUCCESS_PROTECTION_MSG,\n  GIT_CONNECT_SUCCESS_TITLE,\n  GIT_CONNECT_SUCCESS_ACTION_SETTINGS,\n  GIT_CONNECT_SUCCESS_ACTION_CONTINUE,\n  createMessage,\n  GIT_CONNECT_SUCCESS_PROTECTION_DOC_CTA,\n  GIT_CONNECT_SUCCESS_DEFAULT_BRANCH,\n  GIT_CONNECT_SUCCESS_REPO_NAME,\n  GIT_CONNECT_SUCCESS_DEFAULT_BRANCH_TOOLTIP,\n} from \"@appsmith/constants/messages\";\nimport {\n  Button,\n  Icon,\n  ModalBody,\n  ModalFooter,\n  Text,\n  Link,\n  Tooltip,\n} from \"design-system\";\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { getCurrentAppGitMetaData } from \"@appsmith/selectors/applicationSelectors\";\nimport AnalyticsUtil from \"@appsmith/utils/AnalyticsUtil\";\nimport { GitSettingsTab } from \"reducers/uiReducers/gitSyncReducer\";\nimport { DOCS_BRANCH_PROTECTION_URL } from \"constants/ThirdPartyConstants\";\n\nconst TitleText = styled(Text)`\n  flex: 1;\n  font-weight: 600;\n`;\n\nconst LinkText = styled(Text)`\n  span {\n    font-weight: 500;\n  }\n`;\n\nfunction ConnectionSuccessTitle() {\n  return (\n    <div className=\"flex items-center mb-4\">\n      <Icon className=\"mr-1\" color=\"#059669\" name=\"oval-check\" size=\"lg\" />\n      <TitleText\n        data-testid=\"t--git-success-modal-title\"\n        kind=\"heading-s\"\n        renderAs=\"h3\"\n      >\n        {createMessage(GIT_CONNECT_SUCCESS_TITLE)}\n      </TitleText>\n    </div>\n  );\n}\n\nfunction ConnectionSuccessBody() {\n  const gitMetadata = useSelector(getCurrentAppGitMetaData);\n  return (\n    <>\n      <div className=\"flex gap-x-4 mb-6\">\n        <div className=\"w-44\">\n          <div className=\"flex items-center\">\n            <Icon className=\"mr-1\" name=\"git-repository\" size=\"md\" />\n            <Text isBold renderAs=\"p\">\n              {createMessage(GIT_CONNECT_SUCCESS_REPO_NAME)}\n            </Text>\n          </div>\n          <Text renderAs=\"p\">{gitMetadata?.repoName || \"-\"}</Text>\n        </div>\n        <div className=\"w-44\">\n          <div className=\"flex items-center\">\n            <Icon className=\"mr-1\" name=\"git-branch\" size=\"md\" />\n            <Text isBold renderAs=\"p\">\n              {createMessage(GIT_CONNECT_SUCCESS_DEFAULT_BRANCH)}\n            </Text>\n            <Tooltip\n              content={createMessage(\n                GIT_CONNECT_SUCCESS_DEFAULT_BRANCH_TOOLTIP,\n              )}\n              trigger=\"hover\"\n            >\n              <Icon\n                className=\"inline-fix ml-1 cursor-pointer\"\n                name=\"info\"\n                size=\"md\"\n              />\n            </Tooltip>\n          </div>\n          <Text renderAs=\"p\">{gitMetadata?.defaultBranchName || \"-\"}</Text>\n        </div>\n      </div>\n      <div className=\"mb-1\">\n        <Text renderAs=\"p\">\n          {createMessage(GIT_CONNECT_SUCCESS_PROTECTION_MSG)}\n        </Text>\n      </div>\n      <LinkText className=\"inline-block\" isBold renderAs=\"p\">\n        <Link\n          data-testid=\"t--git-success-modal-learn-more-link\"\n          target=\"_blank\"\n          to={DOCS_BRANCH_PROTECTION_URL}\n        >\n          {createMessage(GIT_CONNECT_SUCCESS_PROTECTION_DOC_CTA)}\n        </Link>\n      </LinkText>\n    </>\n  );\n}\n\nfunction ConnectionSuccessActions() {\n  const gitMetadata = useSelector(getCurrentAppGitMetaData);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchBranchesInit());\n  }, []);\n\n  const handleStartGit = () => {\n    dispatch(\n      setIsGitSyncModalOpen({\n        isOpen: false,\n      }),\n    );\n    AnalyticsUtil.logEvent(\"GS_START_USING_GIT\", {\n      repoUrl: gitMetadata?.remoteUrl,\n    });\n  };\n\n  const handleOpenSettings = () => {\n    dispatch(\n      setIsGitSyncModalOpen({\n        isOpen: false,\n      }),\n    );\n    dispatch(\n      setGitSettingsModalOpenAction({\n        open: true,\n        tab: GitSettingsTab.BRANCH,\n      }),\n    );\n    AnalyticsUtil.logEvent(\"GS_OPEN_GIT_SETTINGS\", {\n      repoUrl: gitMetadata?.remoteUrl,\n    });\n  };\n\n  return (\n    <>\n      <Button\n        data-testid=\"t--git-success-modal-open-settings-cta\"\n        kind=\"secondary\"\n        onClick={handleOpenSettings}\n        size=\"md\"\n      >\n        {createMessage(GIT_CONNECT_SUCCESS_ACTION_SETTINGS)}\n      </Button>\n      <Button\n        data-testid=\"t--git-success-modal-start-using-git-cta\"\n        onClick={handleStartGit}\n        size=\"md\"\n      >\n        {createMessage(GIT_CONNECT_SUCCESS_ACTION_CONTINUE)}\n      </Button>\n    </>\n  );\n}\n\nfunction ConnectionSuccess() {\n  return (\n    <>\n      <ModalBody data-testid=\"t--git-success-modal-body\">\n        <ConnectionSuccessTitle />\n        <ConnectionSuccessBody />\n      </ModalBody>\n      <ModalFooter>\n        <ConnectionSuccessActions />\n      </ModalFooter>\n    </>\n  );\n}\n\nexport default ConnectionSuccess;\n","import { Callout, Text, toast } from \"design-system\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { useSSHKeyPair } from \"../hooks\";\nimport copy from \"copy-to-clipboard\";\nimport {\n  COPIED_SSH_KEY,\n  COPY_SSH_KEY,\n  ERROR_SSH_RECONNECT_MESSAGE,\n  ERROR_SSH_RECONNECT_OPTION1,\n  ERROR_SSH_RECONNECT_OPTION2,\n  NO_COPIED_SSH_KEY,\n  createMessage,\n} from \"@appsmith/constants/messages\";\nimport { fetchGitStatusInit } from \"actions/gitSyncActions\";\n\nconst NumberedList = styled.ol`\n  list-style-type: decimal;\n  margin-left: 20px;\n`;\n\nconst StyledCallout = styled(Callout)`\n  margin-bottom: 24px;\n`;\n\nfunction ReconnectSSHError() {\n  const [errorData, setErrorData] = useState<{ error: Error; response: any }>();\n  const dispatch = useDispatch();\n\n  const { fetchingSSHKeyPair, fetchSSHKeyPair, SSHKeyPair } = useSSHKeyPair();\n\n  useEffect(() => {\n    dispatch(\n      fetchGitStatusInit({\n        onErrorCallback: (error, response) => {\n          setErrorData({ error, response });\n        },\n      }),\n    );\n    fetchSSHKeyPair();\n  }, []);\n\n  const handleClickOnCopy = () => {\n    if (SSHKeyPair) {\n      copy(SSHKeyPair);\n      toast.show(createMessage(COPIED_SSH_KEY), { kind: \"success\" });\n    } else {\n      toast.show(createMessage(NO_COPIED_SSH_KEY), { kind: \"error\" });\n    }\n  };\n\n  if (!errorData) {\n    return null;\n  }\n\n  if (\n    errorData &&\n    errorData.response.responseMeta.error.code === \"AE-GIT-4044\"\n  ) {\n    return (\n      <StyledCallout\n        kind=\"error\"\n        links={[\n          {\n            children: createMessage(COPY_SSH_KEY),\n            onClick: handleClickOnCopy,\n            startIcon: \"copy-control\",\n            isDisabled: fetchingSSHKeyPair,\n          },\n        ]}\n      >\n        <Text renderAs=\"p\">{createMessage(ERROR_SSH_RECONNECT_MESSAGE)}</Text>\n        <NumberedList>\n          <li>{createMessage(ERROR_SSH_RECONNECT_OPTION1)}</li>\n          <li>{createMessage(ERROR_SSH_RECONNECT_OPTION2)}</li>\n        </NumberedList>\n      </StyledCallout>\n    );\n  }\n\n  return (\n    <StyledCallout kind=\"error\">\n      {errorData.error?.message || \"There was an unexpected error\"}\n    </StyledCallout>\n  );\n}\n\nexport default ReconnectSSHError;\n","import React, { useCallback } from \"react\";\nimport {\n  getActiveGitSyncModalTab,\n  getIsDeploying,\n  getIsGitConnected,\n  getIsGitSyncModalOpen,\n  protectedModeSelector,\n} from \"selectors/gitSyncSelectors\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setIsGitSyncModalOpen } from \"actions/gitSyncActions\";\nimport { setWorkspaceIdForImport } from \"@appsmith/actions/applicationActions\";\nimport Menu from \"../Menu\";\nimport Deploy from \"../Tabs/Deploy\";\nimport Merge from \"../Tabs/Merge\";\n\nimport GitErrorPopup from \"../components/GitErrorPopup\";\n\nimport {\n  CONFIGURE_GIT,\n  createMessage,\n  DEPLOY,\n  MERGE,\n  IMPORT_APP,\n} from \"@appsmith/constants/messages\";\nimport AnalyticsUtil from \"@appsmith/utils/AnalyticsUtil\";\nimport { Modal, ModalContent, ModalHeader } from \"design-system\";\nimport GitConnectionV2 from \"../Tabs/GitConnectionV2\";\nimport { GitSyncModalTab } from \"entities/GitSync\";\nimport ConnectionSuccess from \"../Tabs/ConnectionSuccess\";\nimport styled from \"styled-components\";\nimport ReconnectSSHError from \"../components/ReconnectSSHError\";\nimport { getCurrentAppGitMetaData } from \"@appsmith/selectors/applicationSelectors\";\nimport { getCurrentApplicationId } from \"selectors/editorSelectors\";\n\nconst StyledModalContent = styled(ModalContent)`\n  &&& {\n    width: 640px;\n    transform: none !important;\n    top: 100px;\n    left: calc(50% - 320px);\n    max-height: calc(100vh - 200px);\n  }\n`;\n\ninterface GitSyncModalV2Props {\n  isImport?: boolean;\n}\n\nfunction GitSyncModalV2({ isImport = false }: GitSyncModalV2Props) {\n  const isProtectedMode = useSelector(protectedModeSelector);\n  const gitMetadata = useSelector(getCurrentAppGitMetaData);\n  const isModalOpen = useSelector(getIsGitSyncModalOpen);\n  const isGitConnected = useSelector(getIsGitConnected);\n  const isDeploying = useSelector(getIsDeploying);\n  const appId = useSelector(getCurrentApplicationId);\n\n  const menuOptions = [\n    {\n      key: GitSyncModalTab.DEPLOY,\n      title: createMessage(DEPLOY),\n      disabled: isProtectedMode,\n    },\n    {\n      key: GitSyncModalTab.MERGE,\n      title: createMessage(MERGE),\n      disabled: isProtectedMode,\n    },\n  ];\n  const possibleMenuOptions = menuOptions.map((option) => option.key);\n\n  let activeTabKey = useSelector(getActiveGitSyncModalTab);\n  if (!isGitConnected && activeTabKey !== GitSyncModalTab.GIT_CONNECTION) {\n    activeTabKey = GitSyncModalTab.GIT_CONNECTION;\n  }\n\n  const modalTitle: Partial<{ [K in GitSyncModalTab]: string }> = {\n    [GitSyncModalTab.GIT_CONNECTION]: isImport\n      ? createMessage(IMPORT_APP)\n      : createMessage(CONFIGURE_GIT),\n  };\n\n  const dispatch = useDispatch();\n\n  const setActiveTabKey = useCallback(\n    (tabKey: GitSyncModalTab) => {\n      if (tabKey === GitSyncModalTab.DEPLOY) {\n        AnalyticsUtil.logEvent(\"GS_DEPLOY_GIT_MODAL_TRIGGERED\", {\n          source: `${activeTabKey}_TAB`,\n        });\n      } else if (tabKey === GitSyncModalTab.MERGE) {\n        AnalyticsUtil.logEvent(\"GS_MERGE_GIT_MODAL_TRIGGERED\", {\n          source: `${activeTabKey}_TAB`,\n        });\n      }\n      dispatch(\n        setIsGitSyncModalOpen({\n          isOpen: isModalOpen,\n          tab: tabKey,\n          isDeploying,\n        }),\n      );\n    },\n    [dispatch, setIsGitSyncModalOpen, isModalOpen],\n  );\n\n  const handleClose = useCallback(() => {\n    dispatch(setIsGitSyncModalOpen({ isOpen: false }));\n    dispatch(\n      setWorkspaceIdForImport({ editorId: appId || \"\", workspaceId: \"\" }),\n    );\n  }, [dispatch, setIsGitSyncModalOpen]);\n\n  return (\n    <>\n      <Modal\n        onOpenChange={(open) => {\n          if (!open) {\n            handleClose();\n          }\n        }}\n        open={isModalOpen}\n      >\n        <StyledModalContent data-testid=\"t--git-sync-modal\">\n          <ModalHeader>\n            {modalTitle[activeTabKey] || gitMetadata?.repoName}\n          </ModalHeader>\n          {isGitConnected && <ReconnectSSHError />}\n          {possibleMenuOptions.includes(activeTabKey) && (\n            <Menu\n              activeTabKey={activeTabKey}\n              onSelect={(tabKey: string) =>\n                setActiveTabKey(tabKey as GitSyncModalTab)\n              }\n              options={menuOptions}\n            />\n          )}\n          {activeTabKey === GitSyncModalTab.GIT_CONNECTION &&\n            (!isGitConnected ? (\n              <GitConnectionV2 isImport={isImport} />\n            ) : (\n              <ConnectionSuccess />\n            ))}\n          {activeTabKey === GitSyncModalTab.DEPLOY && <Deploy />}\n          {activeTabKey === GitSyncModalTab.MERGE && <Merge />}\n        </StyledModalContent>\n      </Modal>\n      <GitErrorPopup />\n    </>\n  );\n}\n\nexport default GitSyncModalV2;\n","import React from \"react\";\nimport GitSyncModalV2 from \"./GitSyncModalV2\";\n\ninterface GitSyncModalProps {\n  isImport?: boolean;\n}\n\nfunction GitSyncModal(props: GitSyncModalProps) {\n  return <GitSyncModalV2 {...props} />;\n}\n\nexport default GitSyncModal;\n","import React from \"react\";\nimport { Tab, Tabs, TabsList } from \"design-system\";\nimport styled from \"styled-components\";\n\ninterface Props {\n  activeTabKey: string;\n  onSelect: (key: string) => void;\n  options: Array<{ key: string; title: string; disabled?: boolean }>;\n}\n\nconst StyledTab = styled(Tab)`\n  &:disabled,\n  [disabled] {\n    cursor: not-allowed;\n  }\n`;\n\nexport default function Menu(props: Props) {\n  return (\n    <Tabs onValueChange={props.onSelect} value={props.activeTabKey}>\n      <TabsList>\n        {props.options.map((tab) => (\n          <StyledTab\n            data-testid={\"t--tab-\" + tab.key}\n            disabled={tab.disabled ?? false}\n            key={tab.key}\n            value={tab.key}\n          >\n            {tab.title}\n          </StyledTab>\n        ))}\n      </TabsList>\n    </Tabs>\n  );\n}\n","import React from \"react\";\nimport { Colors } from \"constants/Colors\";\nimport styled from \"styled-components\";\nimport { Classes, Text, Case, FontWeight, TextType } from \"design-system-old\";\nimport { Icon } from \"design-system\";\n\nconst LinkText = styled.div<{ color?: string }>`\n  cursor: pointer;\n  .${Classes.ICON} {\n    margin-left: ${(props) => props.theme.spaces[3]}px;\n    display: inline-flex;\n  }\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  &:hover {\n    text-decoration: underline;\n    text-decoration-color: ${(props) => props.color};\n  }\n`;\n\nexport default function Link({\n  className = \"\",\n  color,\n  hasIcon = true,\n  link,\n  onClick,\n  text,\n}: {\n  className?: string;\n  color?: string;\n  hasIcon?: boolean;\n  link: string;\n  onClick?: () => void;\n  text: string;\n}) {\n  const clickHandler = () => {\n    onClick ? onClick() : window.open(link, \"_blank\");\n  };\n  return (\n    <LinkText\n      className={className}\n      color={color || Colors.CHARCOAL}\n      onClick={clickHandler}\n    >\n      <Text\n        case={Case.UPPERCASE}\n        color={color || Colors.CHARCOAL}\n        type={TextType.P3}\n        weight={FontWeight.BOLD}\n      >\n        {text}\n      </Text>\n      {hasIcon && <Icon name=\"right-arrow\" size=\"sm\" />}\n    </LinkText>\n  );\n}\n","import React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getDisconnectDocUrl,\n  getShowRepoLimitErrorModal,\n} from \"selectors/gitSyncSelectors\";\nimport {\n  setDisconnectingGitApplication,\n  setIsDisconnectGitModalOpen,\n  setShowRepoLimitErrorModal,\n} from \"actions/gitSyncActions\";\nimport styled from \"styled-components\";\nimport {\n  Callout,\n  Modal,\n  ModalBody,\n  ModalContent,\n  ModalHeader,\n  Text,\n} from \"design-system\";\nimport { Colors } from \"constants/Colors\";\nimport {\n  CONTACT_SALES_MESSAGE_ON_INTERCOM,\n  CONTACT_SUPPORT,\n  CONTACT_SUPPORT_TO_UPGRADE,\n  createMessage,\n  REVOKE_CAUSE_APPLICATION_BREAK,\n  REVOKE_EXISTING_REPOSITORIES_INFO,\n  LEARN_MORE,\n  REPOSITORY_LIMIT_REACHED,\n  REPOSITORY_LIMIT_REACHED_INFO,\n  REVOKE_ACCESS,\n  REVOKE_EXISTING_REPOSITORIES,\n} from \"@appsmith/constants/messages\";\nimport Link from \"./components/Link\";\nimport {\n  getCurrentApplication,\n  getWorkspaceIdForImport,\n} from \"@appsmith/selectors/applicationSelectors\";\nimport type { ApplicationPayload } from \"@appsmith/constants/ReduxActionConstants\";\nimport { ReduxActionTypes } from \"@appsmith/constants/ReduxActionConstants\";\nimport AnalyticsUtil from \"@appsmith/utils/AnalyticsUtil\";\nimport { Space } from \"./components/StyledComponents\";\nimport { getFetchedWorkspaces } from \"@appsmith/selectors/workspaceSelectors\";\nimport { getApplicationsOfWorkspace } from \"@appsmith/selectors/selectedWorkspaceSelectors\";\n\nconst ApplicationWrapper = styled.div`\n  margin-bottom: ${(props) => props.theme.spaces[7]}px;\n  display: flex;\n  justify-content: space-between;\n\n  & > div {\n    max-width: 60%;\n  }\n`;\n\nconst TextWrapper = styled.div`\n  display: block;\n  word-break: break-word;\n`;\n\nconst AppListContainer = styled.div`\n  height: calc(100% - 40px);\n  margin-top: 16px;\n  overflow-y: auto;\n  overflow-x: hidden;\n  padding-right: 5px;\n  position: relative;\n`;\n\nfunction RepoLimitExceededErrorModal() {\n  const isOpen = useSelector(getShowRepoLimitErrorModal);\n  const dispatch = useDispatch();\n  const application = useSelector(getCurrentApplication);\n  const applicationsOfWorkspace = useSelector(getApplicationsOfWorkspace);\n  const workspaces = useSelector(getFetchedWorkspaces);\n  const workspaceIdForImport = useSelector(getWorkspaceIdForImport);\n  const docURL = useSelector(getDisconnectDocUrl);\n  const [workspaceName, setWorkspaceName] = useState(\"\");\n  const applications = useMemo(() => {\n    if (workspaces) {\n      const workspace: any = workspaces.find((workspace: any) => {\n        if (!application && workspaceIdForImport) {\n          return workspace.id === workspaceIdForImport;\n        } else {\n          return workspace.id === application?.workspaceId;\n        }\n      });\n\n      setWorkspaceName(workspace?.name || \"\");\n      return (\n        applicationsOfWorkspace.filter((application: ApplicationPayload) => {\n          const data = application.gitApplicationMetadata;\n          return (\n            data &&\n            data.remoteUrl &&\n            data.branchName &&\n            data.repoName &&\n            data.isRepoPrivate\n          );\n        }) || []\n      );\n    } else {\n      return [];\n    }\n  }, [workspaces, workspaceIdForImport]);\n  const onClose = () => dispatch(setShowRepoLimitErrorModal(false));\n  const openDisconnectGitModal = useCallback(\n    (applicationId: string, name: string) => {\n      AnalyticsUtil.logEvent(\"GS_DISCONNECT_GIT_CLICK\", {\n        source: \"REPO_LIMIT_EXCEEDED_ERROR_MODAL\",\n      });\n      dispatch(setShowRepoLimitErrorModal(false));\n      dispatch(\n        setDisconnectingGitApplication({\n          id: applicationId,\n          name: name,\n        }),\n      );\n      dispatch(setIsDisconnectGitModalOpen(true));\n    },\n    [],\n  );\n\n  useEffect(() => {\n    if (isOpen) {\n      dispatch({\n        type: ReduxActionTypes.FETCH_ALL_APPLICATIONS_OF_WORKSPACE_INIT,\n      });\n    }\n  }, [isOpen]);\n\n  const openIntercom = () => {\n    if (window.Intercom) {\n      window.Intercom(\n        \"showNewMessage\",\n        createMessage(CONTACT_SALES_MESSAGE_ON_INTERCOM, workspaceName),\n      );\n    }\n  };\n\n  return (\n    <Modal\n      onOpenChange={(open) => {\n        if (!open) {\n          onClose();\n        }\n      }}\n      open={isOpen}\n    >\n      <ModalContent\n        className=\"t--git-repo-limited-modal\"\n        style={{ width: \"640px\" }}\n      >\n        <ModalHeader isCloseButtonVisible>\n          {createMessage(REPOSITORY_LIMIT_REACHED)}\n        </ModalHeader>\n        <ModalBody>\n          <Text kind=\"body-m\">\n            {createMessage(REPOSITORY_LIMIT_REACHED_INFO)}\n          </Text>\n          <Space size={2} />\n          <Callout\n            kind=\"warning\"\n            links={[\n              {\n                onClick: () => {\n                  AnalyticsUtil.logEvent(\"GS_CONTACT_SALES_CLICK\", {\n                    source: \"REPO_LIMIT_EXCEEDED_ERROR_MODAL\",\n                  });\n                  openIntercom();\n                },\n                children: createMessage(CONTACT_SUPPORT),\n              },\n            ]}\n          >\n            {createMessage(CONTACT_SUPPORT_TO_UPGRADE)}\n          </Callout>\n          <Space size={15} />\n          <Text kind=\"heading-s\">\n            {createMessage(REVOKE_EXISTING_REPOSITORIES)}\n          </Text>\n          <Space size={3} />\n          <Text kind=\"body-m\">\n            {createMessage(REVOKE_EXISTING_REPOSITORIES_INFO)}\n          </Text>\n          <Callout\n            kind=\"error\"\n            links={[\n              {\n                to: docURL,\n                children: createMessage(LEARN_MORE),\n              },\n            ]}\n          >\n            {createMessage(REVOKE_CAUSE_APPLICATION_BREAK)}\n          </Callout>\n          <AppListContainer>\n            {applications.map((application: ApplicationPayload) => {\n              const { gitApplicationMetadata } = application;\n              return (\n                <ApplicationWrapper\n                  className=\"t--connected-app-wrapper\"\n                  key={application.id}\n                >\n                  <div>\n                    <TextWrapper>\n                      <Text color={Colors.OXFORD_BLUE} kind=\"heading-m\">\n                        {application.name}\n                      </Text>\n                    </TextWrapper>\n                    <TextWrapper>\n                      <Text color={Colors.OXFORD_BLUE} kind=\"body-m\">\n                        {gitApplicationMetadata?.remoteUrl}\n                      </Text>\n                    </TextWrapper>\n                  </div>\n                  <Link\n                    className=\"t--disconnect-link\"\n                    color={Colors.CRIMSON}\n                    hasIcon\n                    link=\"\"\n                    onClick={() =>\n                      openDisconnectGitModal(application.id, application.name)\n                    }\n                    text={createMessage(REVOKE_ACCESS)}\n                  />\n                </ApplicationWrapper>\n              );\n            })}\n          </AppListContainer>\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  );\n}\n\nexport default RepoLimitExceededErrorModal;\n","import { useEffect, useState } from \"react\";\n\nexport default function useHover(ref: any) {\n  const [hover, setHover] = useState(false);\n  const onMouseEnter = () => setHover(true);\n  const onMouseLeave = () => setHover(false);\n\n  useEffect(() => {\n    const target = ref.current;\n    if (target) {\n      target.addEventListener(\"mouseenter\", onMouseEnter);\n      target.addEventListener(\"mouseleave\", onMouseLeave);\n      return () => {\n        target.removeEventListener(\"mouseenter\", onMouseEnter);\n        target.removeEventListener(\"mouseleave\", onMouseLeave);\n      };\n    }\n  });\n  return [hover];\n}\n","import { useEffect, useState } from \"react\";\n\nexport const useActiveHoverIndex = (\n  currentBranch: string | undefined,\n  filteredBranches: Array<string>,\n  isCreateNewBranchInputValid: boolean,\n) => {\n  const effectiveLength = isCreateNewBranchInputValid\n    ? filteredBranches.length\n    : filteredBranches.length - 1;\n\n  const [activeHoverIndex, setActiveHoverIndexInState] = useState(0);\n  const setActiveHoverIndex = (index: number) => {\n    if (index < 0) setActiveHoverIndexInState(effectiveLength);\n    else if (index > effectiveLength) setActiveHoverIndexInState(0);\n    else setActiveHoverIndexInState(index);\n  };\n\n  useEffect(() => {\n    const activeBranchIdx = filteredBranches.indexOf(currentBranch || \"\");\n    if (activeBranchIdx !== -1) {\n      setActiveHoverIndex(\n        isCreateNewBranchInputValid ? activeBranchIdx + 1 : activeBranchIdx,\n      );\n    } else {\n      setActiveHoverIndex(0);\n    }\n  }, [currentBranch, filteredBranches, isCreateNewBranchInputValid]);\n\n  return { activeHoverIndex, setActiveHoverIndex };\n};\n","import type { Branch } from \"entities/GitSync\";\nimport { useEffect, useState } from \"react\";\n\n/**\n * useFilteredBranches: returns list of branchName: string\n * If param searchText is provided, then filters list based on input text.\n * If not, then all of the list is returned.\n * It both cases, the default branch is pushed to the top\n * @param branches {Branch[]}\n * @param searchText {string}\n * @returns {string[]}\n */\nexport const useFilteredBranches = (\n  branches: Array<Branch>,\n  searchText: string,\n) => {\n  searchText = searchText.toLowerCase();\n  const [filteredBranches, setFilteredBranches] = useState<Array<string>>([]);\n  useEffect(() => {\n    const matched = branches.filter((b: Branch) =>\n      searchText ? b.branchName.toLowerCase().includes(searchText) : true,\n    );\n    const branchNames = [\n      ...matched.filter((b: Branch) => b.default),\n      ...matched.filter((b: Branch) => !b.default),\n    ].map((b: Branch) => b.branchName);\n\n    setFilteredBranches(branchNames);\n  }, [branches, searchText]);\n  return filteredBranches;\n};\n","import { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getSSHKeyDeployDocUrl,\n  getSshKeyPair,\n} from \"selectors/gitSyncSelectors\";\nimport { useCallback, useState } from \"react\";\nimport { generateSSHKeyPair, getSSHKeyPair } from \"actions/gitSyncActions\";\nimport noop from \"lodash/noop\";\n\nexport const useSSHKeyPair = () => {\n  // As SSHKeyPair fetching and generation is only done only for GitConnection part,\n  // All the state are maintained here instead of redux state.\n\n  const dispatch = useDispatch();\n\n  const SSHKeyPair = useSelector(getSshKeyPair);\n  const deployKeyDocUrl = useSelector(getSSHKeyDeployDocUrl);\n\n  const [generatingSSHKey, setIsGeneratingSSHKey] = useState(false);\n\n  const [fetchingSSHKeyPair, setIsFetchingSSHKeyPair] = useState(false);\n\n  const [failedGeneratingSSHKey, setFailedGeneratingSSHKey] = useState(false);\n\n  const fetchSSHKeyPair = useCallback(\n    ({ onErrorCallback = noop, onSuccessCallback = noop } = {}) => {\n      setIsFetchingSSHKeyPair(true);\n      dispatch(\n        getSSHKeyPair({\n          onErrorCallback: (e) => {\n            onErrorCallback(e);\n            setIsFetchingSSHKeyPair(false);\n          },\n          onSuccessCallback: (data) => {\n            onSuccessCallback(data);\n            setIsFetchingSSHKeyPair(false);\n          },\n        }),\n      );\n    },\n    [setIsFetchingSSHKeyPair],\n  );\n\n  const generateSSHKey = useCallback(\n    (\n      keyType = \"ECDSA\",\n      { onErrorCallback = noop, onSuccessCallback = noop } = {},\n    ) => {\n      // if (currentApplication?.id) {\n      setIsGeneratingSSHKey(true);\n      setFailedGeneratingSSHKey(false);\n\n      dispatch(\n        generateSSHKeyPair({\n          onErrorCallback: (e) => {\n            onErrorCallback(e);\n            setIsGeneratingSSHKey(false);\n            setFailedGeneratingSSHKey(true);\n          },\n          onSuccessCallback: (data) => {\n            onSuccessCallback(data);\n            setIsGeneratingSSHKey(false);\n          },\n          payload: { keyType },\n        }),\n      );\n    },\n    [setIsGeneratingSSHKey],\n  );\n\n  return {\n    generatingSSHKey,\n    failedGeneratingSSHKey,\n    generateSSHKey,\n    SSHKeyPair,\n    deployKeyDocUrl,\n    fetchSSHKeyPair,\n    fetchingSSHKeyPair,\n  };\n};\n","import { useDispatch } from \"react-redux\";\nimport { useCallback, useState } from \"react\";\nimport type { ConnectToGitPayload } from \"api/GitSyncAPI\";\nimport { connectToGitInit } from \"actions/gitSyncActions\";\nimport noop from \"lodash/noop\";\n\nexport const useGitConnect = () => {\n  const dispatch = useDispatch();\n\n  const [errResponse, setErrResponse] = useState();\n  const [isConnectingToGit, setIsConnectingToGit] = useState(false);\n\n  const connectToGit = useCallback(\n    (\n      payload: ConnectToGitPayload,\n      { onErrorCallback = noop, onSuccessCallback = noop } = {},\n    ) => {\n      setIsConnectingToGit(true);\n      setErrResponse(undefined);\n      // Here after the ssh key pair generation, we fetch the application data again and on success of it\n      dispatch(\n        connectToGitInit({\n          payload,\n          onSuccessCallback: (data) => {\n            onSuccessCallback(data);\n            setIsConnectingToGit(false);\n          },\n          onErrorCallback: (err, response) => {\n            onErrorCallback(err, response);\n            const errorResponse = response || err?.response?.data;\n            setErrResponse(errorResponse);\n            setIsConnectingToGit(false);\n          },\n        }),\n      );\n    },\n    [setIsConnectingToGit],\n  );\n\n  return {\n    isConnectingToGit,\n    connectToGit,\n    connectErrorResponse: errResponse,\n  };\n};\n","import type { ApplicationPayload } from \"@appsmith/constants/ReduxActionConstants\";\nimport {\n  CHANGES_SINCE_LAST_DEPLOYMENT,\n  createMessage,\n} from \"@appsmith/constants/messages\";\n\nexport const getIsStartingWithRemoteBranches = (\n  local: string,\n  remote: string,\n) => {\n  const remotePrefix = \"origin/\";\n\n  return (\n    local &&\n    !local.startsWith(remotePrefix) &&\n    remote &&\n    remote.startsWith(remotePrefix)\n  );\n};\n\nconst GIT_REMOTE_URL_PATTERN =\n  /^((git|ssh)|([\\w\\-\\.]+@[\\w\\-\\.]+))(:(\\/\\/)?)([\\w\\.@\\:\\/\\-~\\(\\)%]+)[^\\/]$/im;\n\nconst gitRemoteUrlRegExp = new RegExp(GIT_REMOTE_URL_PATTERN);\n\n/**\n * isValidGitRemoteUrl: returns true if a url follows valid SSH/git url scheme, see GIT_REMOTE_URL_PATTERN\n * @param url {string} remote url input\n * @returns {boolean} true if valid remote url, false otherwise\n */\nexport const isValidGitRemoteUrl = (url: string) =>\n  gitRemoteUrlRegExp.test(url);\n\n/**\n * isRemoteBranch: returns true if a branch name starts with origin/\n * @param name {string} branch name\n * @returns {boolean}\n */\nexport const isRemoteBranch = (name: string): boolean =>\n  name.startsWith(\"origin/\");\n\n/**\n * isLocalBranch: returns true if a branch name doesn't start with origin/\n * @param name {string} branch name\n * @returns {boolean}\n */\nexport const isLocalBranch = (name: string): boolean => !isRemoteBranch(name);\n\nexport const getIsActiveItem = (\n  isCreateNewBranchInputValid: boolean,\n  activeHoverIndex: number,\n  index: number,\n) =>\n  (isCreateNewBranchInputValid ? activeHoverIndex - 1 : activeHoverIndex) ===\n  index;\n\n/**\n * removeSpecialChars: removes non-word ([^A-Za-z0-9_]) characters except / and - from input string\n * @param input {string} string containing non-word characters e.g. name of the branch\n * @returns {string}\n */\nexport const removeSpecialChars = (input: string): string => {\n  const separatorRegex = /(?![/-])\\W+/;\n  return input.split(separatorRegex).join(\"_\");\n};\n\n/**\n * changeInfoSinceLastCommit: Returns reason for change string, and whether the changes are from migration or user or both.\n * @param currentApplication {ApplicationPayload | undefined}\n * @returns {{changeReasonText: string, isAutoUpdate:boolean, isManualUpdate: boolean}}\n */\nexport function changeInfoSinceLastCommit(\n  currentApplication: ApplicationPayload | undefined,\n) {\n  const isAutoUpdate = !!currentApplication?.isAutoUpdate;\n  const isManualUpdate = !!currentApplication?.isManualUpdate;\n  const changeReasonText = createMessage(CHANGES_SINCE_LAST_DEPLOYMENT);\n  return { isAutoUpdate, isManualUpdate, changeReasonText };\n}\n\nexport const GIT_DOC_URLs = {\n  base: \"https://docs.appsmith.com/advanced-concepts/version-control-with-git\",\n  import:\n    \"https://docs.appsmith.com/advanced-concepts/version-control-with-git/import-from-repository\",\n  connect:\n    \"https://docs.appsmith.com/advanced-concepts/version-control-with-git/connecting-to-git-repository\",\n};\n","import { getIsFetchingApplications } from \"@appsmith/selectors/selectedWorkspaceSelectors\";\nimport type { EventName } from \"@appsmith/utils/analyticsUtilTypes\";\nimport type { Template as TemplateInterface } from \"api/TemplatesApi\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport {\n  getTemplatesSelector,\n  isFetchingTemplatesSelector,\n  isImportingTemplateToAppSelector,\n} from \"selectors/templatesSelectors\";\nimport styled from \"styled-components\";\nimport AnalyticsUtil from \"@appsmith/utils/AnalyticsUtil\";\nimport { TemplateContent } from \"./TemplateContent\";\nimport TemplateFilters from \"./TemplateFilters\";\n\nconst FiltersWrapper = styled.div`\n  width: ${(props) => props.theme.homePage.sidebar}px;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  flex-shrink: 0;\n  .filter-wrapper {\n    height: 100%;\n  }\n  padding-left: 12px;\n  padding-right: 12px;\n`;\n\nconst TemplateContentWrapper = styled.div`\n  flex-grow: 1;\n  overflow: auto;\n  height: 75vh;\n  padding-bottom: 24px;\n`;\n\ninterface TemplatesLayoutWithFilterProps {\n  initialFilters?: Record<string, string[]>;\n  isForkingEnabled?: boolean;\n  isModalLayout?: boolean;\n  setSelectedTemplate: (id: string) => void;\n  onForkTemplateClick: (template: TemplateInterface) => void;\n  analyticsEventNameForTemplateCardClick: EventName;\n}\n\nconst TemplatesLayoutWithFilters = ({\n  analyticsEventNameForTemplateCardClick,\n  initialFilters,\n  isForkingEnabled = false,\n  isModalLayout,\n  onForkTemplateClick,\n  setSelectedTemplate,\n}: TemplatesLayoutWithFilterProps) => {\n  const allTemplates = useSelector(getTemplatesSelector);\n  const isImportingTemplate = useSelector(isImportingTemplateToAppSelector);\n  const isFetchingApplications = useSelector(getIsFetchingApplications);\n  const isFetchingTemplates = useSelector(isFetchingTemplatesSelector);\n  const isLoading = isFetchingApplications || isFetchingTemplates;\n\n  const getTemplateById = (id: string) => {\n    return allTemplates.find((template) => template.id === id);\n  };\n\n  const onTemplateClick = (id: string) => {\n    const template = getTemplateById(id);\n    if (template) {\n      AnalyticsUtil.logEvent(analyticsEventNameForTemplateCardClick, {\n        id,\n        title: template.title,\n      });\n      // When template is clicked to view the template details\n      if (!isImportingTemplate && setSelectedTemplate) setSelectedTemplate(id);\n    }\n  };\n\n  return (\n    <>\n      <TemplateContentWrapper>\n        <TemplateContent\n          filterWithAllowPageImport={isModalLayout}\n          isForkingEnabled={isForkingEnabled}\n          isModalLayout={!!isModalLayout}\n          onForkTemplateClick={onForkTemplateClick}\n          onTemplateClick={onTemplateClick}\n        />\n      </TemplateContentWrapper>\n\n      {!isLoading && (\n        <FiltersWrapper>\n          <TemplateFilters initialFilters={initialFilters} />\n        </FiltersWrapper>\n      )}\n    </>\n  );\n};\n\nexport default TemplatesLayoutWithFilters;\n","import type { EventName } from \"@appsmith/utils/analyticsUtilTypes\";\nimport type { Template as TemplateInterface } from \"api/TemplatesApi\";\nimport { CANVAS_STARTER_TEMPLATES_SEE_MORE_BUILDING_BLOCKS_PRE_FILTER } from \"constants/TemplatesConstants\";\nimport { Flex } from \"design-system\";\nimport React, { useMemo } from \"react\";\nimport styled from \"styled-components\";\nimport TemplatesLayoutWithFilters from \"../TemplatesLayoutWithFilters\";\n\ninterface Props {\n  analyticsEventNameForTemplateCardClick: EventName;\n  isForkingEnabled?: boolean;\n  isStartWithTemplateFlow?: boolean;\n  onTemplateClick: (id: string) => void;\n  onForkTemplateClick?: (templateId: string) => void;\n}\n\nconst TemplatesListLayoutSwitcher = ({\n  analyticsEventNameForTemplateCardClick,\n  isForkingEnabled = false,\n  isStartWithTemplateFlow,\n  onForkTemplateClick,\n  onTemplateClick,\n}: Props) => {\n  const handleForking = (template: TemplateInterface) => {\n    onForkTemplateClick\n      ? onForkTemplateClick(template.id)\n      : onTemplateClick(template.id);\n  };\n  const initFilters = useMemo(\n    () =>\n      isStartWithTemplateFlow\n        ? CANVAS_STARTER_TEMPLATES_SEE_MORE_BUILDING_BLOCKS_PRE_FILTER\n        : undefined,\n    [isStartWithTemplateFlow],\n  );\n  return (\n    <Flex flexDirection=\"column\">\n      <TemplateWrapper>\n        <TemplatesLayoutWithFilters\n          analyticsEventNameForTemplateCardClick={\n            analyticsEventNameForTemplateCardClick\n          }\n          initialFilters={initFilters}\n          isForkingEnabled={isForkingEnabled}\n          isModalLayout\n          onForkTemplateClick={handleForking}\n          setSelectedTemplate={onTemplateClick}\n        />\n      </TemplateWrapper>\n    </Flex>\n  );\n};\n\nexport default TemplatesListLayoutSwitcher;\n\nconst TemplateWrapper = styled.div`\n  display: flex;\n  flex-grow: 1;\n  overflow: hidden;\n  height: 100%;\n`;\n","import React from \"react\";\nimport type { SpinnerProps } from \"design-system\";\nimport { Spinner } from \"design-system\";\n\ntype Props = SpinnerProps;\n\nfunction SpinnerLoader(props: Props) {\n  return <Spinner size={props.size} />;\n}\n\nexport default SpinnerLoader;\n","import type { CSSProperties } from \"styled-components\";\nimport styled from \"styled-components\";\nimport React from \"react\";\nimport { importSvg } from \"design-system-old\";\n\nconst CheckmarkSvg = importSvg(async () => import(\"assets/svg/checkmark.svg\"));\n\nconst CheckmarkWrapper = styled.div<{ $height: string; $width: string }>`\n  height: ${(props) => props.$height};\n  width: ${(props) => props.$width};\n  margin-bottom: ${(props) => props.theme.spaces[15]}px;\n  .checkmark .checkmark__circle .checkmark__check {\n    animation-delay: 2s;\n  }\n\n  .checkmark .checkmark__circle {\n    stroke-dasharray: 166;\n    stroke-dashoffset: 166;\n    stroke-width: 2;\n    stroke-miterlimit: 10;\n    stroke: var(--ads-v2-color-fg-success);\n    fill: none;\n    animation: stroke 0.6s cubic-bezier(0.65, 0, 0.45, 1) forwards;\n  }\n\n  .checkmark {\n    width: ${(props) => props.$height};\n    height: ${(props) => props.$width};\n    border-radius: 50%;\n    display: block;\n    stroke-width: 2;\n    stroke: var(--ads-v2-color-fg-success);\n    stroke-miterlimit: 10;\n    margin: 10% auto;\n    box-shadow: inset 0px 0px 0px #7ac142;\n    animation:\n      fill 0.4s ease-in-out 0.4s forwards,\n      scale 0.3s ease-in-out 0.9s both;\n  }\n\n  .checkmark__check {\n    transform-origin: 50% 50%;\n    stroke-dasharray: 48;\n    stroke-dashoffset: 48;\n    animation: stroke 0.3s cubic-bezier(0.65, 0, 0.45, 1) 0.8s forwards;\n  }\n\n  @keyframes stroke {\n    100% {\n      stroke-dashoffset: 0;\n    }\n  }\n  @keyframes scale {\n    0%,\n    100% {\n      transform: none;\n    }\n    50% {\n      transform: scale3d(1.2, 1.2, 1);\n    }\n  }\n  @keyframes fill {\n    100% {\n      box-shadow: inset 0px 0px 0px 30px #fff;\n    }\n  }\n`;\n\nfunction SuccessTick(props: {\n  height: string;\n  width: string;\n  style?: CSSProperties;\n}) {\n  return (\n    <CheckmarkWrapper\n      $height={props.height}\n      $width={props.width}\n      style={props.style}\n    >\n      <CheckmarkSvg />\n    </CheckmarkWrapper>\n  );\n}\n\nexport default SuccessTick;\n"],"names":["Wrapper","styled","Flex","_templateObject","_taggedTemplateLiteral","_jsxs","children","_jsx","alt","createMessage","DATASOURCE_SECURELY_TITLE","src","getAssetUrl","concat","ASSETS_CDN_URL","flexDirection","ml","Text","color","kind","MockDataSourceWrapper","Description","_templateObject2","props","workspaceId","useSelector","getCurrentWorkspaceId","className","mockDatasources","map","datasource","idx","MockDatasourceCard","name","packageName","CardWrapper","_templateObject3","DatasourceImage","_templateObject4","DatasourceName","_templateObject5","DatasourceCardHeader","_templateObject6","DatasourceNameWrapper","_templateObject7","dispatch","useDispatch","pluginImages","getPluginImages","currentPlugin","state","entities","plugins","list","find","eachPlugin","onClick","AnalyticsUtil","datasourceName","pluginName","from","DatasourceCreateEntryPoints","mockDatasourceName","pluginPackageName","queryParams","getQueryParams","addMockDatasourceToWorkspace","id","isGeneratePageMode","description","StyledContainer","ApiCardsContainer","ApiCard","CardContentWrapper","API_ACTION","mapDispatchToProps","createDatasourceFromForm","createTempDatasourceFromForm","createNewApiActionBasedOnEditorType","connect","history","isCreating","isOnboardingScreen","pageId","showSaasAPIs","editorType","useEditorType","location","pathname","_useParentEntityInfo","useParentEntityInfo","editorId","parentEntityId","parentEntityType","generateCRUDSupportedPlugin","getGenerateCRUDEnabledPluginMap","_useState","useState","_useState2","_slicedToArray","authApiPlugin","setAuthAPiPlugin","useEffect","plugin","p","handleCreateAuthApiDatasource","useCallback","pluginId","handleOnClick","actionType","params","source","getIsGeneratePageInitiator","skipValidPluginCheck","PluginPackageName","importSource","CURL","curlImportURL","curlImportPageURL","_objectSpread","push","type","showUnsupportedPluginDialog","API_PLUGINS","filter","PluginType","_Fragment","PlusLogo","Spinner","size","iconLocation","CurlLogo","DatasourceHomePage","DatasourceCardsContainer","DatasourceCard","DatasourceContentWrapper","DatasourceHomeScreen","_React$Component","_this","_classCallCheck","_len","arguments","length","args","Array","_key","goToCreateDatasource","_this$props","currentApplication","appName","createTempDatasource","URL","window","paramKeysToRemove","queryString","queryParamKeys","Object","keys","key","includes","encodeURIComponent","removeQueryParams","replace","_this$props2","_inherits","_createClass","value","_this2","_this$props3","this","showMostPopularPlugins","CREATE_NEW_DATASOURCE_REST_API","React","datasources","mostPopularPlugins","getMostPopularPlugins","filteredMostPopularPlugins","isAirgappedInstance","getDBPlugins","getCurrentApplication","isSaving","loading","initializeForm","data","initialize","DATASOURCE_DB_FORM","createDatasource","apiType","QueryHomePage","theme","fontWeights","fontSizes","QueryHomeScreen","DataSourceHome","aiPlugins","sort","a","b","localeCompare","NewIntegrationsContainer","thinScrollbar","StyledDivider","Divider","UseMockDatasources","_ref","active","useMockRef","useRef","isMounted","current","scrollIntoView","behavior","scrollMode","block","boundary","document","getElementById","ref","SAMPLE_DATASOURCES","MockDataSources","CreateNewAPI","_ref2","newAPIRef","NewApiScreen","CreateNewDatasource","_ref3","newDatasourceRef","isAirgapped","CREATE_NEW_DATASOURCE_MOST_POPULAR_HEADER","CREATE_NEW_DATASOURCE_DATABASE_HEADER","NewQueryScreen","CreateNewSaasIntegration","_ref4","newSaasAPIRef","CreateNewAIIntegration","_ref5","AIDataSources","CreateNewDatasourceTab","unsupportedPluginContinueAction","callback","setState","unsupportedPluginDialogVisible","_this$props$canCreate","canCreateDatasource","dataSources","showDebugger","mockDataSection","AddDatasourceSecurely","Debugger","_getCurrentAppWorkspa","onboardingAppId","getCurrentApplicationIdForCreateNewApp","onboardingApplication","getApplicationByIdFromWorkspaces","defaultPageId","getCurrentPageId","showDebuggerFlag","userWorkspacePermissions","getCurrentAppWorkspace","userPermissions","featureFlags","selectFeatureFlags","isFeatureEnabled","isGACEnabled","getHasCreateDatasourcePermission","getDatasources","getMockDatasources","ui","apiPane","applicationId","getCurrentApplicationId","CloudyIcon","importSvg","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","abrupt","stop","Container","spaces","DeployPreview","lastDeployedAt","getApplicationLastDeployedAt","lastDeployedAtMsg","LATEST_DP_SUBTITLE","howMuchTimeBeforeText","lessThanAMinute","showSuccess","SuccessTick","height","width","Link","endIcon","path","viewerURL","open","LATEST_DP_TITLE","LoaderWrapper","loaderMsg","SpinnerLoader","style","marginLeft","TitleText","StyledCollapsible","Collapsible","StyledCollapsibleHeader","CollapsibleHeader","ExpandableChangeKind","allChangeDefs","_defineProperty","PAGES","status","modified","pagesModified","added","pagesAdded","removed","pagesRemoved","singular","plural","iconName","DATASOURCES","datasourcesModified","datasourcesAdded","datasourcesRemoved","QUERIES","queriesModified","queriesAdded","queriesRemoved","JSOBJECTS","jsObjectsModified","jsObjectsAdded","jsObjectsRemoved","JSLIBS","jsLibsModified","jsLibsAdded","jsLibsRemoved","ChangeSubList","action","_ref$entities","sublist","entity","entityNameArr","split","entityName","Icon","ExpandableChange","_allChangeDefs$kind","filteredModified","filteredAdded","filteredRemoved","isModified","isAdded","isRemoved","hasOnlyOneChange","reduce","v","totalChanges","count","getMessage","getTitleMessage","CollapsibleContent","StaticChangeKind","allStaticChangeDefs","REMOTE_AHEAD","_status$aheadCount","_status$aheadCount2","_status$aheadCount3","condition","aheadCount","message","NOT_PUSHED_YET","REMOTE_BEHIND","_status$behindCount","_status$behindCount2","_status$behindCount3","behindCount","TRY_TO_PULL","SETTINGS","THEME","PACKAGES","_status$modifiedPacka","_status$modifiedPacka2","_status$modifiedPacka3","modifiedPackages","MODULES","_status$modifiedModul","_status$modifiedModul2","_status$modifiedModul3","modifiedModules","StaticChange","_allStaticChangeDefs$","SinglePageChange","page","changeFlags","useMemo","isPageModified","isPageAdded","isPageRemoved","isJsObjectModified","some","jsObject","startsWith","isJsObjectAdded","isJsObjectRemoved","isQueryModified","query","isQueryAdded","isQueryRemoved","titleText","text","showCollapsible","titleComp","arrowPosition","PageChanges","staticPageChangeSet","Set","_toConsumableArray","staticPageChanges","expandablePageChangeSet","expandablePageChanges","allPagesChangeSet","CalloutContainer","SkeletonLoader","GitChangesList","getGitStatus","getIsFetchingGitStatus","migrationMessage","Callout","Row","StyledButton","Button","ConflictInfoContainer","ConflictInfo","browserSupportedRemoteUrl","learnMoreLink","links","LEARN_MORE","to","GIT_CONFLICTING_INFO","Space","OPEN_REPO","DiscardChangesWarning","onCloseDiscardChangesWarning","isClosable","target","onClose","DISCARD_CHANGES_WARNING","DISCARD_MESSAGE","PushFailedWarning","closeHandler","error","TextType","errorType","DiscardFailedWarning","calloutOptions","Section","SubmitWrapper","onKeyDown","e","isMacOrIOS","metaKey","ctrlKey","onSubmit","isCommittingInProgress","getIsCommittingInProgress","isDiscardInProgress","getIsDiscardInProgress","gitMetaData","getCurrentAppGitMetaData","gitStatus","isFetchingGitStatus","isPullingProgress","getIsPullingProgress","isCommitAndPushSuccessful","getIsCommitSuccessful","hasChangesToCommit","isClean","commitAndPushError","getGitCommitAndPushError","discardError","getGitDiscardError","pullFailed","getPullFailed","commitInputRef","upstreamErrorDocumentUrl","getUpstreamErrorDocUrl","remoteUrl","commitMessage","setCommitMessage","_useState3","_useState4","shouldDiscard","setShouldDiscard","_useState5","_useState6","isDiscarding","setIsDiscarding","_useState7","_useState8","showDiscardWarning","setShowDiscardWarning","currentBranch","branchName","_changeInfoSinceLastC","changeInfoSinceLastCommit","changeReasonText","isAutoUpdate","isManualUpdate","handleCommit","doPush","commitToRepoInit","trim","commitButtonText","COMMIT_AND_PUSH","clearCommitSuccessfulState","commitButtonDisabled","commitButtonLoading","commitRequired","isConflicting","commitInputDisabled","pullRequired","code","GIT_ERROR_CODES","showCommitButton","isCommitting","showDiscardChangesButton","commitMessageDisplay","focus","gitConflictDocumentUrl","getConflictFoundDocUrlDeploy","scrollWrapperRef","setTimeout","_scrollWrapperRef$cur","_scrollWrapperRef$cur2","top","scrollHeight","scrollTo","showPullButton","ModalBody","minHeight","Input","autoFocus","isDisabled","label","minWidth","COMMIT_TO","Tooltip","content","isEllipsisActive","overflow","textOverflow","whiteSpace","onChange","placeholder","renderAs","StatusLoader","FETCH_GIT_STATUS","READ_DOCUMENTATION","GIT_UPSTREAM_CHANGES","clearCommitErrorState","StatusbarWrapper","Statusbar","completed","COMMITTING_AND_PUSHING_CHANGES","period","DISCARDING_AND_PULLING_CHANGES","clearDiscardErrorState","ModalFooter","isLoading","gitPullInit","PULL_CHANGES","discardChanges","ARE_YOU_SURE","DISCARD_CHANGES","GIT_NO_UPDATED_TOOLTIP","placement","MERGE_STATUS_STATE","FETCHING","MERGEABLE","NOT_MERGEABLE","NONE","ERROR","_ref$message","MergeSuccessIndicator","useTheme","display","alignItems","marginBottom","MERGED_SUCCESSFULLY","Merge","_mergeStatus$conflict","gitBranches","getGitBranches","isFetchingBranches","getFetchingBranches","isFetchingMergeStatus","getIsFetchingMergeStatus","mergeStatus","getMergeStatus","mergeError","getMergeError","isMergeAble","protectedBranches","getProtectedBranchesSelector","mergeStatusMessage","CANNOT_MERGE_DUE_TO_UNCOMMITTED_CHANGES","isMerging","getIsMergeInProgress","showMergeSuccessIndicator","setShowMergeSuccessIndicator","selectedBranchOption","setSelectedBranchOption","branchList","branchOptions","index","branchObj","default","unshift","nextBranchObj","getIsStartingWithRemoteBranches","currentBranchDropdownOption","handleMergeSuccess","mergeHandler","mergeBranchInit","payload","sourceBranch","destinationBranch","onSuccessCallback","fetchBranchesInit","resetMergeStatus","fetchMergeStatusInit","mergeBtnDisabled","FETCH_MERGE_STATUS","conflictingFiles","showMergeButton","getConflictFoundDocUrlMerge","paddingBottom","SELECT_BRANCH_TO_MERGE","Select","dropdownClassName","Classes","dropdownMatchSelectWidth","getPopupContainer","triggerNode","parentNode","isValid","onSelect","showSearch","branch","_branch$value","isProtected","Option","disabled","BRANCH_PROTECTION_PROTECTED","horizontal","options","MergeStatus","IS_MERGING","MERGE_CHANGES","StyledGitErrorPopup","bottomBarHeight","Colors","Header","closePopup","title","CONFLICTS_FOUND_WHILE_PULLING_CHANGES","justifyContent","isIconButton","startIcon","isGitErrorPopupVisible","getIsGitErrorPopupVisible","hidePopup","setIsGitErrorPopupVisible","isVisible","Overlay","hasBackdrop","isOpen","transitionDuration","usePortal","StepButton","StepNumber","StepText","StepLine","activeKey","_ref$onActiveKeyChang","onActiveKeyChange","noop","_ref$steps","steps","activeIndex","findIndex","s","step","Fragment","role","opacity","WellContainer","WellTitleContainer","WellTitle","WellText","FieldContainer","FieldControl","FieldQuestion","DemoImage","_templateObject8","ErrorCallout","_templateObject9","GIT_CONNECT_STEPS","GIT_DEMO_GIF","create_repo","github","gitlab","bitbucket","copy_remoteurl","add_deploykey","WellInnerContainer","CheckboxTextContainer","_ref$isImport","isImport","_ref$onChange","_ref$value","appId","workspace","isMobile","useIsMobileDevice","hasCreateNewApplicationPermission","hasCreateNewAppPermission","CHOOSE_A_GIT_PROVIDER_STEP","CHOOSE_GIT_PROVIDER_QUESTION","RadioGroup","gitProvider","orientation","Radio","IS_EMPTY_REPO_QUESTION","gitEmptyRepoExists","HOW_TO_CREATE_EMPTY_REPO","NEED_EMPTY_REPO_MESSAGE","ReduxActionTypes","setWorkspaceIdForImport","setIsGitSyncModalOpen","tab","GitSyncModalTab","IMPORT_APP_IF_NOT_EMPTY","Checkbox","isSelected","gitExistingRepoExists","I_HAVE_EXISTING_REPO","_errorData$responseMe","_errorData$responseMe2","errorData","isTouched","setIsTouched","isInvalid","isValidGitRemoteUrl","responseMeta","ERROR_REPO_NOT_EMPTY_TITLE","ERROR_REPO_NOT_EMPTY_MESSAGE","GENERATE_SSH_KEY_STEP","href","READ_DOCS","COPY_SSH_URL_MESSAGE","errorMessage","PASTE_SSH_URL_INFO","isRequired","REMOTE_URL_INPUT_LABEL","HOW_TO_COPY_REMOTE_URL","TooltipWrapper","IconContainer","CopyButton","_ref$delay","delay","_ref$isDisabled","_ref$onCopy","onCopy","_ref$testIdSuffix","testIdSuffix","tooltipMessage","timerRef","showCopied","setShowCopied","copy","DeployedKeyContainer","KeyType","KeyText","StyledSelect","DummyKey","_errorData$responseMe3","_errorData$responseMe4","_errorData$responseMe5","_errorData$responseMe6","_errorData$responseMe7","_errorData$responseMe8","_errorData$responseMe9","_errorData$responseMe10","_ref$connectLoading","connectLoading","isModalOpen","getIsGitSyncModalOpen","fetched","setFetched","sshKeyType","setSshKeyType","_useSSHKeyPair","useSSHKeyPair","deployKeyDocUrl","fetchingSSHKeyPair","fetchSSHKeyPair","generateSSHKey","generatingSSHKey","SSHKeyPair","onErrorCallback","toString","toLocaleLowerCase","toLowerCase","toast","repositorySettingsUrl","_remoteUrl$split","_remoteUrl$split$","_remoteUrl$split$$spl","ownerRepo","getRepositorySettingsUrl","ERROR_SSH_KEY_MISCONF_TITLE","ERROR_SSH_KEY_MISCONF_MESSAGE","ADD_DEPLOY_KEY_STEP_TITLE","rel","marginRight","COPY_SSH_KEY","HOW_TO_ADD_DEPLOY_KEY","isAddedDeployKey","CONSENT_ADDED_DEPLOY_KEY","StyledModalBody","StyledModalFooter","ADD_DEPLOY_KEY_STEP","possibleSteps","nextStepText","CONFIGURE_GIT","CONNECT_GIT_TEXT","setErrorData","isImportingViaGit","getIsImportingApplicationViaGit","undefined","formData","setFormData","activeStep","setActiveStep","currentIndex","_useGitConnect","useGitConnect","connectToGit","isConnectingToGit","stepProps","partialFormData","Steps","ChooseGitProvider","GenerateSSH","AddDeployKey","GitSyncStatusbar","GIT_IMPORT_WAITING","GIT_CONNECT_WAITING","repoUrl","connectFlow","gitProfile","authorName","authorEmail","useGlobalProfile","importAppFromGit","response","_error$response2","errorResponse","_response$responseMet","_response$responseMet2","_error$response","PREVIOUS_STEP","LinkText","ConnectionSuccessTitle","GIT_CONNECT_SUCCESS_TITLE","ConnectionSuccessBody","gitMetadata","isBold","GIT_CONNECT_SUCCESS_REPO_NAME","repoName","GIT_CONNECT_SUCCESS_DEFAULT_BRANCH","GIT_CONNECT_SUCCESS_DEFAULT_BRANCH_TOOLTIP","trigger","defaultBranchName","GIT_CONNECT_SUCCESS_PROTECTION_MSG","DOCS_BRANCH_PROTECTION_URL","GIT_CONNECT_SUCCESS_PROTECTION_DOC_CTA","ConnectionSuccessActions","setGitSettingsModalOpenAction","GitSettingsTab","GIT_CONNECT_SUCCESS_ACTION_SETTINGS","GIT_CONNECT_SUCCESS_ACTION_CONTINUE","NumberedList","StyledCallout","_errorData$error","fetchGitStatusInit","COPIED_SSH_KEY","NO_COPIED_SSH_KEY","ERROR_SSH_RECONNECT_MESSAGE","ERROR_SSH_RECONNECT_OPTION1","ERROR_SSH_RECONNECT_OPTION2","StyledModalContent","ModalContent","isProtectedMode","protectedModeSelector","isGitConnected","getIsGitConnected","isDeploying","getIsDeploying","menuOptions","DEPLOY","MERGE","possibleMenuOptions","option","activeTabKey","getActiveGitSyncModalTab","modalTitle","IMPORT_APP","setActiveTabKey","tabKey","handleClose","Modal","onOpenChange","ModalHeader","ReconnectSSHError","Menu","ConnectionSuccess","GitConnectionV2","Deploy","GitErrorPopup","GitSyncModalV2","StyledTab","Tab","Tabs","onValueChange","TabsList","_tab$disabled","_ref$className","_ref$hasIcon","hasIcon","link","case","Case","weight","FontWeight","ApplicationWrapper","TextWrapper","AppListContainer","getShowRepoLimitErrorModal","application","applicationsOfWorkspace","getApplicationsOfWorkspace","workspaces","getFetchedWorkspaces","workspaceIdForImport","getWorkspaceIdForImport","docURL","getDisconnectDocUrl","workspaceName","setWorkspaceName","applications","gitApplicationMetadata","isRepoPrivate","openDisconnectGitModal","setShowRepoLimitErrorModal","setDisconnectingGitApplication","setIsDisconnectGitModalOpen","isCloseButtonVisible","REPOSITORY_LIMIT_REACHED","REPOSITORY_LIMIT_REACHED_INFO","Intercom","CONTACT_SALES_MESSAGE_ON_INTERCOM","CONTACT_SUPPORT","CONTACT_SUPPORT_TO_UPGRADE","REVOKE_EXISTING_REPOSITORIES","REVOKE_EXISTING_REPOSITORIES_INFO","REVOKE_CAUSE_APPLICATION_BREAK","REVOKE_ACCESS","useHover","hover","setHover","onMouseEnter","onMouseLeave","addEventListener","removeEventListener","useActiveHoverIndex","filteredBranches","isCreateNewBranchInputValid","effectiveLength","activeHoverIndex","setActiveHoverIndexInState","setActiveHoverIndex","activeBranchIdx","indexOf","useFilteredBranches","branches","searchText","setFilteredBranches","matched","branchNames","getSshKeyPair","getSSHKeyDeployDocUrl","setIsGeneratingSSHKey","setIsFetchingSSHKeyPair","failedGeneratingSSHKey","setFailedGeneratingSSHKey","_ref$onErrorCallback","_ref$onSuccessCallbac","getSSHKeyPair","keyType","_ref2$onErrorCallback","_ref2$onSuccessCallba","generateSSHKeyPair","errResponse","setErrResponse","setIsConnectingToGit","connectToGitInit","err","_err$response","connectErrorResponse","local","remote","remotePrefix","gitRemoteUrlRegExp","RegExp","url","test","isRemoteBranch","isLocalBranch","getIsActiveItem","removeSpecialChars","input","join","CHANGES_SINCE_LAST_DEPLOYMENT","FiltersWrapper","homePage","sidebar","TemplateContentWrapper","analyticsEventNameForTemplateCardClick","initialFilters","_ref$isForkingEnabled","isForkingEnabled","isModalLayout","onForkTemplateClick","setSelectedTemplate","allTemplates","getTemplatesSelector","isImportingTemplate","isImportingTemplateToAppSelector","isFetchingApplications","getIsFetchingApplications","isFetchingTemplates","isFetchingTemplatesSelector","TemplateContent","filterWithAllowPageImport","onTemplateClick","template","getTemplateById","TemplateFilters","isStartWithTemplateFlow","initFilters","CANVAS_STARTER_TEMPLATES_SEE_MORE_BUILDING_BLOCKS_PRE_FILTER","TemplateWrapper","TemplatesLayoutWithFilters","CheckmarkSvg","CheckmarkWrapper","$height","$width"],"sourceRoot":""}