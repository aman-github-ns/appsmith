{"version":3,"file":"static/js/7568.1b4bd7e4.chunk.js","mappings":"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","sources":["ce/actions/environmentAction.ts","components/designSystems/appsmith/BaseButton.tsx","ce/components/DSDataFilter/index.tsx","ee/components/DSDataFilter/index.tsx","ce/components/SwitchEnvironment/index.tsx","ee/components/SwitchEnvironment/index.tsx","pages/Editor/DataSourceEditor/NewActionButton.tsx","ce/hooks/datasourceEditorHooks.tsx","pages/Editor/DataSourceEditor/Collapsible.tsx","pages/Editor/DataSourceEditor/DBForm.tsx","pages/Editor/DataSourceEditor/FormTitle.tsx","components/utils/formComponents.tsx","pages/Editor/DataSourceEditor/DSFormHeader.tsx","ce/components/EnvConfigSection/index.tsx","pages/Editor/DataSourceEditor/DatasourceSection.tsx","pages/Editor/DataSourceEditor/JSONtoForm.tsx","pages/Editor/DataSourceEditor/SaveOrDiscardDatasourceModal.tsx","pages/Editor/DataSourceEditor/hooks.ts","transformers/RestAPIDatasourceFormTransformer.ts","components/designSystems/appsmith/TextInputComponent.tsx","components/designSystems/appsmith/CopyToClipBoard.tsx","pages/Editor/DataSourceEditor/RestAPIDatasourceForm.tsx","pages/Editor/DataSourceEditor/index.tsx","pages/Editor/DatasourceInfo/DatasourceStructureHeader.tsx","pages/Editor/DatasourceInfo/DatasourceViewModeSchema.tsx","pages/Editor/DatasourceInfo/GoogleSheetSchema.tsx","pages/Editor/DatasourceInfo/DatasorceTabs.tsx","pages/Editor/GeneratePage/components/DataSourceOption.tsx","pages/Editor/GeneratePage/components/GeneratePageForm/styles.ts","pages/Editor/GeneratePage/components/GeneratePageForm/GoogleSheetForm.tsx","pages/Editor/GeneratePage/components/GeneratePageForm/GeneratePageForm.tsx","pages/Editor/GeneratePage/components/GeneratePageForm/hooks.ts","pages/common/datasourceAuth/AuthMessage.tsx","pages/Editor/SaaSEditor/errorUtils.ts","pages/Editor/SaaSEditor/GoogleSheetFilePicker.tsx","pages/Editor/SaaSEditor/DatasourceForm.tsx","pages/Editor/gitSync/components/DatasourceListItem.tsx","ce/pages/Editor/gitSync/useReconnectModalData.ts","ee/pages/Editor/gitSync/useReconnectModalData.ts","pages/Editor/gitSync/ReconnectDatasourceModal.tsx","pages/Editor/gitSync/components/StyledComponents.tsx","pages/Templates/BuildingBlock/StyledComponents.tsx","pages/Templates/BuildingBlock/index.tsx","pages/Templates/DatasourceChip.tsx","pages/Templates/ForkTemplate.tsx","pages/Templates/Template/index.tsx","pages/Templates/Template/FixedHeightTemplate.tsx","pages/Templates/Template/SimilarTemplates.tsx","pages/Templates/WidgetInfo.tsx","pages/Templates/Template/TemplateDescription.tsx","pages/Templates/Template/RequestTemplate.tsx","pages/Templates/TemplateContent/StyledComponents.tsx","pages/Templates/TemplateContent/index.tsx","pages/Templates/TemplateFilters/StyledComponents.tsx","pages/Templates/TemplateFilters/index.tsx","pages/Templates/TemplateViewHeader.tsx","pages/Templates/TemplateView.tsx","pages/Templates/TemplatesModal/LoadingScreen.tsx"],"sourcesContent":["// Redux action to show the environment info modal before deploy\nexport const showEnvironmentDeployInfoModal = () => ({});\n\n// Redux action to update the current editing environment ID\nexport const setCurrentEditingEnvironmentID = (currentEditingId: string) => ({\n  type: \"\",\n  payload: { currentEditingId },\n});\n\n// Redux action to fetch environments\nexport const fetchingEnvironmentConfigs = ({\n  editorId,\n  fetchDatasourceMeta = false,\n  workspaceId,\n}: {\n  editorId: string;\n  fetchDatasourceMeta: boolean;\n  workspaceId: string;\n}) => ({\n  type: \"\",\n  payload: { workspaceId, editorId, fetchDatasourceMeta },\n});\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport tinycolor from \"tinycolor2\";\n\nimport type { IButtonProps } from \"@blueprintjs/core\";\nimport { Button, Alignment } from \"@blueprintjs/core\";\nimport type { IconName } from \"@blueprintjs/icons\";\n\nimport type { Theme } from \"constants/DefaultTheme\";\n\nimport _ from \"lodash\";\nimport type {\n  ButtonBorderRadius,\n  ButtonStyleType,\n  ButtonVariant,\n} from \"components/constants\";\nimport {\n  ButtonStyleTypes,\n  ButtonBoxShadowTypes,\n  ButtonBorderRadiusTypes,\n  ButtonVariantTypes,\n} from \"components/constants\";\nimport type { ThemeProp } from \"WidgetProvider/constants\";\n\nconst getCustomTextColor = (\n  theme: Theme,\n  backgroundColor?: string,\n  prevButtonStyle?: ButtonStyleType,\n) => {\n  if (!backgroundColor)\n    return theme.colors.button[\n      (prevButtonStyle || ButtonStyleTypes.PRIMARY).toLowerCase()\n    ].solid.textColor;\n  const isDark = tinycolor(backgroundColor).isDark();\n  if (isDark) {\n    return theme.colors.button.custom.solid.light.textColor;\n  }\n  return theme.colors.button.custom.solid.dark.textColor;\n};\n\nconst getCustomHoverColor = (\n  theme: Theme,\n  prevButtonStyle?: ButtonStyleType,\n  buttonVariant?: ButtonVariant,\n  backgroundColor?: string,\n) => {\n  if (!backgroundColor) {\n    return theme.colors.button[\n      (prevButtonStyle || ButtonStyleTypes.PRIMARY).toLowerCase()\n    ][(buttonVariant || ButtonVariantTypes.PRIMARY).toLowerCase()].hoverColor;\n  }\n\n  switch (buttonVariant) {\n    case ButtonVariantTypes.SECONDARY:\n      return backgroundColor\n        ? tinycolor(backgroundColor).lighten(40).toString()\n        : theme.colors.button.primary.secondary.hoverColor;\n\n    case ButtonVariantTypes.TERTIARY:\n      return backgroundColor\n        ? tinycolor(backgroundColor).lighten(40).toString()\n        : theme.colors.button.primary.tertiary.hoverColor;\n\n    default:\n      return backgroundColor\n        ? tinycolor(backgroundColor).darken(10).toString()\n        : theme.colors.button.primary.primary.hoverColor;\n  }\n};\n\nconst getCustomBackgroundColor = (\n  theme: Theme,\n  prevButtonStyle?: ButtonStyleType,\n  buttonVariant?: ButtonVariant,\n  backgroundColor?: string,\n) => {\n  return buttonVariant === ButtonVariantTypes.PRIMARY\n    ? backgroundColor\n      ? backgroundColor\n      : theme.colors.button[\n          (prevButtonStyle || ButtonStyleTypes.PRIMARY).toLowerCase()\n        ].primary.bgColor\n    : \"none\";\n};\n\nconst getCustomBorderColor = (\n  theme: Theme,\n  prevButtonStyle?: ButtonStyleType,\n  buttonVariant?: ButtonVariant,\n  backgroundColor?: string,\n) => {\n  return buttonVariant === ButtonVariantTypes.SECONDARY\n    ? backgroundColor\n      ? backgroundColor\n      : theme.colors.button[\n          (prevButtonStyle || ButtonStyleTypes.PRIMARY).toLowerCase()\n        ].secondary.borderColor\n    : \"none\";\n};\n\nconst StyledButton = styled((props) => (\n  <Button\n    {..._.omit(props, [\n      \"prevButtonStyle\",\n      \"borderRadius\",\n      \"boxShadow\",\n      \"boxShadowColor\",\n      \"buttonColor\",\n      \"buttonStyle\",\n      \"buttonVariant\",\n    ])}\n  />\n))<ThemeProp & ButtonStyleProps>`\n  height: 100%;\n  background-image: none !important;\n  font-weight: ${(props) => props.theme.fontWeights[2]};\n  outline: none;\n  padding: 0px 10px;\n\n  ${({ buttonColor, buttonStyle, buttonVariant, prevButtonStyle, theme }) => `\n    &:enabled {\n      background: ${\n        buttonStyle === ButtonStyleTypes.WARNING\n          ? buttonVariant === ButtonVariantTypes.PRIMARY\n            ? theme.colors.button.warning.primary.bgColor\n            : \"none\"\n          : buttonStyle === ButtonStyleTypes.DANGER\n            ? buttonVariant === ButtonVariantTypes.PRIMARY\n              ? theme.colors.button.danger.primary.bgColor\n              : \"none\"\n            : buttonStyle === ButtonStyleTypes.INFO\n              ? buttonVariant === ButtonVariantTypes.PRIMARY\n                ? theme.colors.button.info.primary.bgColor\n                : \"none\"\n              : buttonStyle === ButtonStyleTypes.SECONDARY\n                ? buttonVariant === ButtonVariantTypes.PRIMARY\n                  ? theme.colors.button.secondary.primary.bgColor\n                  : \"none\"\n                : buttonStyle === ButtonStyleTypes.CUSTOM\n                  ? getCustomBackgroundColor(\n                      theme,\n                      prevButtonStyle,\n                      buttonVariant,\n                      buttonColor,\n                    )\n                  : buttonVariant === ButtonVariantTypes.PRIMARY\n                    ? theme.colors.button.primary.primary.bgColor\n                    : \"none\"\n      } !important;\n    }\n\n    &:hover:enabled, &:active:enabled. &:focus:enabled {\n      background: ${\n        buttonStyle === ButtonStyleTypes.WARNING\n          ? buttonVariant === ButtonVariantTypes.SECONDARY\n            ? theme.colors.button.warning.secondary.hoverColor\n            : buttonVariant === ButtonVariantTypes.TERTIARY\n              ? theme.colors.button.warning.tertiary.hoverColor\n              : theme.colors.button.warning.primary.hoverColor\n          : buttonStyle === ButtonStyleTypes.DANGER\n            ? buttonVariant === ButtonVariantTypes.PRIMARY\n              ? theme.colors.button.danger.primary.hoverColor\n              : theme.colors.button.danger.secondary.hoverColor\n            : buttonStyle === ButtonStyleTypes.INFO\n              ? buttonVariant === ButtonVariantTypes.PRIMARY\n                ? theme.colors.button.info.primary.hoverColor\n                : theme.colors.button.info.secondary.hoverColor\n              : buttonStyle === ButtonStyleTypes.SECONDARY\n                ? buttonVariant === ButtonVariantTypes.SECONDARY\n                  ? theme.colors.button.secondary.secondary.hoverColor\n                  : buttonVariant === ButtonVariantTypes.TERTIARY\n                    ? theme.colors.button.secondary.tertiary.hoverColor\n                    : theme.colors.button.secondary.primary.hoverColor\n                : buttonStyle === ButtonStyleTypes.CUSTOM\n                  ? getCustomHoverColor(\n                      theme,\n                      prevButtonStyle,\n                      buttonVariant,\n                      buttonColor,\n                    )\n                  : buttonVariant === ButtonVariantTypes.SECONDARY\n                    ? theme.colors.button.primary.secondary.hoverColor\n                    : buttonVariant === ButtonVariantTypes.TERTIARY\n                      ? theme.colors.button.primary.tertiary.hoverColor\n                      : theme.colors.button.primary.primary.hoverColor\n      } !important;\n      border-color: var(--appsmith-input-focus-border-color) !important;\n    }\n\n    &:disabled {\n      background-color: ${theme.colors.button.disabled.bgColor} !important;\n      color: ${theme.colors.button.disabled.textColor} !important;\n    }\n\n    border: ${\n      buttonVariant === ButtonVariantTypes.SECONDARY\n        ? buttonStyle === ButtonStyleTypes.WARNING\n          ? `1px solid ${theme.colors.button.warning.secondary.borderColor}`\n          : buttonStyle === ButtonStyleTypes.DANGER\n            ? `1px solid ${theme.colors.button.danger.secondary.borderColor}`\n            : buttonStyle === ButtonStyleTypes.INFO\n              ? `1px solid ${theme.colors.button.info.secondary.borderColor}`\n              : buttonStyle === ButtonStyleTypes.SECONDARY\n                ? `1px solid ${theme.colors.button.secondary.secondary.borderColor}`\n                : buttonStyle === ButtonStyleTypes.CUSTOM\n                  ? `1px solid ${getCustomBorderColor(\n                      theme,\n                      prevButtonStyle,\n                      buttonVariant,\n                      buttonColor,\n                    )}`\n                  : `1px solid ${theme.colors.button.primary.secondary.borderColor}`\n        : \"none\"\n    } !important;\n\n    & > span {\n      max-height: 100%;\n      max-width: 99%;\n      text-overflow: ellipsis;\n      overflow: hidden;\n      display: -webkit-box;\n      -webkit-line-clamp: 1;\n      -webkit-box-orient: vertical;\n\n      color: ${\n        buttonVariant === ButtonVariantTypes.PRIMARY\n          ? buttonStyle === ButtonStyleTypes.CUSTOM\n            ? getCustomTextColor(theme, buttonColor, prevButtonStyle)\n            : `${theme.colors.button.primary.primary.textColor}`\n          : buttonStyle === ButtonStyleTypes.WARNING\n            ? `${theme.colors.button.warning.secondary.textColor}`\n            : buttonStyle === ButtonStyleTypes.DANGER\n              ? `${theme.colors.button.danger.secondary.textColor}`\n              : buttonStyle === ButtonStyleTypes.INFO\n                ? `${theme.colors.button.info.secondary.textColor}`\n                : buttonStyle === ButtonStyleTypes.SECONDARY\n                  ? `${theme.colors.button.secondary.secondary.textColor}`\n                  : buttonStyle === ButtonStyleTypes.CUSTOM\n                    ? getCustomBackgroundColor(\n                        theme,\n                        prevButtonStyle,\n                        ButtonVariantTypes.PRIMARY,\n                        buttonColor,\n                      )\n                    : `${theme.colors.button.primary.secondary.textColor}`\n      } !important;\n    }\n  `}\n\n  border-radius: ${({ borderRadius }) =>\n    borderRadius === ButtonBorderRadiusTypes.ROUNDED ? \"5px\" : 0};\n\n  box-shadow: ${({ boxShadow, boxShadowColor, theme }) =>\n    boxShadow === ButtonBoxShadowTypes.VARIANT1\n      ? `0px 0px 4px 3px ${\n          boxShadowColor || theme.colors.button.boxShadow.default.variant1\n        }`\n      : boxShadow === ButtonBoxShadowTypes.VARIANT2\n        ? `3px 3px 4px ${\n            boxShadowColor || theme.colors.button.boxShadow.default.variant2\n          }`\n        : boxShadow === ButtonBoxShadowTypes.VARIANT3\n          ? `0px 1px 3px ${\n              boxShadowColor || theme.colors.button.boxShadow.default.variant3\n            }`\n          : boxShadow === ButtonBoxShadowTypes.VARIANT4\n            ? `2px 2px 0px ${\n                boxShadowColor || theme.colors.button.boxShadow.default.variant4\n              }`\n            : boxShadow === ButtonBoxShadowTypes.VARIANT5\n              ? `-2px -2px 0px ${\n                  boxShadowColor ||\n                  theme.colors.button.boxShadow.default.variant5\n                }`\n              : \"none\"} !important;\n`;\n\ninterface ButtonStyleProps {\n  buttonColor?: string;\n  buttonStyle?: ButtonStyleType;\n  prevButtonStyle?: ButtonStyleType;\n  buttonVariant?: ButtonVariant;\n  boxShadow?: string;\n  borderRadius?: ButtonBorderRadius;\n  iconName?: IconName;\n  iconAlign?: Alignment;\n}\n\n// To be used in any other part of the app\nexport function BaseButton(props: IButtonProps & ButtonStyleProps) {\n  const {\n    borderRadius,\n    boxShadow,\n    buttonColor,\n    buttonStyle,\n    buttonVariant,\n    className,\n    disabled,\n    icon,\n    iconAlign,\n    iconName,\n    loading,\n    onClick,\n    prevButtonStyle,\n    rightIcon,\n    text,\n  } = props;\n\n  if (iconAlign === Alignment.RIGHT) {\n    return (\n      <StyledButton\n        alignText={iconName ? Alignment.LEFT : Alignment.CENTER}\n        borderRadius={borderRadius}\n        boxShadow={boxShadow}\n        buttonColor={buttonColor}\n        buttonStyle={buttonStyle}\n        buttonVariant={buttonVariant}\n        className={className}\n        disabled={disabled}\n        fill\n        icon={icon}\n        loading={loading}\n        onClick={onClick}\n        prevButtonStyle={prevButtonStyle}\n        rightIcon={iconName || rightIcon}\n        text={text}\n      />\n    );\n  }\n\n  return (\n    <StyledButton\n      alignText={iconName ? Alignment.RIGHT : Alignment.CENTER}\n      borderRadius={borderRadius}\n      boxShadow={boxShadow}\n      buttonColor={buttonColor}\n      buttonStyle={buttonStyle}\n      buttonVariant={buttonVariant}\n      className={className}\n      disabled={disabled}\n      fill\n      icon={iconName || icon}\n      loading={loading}\n      onClick={onClick}\n      prevButtonStyle={prevButtonStyle}\n      rightIcon={rightIcon}\n      text={text}\n    />\n  );\n}\n\nBaseButton.defaultProps = {\n  buttonStyle: \"SECONDARY\",\n  buttonVariant: ButtonVariantTypes.PRIMARY,\n  disabled: false,\n  text: \"Button Text\",\n  minimal: true,\n};\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Link, Tag, Text, Tooltip } from \"design-system\";\nimport { BUSINESS_TAG, createMessage } from \"@appsmith/constants/messages\";\nimport { capitalizeFirstLetter } from \"utils/helpers\";\nimport {\n  getRampLink,\n  showProductRamps,\n} from \"@appsmith/selectors/rampSelectors\";\nimport {\n  RAMP_NAME,\n  RampFeature,\n  RampSection,\n} from \"utils/ProductRamps/RampsControlList\";\nimport { useSelector } from \"react-redux\";\nimport type { EnvironmentType } from \"constants/EnvironmentContants\";\nimport { environmentList } from \"constants/EnvironmentContants\";\nimport { DisabledTooltipContent } from \"@appsmith/components/SwitchEnvironment\";\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  border-right: 1px solid var(--ads-v2-color-border);\n  width: 160px;\n  height: 100%;\n`;\n\nexport const FilterComponentContainer = styled.div<{\n  isSelected: boolean;\n  disabled: boolean;\n}>`\n  display: flex;\n  flex-direction: row;\n  padding: 12px 8px;\n  align-items: center;\n  justify-content: flex-start;\n  border-radius: var(--ads-v2-border-radius);\n  width: 159px;\n\n  ${(props) =>\n    props.isSelected && `background: var(--ads-color-background-secondary);`}\n\n  ${(props) => (props.disabled ? ` cursor: not-allowed;` : `cursor: pointer;`)}\n`;\n\nexport const FilterComponentLabel = styled(Text)<{ disabled: boolean }>`\n  opacity: ${(props) => (props.disabled ? 0.6 : 1)};\n  text-overflow: ellipsis;\n  overflow: hidden;\n`;\n\nexport const TooltipLink = styled(Link)`\n  display: inline;\n`;\n\nexport interface DSDataFilterProps {\n  updateFilter: (\n    id: string,\n    name: string,\n    userPermissions: string[],\n  ) => boolean;\n  pluginType: string;\n  pluginName: string;\n  isInsideReconnectModal: boolean;\n  viewMode: boolean;\n  filterId: string; // id of the selected environment, used to keep the parent and child in sync\n}\n\nexport function DSDataFilter({\n  isInsideReconnectModal,\n  viewMode,\n}: DSDataFilterProps) {\n  const [showFilterPane, setShowFilterPane] = useState(false);\n  const showRampSelector = showProductRamps(RAMP_NAME.MULTIPLE_ENV, true);\n  const canShowRamp = useSelector(showRampSelector);\n\n  const rampLinkSelector = getRampLink({\n    section: RampSection.DSEditor,\n    feature: RampFeature.MultipleEnv,\n  });\n  const rampLink = useSelector(rampLinkSelector);\n\n  // update the selected environment if the list of environments changes\n  useEffect(() => {\n    const isRenderAllowed =\n      environmentList.length > 0 &&\n      canShowRamp &&\n      !viewMode &&\n      !isInsideReconnectModal;\n\n    if (showFilterPane !== isRenderAllowed) setShowFilterPane(isRenderAllowed);\n    // If there are no environments, do nothing\n    if (!environmentList.length) return;\n  }, [environmentList.length, viewMode, isInsideReconnectModal]);\n\n  if (!showFilterPane) return null;\n\n  const renderOption = (env: EnvironmentType, isDisabled: boolean) => {\n    const disabledState = isDisabled;\n    return (\n      <FilterComponentContainer\n        disabled={disabledState}\n        isSelected={env.selected}\n        key={`${env.id}-parent`}\n      >\n        <FilterComponentLabel\n          aria-disabled={disabledState}\n          aria-selected={env.selected}\n          data-testid={`t--ds-data-filter-${env.name}`}\n          disabled={disabledState}\n          key={env.id}\n          kind={\"body-m\"}\n        >\n          {capitalizeFirstLetter(env.name)}\n        </FilterComponentLabel>\n        {isDisabled && (\n          <Tag isClosable={false} size=\"md\" style={{ marginLeft: \"auto\" }}>\n            {createMessage(BUSINESS_TAG)}\n          </Tag>\n        )}\n      </FilterComponentContainer>\n    );\n  };\n\n  return (\n    <Container>\n      {environmentList.map((env: EnvironmentType) => {\n        const isDisabled = !env.selected;\n        return isDisabled ? (\n          <Tooltip content={DisabledTooltipContent(rampLink)} placement=\"right\">\n            {renderOption(env, isDisabled)}\n          </Tooltip>\n        ) : (\n          renderOption(env, isDisabled)\n        );\n      })}\n    </Container>\n  );\n}\nexport default DSDataFilter;\n","export * from \"ce/components/DSDataFilter\";\nimport { default as CE_DSDataFilter } from \"ce/components/DSDataFilter\";\nexport default CE_DSDataFilter;\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { Icon, Link, Option, Select, Text, Tooltip } from \"design-system\";\nimport { capitalizeFirstLetter } from \"utils/helpers\";\nimport {\n  BUSINESS_EDITION_TEXT,\n  SWITCH_ENV_DISABLED_TOOLTIP_TEXT,\n  createMessage,\n} from \"@appsmith/constants/messages\";\nimport {\n  getRampLink,\n  showProductRamps,\n} from \"@appsmith/selectors/rampSelectors\";\nimport { isDatasourceInViewMode } from \"selectors/ui\";\nimport { matchDatasourcePath, matchSAASGsheetsPath } from \"constants/routes\";\nimport {\n  RAMP_NAME,\n  RampFeature,\n  RampSection,\n} from \"utils/ProductRamps/RampsControlList\";\nimport {\n  environmentList,\n  type EnvironmentType,\n} from \"constants/EnvironmentContants\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  border-right: 1px solid var(--ads-v2-color-border);\n  padding: 0px 16px;\n\n  .rc-select-selector {\n    min-width: 160px;\n    width: 160px;\n    border: none;\n  }\n`;\n\nexport const StyledText = styled(Text)<{\n  disabled: boolean;\n}>`\n  color: var(--ads-v2-color-fg-emphasis);\n  opacity: ${(props) => (props.disabled ? 0.6 : 1)};\n  display: flex;\n  flex-direction: row;\n`;\n\nexport const StyledIcon = styled(Icon)`\n  margin-right: 8px;\n`;\n\nexport interface Props {\n  viewMode?: boolean;\n  editorId: string;\n  onChangeEnv?: () => void;\n  startSwitchEnvMessage: (...strArgs: any[]) => string;\n}\n\nexport const TooltipLink = styled(Link)`\n  display: inline;\n`;\n\nexport const DisabledTooltipContent = (rampLink: string) => {\n  return (\n    <Text\n      color=\"var(--ads-v2-color-white)\"\n      data-testid=\"t--switch-env-tooltip\"\n      kind=\"action-m\"\n    >\n      {createMessage(SWITCH_ENV_DISABLED_TOOLTIP_TEXT)}\n      <TooltipLink kind=\"primary\" target=\"_blank\" to={rampLink}>\n        {createMessage(BUSINESS_EDITION_TEXT)}\n      </TooltipLink>\n    </Text>\n  );\n};\n\nexport default function SwitchEnvironment({}: Props) {\n  const [disableSwitchEnvironment, setDisableSwitchEnvironment] =\n    useState(false);\n  // Fetching feature flags from the store and checking if the feature is enabled\n  const showRampSelector = showProductRamps(RAMP_NAME.MULTIPLE_ENV, true);\n  const canShowRamp = useSelector(showRampSelector);\n  const rampLinkSelector = getRampLink({\n    section: RampSection.BottomBarEnvSwitcher,\n    feature: RampFeature.MultipleEnv,\n  });\n  const rampLink = useSelector(rampLinkSelector);\n\n  //listen to url change and disable switch environment if datasource page is open\n  useEffect(() => {\n    setDisableSwitchEnvironment(\n      !!matchDatasourcePath(window.location.pathname) ||\n        !!matchSAASGsheetsPath(window.location.pathname),\n    );\n  }, [window.location.pathname]);\n  //URL for datasource edit and review page is same\n  //this parameter helps us to differentiate between the two.\n  const isDatasourceViewMode = useSelector(isDatasourceInViewMode);\n\n  if (!canShowRamp) return null;\n\n  const renderEnvOption = (env: EnvironmentType) => {\n    return (\n      <div className=\"flex w-100\">\n        <StyledText disabled={!env.selected}>\n          {!env.selected && <StyledIcon name=\"lock-2-line\" />}\n          {capitalizeFirstLetter(env.name)}\n        </StyledText>\n      </div>\n    );\n  };\n\n  return (\n    <Wrapper\n      aria-disabled={disableSwitchEnvironment && !isDatasourceViewMode}\n      data-testid=\"t--switch-env\"\n    >\n      <Select\n        className=\"select_environemnt\"\n        dropdownClassName=\"select_environemnt_dropdown\"\n        getPopupContainer={(triggerNode) => triggerNode.parentNode.parentNode}\n        isDisabled={\n          (disableSwitchEnvironment && !isDatasourceViewMode) ||\n          environmentList.length === 1\n        }\n        listHeight={400}\n        size=\"md\"\n        value={capitalizeFirstLetter(environmentList[0].name)}\n      >\n        {environmentList.map((env: EnvironmentType, index: number) => (\n          <Option\n            aria-checked={env.selected}\n            data-testid={`t--switch-env-dropdown-option-${env.name}`}\n            disabled={!env.selected}\n            key={`${env.id}-${index}`}\n            label={env.name}\n            selected={env.selected}\n            value={env}\n          >\n            {env.selected ? (\n              <div className=\"flex flex-col gap-1\">{renderEnvOption(env)}</div>\n            ) : (\n              <Tooltip\n                content={DisabledTooltipContent(rampLink)}\n                placement=\"right\"\n              >\n                {renderEnvOption(env)}\n              </Tooltip>\n            )}\n          </Option>\n        ))}\n      </Select>\n    </Wrapper>\n  );\n}\n","export * from \"ce/components/SwitchEnvironment\";\nimport { default as CE_SwitchEnvironment } from \"ce/components/SwitchEnvironment\";\nexport default CE_SwitchEnvironment;\n","import React, { useCallback, useState } from \"react\";\nimport { PluginType } from \"entities/Action\";\nimport {\n  Button,\n  Menu,\n  MenuContent,\n  MenuItem,\n  MenuTrigger,\n  toast,\n  Text,\n  MenuSeparator,\n  Tag,\n} from \"design-system\";\nimport {\n  createMessage,\n  ERROR_ADD_API_INVALID_URL,\n  NEW_AI_BUTTON_TEXT,\n  NEW_API_BUTTON_TEXT,\n  NEW_QUERY_BUTTON_TEXT,\n} from \"@appsmith/constants/messages\";\nimport { createNewQueryAction } from \"actions/apiPaneActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getCurrentPageId, getPageList } from \"selectors/editorSelectors\";\nimport type { Datasource } from \"entities/Datasource\";\nimport type { EventLocation } from \"@appsmith/utils/analyticsUtilTypes\";\nimport { getCurrentEnvironmentId } from \"@appsmith/selectors/environmentSelectors\";\nimport { getSelectedTableName } from \"@appsmith/selectors/entitiesSelector\";\n\ninterface NewActionButtonProps {\n  datasource?: Datasource;\n  disabled?: boolean;\n  packageName?: string;\n  isLoading?: boolean;\n  eventFrom?: string; // this is to track from where the new action is being generated\n  pluginType?: string;\n  style?: any;\n  isNewQuerySecondaryButton?: boolean;\n}\n\nexport const apiPluginHasUrl = (\n  currentEnvironment: string,\n  pluginType?: string,\n  datasource?: Datasource,\n) => {\n  if (pluginType !== PluginType.API) {\n    return false;\n  }\n  return (\n    !datasource ||\n    !datasource?.datasourceStorages[currentEnvironment]?.datasourceConfiguration\n      ?.url\n  );\n};\n\nfunction NewActionButton(props: NewActionButtonProps) {\n  const {\n    datasource,\n    disabled,\n    isLoading,\n    isNewQuerySecondaryButton,\n    pluginType,\n  } = props;\n  const [isSelected, setIsSelected] = useState(false);\n  const [isPageSelectionOpen, setIsPageSelectionOpen] = useState(false);\n\n  const dispatch = useDispatch();\n  const currentPageId = useSelector(getCurrentPageId);\n  const pages = useSelector(getPageList);\n  const currentEnvironment = useSelector(getCurrentEnvironmentId);\n  const pageMenuItems = [\n    pages.find((p) => p.pageId === currentPageId),\n    ...pages.filter((p) => p.pageId !== currentPageId),\n  ];\n  const queryDefaultTableName = useSelector(getSelectedTableName);\n\n  const createQueryAction = useCallback(\n    (pageId: string) => {\n      if (apiPluginHasUrl(currentEnvironment, pluginType, datasource)) {\n        toast.show(ERROR_ADD_API_INVALID_URL(), {\n          kind: \"error\",\n        });\n        return;\n      }\n\n      if (currentPageId) {\n        setIsSelected(true);\n        if (datasource) {\n          dispatch(\n            createNewQueryAction(\n              pageId,\n              props.eventFrom as EventLocation,\n              datasource?.id,\n              queryDefaultTableName,\n            ),\n          );\n        }\n      }\n    },\n    [dispatch, currentPageId, datasource, pluginType, queryDefaultTableName],\n  );\n\n  const handleOnInteraction = useCallback(\n    (open: boolean) => {\n      if (disabled || isLoading) return;\n      if (!open) {\n        setIsPageSelectionOpen(false);\n        return;\n      }\n      if (pages.length === 1) {\n        createQueryAction(currentPageId);\n        return;\n      }\n      setIsPageSelectionOpen(true);\n    },\n    [pages, createQueryAction, disabled, isLoading],\n  );\n\n  const getCreateButtonText = () => {\n    switch (pluginType) {\n      case PluginType.DB:\n      case PluginType.SAAS:\n        return createMessage(NEW_QUERY_BUTTON_TEXT);\n      case PluginType.AI:\n        return createMessage(NEW_AI_BUTTON_TEXT);\n      default:\n        return createMessage(NEW_API_BUTTON_TEXT);\n    }\n  };\n\n  return (\n    <Menu onOpenChange={handleOnInteraction} open={isPageSelectionOpen}>\n      <MenuTrigger disabled={disabled}>\n        <Button\n          className=\"t--create-query\"\n          id={\"create-query\"}\n          isDisabled={!!disabled}\n          isLoading={isSelected || isLoading}\n          kind={isNewQuerySecondaryButton ? \"secondary\" : \"primary\"}\n          onClick={() => handleOnInteraction(true)}\n          size=\"md\"\n          startIcon=\"plus\"\n        >\n          {getCreateButtonText()}\n        </Button>\n      </MenuTrigger>\n      <MenuContent\n        align={\"end\"}\n        data-testId={\"t--page-selection\"}\n        height={pages.length <= 4 ? \"fit-content\" : \"186px\"}\n        side={\"bottom\"}\n      >\n        <Text className=\"pl-2\" kind=\"heading-xs\">{`Create ${\n          pluginType === PluginType.DB || pluginType === PluginType.SAAS\n            ? \"query\"\n            : \"API\"\n        } in`}</Text>\n        {pageMenuItems.map((page, i) => {\n          if (page) {\n            return [\n              <MenuItem\n                key={page.pageId}\n                onSelect={() => createQueryAction(page.pageId)}\n                startIcon={page.isDefault ? \"home-3-line\" : \"page-line\"}\n                title={page.pageName}\n              >\n                <div className={\"flex justify-between gap-2 flex-1\"}>\n                  <Text\n                    className={\n                      \"text-ellipsis whitespace-nowrap overflow-hidden\"\n                    }\n                    kind={\"action-m\"}\n                  >\n                    {page.pageName}\n                  </Text>\n                  {i === 0 ? <Tag isClosable={false}>Current</Tag> : null}\n                </div>\n              </MenuItem>,\n              i === 0 ? <MenuSeparator /> : null,\n            ];\n          }\n          return null;\n        })}\n      </MenuContent>\n    </Menu>\n  );\n}\n\nexport default NewActionButton;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport NewActionButton from \"pages/Editor/DataSourceEditor/NewActionButton\";\nimport { EditorNames } from \"./\";\nimport type { Datasource } from \"entities/Datasource\";\nimport type { ApiDatasourceForm } from \"entities/Datasource/RestAPIForm\";\nimport { Button } from \"design-system\";\nimport {\n  GENERATE_NEW_PAGE_BUTTON_TEXT,\n  createMessage,\n} from \"@appsmith/constants/messages\";\nimport AnalyticsUtil from \"@appsmith/utils/AnalyticsUtil\";\nimport history from \"utils/history\";\nimport { generateTemplateFormURL } from \"@appsmith/RouteBuilder\";\nimport {\n  getCurrentApplication,\n  getCurrentApplicationId,\n  getCurrentPageId,\n  getPagePermissions,\n} from \"selectors/editorSelectors\";\nimport { useShowPageGenerationOnHeader } from \"pages/Editor/DataSourceEditor/hooks\";\nimport type { AppState } from \"@appsmith/reducers\";\nimport {\n  getHasCreatePagePermission,\n  hasCreateDSActionPermissionInApp,\n} from \"@appsmith/utils/BusinessFeatures/permissionPageHelpers\";\nimport { FEATURE_FLAG } from \"@appsmith/entities/FeatureFlag\";\nimport { useFeatureFlag } from \"utils/hooks/useFeatureFlag\";\nimport { ActionParentEntityType } from \"@appsmith/entities/Engine/actionHelpers\";\nimport { isEnabledForPreviewData } from \"utils/editorContextUtils\";\nimport { getPlugin } from \"@appsmith/selectors/entitiesSelector\";\n\nexport interface HeaderActionProps {\n  datasource: Datasource | ApiDatasourceForm | undefined;\n  isPluginAuthorized: boolean;\n  pluginType: string;\n  showReconnectButton?: boolean;\n}\n\nexport const useHeaderActions = (\n  editorType: string,\n  {\n    datasource,\n    isPluginAuthorized,\n    pluginType,\n    showReconnectButton = false,\n  }: HeaderActionProps,\n) => {\n  const pageId = useSelector(getCurrentPageId);\n  const isFeatureEnabled = useFeatureFlag(FEATURE_FLAG.license_gac_enabled);\n  const userAppPermissions = useSelector(\n    (state: AppState) => getCurrentApplication(state)?.userPermissions ?? [],\n  );\n  const pagePermissions = useSelector((state: AppState) =>\n    getPagePermissions(state),\n  );\n  const showGenerateButton = useShowPageGenerationOnHeader(\n    datasource as Datasource,\n  );\n\n  const plugin = useSelector((state: AppState) =>\n    getPlugin(state, datasource?.pluginId || \"\"),\n  );\n\n  const isPluginAllowedToPreviewData =\n    !!plugin && isEnabledForPreviewData(datasource as Datasource, plugin);\n\n  if (editorType === EditorNames.APPLICATION) {\n    const canCreateDatasourceActions = hasCreateDSActionPermissionInApp({\n      isEnabled: isFeatureEnabled,\n      dsPermissions: datasource?.userPermissions ?? [],\n      pagePermissions,\n    });\n    const canCreatePages = getHasCreatePagePermission(\n      isFeatureEnabled,\n      userAppPermissions,\n    );\n    const canGeneratePage = canCreateDatasourceActions && canCreatePages;\n\n    const routeToGeneratePage = () => {\n      if (!showGenerateButton) {\n        // disable button when it doesn't support page generation\n        return;\n      }\n      AnalyticsUtil.logEvent(\"DATASOURCE_CARD_GEN_CRUD_PAGE_ACTION\");\n      history.push(\n        generateTemplateFormURL({\n          pageId,\n          params: {\n            datasourceId: (datasource as Datasource).id,\n            new_page: true,\n          },\n        }),\n      );\n    };\n\n    const newActionButton = (\n      <NewActionButton\n        datasource={datasource as Datasource}\n        disabled={!canCreateDatasourceActions || !isPluginAuthorized}\n        eventFrom=\"datasource-pane\"\n        isNewQuerySecondaryButton={!!isPluginAllowedToPreviewData}\n        pluginType={pluginType}\n      />\n    );\n\n    const generatePageButton =\n      showGenerateButton && !showReconnectButton ? (\n        <Button\n          className={\"t--generate-template\"}\n          isDisabled={!canGeneratePage}\n          kind=\"secondary\"\n          onClick={(e: any) => {\n            e.stopPropagation();\n            e.preventDefault();\n            routeToGeneratePage();\n          }}\n          size=\"md\"\n        >\n          {createMessage(GENERATE_NEW_PAGE_BUTTON_TEXT)}\n        </Button>\n      ) : null;\n\n    return {\n      newActionButton,\n      generatePageButton,\n    };\n  }\n\n  return {};\n};\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport const useParentEntityInfo = (editorType: string) => {\n  const appId = useSelector(getCurrentApplicationId);\n  const pageId = useSelector(getCurrentPageId);\n\n  return {\n    editorId: appId || \"\",\n    parentEntityId: pageId || \"\",\n    parentEntityType: ActionParentEntityType.PAGE,\n  };\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Icon } from \"design-system\";\n\nconst SectionLabel = styled.div`\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 24px;\n  letter-spacing: -0.17px;\n  color: var(--ads-v2-color-fg);\n  display: flex;\n  .cs-icon {\n    margin-left: ${(props) => props.theme.spaces[2]}px;\n  }\n`;\n\nconst SectionContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  width: 270px;\n  cursor: pointer;\n  margin-bottom: 5px;\n  margin-top: 24px;\n`;\n\ninterface ComponentProps {\n  children: any;\n  title: string;\n  // header icon props of collapse header\n  headerIcon?: {\n    name: string;\n    color?: string;\n  };\n  showSectionHeader?: boolean;\n}\n\ntype Props = ComponentProps;\n\nfunction Collapsible(props: Props) {\n  const { children, headerIcon, showSectionHeader = true, title } = props;\n\n  return (\n    <section\n      data-location-id={`section-${title}`}\n      data-testid={`section-${title}`}\n    >\n      {showSectionHeader && (\n        <SectionContainer className=\"t--collapse-section-container\">\n          <SectionLabel>\n            {title}\n            {headerIcon && <Icon name={headerIcon.name} size=\"md\" />}\n          </SectionLabel>\n        </SectionContainer>\n      )}\n      {children}\n    </section>\n  );\n}\n\nexport default Collapsible;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\nimport _ from \"lodash\";\nimport { DATASOURCE_DB_FORM } from \"@appsmith/constants/forms\";\nimport type { Datasource } from \"entities/Datasource\";\nimport type { InjectedFormProps } from \"redux-form\";\nimport { reduxForm } from \"redux-form\";\nimport { APPSMITH_IP_ADDRESSES } from \"constants/DatasourceEditorConstants\";\nimport { getAppsmithConfigs } from \"@appsmith/configs\";\nimport { convertArrayToSentence } from \"utils/helpers\";\nimport { PluginType } from \"entities/Action\";\nimport type { AppState } from \"@appsmith/reducers\";\nimport type { JSONtoFormProps } from \"./JSONtoForm\";\nimport { JSONtoForm } from \"./JSONtoForm\";\nimport { TEMP_DATASOURCE_ID } from \"constants/Datasource\";\nimport { DocsLink, openDoc } from \"../../../constants/DocumentationLinks\";\nimport { Callout } from \"design-system\";\nimport store from \"store\";\n\nconst { cloudHosting } = getAppsmithConfigs();\n\ninterface DatasourceDBEditorProps extends JSONtoFormProps {\n  datasourceId: string;\n  applicationId: string;\n  pageId: string;\n  viewMode: boolean;\n  pluginType: string;\n  messages?: Array<string>;\n  datasource: Datasource;\n  hiddenHeader?: boolean;\n  datasourceName?: string;\n  isPluginAllowedToPreviewData: boolean;\n}\n\ntype Props = DatasourceDBEditorProps &\n  InjectedFormProps<Datasource, DatasourceDBEditorProps>;\n\nexport const Form = styled.form<{\n  viewMode: boolean;\n}>`\n  display: flex;\n  flex-direction: column;\n  ${(props) => !props.viewMode && `height: 100%`}\n  padding-bottom: var(--ads-v2-spaces-6);\n  overflow-y: auto;\n  margin-left: ${(props) => (props.viewMode ? \"0px\" : \"24px\")};\n`;\n\nclass DatasourceDBEditor extends JSONtoForm<Props> {\n  openDocumentation = () => {\n    const appState: AppState = store.getState();\n    const plugin = appState.entities.plugins.list.find(\n      (plugin) => plugin.id === this.props.datasource?.pluginId,\n    );\n    if (!!plugin)\n      openDoc(DocsLink.WHITELIST_IP, plugin?.documentationLink, plugin?.name);\n    else openDoc(DocsLink.WHITELIST_IP);\n  };\n\n  render() {\n    const { formConfig, initialized, viewMode } = this.props;\n\n    // make sure this redux form has been initialized before rendering anything.\n    // the initialized prop below comes from redux-form.\n    // The viewMode condition is added to allow the conditons only run on the editMode\n    if (!initialized && !viewMode) {\n      return null;\n    }\n\n    return this.renderDataSourceConfigForm(formConfig);\n  }\n\n  renderDataSourceConfigForm = (sections: any) => {\n    const { datasourceId, hiddenHeader, messages, pluginType, viewMode } =\n      this.props;\n\n    return (\n      <Form\n        onSubmit={(e) => {\n          e.preventDefault();\n        }}\n        viewMode={viewMode}\n      >\n        {messages &&\n          messages.map((msg, i) => {\n            return (\n              <Callout className=\"mt-4\" key={i} kind=\"warning\">\n                {msg}\n              </Callout>\n            );\n          })}\n        {!hiddenHeader &&\n          cloudHosting &&\n          pluginType === PluginType.DB &&\n          !viewMode && (\n            <Callout\n              className=\"mt-4 select-text\"\n              kind=\"info\"\n              links={[\n                {\n                  children: \"Learn more\",\n                  onClick: this.openDocumentation,\n                  endIcon: \"share-box-line\",\n                  to: \"about:blank\",\n                },\n              ]}\n            >\n              {`Whitelist the IP ${convertArrayToSentence(\n                APPSMITH_IP_ADDRESSES,\n              )}  on your database instance to connect to it. `}\n            </Callout>\n          )}\n        {(!viewMode || datasourceId === TEMP_DATASOURCE_ID) && (\n          <>\n            {!_.isNil(sections)\n              ? _.map(sections, this.renderMainSection)\n              : undefined}\n            {\"\"}\n          </>\n        )}\n      </Form>\n    );\n  };\n}\n\nconst mapStateToProps = (state: AppState, props: any) => {\n  const datasource = state.entities.datasources.list.find(\n    (e) => e.id === props.datasourceId,\n  ) as Datasource;\n\n  const hintMessages = datasource && datasource.messages;\n\n  return {\n    messages: hintMessages,\n    datasource,\n    datasourceName: datasource?.name ?? \"\",\n  };\n};\n\nexport default connect(mapStateToProps)(\n  reduxForm<Datasource, DatasourceDBEditorProps>({\n    destroyOnUnmount: false,\n    form: DATASOURCE_DB_FORM,\n    enableReinitialize: true,\n  })(DatasourceDBEditor),\n);\n","import styled from \"styled-components\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport EditableText, {\n  EditInteractionKind,\n} from \"components/editorComponents/EditableText\";\nimport type { AppState } from \"@appsmith/reducers\";\nimport {\n  getDatasource,\n  getDatasources,\n} from \"@appsmith/selectors/entitiesSelector\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport type { Datasource } from \"entities/Datasource\";\nimport { isNameValid } from \"utils/helpers\";\nimport {\n  saveDatasourceName,\n  updateDatasourceName,\n} from \"actions/datasourceActions\";\nimport { TEMP_DATASOURCE_ID } from \"constants/Datasource\";\n\nconst Wrapper = styled.div`\n  /* margin-left: 5px; */\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 24px;\n  display: flex;\n`;\n\ninterface ComponentProps {\n  focusOnMount: boolean;\n  disabled?: boolean;\n  datasourceId: string;\n}\n\ntype FormTitleProps = ComponentProps;\n\nfunction FormTitle(props: FormTitleProps) {\n  const currentDatasource: Datasource | undefined = useSelector(\n    (state: AppState) => getDatasource(state, props.datasourceId),\n  );\n  const datasources: Datasource[] = useSelector(getDatasources);\n  const [forceUpdate, setForceUpdate] = useState(false);\n  const dispatch = useDispatch();\n  const saveStatus: {\n    isSaving: boolean;\n    error: boolean;\n  } = useSelector((state: AppState) => {\n    const id = currentDatasource ? currentDatasource.id : \"\";\n\n    return {\n      isSaving: state.ui.datasourceName.isSaving[id],\n      error: state.ui.datasourceName.errors[id],\n    };\n  });\n\n  const hasNameConflict = React.useCallback(\n    (name: string) => {\n      const datasourcesNames: Record<string, any> = {};\n      datasources\n        // in case of REST API and Authenticated GraphQL API, when user clicks on save as datasource\n        // we first need to update the action and then redirect to action page,\n        // for that reason we need temporary datasource data to exist in store till action is updated,\n        // if temp datasource data is there, then duplicate name issue occurs\n        // hence added extra condition for REST and GraphQL.\n        .filter(\n          (datasource) =>\n            datasource.id !== currentDatasource?.id &&\n            !(\n              datasource.name === currentDatasource?.name &&\n              [\"REST API\", \"Authenticated GraphQL API\"].includes(\n                (datasource as any).pluginName,\n              ) &&\n              datasource.pluginId === currentDatasource?.pluginId\n            ),\n        )\n        .map((datasource) => {\n          datasourcesNames[datasource.name] = datasource;\n        });\n\n      return !isNameValid(name, { ...datasourcesNames });\n    },\n    [datasources, currentDatasource],\n  );\n\n  const isInvalidDatasourceName = React.useCallback(\n    (name: string): string | boolean => {\n      if (!name || name.trim().length === 0) {\n        return \"Please enter a valid name\";\n      } else if (hasNameConflict(name)) {\n        return `${name} is already being used or is a restricted keyword.`;\n      }\n      return false;\n    },\n    [hasNameConflict],\n  );\n\n  const handleDatasourceNameChange = useCallback(\n    (name: string) => {\n      // Check if the datasource name equals \"Untitled datasource ABC\" if no , use the name passed.\n      const datsourceName = name || \"Untitled datasource ABC\";\n      if (\n        !isInvalidDatasourceName(name) &&\n        currentDatasource &&\n        currentDatasource.name !== name\n      ) {\n        // if the currentDatasource id equals the temp datasource id,\n        // it means that you are about to create a new datasource hence\n        // saveDatasourceName would be dispatch\n        if (currentDatasource.id === TEMP_DATASOURCE_ID) {\n          dispatch(\n            saveDatasourceName({\n              id: currentDatasource?.id ?? \"\",\n              name: datsourceName,\n            }),\n          );\n        } else {\n          dispatch(\n            updateDatasourceName({\n              id: currentDatasource?.id ?? \"\",\n              name: datsourceName,\n            }),\n          );\n        }\n      }\n    },\n    [dispatch, isInvalidDatasourceName, currentDatasource],\n  );\n\n  useEffect(() => {\n    if (saveStatus.isSaving === false && saveStatus.error === true) {\n      setForceUpdate(true);\n    } else if (saveStatus.isSaving === true) {\n      setForceUpdate(false);\n    }\n  }, [saveStatus.isSaving, saveStatus.error]);\n\n  return (\n    <Wrapper>\n      <EditableText\n        className=\"t--edit-datasource-name title-editable-text\"\n        defaultValue={currentDatasource ? currentDatasource.name : \"\"}\n        disabled={props.disabled}\n        editInteractionKind={EditInteractionKind.SINGLE}\n        forceDefault={forceUpdate}\n        isEditingDefault={props.focusOnMount}\n        isInvalid={isInvalidDatasourceName}\n        maxLength={30}\n        onTextChanged={handleDatasourceNameChange}\n        placeholder=\"Datasource name\"\n        type=\"text\"\n        underline\n        updating={saveStatus.isSaving}\n      />\n    </Wrapper>\n  );\n}\n\nexport default FormTitle;\n","import { Menu } from \"design-system\";\nimport styled from \"styled-components\";\n\nexport const MenuWrapper = styled.div`\n  display: flex;\n`;\n\nexport const StyledMenu = styled(Menu)`\n  flex: 0;\n`;\n","/* DO NOT INTRODUCE PAGE AND APPLICATION DEPENDENCIES IN THIS COMPONENT */\nimport React, { useState } from \"react\";\nimport FormTitle from \"./FormTitle\";\nimport { getAssetUrl } from \"@appsmith/utils/airgapHelpers\";\nimport type { Datasource } from \"entities/Datasource\";\nimport {\n  CONFIRM_CONTEXT_DELETING,\n  CONFIRM_CONTEXT_DELETE,\n  CONTEXT_DELETE,\n  EDIT,\n  createMessage,\n} from \"@appsmith/constants/messages\";\nimport AnalyticsUtil from \"@appsmith/utils/AnalyticsUtil\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteDatasource } from \"actions/datasourceActions\";\nimport { debounce } from \"lodash\";\nimport type { ApiDatasourceForm } from \"entities/Datasource/RestAPIForm\";\nimport { MenuWrapper, StyledMenu } from \"components/utils/formComponents\";\nimport styled from \"styled-components\";\nimport { Button, MenuContent, MenuItem, MenuTrigger } from \"design-system\";\nimport { DatasourceEditEntryPoints } from \"constants/Datasource\";\nimport {\n  DB_NOT_SUPPORTED,\n  isEnvironmentConfigured,\n} from \"@appsmith/utils/Environments\";\nimport { getCurrentEnvironmentId } from \"@appsmith/selectors/environmentSelectors\";\nimport type { PluginType } from \"entities/Action\";\nimport { useEditorType } from \"@appsmith/hooks\";\nimport { useHistory } from \"react-router\";\nimport { useHeaderActions } from \"@appsmith/hooks/datasourceEditorHooks\";\n\nexport const ActionWrapper = styled.div`\n  display: flex;\n  flex-direction: row-reverse;\n  gap: 16px;\n  align-items: center;\n`;\n\nexport const FormTitleContainer = styled.div`\n  flex-direction: row;\n  display: flex;\n  align-items: center;\n`;\n\nexport const Header = styled.div<{ noBottomBorder: boolean }>`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  ${(props) =>\n    !props.noBottomBorder &&\n    \"border-bottom: 1px solid var(--ads-v2-color-border);\"}\n  padding: var(--ads-v2-spaces-5) 0 var(--ads-v2-spaces-5);\n  margin: 0 var(--ads-v2-spaces-7);\n`;\n\nexport const PluginImageWrapper = styled.div`\n  height: 34px;\n  width: 34px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 8px;\n  flex-shrink: 0;\n  img {\n    height: 34px;\n    width: auto;\n  }\n`;\n\nexport const PluginImage = (props: any) => {\n  return (\n    <PluginImageWrapper>\n      <img {...props} />\n    </PluginImageWrapper>\n  );\n};\n\ninterface DSFormHeaderProps {\n  canDeleteDatasource: boolean;\n  canManageDatasource: boolean;\n  datasource: Datasource | ApiDatasourceForm | undefined;\n  datasourceId: string;\n  isDeleting: boolean;\n  isNewDatasource: boolean;\n  isPluginAuthorized: boolean;\n  pluginImage: string;\n  pluginType: string;\n  pluginName: string;\n  setDatasourceViewMode: (payload: {\n    datasourceId: string;\n    viewMode: boolean;\n  }) => void;\n  viewMode: boolean;\n  noBottomBorder?: boolean;\n}\n\nexport const DSFormHeader = (props: DSFormHeaderProps) => {\n  const {\n    canDeleteDatasource,\n    canManageDatasource,\n    datasource,\n    datasourceId,\n    isDeleting,\n    isNewDatasource,\n    isPluginAuthorized,\n    noBottomBorder,\n    pluginImage,\n    pluginName,\n    pluginType,\n    setDatasourceViewMode,\n    viewMode,\n  } = props;\n\n  const [confirmDelete, setConfirmDelete] = useState(false);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const editorType = useEditorType(history.location.pathname);\n\n  const deleteAction = () => {\n    if (isDeleting) return;\n    AnalyticsUtil.logEvent(\"DATASOURCE_CARD_DELETE_ACTION\");\n    dispatch(deleteDatasource({ id: datasourceId }));\n  };\n\n  const onCloseMenu = debounce(() => setConfirmDelete(false), 20);\n\n  const renderMenuOptions = () => {\n    return [\n      <MenuItem\n        className=\"t--datasource-option-delete error-menuitem\"\n        disabled={isDeleting}\n        key={\"delete-datasource-button\"}\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        onSelect={(e: Event) => {\n          e.preventDefault();\n          e.stopPropagation();\n          if (!isDeleting) {\n            confirmDelete ? deleteAction() : setConfirmDelete(true);\n          }\n        }}\n        startIcon=\"delete-bin-line\"\n      >\n        {isDeleting\n          ? createMessage(CONFIRM_CONTEXT_DELETING)\n          : confirmDelete\n            ? createMessage(CONFIRM_CONTEXT_DELETE)\n            : createMessage(CONTEXT_DELETE)}\n      </MenuItem>,\n    ];\n  };\n\n  const currentEnv = useSelector(getCurrentEnvironmentId);\n  const envSupportedDs = !DB_NOT_SUPPORTED.includes(pluginType as PluginType);\n\n  const showReconnectButton = !(\n    isPluginAuthorized &&\n    (envSupportedDs\n      ? isEnvironmentConfigured(datasource as Datasource, currentEnv)\n      : true)\n  );\n\n  const headerActions = useHeaderActions(editorType, {\n    datasource,\n    isPluginAuthorized,\n    pluginType,\n    showReconnectButton,\n  });\n\n  return (\n    <Header noBottomBorder={!!noBottomBorder}>\n      <FormTitleContainer>\n        <PluginImage alt=\"Datasource\" src={getAssetUrl(pluginImage)} />\n        <FormTitle\n          datasourceId={datasourceId}\n          disabled={!isNewDatasource && !canManageDatasource}\n          focusOnMount={isNewDatasource}\n        />\n      </FormTitleContainer>\n      {viewMode && (\n        <ActionWrapper>\n          {canDeleteDatasource && (\n            <MenuWrapper\n              className=\"t--datasource-menu-option\"\n              key={datasourceId}\n              onClick={(e) => {\n                e.stopPropagation();\n              }}\n            >\n              <StyledMenu onOpenChange={onCloseMenu}>\n                <MenuTrigger>\n                  <Button\n                    data-testid=\"t--context-menu-trigger\"\n                    isIconButton\n                    kind=\"tertiary\"\n                    size=\"md\"\n                    startIcon=\"context-menu\"\n                  />\n                </MenuTrigger>\n                <MenuContent align=\"end\" style={{ zIndex: 100 }} width=\"200px\">\n                  {renderMenuOptions()}\n                </MenuContent>\n              </StyledMenu>\n            </MenuWrapper>\n          )}\n          <Button\n            className=\"t--edit-datasource\"\n            kind=\"secondary\"\n            onClick={() => {\n              setDatasourceViewMode({\n                datasourceId: datasourceId,\n                viewMode: false,\n              });\n              AnalyticsUtil.logEvent(\"EDIT_DATASOURCE_CLICK\", {\n                datasourceId: datasourceId,\n                pluginName,\n                entryPoint: DatasourceEditEntryPoints.DATASOURCE_FORM_EDIT,\n              });\n            }}\n            size=\"md\"\n          >\n            {createMessage(EDIT)}\n          </Button>\n          {headerActions && headerActions.newActionButton\n            ? headerActions.newActionButton\n            : null}\n          {headerActions && headerActions.generatePageButton\n            ? headerActions.generatePageButton\n            : null}\n        </ActionWrapper>\n      )}\n    </Header>\n  );\n};\n","import type { Datasource } from \"entities/Datasource\";\nimport { renderDatasourceSection } from \"pages/Editor/DataSourceEditor/DatasourceSection\";\n\nexport interface Props {\n  currentEnv: string;\n  config: any;\n  datasource: Datasource;\n  viewMode: boolean | undefined;\n}\n\nexport function EnvConfigSection({\n  config,\n  currentEnv,\n  datasource,\n  viewMode,\n}: Props) {\n  return renderDatasourceSection(config, currentEnv, datasource, viewMode);\n}\n","import React from \"react\";\nimport type { Datasource } from \"entities/Datasource\";\nimport { map, get, isArray } from \"lodash\";\nimport styled from \"styled-components\";\nimport {\n  formatFileSize,\n  isHidden,\n  isKVArray,\n} from \"components/formControls/utils\";\nimport log from \"loglevel\";\nimport { ComparisonOperationsEnum } from \"components/formControls/BaseControl\";\nimport type { AppState } from \"@appsmith/reducers\";\nimport { connect } from \"react-redux\";\nimport { getPlugin } from \"@appsmith/selectors/entitiesSelector\";\nimport { DB_NOT_SUPPORTED } from \"@appsmith/utils/Environments\";\nimport type { PluginType } from \"entities/Action\";\nimport { getDefaultEnvId } from \"@appsmith/api/ApiUtils\";\nimport { EnvConfigSection } from \"@appsmith/components/EnvConfigSection\";\nimport { getCurrentEnvironmentId } from \"@appsmith/selectors/environmentSelectors\";\nimport { isMultipleEnvEnabled } from \"@appsmith/utils/planHelpers\";\nimport { selectFeatureFlags } from \"@appsmith/selectors/featureFlagsSelectors\";\nimport { Text } from \"design-system\";\nimport { Table } from \"design-system-old\";\n\nconst Key = styled.div`\n  color: var(--ads-v2-color-fg-muted);\n  font-size: 14px;\n  display: inline-block;\n`;\n\nconst Value = styled.div`\n  font-size: 14px;\n  font-weight: 500;\n  color: var(--ads-v2-color-fg);\n  display: inline-block;\n  margin-left: 5px;\n`;\n\nconst ValueWrapper = styled.div`\n  display: inline-block;\n  &:not(:first-child) {\n    margin-left: 10px;\n  }\n`;\n\nconst FieldWrapper = styled.div`\n  &:first-child {\n    margin-top: 9px;\n  }\n`;\n\nexport const ViewModeWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  border-bottom: 1px solid var(--ads-v2-color-border);\n  padding: var(--ads-v2-spaces-7) 0;\n  gap: var(--ads-v2-spaces-4);\n  overflow: auto;\n  height: 100%;\n  width: 100%;\n  flex-shrink: 0;\n`;\n\ninterface RenderDatasourceSectionProps {\n  config: any;\n  datasource: Datasource;\n  viewMode?: boolean;\n  showOnlyCurrentEnv?: boolean;\n  currentEnv: string;\n  isEnvEnabled: boolean;\n}\nconst renderKVArray = (\n  children: Array<any>,\n  currentEnvironment: string,\n  datasource: Datasource,\n) => {\n  try {\n    // setup config for each child\n    const firstConfigProperty =\n      `datasourceStorages.${currentEnvironment}.` +\n        children[0].configProperty || children[0].configProperty;\n    const configPropertyInfo = firstConfigProperty.split(\"[*].\");\n    const values = get(datasource, configPropertyInfo[0], null);\n    const renderValues: Array<\n      Array<{\n        key: string;\n        value: any;\n        label: string;\n      }>\n    > = children.reduce(\n      (\n        acc,\n        { configProperty, label }: { configProperty: string; label: string },\n      ) => {\n        const configPropertyKey = configProperty.split(\"[*].\")[1];\n        values.forEach((value: any, index: number) => {\n          if (!acc[index]) {\n            acc[index] = [];\n          }\n\n          acc[index].push({\n            key: configPropertyKey,\n            label,\n            value: value[configPropertyKey],\n          });\n        });\n        return acc;\n      },\n      [],\n    );\n    return renderValues.map((renderValue, index: number) => (\n      <FieldWrapper key={`${firstConfigProperty}.${index}`}>\n        {renderValue.map(({ key, label, value }) => (\n          <ValueWrapper key={`${firstConfigProperty}.${key}.${index}`}>\n            <Key>{label}: </Key>\n            <Value>{value}</Value>\n          </ValueWrapper>\n        ))}\n      </FieldWrapper>\n    ));\n  } catch (e) {\n    return;\n  }\n};\n\nexport function renderDatasourceSection(\n  section: any,\n  currentEnvironment: string,\n  datasource: Datasource,\n  viewMode: boolean | undefined,\n) {\n  return (\n    <React.Fragment key={datasource.id}>\n      {map(section.children, (section) => {\n        if (\n          isHidden(\n            datasource.datasourceStorages[currentEnvironment],\n            section.hidden,\n            undefined,\n            viewMode,\n          )\n        )\n          return null;\n        if (\"children\" in section) {\n          if (isKVArray(section.children)) {\n            return renderKVArray(\n              section.children,\n              currentEnvironment,\n              datasource,\n            );\n          }\n\n          return renderDatasourceSection(\n            section,\n            currentEnvironment,\n            datasource,\n            viewMode,\n          );\n        } else {\n          try {\n            const {\n              configProperty,\n              controlType,\n              label,\n              subtitle = \"\",\n            } = section;\n            const customConfigProperty =\n              `datasourceStorages.${currentEnvironment}.` + configProperty;\n            const reactKey = datasource.id + \"_\" + label;\n            if (controlType === \"FIXED_KEY_INPUT\") {\n              return (\n                <FieldWrapper key={reactKey}>\n                  <Key>{configProperty.key}: </Key>{\" \"}\n                  <Value>{configProperty.value}</Value>\n                </FieldWrapper>\n              );\n            }\n\n            let value = get(datasource, customConfigProperty);\n\n            if (controlType === \"DROP_DOWN\") {\n              if (Array.isArray(section.options)) {\n                const option = section.options.find(\n                  (el: any) => el.value === value,\n                );\n                if (option && option.label) {\n                  value = option.label;\n                }\n              }\n            }\n\n            if (\n              !value &&\n              !!viewMode &&\n              (!section.hidden ||\n                (!!section.hidden &&\n                  \"comparison\" in section.hidden &&\n                  section.hidden.comparison ===\n                    ComparisonOperationsEnum.VIEW_MODE))\n            ) {\n              value = section.initialValue;\n            }\n\n            if (controlType === \"MULTIPLE_FILE_PICKER\") {\n              if (value && Array.isArray(value) && value.length > 0) {\n                const isPlural = value.length > 1;\n\n                return (\n                  <div>\n                    <FieldWrapper key={reactKey}>\n                      <Key>{label}: </Key>{\" \"}\n                      <Value>\n                        {value.length} file{isPlural ? \"s\" : \"\"} uploaded\n                      </Value>\n                    </FieldWrapper>\n                    <div className=\"mt-2 max-w-[50%]\">\n                      <Table\n                        columns={[\n                          {\n                            Header: \"Name\",\n                            accessor: \"name\",\n                          },\n                          {\n                            Header: \"Size\",\n                            accessor: \"size\",\n                            Cell: (props: any) => formatFileSize(props.value),\n                          },\n                        ]}\n                        data={value}\n                      />\n                    </div>\n                    {section.labelVisibleWithFiles && (\n                      <div className=\"mt-2 max-w-[50%]\">\n                        <Text kind=\"body-s\">\n                          {section.labelVisibleWithFiles}\n                        </Text>\n                      </div>\n                    )}\n                  </div>\n                );\n              } else {\n                return (\n                  <div>\n                    <FieldWrapper key={reactKey}>\n                      <Key>{label}: </Key> No Files Uploaded\n                    </FieldWrapper>\n                    <Text kind=\"body-s\">{subtitle}</Text>\n                  </div>\n                );\n              }\n            }\n\n            if (!value || (isArray(value) && value.length < 1)) {\n              return;\n            }\n\n            if (isArray(value)) {\n              return (\n                <FieldWrapper>\n                  <Key>{label}: </Key>\n                  {value.map(\n                    (\n                      { key, value }: { key: string; value: any },\n                      index: number,\n                    ) => (\n                      <div key={`${reactKey}.${index}`}>\n                        <div style={{ display: \"inline-block\" }}>\n                          <Key>Key: </Key>\n                          <Value>{key}</Value>\n                        </div>\n                        <ValueWrapper>\n                          <Key>Value: </Key>\n                          <Value>{value}</Value>\n                        </ValueWrapper>\n                      </div>\n                    ),\n                  )}\n                </FieldWrapper>\n              );\n            }\n\n            return (\n              <FieldWrapper key={reactKey}>\n                <Key>{label}: </Key> <Value>{value}</Value>\n              </FieldWrapper>\n            );\n          } catch (e) {\n            log.error(e);\n          }\n        }\n      })}\n    </React.Fragment>\n  );\n}\n\nclass RenderDatasourceInformation extends React.Component<RenderDatasourceSectionProps> {\n  render() {\n    const {\n      config,\n      currentEnv,\n      datasource,\n      isEnvEnabled,\n      showOnlyCurrentEnv,\n      viewMode,\n    } = this.props;\n    const { datasourceStorages } = datasource;\n\n    if (showOnlyCurrentEnv || !isEnvEnabled) {\n      // in this case, we will show the env that is present in datasourceStorages\n\n      if (!datasourceStorages) {\n        return null;\n      }\n      return renderDatasourceSection(config, currentEnv, datasource, viewMode);\n    }\n\n    return (\n      <EnvConfigSection\n        config={config}\n        currentEnv={currentEnv}\n        datasource={datasource}\n        viewMode={viewMode}\n      />\n    );\n  }\n}\nconst mapStateToProps = (state: AppState, ownProps: any) => {\n  const { datasource } = ownProps;\n  const pluginId = datasource.pluginId;\n  const plugin = getPlugin(state, pluginId);\n  const pluginType = plugin?.type;\n  const isEnvEnabled = DB_NOT_SUPPORTED.includes(pluginType as PluginType)\n    ? false\n    : isMultipleEnvEnabled(selectFeatureFlags(state));\n  const currentEnvironmentId = getCurrentEnvironmentId(state);\n  return {\n    currentEnv: isEnvEnabled ? currentEnvironmentId : getDefaultEnvId(),\n    isEnvEnabled,\n  };\n};\n\nexport default connect(mapStateToProps)(RenderDatasourceInformation);\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport _ from \"lodash\";\nimport FormControl from \"../FormControl\";\nimport Collapsible from \"./Collapsible\";\nimport type { ControlProps } from \"components/formControls/BaseControl\";\nimport type { Datasource } from \"entities/Datasource\";\nimport { isHidden, isKVArray } from \"components/formControls/utils\";\nimport log from \"loglevel\";\nimport type { FeatureFlags } from \"@appsmith/entities/FeatureFlag\";\n\nexport const FormContainer = styled.div`\n  display: flex;\n  position: relative;\n  height: 100%;\n  overflow: hidden;\n  flex: 1;\n  flex-direction: column;\n  width: 100%;\n`;\n\nexport const FormContainerBody = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n  flex-grow: 1;\n  overflow: hidden;\n  form {\n    height: 100%;\n  }\n`;\n\nexport interface JSONtoFormProps {\n  formData: Datasource;\n  formName: string;\n  formConfig: any[];\n  datasourceId: string;\n  featureFlags?: FeatureFlags;\n  setupConfig: (config: ControlProps) => void;\n  currentEnvironment: string;\n  isOnboardingFlow?: boolean;\n}\n\nexport class JSONtoForm<\n  P = unknown,\n  S = unknown,\n  SS = any,\n> extends React.Component<JSONtoFormProps & P, S, SS> {\n  renderForm = (formContent: any) => {\n    return (\n      // <MainContainer>\n      <FormContainer className=\"t--json-to-form-wrapper select-text\">\n        <FormContainerBody className=\"t--json-to-form-body\">\n          {formContent}\n        </FormContainerBody>\n      </FormContainer>\n      // </MainContainer>\n    );\n  };\n\n  renderMainSection = (section: any, index: number) => {\n    if (\n      !this.props.formData ||\n      !this.props.formData.hasOwnProperty(\"datasourceStorages\") ||\n      !this.props.hasOwnProperty(\"currentEnvironment\") ||\n      !this.props.currentEnvironment ||\n      !this.props.formData.datasourceStorages.hasOwnProperty(\n        this.props.currentEnvironment,\n      )\n    ) {\n      return null;\n    }\n\n    // hides features/configs that are hidden behind feature flag\n    // TODO: remove hidden config property as well as this param,\n    // when feature flag is removed\n    if (\n      isHidden(\n        this.props.formData.datasourceStorages[this.props.currentEnvironment],\n        section.hidden,\n        this.props?.featureFlags,\n        false, // viewMode is false here.\n      )\n    )\n      return null;\n    return (\n      <Collapsible\n        key={section.sectionName}\n        showSectionHeader={index !== 0}\n        title={section.sectionName}\n      >\n        {this.renderEachConfig(section)}\n      </Collapsible>\n    );\n  };\n\n  renderSingleConfig = (\n    config: ControlProps,\n    multipleConfig?: ControlProps[],\n  ) => {\n    multipleConfig = multipleConfig || [];\n    const customConfig = {\n      ...config,\n      configProperty:\n        `datasourceStorages.${this.props.currentEnvironment}.` +\n        config.configProperty,\n    };\n    try {\n      this.props.setupConfig(customConfig);\n      return (\n        <div key={customConfig.configProperty} style={{ marginTop: \"16px\" }}>\n          <FormControl\n            config={customConfig}\n            formName={this.props.formName}\n            multipleConfig={multipleConfig}\n          />\n        </div>\n      );\n    } catch (e) {\n      log.error(e);\n    }\n  };\n\n  renderKVArray = (children: Array<ControlProps>) => {\n    try {\n      // setup config for each child\n      children.forEach((c) => this.props.setupConfig(c));\n      // We pass last child for legacy reasons, to keep the logic here exactly same as before.\n      return this.renderSingleConfig(children[children.length - 1], children);\n    } catch (e) {\n      log.error(e);\n    }\n  };\n\n  renderEachConfig = (section: any) => {\n    return (\n      <div\n        key={section.sectionName}\n        style={{ ...(section.sectionStyles || {}) }}\n      >\n        {_.map(section.children, (propertyControlOrSection: ControlProps) => {\n          // If the section is hidden, skip rendering\n          // hides features/configs that are hidden behind feature flag\n          // TODO: remove hidden config property as well as this param,\n          // when feature flag is removed\n          if (\n            isHidden(\n              this.props.formData.datasourceStorages[\n                this.props.currentEnvironment\n              ],\n              propertyControlOrSection.hidden,\n              this.props?.featureFlags,\n              false,\n            )\n          )\n            return null;\n          if (\"children\" in propertyControlOrSection) {\n            const { children } = propertyControlOrSection as any;\n            if (isKVArray(children)) {\n              return this.renderKVArray(children);\n            }\n            return this.renderEachConfig(propertyControlOrSection);\n          } else {\n            return this.renderSingleConfig(propertyControlOrSection);\n          }\n        })}\n      </div>\n    );\n  };\n}\n","import React from \"react\";\nimport {\n  createMessage,\n  DELETE_CONFIRMATION_MODAL_TITLE,\n  DISCARD_POPUP_DONT_SAVE_BUTTON_TEXT,\n  SAVE_OR_DISCARD_DATASOURCE_WARNING,\n} from \"@appsmith/constants/messages\";\nimport {\n  Button,\n  Modal,\n  ModalBody,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  Text,\n} from \"design-system\";\nimport { TEMP_DATASOURCE_ID } from \"constants/Datasource\";\nimport { FEATURE_FLAG } from \"@appsmith/entities/FeatureFlag\";\nimport { useFeatureFlag } from \"utils/hooks/useFeatureFlag\";\nimport { getHasManageDatasourcePermission } from \"@appsmith/utils/BusinessFeatures/permissionPageHelpers\";\n\ninterface SaveOrDiscardModalProps {\n  isOpen: boolean;\n  onDiscard(): void;\n  onSave?(): void;\n  onClose(): void;\n  datasourceId: string;\n  datasourcePermissions: string[];\n  saveButtonText: string;\n}\n\nfunction SaveOrDiscardDatasourceModal(props: SaveOrDiscardModalProps) {\n  const {\n    datasourceId,\n    datasourcePermissions,\n    isOpen,\n    onClose,\n    onDiscard,\n    onSave,\n    saveButtonText,\n  } = props;\n\n  const createMode = datasourceId === TEMP_DATASOURCE_ID;\n  const isFeatureEnabled = useFeatureFlag(FEATURE_FLAG.license_gac_enabled);\n  const canManageDatasources = getHasManageDatasourcePermission(\n    isFeatureEnabled,\n    datasourcePermissions,\n  );\n  const disableSaveButton = !createMode && !canManageDatasources;\n\n  return (\n    <Modal onOpenChange={onClose} open={isOpen}>\n      <ModalContent style={{ width: \"600px\" }}>\n        <ModalHeader>\n          {createMessage(DELETE_CONFIRMATION_MODAL_TITLE)}\n        </ModalHeader>\n        <ModalBody>\n          <Text>{createMessage(SAVE_OR_DISCARD_DATASOURCE_WARNING)}</Text>\n        </ModalBody>\n        <ModalFooter>\n          <Button\n            className=\"t--datasource-modal-do-not-save\"\n            kind=\"secondary\"\n            onClick={onDiscard}\n            size=\"md\"\n          >\n            {createMessage(DISCARD_POPUP_DONT_SAVE_BUTTON_TEXT)}\n          </Button>\n          <Button\n            className=\"t--datasource-modal-save\"\n            isDisabled={disableSaveButton}\n            onClick={onSave}\n            size=\"md\"\n          >\n            {saveButtonText}\n          </Button>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  );\n}\n\nexport default SaveOrDiscardDatasourceModal;\n","import { executeDatasourceQuery } from \"actions/datasourceActions\";\nimport type { Datasource, QueryTemplate } from \"entities/Datasource\";\nimport { useCallback, useState } from \"react\";\nimport AnalyticsUtil from \"@appsmith/utils/AnalyticsUtil\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useFeatureFlag } from \"utils/hooks/useFeatureFlag\";\nimport { PluginName } from \"entities/Action\";\nimport { isGoogleSheetPluginDS } from \"utils/editorContextUtils\";\nimport {\n  getHasCreatePagePermission,\n  hasCreateDSActionPermissionInApp,\n} from \"@appsmith/utils/BusinessFeatures/permissionPageHelpers\";\nimport type { GenerateCRUDEnabledPluginMap } from \"api/PluginApi\";\nimport { DATASOURCES_ALLOWED_FOR_PREVIEW_MODE } from \"constants/QueryEditorConstants\";\nimport {\n  getGenerateCRUDEnabledPluginMap,\n  getPlugin,\n} from \"@appsmith/selectors/entitiesSelector\";\nimport { FEATURE_FLAG } from \"@appsmith/entities/FeatureFlag\";\nimport type { AppState } from \"@appsmith/reducers\";\nimport {\n  getCurrentApplication,\n  getPagePermissions,\n} from \"selectors/editorSelectors\";\nimport { get } from \"lodash\";\nimport { useEditorType } from \"@appsmith/hooks\";\nimport history from \"utils/history\";\n\ninterface FetchPreviewData {\n  datasourceId: string;\n  template: QueryTemplate;\n}\n\ninterface UseDatasourceQueryReturn {\n  fetchPreviewData: (data: FetchPreviewData) => void;\n  isLoading: boolean;\n  failedFetchingPreviewData: boolean;\n}\n\ninterface UseDatasourceQueryParams {\n  setPreviewData: (data: any) => void;\n  setPreviewDataError: (string: any) => void;\n}\n\nexport const useDatasourceQuery = ({\n  setPreviewData,\n  setPreviewDataError,\n}: UseDatasourceQueryParams): UseDatasourceQueryReturn => {\n  const dispatch = useDispatch();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [failedFetchingPreviewData, setFailedFetchingPreviewData] =\n    useState(false);\n\n  const onFetchPreviewDataSuccess = useCallback((payload: any) => {\n    setIsLoading(false);\n\n    if (payload.data && payload.data.body) {\n      if (Array.isArray(payload.data?.body)) {\n        setPreviewData(payload.data?.body);\n      } else {\n        // if the response from the server is anything but an array of data, set the error flag\n        setFailedFetchingPreviewData(true);\n        AnalyticsUtil.logEvent(\"DATA_FETCH_FAILED_POST_SCHEMA_FETCH\", {\n          error: payload.data?.pluginErrorDetails,\n        });\n      }\n    }\n  }, []);\n\n  const onFetchPreviewDataFailure = useCallback((error: any) => {\n    setIsLoading(false);\n    setFailedFetchingPreviewData(true);\n    AnalyticsUtil.logEvent(\"DATA_FETCH_FAILED_POST_SCHEMA_FETCH\", {\n      error: error,\n    });\n  }, []);\n\n  const fetchPreviewData = useCallback(\n    (data: FetchPreviewData) => {\n      setIsLoading(true);\n      setFailedFetchingPreviewData(false);\n\n      // reset states\n      setPreviewDataError(false);\n      setPreviewData([]);\n\n      dispatch(\n        executeDatasourceQuery({\n          payload: {\n            ...data,\n            isGeneratePage: false,\n          },\n          onSuccessCallback: onFetchPreviewDataSuccess,\n          onErrorCallback: onFetchPreviewDataFailure,\n        }),\n      );\n    },\n    [isLoading],\n  );\n\n  return {\n    fetchPreviewData,\n    isLoading,\n    failedFetchingPreviewData,\n  };\n};\n\nexport const useShowPageGenerationOnHeader = (\n  datasource: Datasource,\n): boolean => {\n  const pluginId = get(datasource, \"pluginId\", \"\");\n  const plugin = useSelector((state: AppState) => getPlugin(state, pluginId));\n  const userAppPermissions = useSelector(\n    (state: AppState) => getCurrentApplication(state)?.userPermissions ?? [],\n  );\n\n  const pagePermissions = useSelector(getPagePermissions);\n\n  const datasourcePermissions = datasource?.userPermissions || [];\n\n  const isGACEnabled = useFeatureFlag(FEATURE_FLAG.license_gac_enabled);\n\n  const isGoogleSheetPlugin = isGoogleSheetPluginDS(plugin?.packageName);\n\n  const isPluginAllowedToPreviewData =\n    DATASOURCES_ALLOWED_FOR_PREVIEW_MODE.includes(plugin?.name || \"\") ||\n    (plugin?.name === PluginName.MONGO &&\n      !!(datasource as Datasource)?.isMock) ||\n    isGoogleSheetPlugin;\n  const generateCRUDSupportedPlugin: GenerateCRUDEnabledPluginMap = useSelector(\n    getGenerateCRUDEnabledPluginMap,\n  );\n\n  const editorType = useEditorType(history.location.pathname);\n\n  const canCreatePages = getHasCreatePagePermission(\n    isGACEnabled,\n    userAppPermissions,\n  );\n  const canCreateDatasourceActions = hasCreateDSActionPermissionInApp({\n    isEnabled: isGACEnabled,\n    dsPermissions: datasourcePermissions,\n    pagePermissions,\n    editorType,\n  });\n\n  const canGeneratePage = canCreateDatasourceActions && canCreatePages;\n\n  const supportTemplateGeneration =\n    !isPluginAllowedToPreviewData &&\n    !!generateCRUDSupportedPlugin[(datasource as Datasource).pluginId];\n\n  return supportTemplateGeneration && canGeneratePage;\n};\n","import { isEnvironmentValid } from \"@appsmith/utils/Environments\";\nimport type { Property } from \"entities/Action\";\nimport type { Datasource, DatasourceStorage } from \"entities/Datasource\";\nimport type {\n  ApiDatasourceForm,\n  Authentication,\n  AuthorizationCode,\n  ClientCredentials,\n  Oauth2Common,\n  Basic,\n  ApiKey,\n  BearerToken,\n  SSL,\n} from \"entities/Datasource/RestAPIForm\";\nimport { AuthType, GrantType, SSLType } from \"entities/Datasource/RestAPIForm\";\nimport { get, set } from \"lodash\";\n\nexport const datasourceToFormValues = (\n  datasource: Datasource,\n  currentEnvironment: string,\n): ApiDatasourceForm => {\n  const authType = get(\n    datasource,\n    `datasourceStorages.${currentEnvironment}.datasourceConfiguration.authentication.authenticationType`,\n    AuthType.NONE,\n  ) as AuthType;\n  const connection = get(\n    datasource,\n    `datasourceStorages.${currentEnvironment}.datasourceConfiguration.connection`,\n    {\n      ssl: {\n        authType: SSLType.DEFAULT,\n        authTypeControl: false,\n      } as SSL,\n    },\n  );\n  // set value of authTypeControl in connection if it is not present\n  // authTypeControl is true if authType is SELF_SIGNED_CERTIFICATE else false\n  if (!connection.ssl.authTypeControl) {\n    set(\n      connection,\n      \"ssl.authTypeControl\",\n      connection.ssl.authType === SSLType.SELF_SIGNED_CERTIFICATE,\n    );\n  }\n  const authentication = datasourceToFormAuthentication(\n    authType,\n    datasource,\n    currentEnvironment,\n  );\n  const isSendSessionEnabled =\n    get(\n      datasource,\n      `datasourceStorages.${currentEnvironment}.datasourceConfiguration.properties[0].value`,\n      \"N\",\n    ) === \"Y\";\n  const sessionSignatureKey = isSendSessionEnabled\n    ? // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      get(\n        datasource,\n        `datasourceStorages.${currentEnvironment}.datasourceConfiguration.properties[1].value`,\n      )!\n    : \"\";\n  return {\n    datasourceId: datasource.id,\n    workspaceId: datasource.workspaceId,\n    pluginId: datasource.pluginId,\n    isValid: isEnvironmentValid(datasource, currentEnvironment),\n    url: datasource.datasourceStorages[currentEnvironment]\n      ?.datasourceConfiguration?.url,\n    headers: cleanupProperties(\n      datasource.datasourceStorages[currentEnvironment]?.datasourceConfiguration\n        ?.headers,\n    ),\n    queryParameters: cleanupProperties(\n      datasource.datasourceStorages[currentEnvironment]?.datasourceConfiguration\n        ?.queryParameters,\n    ),\n    isSendSessionEnabled: isSendSessionEnabled,\n    sessionSignatureKey: sessionSignatureKey,\n    authType: authType,\n    authentication: authentication,\n    connection: connection,\n  } as ApiDatasourceForm;\n};\n\nexport const formValuesToDatasource = (\n  datasource: Datasource,\n  form: ApiDatasourceForm,\n  currentEnvironment: string,\n): Datasource => {\n  const authentication = formToDatasourceAuthentication(\n    form.authType,\n    form.authentication,\n  );\n  const dsStorages = datasource.datasourceStorages;\n  let dsStorage: DatasourceStorage;\n  if (dsStorages.hasOwnProperty(currentEnvironment)) {\n    dsStorage = dsStorages[currentEnvironment];\n  } else {\n    dsStorage = {\n      environmentId: currentEnvironment,\n      datasourceConfiguration: {\n        url: \"\",\n      },\n      isValid: false,\n      datasourceId: datasource.id,\n    };\n  }\n\n  if (!dsStorage.hasOwnProperty(\"environmentId\")) {\n    dsStorage.environmentId = currentEnvironment;\n  }\n\n  const connection = form.connection;\n  if (connection) {\n    const authTypeControl = connection.ssl.authTypeControl;\n    set(\n      connection,\n      \"ssl.authType\",\n      authTypeControl ? SSLType.SELF_SIGNED_CERTIFICATE : SSLType.DEFAULT,\n    );\n  }\n  const conf = {\n    url: form.url,\n    headers: cleanupProperties(form.headers),\n    queryParameters: cleanupProperties(form.queryParameters),\n    properties: [\n      {\n        key: \"isSendSessionEnabled\",\n        value: form.isSendSessionEnabled ? \"Y\" : \"N\",\n      },\n      { key: \"sessionSignatureKey\", value: form.sessionSignatureKey },\n    ],\n    authentication: authentication,\n    connection: form.connection,\n  };\n  set(dsStorage, \"datasourceConfiguration\", conf);\n  set(dsStorages, currentEnvironment, dsStorage);\n  return datasource;\n};\n\nconst formToDatasourceAuthentication = (\n  authType: AuthType,\n  authentication: Authentication | undefined,\n): Authentication | null => {\n  if (authType === AuthType.NONE || !authentication) return null;\n  if (\n    isClientCredentials(authType, authentication) ||\n    isAuthorizationCode(authType, authentication)\n  ) {\n    const oAuth2Common: Oauth2Common = {\n      authenticationType: AuthType.OAuth2,\n      accessTokenUrl: authentication.accessTokenUrl,\n      clientId: authentication.clientId,\n      headerPrefix: authentication.headerPrefix,\n      scopeString: authentication.scopeString,\n      clientSecret: authentication.clientSecret,\n      isAuthorizationHeader: authentication.isAuthorizationHeader,\n      isTokenHeader: authentication.isTokenHeader,\n      audience: authentication.audience,\n      resource: authentication.resource,\n      sendScopeWithRefreshToken: authentication.sendScopeWithRefreshToken,\n      refreshTokenClientCredentialsLocation:\n        authentication.refreshTokenClientCredentialsLocation,\n      useSelfSignedCert: authentication.useSelfSignedCert,\n    };\n    if (isClientCredentials(authType, authentication)) {\n      return {\n        ...oAuth2Common,\n        grantType: GrantType.ClientCredentials,\n        customTokenParameters: cleanupProperties(\n          authentication.customTokenParameters,\n        ),\n      };\n    }\n    if (isAuthorizationCode(authType, authentication)) {\n      return {\n        ...oAuth2Common,\n        grantType: GrantType.AuthorizationCode,\n        authorizationUrl: authentication.authorizationUrl,\n        isAuthorized: !!authentication.isAuthorized,\n        customAuthenticationParameters: cleanupProperties(\n          authentication.customAuthenticationParameters,\n        ),\n        expiresIn: authentication.expiresIn,\n      };\n    }\n  }\n  if (authType === AuthType.basic) {\n    if (\"username\" in authentication) {\n      const basic: Basic = {\n        authenticationType: AuthType.basic,\n        username: authentication.username,\n        password: authentication.password,\n        secretExists: authentication.secretExists,\n      };\n      return basic;\n    }\n  }\n  if (authType === AuthType.apiKey) {\n    if (\"label\" in authentication) {\n      const apiKey: ApiKey = {\n        authenticationType: AuthType.apiKey,\n        label: authentication.label,\n        value: authentication.value,\n        headerPrefix: authentication.headerPrefix,\n        addTo: authentication.addTo,\n      };\n      return apiKey;\n    }\n  }\n  if (authType === AuthType.bearerToken) {\n    if (\"bearerToken\" in authentication) {\n      const bearerToken: BearerToken = {\n        authenticationType: AuthType.bearerToken,\n        bearerToken: authentication.bearerToken,\n      };\n      return bearerToken;\n    }\n  }\n  return null;\n};\n\nconst datasourceToFormAuthentication = (\n  authType: AuthType,\n  datasource: Datasource,\n  currentEnvironment: string,\n): Authentication | undefined => {\n  if (\n    !datasource ||\n    !datasource.datasourceStorages[currentEnvironment]\n      ?.datasourceConfiguration ||\n    !datasource.datasourceStorages[currentEnvironment]?.datasourceConfiguration\n      .authentication\n  ) {\n    return;\n  }\n\n  const authentication =\n    datasource.datasourceStorages[currentEnvironment].datasourceConfiguration\n      .authentication || {};\n  if (\n    isClientCredentials(authType, authentication) ||\n    isAuthorizationCode(authType, authentication)\n  ) {\n    const oAuth2Common: Oauth2Common = {\n      authenticationType: AuthType.OAuth2,\n      accessTokenUrl: authentication.accessTokenUrl || \"\",\n      clientId: authentication.clientId || \"\",\n      headerPrefix: authentication.headerPrefix || \"\",\n      scopeString: authentication.scopeString || \"\",\n      clientSecret: authentication.clientSecret,\n      isTokenHeader: !!authentication.isTokenHeader,\n      isAuthorizationHeader: !!authentication.isAuthorizationHeader,\n      audience: authentication.audience || \"\",\n      resource: authentication.resource || \"\",\n      sendScopeWithRefreshToken:\n        authentication.sendScopeWithRefreshToken || false,\n      refreshTokenClientCredentialsLocation:\n        authentication.refreshTokenClientCredentialsLocation || \"BODY\",\n      useSelfSignedCert: authentication.useSelfSignedCert,\n    };\n    if (isClientCredentials(authType, authentication)) {\n      return {\n        ...oAuth2Common,\n        grantType: GrantType.ClientCredentials,\n        customTokenParameters: cleanupProperties(\n          authentication.customTokenParameters,\n        ),\n      };\n    }\n    if (isAuthorizationCode(authType, authentication)) {\n      return {\n        ...oAuth2Common,\n        grantType: GrantType.AuthorizationCode,\n        authorizationUrl: authentication.authorizationUrl || \"\",\n        customAuthenticationParameters: cleanupProperties(\n          authentication.customAuthenticationParameters,\n        ),\n        isAuthorized: !!authentication.isAuthorized,\n        isAuthorizationHeader:\n          typeof authentication.isAuthorizationHeader === \"undefined\"\n            ? true\n            : !!authentication.isAuthorizationHeader,\n        expiresIn: authentication.expiresIn,\n      };\n    }\n  }\n  if (authType === AuthType.basic) {\n    const basic: Basic = {\n      authenticationType: AuthType.basic,\n      username: authentication.username || \"\",\n      password: authentication.password || \"\",\n      secretExists: authentication.secretExists,\n    };\n    return basic;\n  }\n  if (authType === AuthType.apiKey) {\n    const apiKey: ApiKey = {\n      authenticationType: AuthType.apiKey,\n      label: authentication.label || \"\",\n      value: authentication.value || \"\",\n      headerPrefix: authentication.headerPrefix || \"\",\n      addTo: authentication.addTo || \"\",\n    };\n    return apiKey;\n  }\n  if (authType === AuthType.bearerToken) {\n    const bearerToken: BearerToken = {\n      authenticationType: AuthType.bearerToken,\n      bearerToken: authentication.bearerToken || \"\",\n    };\n    return bearerToken;\n  }\n};\n\nconst isClientCredentials = (\n  authType: AuthType,\n  val: any,\n): val is ClientCredentials => {\n  if (authType !== AuthType.OAuth2) return false;\n  // If there's no authentication object at all and it is oauth2, it is client credentials by default\n  if (!val) return true;\n  return get(val, \"grantType\") === GrantType.ClientCredentials;\n};\n\nconst isAuthorizationCode = (\n  authType: AuthType,\n  val: any,\n): val is AuthorizationCode => {\n  if (authType !== AuthType.OAuth2) return false;\n  return get(val, \"grantType\") === GrantType.AuthorizationCode;\n};\n\nconst cleanupProperties = (values: Property[] | undefined): Property[] => {\n  if (!Array.isArray(values)) return [];\n\n  const newValues: Property[] = [];\n  values.forEach((object: Property) => {\n    const isEmpty = Object.values(object).every((x) => x === \"\");\n    if (!isEmpty) {\n      newValues.push(object);\n    }\n  });\n  return newValues;\n};\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport type { WrappedFieldInputProps, WrappedFieldMetaProps } from \"redux-form\";\nimport type {\n  IconName,\n  IInputGroupProps,\n  IIntentProps,\n  MaybeElement,\n} from \"@blueprintjs/core\";\nimport { InputGroup } from \"@blueprintjs/core\";\nimport type { ComponentProps } from \"widgets/BaseComponent\";\nimport { Colors } from \"constants/Colors\";\nimport { replayHighlightClass } from \"globalStyles/portals\";\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport const TextInput = styled(({ hasError, ...rest }) => (\n  <InputGroup {...rest} />\n))<{ hasError: boolean }>`\n  flex: 1;\n  & input {\n    box-shadow: none;\n    border-radius: 0;\n    height: 36px;\n    border: 1px solid\n      ${(props) =>\n        props.hasError ? props.theme.colors.error : props.theme.colors.border};\n    background-color: ${(props) =>\n      props.hasError ? Colors.FAIR_PINK : \"#fff\"};\n    padding: 8px 12px 9px;\n    color: ${(props) =>\n      props.hasError ? Colors.DANGER_SOLID : Colors.CODE_GRAY};\n    &:focus {\n      border-color: ${(props) =>\n        props.hasError\n          ? props.theme.colors.error\n          : \"var(--appsmith-input-focus-border-color)\"};\n      background-color: ${(props) => props.theme.colors.textOnDarkBG};\n      outline: 0;\n      box-shadow: none;\n    }\n    &:hover {\n      background: ${(props) => (props.hasError ? \"\" : \"#FAFAFA\")};\n    }\n  }\n  &.bp3-input-group {\n    .bp3-input:not(:first-child) {\n      padding-left: 35px;\n    }\n    .bp3-icon {\n      border-radius: 4px 0 0 4px;\n      margin: 0;\n      height: 32px;\n      width: 30px;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      background-color: #eef2f5;\n      svg {\n        height: 20px;\n        width: 20px;\n        path {\n          fill: #979797;\n        }\n      }\n    }\n  }\n`;\n\nconst TextInputError = styled.p`\n  color: ${Colors.DANGER_SOLID};\n  font-size: 12px;\n  margin-top: 6px;\n`;\n\nconst InputContainer = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  position: relative;\n`;\n\nexport interface TextInputProps extends IInputGroupProps {\n  /** TextInput Placeholder */\n  placeholder?: string;\n  intent?: IIntentProps[\"intent\"];\n  input?: Partial<WrappedFieldInputProps>;\n  meta?: Partial<WrappedFieldMetaProps>;\n  icon?: IconName | MaybeElement;\n  /** Should show error when defined */\n  showError?: boolean;\n  /** Additional classname */\n  className?: string;\n  type?: string;\n  refHandler?: any;\n  noValidate?: boolean;\n  readonly?: boolean;\n  autoFocus?: boolean;\n}\n\ninterface TextInputState {\n  inputIsFocused: boolean;\n}\n\nexport class BaseTextInput extends Component<TextInputProps, TextInputState> {\n  constructor(props: TextInputProps) {\n    super(props);\n    this.state = {\n      inputIsFocused: false,\n    };\n  }\n\n  handleFocus = (e: React.FocusEvent) => {\n    this.setState({ inputIsFocused: true });\n    if (this.props.input && this.props.input.onFocus) {\n      this.props.input.onFocus(e);\n    }\n  };\n  handleBlur = (e: React.FocusEvent) => {\n    this.setState({ inputIsFocused: false });\n    if (this.props.input && this.props.input.onBlur) {\n      this.props.input.onBlur(e);\n    }\n  };\n  render() {\n    const { className, input, meta, refHandler, showError, ...rest } =\n      this.props;\n    const hasError = !!(\n      showError &&\n      meta &&\n      (meta.touched || meta.active) &&\n      meta.error\n    );\n\n    return (\n      <InputContainer className={className}>\n        <TextInput\n          hasError={hasError}\n          inputRef={refHandler}\n          {...input}\n          autoComplete={\"off\"}\n          onBlur={this.handleBlur}\n          onFocus={this.handleFocus}\n          {...rest}\n          className={replayHighlightClass}\n          tabIndex={0}\n        />\n        {hasError && <TextInputError>{meta ? meta.error : \"\"}</TextInputError>}\n      </InputContainer>\n    );\n  }\n}\n\n/**\n * Text Input Component\n * Has Icon, placholder, errors, etc.\n */\nfunction TextInputComponent(props: TextInputProps & ComponentProps) {\n  return <BaseTextInput {...props} />;\n}\n\nexport default TextInputComponent;\n","import React, { createRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport copy from \"copy-to-clipboard\";\nimport { BaseTextInput } from \"components/designSystems/appsmith/TextInputComponent\";\nimport { BaseButton } from \"./BaseButton\";\n\nconst Wrapper = styled.div`\n  display: flex;\n\n  div {\n    flex-basis: calc(100% - 90px);\n  }\n  input:disabled {\n    color: #555;\n  }\n  button {\n    flex-basis: 80px;\n    margin-left: 10px;\n  }\n`;\n\nfunction CopyToClipboard(props: any) {\n  const { copyText } = props;\n  const copyURLInput = createRef<HTMLInputElement>();\n  const [isCopied, setIsCopied] = useState(false);\n\n  const copyToClipboard = (url: string) => {\n    copy(url);\n    setIsCopied(true);\n    setTimeout(() => {\n      setIsCopied(false);\n    }, 3000);\n  };\n\n  const selectText = () => {\n    if (copyURLInput.current) {\n      copyURLInput.current.setSelectionRange(0, copyText.length);\n    }\n  };\n  return (\n    <Wrapper>\n      <BaseTextInput\n        defaultValue={copyText}\n        disabled\n        fill\n        onChange={() => {\n          selectText();\n        }}\n      />\n\n      <BaseButton\n        onClick={() => {\n          copyToClipboard(copyText);\n        }}\n        text={isCopied ? \"Copied\" : \"Copy\"}\n      />\n    </Wrapper>\n  );\n}\n\nexport default CopyToClipboard;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { DATASOURCE_REST_API_FORM } from \"@appsmith/constants/forms\";\nimport type { Datasource } from \"entities/Datasource\";\nimport type { InjectedFormProps } from \"redux-form\";\nimport { getFormMeta, reduxForm } from \"redux-form\";\nimport AnalyticsUtil from \"@appsmith/utils/AnalyticsUtil\";\nimport FormControl from \"pages/Editor/FormControl\";\nimport { StyledInfo } from \"components/formControls/InputTextControl\";\nimport { connect } from \"react-redux\";\nimport type { AppState } from \"@appsmith/reducers\";\nimport { Callout } from \"design-system\";\nimport {\n  createDatasourceFromForm,\n  toggleSaveActionFlag,\n  updateDatasource,\n} from \"actions/datasourceActions\";\nimport type { ReduxAction } from \"@appsmith/constants/ReduxActionConstants\";\nimport {\n  datasourceToFormValues,\n  formValuesToDatasource,\n} from \"transformers/RestAPIDatasourceFormTransformer\";\nimport type {\n  ApiDatasourceForm,\n  AuthorizationCode,\n  ClientCredentials,\n} from \"entities/Datasource/RestAPIForm\";\nimport {\n  ApiKeyAuthType,\n  AuthType,\n  GrantType,\n} from \"entities/Datasource/RestAPIForm\";\nimport { createMessage, INVALID_URL } from \"@appsmith/constants/messages\";\nimport Collapsible from \"./Collapsible\";\nimport _ from \"lodash\";\nimport FormLabel from \"components/editorComponents/FormLabel\";\nimport CopyToClipBoard from \"components/designSystems/appsmith/CopyToClipBoard\";\nimport { updateReplayEntity } from \"actions/pageActions\";\nimport { ENTITY_TYPE } from \"@appsmith/entities/AppsmithConsole/utils\";\nimport { TEMP_DATASOURCE_ID } from \"constants/Datasource\";\nimport { Form } from \"./DBForm\";\nimport { selectFeatureFlagCheck } from \"@appsmith/selectors/featureFlagsSelectors\";\nimport { getHasManageDatasourcePermission } from \"@appsmith/utils/BusinessFeatures/permissionPageHelpers\";\nimport { FEATURE_FLAG } from \"@appsmith/entities/FeatureFlag\";\n\ninterface DatasourceRestApiEditorProps {\n  initializeReplayEntity: (id: string, data: any) => void;\n  updateDatasource: (\n    formValues: Datasource,\n    currEditingEnvId: string,\n    onSuccess?: ReduxAction<unknown>,\n  ) => void;\n  currentEnvironment: string;\n  currentEnvironmentName: string;\n  isSaving: boolean;\n  applicationId: string;\n  datasourceId: string;\n  pageId: string;\n  location: {\n    search: string;\n  };\n  datasource: Datasource;\n  formData: ApiDatasourceForm;\n  formName: string;\n  pluginName: string;\n  pluginPackageName: string;\n  formMeta: any;\n  messages?: Array<string>;\n  datasourceName: string;\n  createDatasource: (\n    data: Datasource,\n    onSuccess?: ReduxAction<unknown>,\n  ) => void;\n  toggleSaveActionFlag: (flag: boolean) => void;\n  triggerSave?: boolean;\n  datasourceDeleteTrigger: () => void;\n  viewMode: boolean;\n  isFeatureEnabled: boolean;\n}\n\ntype Props = DatasourceRestApiEditorProps &\n  InjectedFormProps<ApiDatasourceForm, DatasourceRestApiEditorProps>;\n\nconst FormInputContainer = styled.div`\n  margin-top: 16px;\n  .t--save-and-authorize-datasource {\n    margin-left: 0;\n  }\n`;\n\nclass DatasourceRestAPIEditor extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n  }\n  componentDidMount() {\n    // set replay data\n    this.props.initializeReplayEntity(\n      this.props.datasource.id,\n      this.props.initialValues,\n    );\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (!this.props.formData) return;\n\n    const { authType } = this.props.formData;\n\n    if (authType === AuthType.OAuth2) {\n      this.ensureOAuthDefaultsAreCorrect();\n    } else if (authType === AuthType.apiKey) {\n      this.ensureAPIKeyDefaultsAreCorrect();\n    }\n\n    // if trigger save changed, save datasource\n    if (\n      prevProps.triggerSave !== this.props.triggerSave &&\n      this.props.triggerSave\n    ) {\n      this.save();\n    }\n  }\n\n  isDirty(prop: any) {\n    const { formMeta } = this.props;\n    return _.get(formMeta, prop + \".visited\", false);\n  }\n\n  ensureAPIKeyDefaultsAreCorrect = () => {\n    if (!this.props.formData) return;\n    const { authentication } = this.props.formData;\n    if (!authentication || !_.get(authentication, \"addTo\")) {\n      this.props.change(\"authentication.addTo\", ApiKeyAuthType.Header);\n    }\n    if (!authentication || !_.get(authentication, \"headerPrefix\")) {\n      this.props.change(\"authentication.headerPefix\", \"ApiKeyAuthType.Header\");\n    }\n  };\n\n  ensureOAuthDefaultsAreCorrect = () => {\n    if (!this.props.formData) return;\n    const { authentication } = this.props.formData;\n\n    if (!authentication || !_.get(authentication, \"grantType\")) {\n      this.props.change(\n        \"authentication.grantType\",\n        GrantType.ClientCredentials,\n      );\n    }\n    if (_.get(authentication, \"isTokenHeader\") === undefined) {\n      this.props.change(\"authentication.isTokenHeader\", true);\n    }\n    if (\n      !this.isDirty(\"authentication.headerPrefix\") &&\n      _.get(authentication, \"headerPrefix\") === undefined\n    ) {\n      this.props.change(\"authentication.headerPrefix\", \"Bearer\");\n    }\n\n    if (_.get(authentication, \"grantType\") === GrantType.AuthorizationCode) {\n      if (_.get(authentication, \"isAuthorizationHeader\") === undefined) {\n        this.props.change(\"authentication.isAuthorizationHeader\", true);\n      }\n    }\n\n    if (_.get(authentication, \"grantType\") === GrantType.ClientCredentials) {\n      if (_.get(authentication, \"isAuthorizationHeader\") === undefined) {\n        this.props.change(\"authentication.isAuthorizationHeader\", false);\n      }\n    }\n\n    if (_.get(authentication, \"grantType\") === GrantType.AuthorizationCode) {\n      if (\n        _.get(authentication, \"sendScopeWithRefreshToken\") === undefined ||\n        _.get(authentication, \"sendScopeWithRefreshToken\") === \"\"\n      ) {\n        this.props.change(\"authentication.sendScopeWithRefreshToken\", false);\n      }\n    }\n\n    if (_.get(authentication, \"grantType\") === GrantType.AuthorizationCode) {\n      if (\n        _.get(authentication, \"refreshTokenClientCredentialsLocation\") ===\n          undefined ||\n        _.get(authentication, \"refreshTokenClientCredentialsLocation\") === \"\"\n      ) {\n        this.props.change(\n          \"authentication.refreshTokenClientCredentialsLocation\",\n          \"BODY\",\n        );\n      }\n    }\n  };\n\n  validate = (): boolean => {\n    const { datasource, datasourceId, formData, isFeatureEnabled } = this.props;\n    const createMode = datasourceId === TEMP_DATASOURCE_ID;\n    const canManageDatasource = getHasManageDatasourcePermission(\n      isFeatureEnabled,\n      datasource?.userPermissions || [],\n    );\n    if (!formData) return true;\n    return !formData.url || (!createMode && !canManageDatasource);\n  };\n\n  getSanitizedFormData = () =>\n    formValuesToDatasource(\n      this.props.datasource,\n      this.props.formData,\n      this.props.currentEnvironment,\n    );\n\n  save = (onSuccess?: ReduxAction<unknown>) => {\n    this.props.toggleSaveActionFlag(true);\n    const normalizedValues = this.getSanitizedFormData();\n\n    AnalyticsUtil.logEvent(\"SAVE_DATA_SOURCE_CLICK\", {\n      pageId: this.props.pageId,\n      appId: this.props.applicationId,\n      environmentId: this.props.currentEnvironment,\n      environmentName: this.props.currentEnvironmentName,\n      pluginName: this.props.pluginName || \"\",\n      pluginPackageName: this.props.pluginPackageName || \"\",\n    });\n\n    if (this.props.datasource.id !== TEMP_DATASOURCE_ID) {\n      return this.props.updateDatasource(\n        normalizedValues,\n        this.props.currentEnvironment,\n        onSuccess,\n      );\n    }\n\n    this.props.createDatasource(\n      {\n        ...normalizedValues,\n        name: this.props.datasourceName,\n      },\n      onSuccess,\n    );\n  };\n\n  urlValidator = (value: string) => {\n    const validationRegex = \"^(http|https)://\";\n    if (value) {\n      const regex = new RegExp(validationRegex);\n\n      return regex.test(value)\n        ? { isValid: true, message: \"\" }\n        : {\n            isValid: false,\n            message: createMessage(INVALID_URL),\n          };\n    }\n\n    return { isValid: true, message: \"\" };\n  };\n\n  render = () => {\n    return (\n      <Form\n        onSubmit={(e) => {\n          e.preventDefault();\n        }}\n        viewMode={this.props.viewMode}\n      >\n        {this.renderEditor()}\n      </Form>\n    );\n  };\n\n  renderEditor = () => {\n    const { formData, messages } = this.props;\n    if (!formData) return;\n\n    return (\n      <>\n        {messages &&\n          messages.map((msg, i) => (\n            <Callout key={i} kind=\"warning\">\n              {msg}\n            </Callout>\n          ))}\n        {this.renderGeneralSettings()}\n        {this.renderOauth2AdvancedSettings()}\n      </>\n    );\n  };\n\n  renderGeneralSettings = () => {\n    const { formData } = this.props;\n\n    return (\n      <section\n        className=\"t--section-general\"\n        data-location-id=\"section-General\"\n        data-testid=\"section-General\"\n      >\n        <FormInputContainer data-location-id={btoa(\"url\")}>\n          {this.renderInputTextControlViaFormControl({\n            configProperty: \"url\",\n            label: \"URL\",\n            placeholderText: \"https://example.com\",\n            dataType: \"TEXT\",\n            encrypted: false,\n            isRequired: true,\n            fieldValidator: this.urlValidator,\n          })}\n        </FormInputContainer>\n        <FormInputContainer data-location-id={btoa(\"isSendSessionEnabled\")}>\n          {this.renderCheckboxViaFormControl(\n            \"isSendSessionEnabled\",\n            \"Send Appsmith signature header\",\n            \"\",\n            false,\n          )}\n        </FormInputContainer>\n        {formData.isSendSessionEnabled && (\n          <FormInputContainer data-location-id={btoa(\"sessionSignatureKey\")}>\n            {this.renderInputTextControlViaFormControl({\n              configProperty: \"sessionSignatureKey\",\n              label: \"Session details signature key\",\n              placeholderText: \"\",\n              dataType: \"TEXT\",\n              encrypted: false,\n              isRequired: false,\n            })}\n          </FormInputContainer>\n        )}\n        <FormInputContainer data-location-id={btoa(\"ssl\")}>\n          {this.renderCheckboxViaFormControl(\n            \"connection.ssl.authTypeControl\",\n            \"Use Self-Signed Certificate\",\n            \"\",\n            false,\n          )}\n        </FormInputContainer>\n        {this.renderSelfSignedCertificateFields()}\n        <Collapsible title=\"Headers\">\n          <FormInputContainer\n            className=\"t--headers-array\"\n            data-location-id={btoa(\"headers\")}\n          >\n            {this.renderKeyValueControlViaFormControl(\"headers\", \"\", \"\", false)}\n          </FormInputContainer>\n        </Collapsible>\n        <Collapsible title=\"Query parameters\">\n          <FormInputContainer data-location-id={btoa(\"queryParameters\")}>\n            {this.renderKeyValueControlViaFormControl(\n              \"queryParameters\",\n              \"\",\n              \"\",\n              false,\n            )}\n          </FormInputContainer>\n        </Collapsible>\n        <Collapsible title=\"Authentication\">\n          <FormInputContainer data-location-id={btoa(\"authType\")}>\n            {this.renderDropdownControlViaFormControl(\n              \"authType\",\n              [\n                {\n                  label: \"None\",\n                  value: AuthType.NONE,\n                },\n                {\n                  label: \"Basic\",\n                  value: AuthType.basic,\n                },\n                {\n                  label: \"OAuth 2.0\",\n                  value: AuthType.OAuth2,\n                },\n                {\n                  label: \"API key\",\n                  value: AuthType.apiKey,\n                },\n                {\n                  label: \"Bearer token\",\n                  value: AuthType.bearerToken,\n                },\n              ],\n              \"Authentication type\",\n              \"\",\n              false,\n              \"\",\n            )}\n            {this.renderAuthFields()}\n          </FormInputContainer>\n        </Collapsible>\n      </section>\n    );\n  };\n\n  renderSelfSignedCertificateFields = () => {\n    const { connection } = this.props.formData;\n    if (connection?.ssl.authTypeControl) {\n      return (\n        <div style={{ marginTop: \"16px\" }}>\n          {this.renderFilePickerControlViaFormControl(\n            \"connection.ssl.certificateFile\",\n            \"Upload Certificate\",\n            \"\",\n            false,\n            true,\n          )}\n        </div>\n      );\n    }\n  };\n\n  renderAuthFields = () => {\n    const { authType } = this.props.formData;\n\n    let content;\n    if (authType === AuthType.OAuth2) {\n      content = this.renderOauth2();\n    } else if (authType === AuthType.basic) {\n      content = this.renderBasic();\n    } else if (authType === AuthType.apiKey) {\n      content = this.renderApiKey();\n    } else if (authType === AuthType.bearerToken) {\n      content = this.renderBearerToken();\n    }\n    if (content) {\n      return content;\n    }\n  };\n\n  renderApiKey = () => {\n    const { authentication } = this.props.formData;\n    return (\n      <>\n        <FormInputContainer data-location-id={btoa(\"authentication.label\")}>\n          {this.renderInputTextControlViaFormControl({\n            configProperty: \"authentication.label\",\n            label: \"Key\",\n            placeholderText: \"api_key\",\n            dataType: \"TEXT\",\n            encrypted: false,\n            isRequired: false,\n          })}\n        </FormInputContainer>\n        <FormInputContainer>\n          {this.renderInputTextControlViaFormControl({\n            configProperty: \"authentication.value\",\n            label: \"Value\",\n            placeholderText: \"value\",\n            dataType: \"TEXT\",\n            encrypted: true,\n            isRequired: false,\n          })}\n        </FormInputContainer>\n        <FormInputContainer>\n          {this.renderDropdownControlViaFormControl(\n            \"authentication.addTo\",\n            [\n              {\n                label: \"Query Params\",\n                value: ApiKeyAuthType.QueryParams,\n              },\n              {\n                label: \"Header\",\n                value: ApiKeyAuthType.Header,\n              },\n            ],\n            \"Add To\",\n            \"\",\n            false,\n            \"\",\n          )}\n        </FormInputContainer>\n        {_.get(authentication, \"addTo\") == \"header\" && (\n          <FormInputContainer\n            data-location-id={btoa(\"authentication.headerPrefix\")}\n          >\n            {this.renderInputTextControlViaFormControl({\n              configProperty: \"authentication.headerPrefix\",\n              label: \"Header prefix\",\n              placeholderText: \"eg: Bearer \",\n              dataType: \"TEXT\",\n              encrypted: false,\n              isRequired: false,\n            })}\n          </FormInputContainer>\n        )}\n      </>\n    );\n  };\n\n  renderBearerToken = () => {\n    return (\n      <FormInputContainer data-location-id={btoa(\"authentication.bearerToken\")}>\n        {this.renderInputTextControlViaFormControl({\n          configProperty: \"authentication.bearerToken\",\n          label: \"Bearer token\",\n          placeholderText: \"Bearer token\",\n          dataType: \"TEXT\",\n          encrypted: true,\n          isRequired: false,\n        })}\n      </FormInputContainer>\n    );\n  };\n\n  renderBasic = () => {\n    return (\n      <>\n        <FormInputContainer data-location-id={btoa(\"authentication.username\")}>\n          {this.renderInputTextControlViaFormControl({\n            configProperty: \"authentication.username\",\n            label: \"Username\",\n            placeholderText: \"Username\",\n            dataType: \"TEXT\",\n            encrypted: false,\n            isRequired: false,\n          })}\n        </FormInputContainer>\n        <FormInputContainer data-location-id={btoa(\"authentication.password\")}>\n          {this.renderInputTextControlViaFormControl({\n            configProperty: \"authentication.password\",\n            label: \"Password\",\n            placeholderText: \"Password\",\n            dataType: \"PASSWORD\",\n            encrypted: true,\n            isRequired: false,\n            isSecretExistsPath: \"authentication.secretExists.password\",\n          })}\n        </FormInputContainer>\n      </>\n    );\n  };\n\n  renderOauth2 = () => {\n    const authentication = this.props.formData.authentication as\n      | ClientCredentials\n      | AuthorizationCode\n      | undefined;\n    if (!authentication) return;\n    let content;\n    switch (authentication.grantType) {\n      case GrantType.AuthorizationCode:\n        content = this.renderOauth2AuthorizationCode();\n        break;\n      case GrantType.ClientCredentials:\n        content = this.renderOauth2ClientCredentials();\n        break;\n    }\n\n    return (\n      <>\n        <FormInputContainer data-location-id={btoa(\"authentication.grantType\")}>\n          {this.renderDropdownControlViaFormControl(\n            \"authentication.grantType\",\n            [\n              {\n                label: \"Client Credentials\",\n                value: GrantType.ClientCredentials,\n              },\n              {\n                label: \"Authorization Code\",\n                value: GrantType.AuthorizationCode,\n              },\n            ],\n            \"Grant type\",\n            \"\",\n            false,\n            \"\",\n          )}\n        </FormInputContainer>\n        {content}\n      </>\n    );\n  };\n\n  renderOauth2Common = () => {\n    const { formData } = this.props;\n    return (\n      <>\n        <FormInputContainer\n          data-location-id={btoa(\"authentication.isTokenHeader\")}\n        >\n          {this.renderDropdownControlViaFormControl(\n            \"authentication.isTokenHeader\",\n            [\n              {\n                label: \"Request Header\",\n                value: true,\n              },\n              {\n                label: \"Request URL\",\n                value: false,\n              },\n            ],\n            \"Add Access Token To\",\n            \"\",\n            false,\n            \"\",\n            !!_.get(formData.authentication, \"isTokenHeader\"),\n          )}\n        </FormInputContainer>\n        {_.get(formData.authentication, \"isTokenHeader\") && (\n          <FormInputContainer\n            data-location-id={btoa(\"authentication.headerPrefix\")}\n          >\n            {this.renderInputTextControlViaFormControl({\n              configProperty: \"authentication.headerPrefix\",\n              label: \"Header prefix\",\n              placeholderText: \"eg: Bearer \",\n              dataType: \"TEXT\",\n              encrypted: false,\n              isRequired: false,\n            })}\n          </FormInputContainer>\n        )}\n        <FormInputContainer\n          data-location-id={btoa(\"authentication.accessTokenUrl\")}\n        >\n          {this.renderInputTextControlViaFormControl({\n            configProperty: \"authentication.accessTokenUrl\",\n            label: \"Access token URL\",\n            placeholderText: \"https://example.com/login/oauth/access_token\",\n            dataType: \"TEXT\",\n            encrypted: false,\n            isRequired: false,\n            fieldValidator: this.urlValidator,\n          })}\n        </FormInputContainer>\n        <FormInputContainer data-location-id={btoa(\"authentication.clientId\")}>\n          {this.renderInputTextControlViaFormControl({\n            configProperty: \"authentication.clientId\",\n            label: \"Client ID\",\n            placeholderText: \"Client ID\",\n            dataType: \"TEXT\",\n            encrypted: false,\n            isRequired: false,\n          })}\n        </FormInputContainer>\n        <FormInputContainer\n          data-location-id={btoa(\"authentication.clientSecret\")}\n        >\n          {this.renderInputTextControlViaFormControl({\n            configProperty: \"authentication.clientSecret\",\n            label: \"Client secret\",\n            placeholderText: \"Client secret\",\n            dataType: \"PASSWORD\",\n            encrypted: true,\n            isRequired: false,\n            isSecretExistsPath: \"authentication.secretExists.clientSecret\",\n          })}\n        </FormInputContainer>\n        <FormInputContainer\n          data-location-id={btoa(\"authentication.scopeString\")}\n        >\n          {this.renderInputTextControlViaFormControl({\n            configProperty: \"authentication.scopeString\",\n            label: \"Scope(s)\",\n            placeholderText: \"e.g. read, write\",\n            dataType: \"TEXT\",\n            encrypted: false,\n            isRequired: false,\n          })}\n        </FormInputContainer>\n        <FormInputContainer\n          data-location-id={btoa(\"authentication.isAuthorizationHeader\")}\n        >\n          {this.renderDropdownControlViaFormControl(\n            \"authentication.isAuthorizationHeader\",\n            [\n              {\n                label: \"Send as Basic Auth header\",\n                value: true,\n              },\n              {\n                label: \"Send client credentials in body\",\n                value: false,\n              },\n            ],\n            \"Client Authentication\",\n            \"\",\n            false,\n            \"\",\n            !!_.get(formData.authentication, \"isAuthorizationHeader\"),\n          )}\n        </FormInputContainer>\n      </>\n    );\n  };\n\n  renderOauth2AdvancedSettings = () => {\n    const { authentication, authType, connection } = this.props.formData;\n    const isGrantTypeAuthorizationCode =\n      _.get(authentication, \"grantType\") === GrantType.AuthorizationCode;\n    const isAuthenticationTypeOAuth2 = authType === AuthType.OAuth2;\n    const isConnectSelfSigned = _.get(connection, \"ssl.authTypeControl\");\n\n    if (\n      !isAuthenticationTypeOAuth2 ||\n      !(isGrantTypeAuthorizationCode || isConnectSelfSigned)\n    )\n      return null;\n\n    return (\n      <Collapsible title=\"Advanced Settings\">\n        {isGrantTypeAuthorizationCode && (\n          <FormInputContainer\n            data-location-id={btoa(\"authentication.sendScopeWithRefreshToken\")}\n          >\n            {this.renderDropdownControlViaFormControl(\n              \"authentication.sendScopeWithRefreshToken\",\n              [\n                {\n                  label: \"Yes\",\n                  value: true,\n                },\n                {\n                  label: \"No\",\n                  value: false,\n                },\n              ],\n              \"Send scope with refresh token\",\n              \"\",\n              false,\n              \"\",\n              !!_.get(authentication, \"sendScopeWithRefreshToken\"),\n            )}\n          </FormInputContainer>\n        )}\n        {isGrantTypeAuthorizationCode && (\n          <FormInputContainer\n            data-location-id={btoa(\n              \"authentication.refreshTokenClientCredentialsLocation\",\n            )}\n          >\n            {this.renderDropdownControlViaFormControl(\n              \"authentication.refreshTokenClientCredentialsLocation\",\n              [\n                {\n                  label: \"Body\",\n                  value: \"BODY\",\n                },\n                {\n                  label: \"Header\",\n                  value: \"HEADER\",\n                },\n              ],\n              \"Send client credentials with (on refresh token):\",\n              \"\",\n              false,\n              \"\",\n            )}\n          </FormInputContainer>\n        )}\n        {isConnectSelfSigned && (\n          <FormInputContainer\n            data-location-id={btoa(\"authentication.useSelfSignedCert\")}\n          >\n            {this.renderCheckboxViaFormControl(\n              \"authentication.useSelfSignedCert\",\n              \"Use Self-Signed Certificate for Authorization requests\",\n              \"\",\n              false,\n            )}\n          </FormInputContainer>\n        )}\n      </Collapsible>\n    );\n  };\n\n  renderOauth2CommonAdvanced = () => {\n    return (\n      <>\n        <FormInputContainer data-location-id={btoa(\"authentication.audience\")}>\n          {this.renderInputTextControlViaFormControl({\n            configProperty: \"authentication.audience\",\n            label: \"Audience\",\n            placeholderText: \"https://example.com/oauth/audience\",\n            dataType: \"TEXT\",\n            encrypted: false,\n            isRequired: false,\n          })}\n        </FormInputContainer>\n        <FormInputContainer data-location-id={btoa(\"authentication.resource\")}>\n          {this.renderInputTextControlViaFormControl({\n            configProperty: \"authentication.resource\",\n            label: \"Resource\",\n            placeholderText: \"https://example.com/oauth/resource\",\n            dataType: \"TEXT\",\n            encrypted: false,\n            isRequired: false,\n          })}\n        </FormInputContainer>\n      </>\n    );\n  };\n\n  renderOauth2ClientCredentials = () => {\n    return (\n      <>\n        {this.renderOauth2Common()}\n        {this.renderOauth2CommonAdvanced()}\n      </>\n    );\n  };\n\n  renderOauth2AuthorizationCode = () => {\n    const { formData } = this.props;\n\n    const redirectURL =\n      window.location.origin + \"/api/v1/datasources/authorize\";\n    return (\n      <>\n        {this.renderOauth2Common()}\n        <FormInputContainer\n          data-location-id={btoa(\"authentication.authorizationUrl\")}\n        >\n          {this.renderInputTextControlViaFormControl({\n            configProperty: \"authentication.authorizationUrl\",\n            label: \"Authorization URL\",\n            placeholderText: \"https://example.com/login/oauth/authorize\",\n            dataType: \"TEXT\",\n            encrypted: false,\n            isRequired: false,\n          })}\n        </FormInputContainer>\n        <FormInputContainer>\n          <div style={{ width: \"20vw\" }}>\n            <FormLabel>\n              Redirect URL\n              <br />\n              <StyledInfo>\n                Url that the oauth server should redirect to\n              </StyledInfo>\n            </FormLabel>\n            <CopyToClipBoard copyText={redirectURL} />\n          </div>\n        </FormInputContainer>\n        <FormInputContainer\n          data-location-id={btoa(\n            \"authentication.customAuthenticationParameters\",\n          )}\n        >\n          {this.renderKeyValueControlViaFormControl(\n            \"authentication.customAuthenticationParameters\",\n            \"Custom Authentication Parameters\",\n            \"\",\n            false,\n          )}\n        </FormInputContainer>\n        <FormInputContainer data-location-id={btoa(\"authentication.expiresIn\")}>\n          {this.renderInputTextControlViaFormControl({\n            configProperty: \"authentication.expiresIn\",\n            label: \"Authorization expires in (seconds)\",\n            placeholderText: \"3600\",\n            dataType: \"NUMBER\",\n            encrypted: false,\n            isRequired: false,\n          })}\n        </FormInputContainer>\n\n        {!_.get(formData.authentication, \"isAuthorizationHeader\", true) &&\n          this.renderOauth2CommonAdvanced()}\n      </>\n    );\n  };\n\n  // All components in formControls must be rendered via FormControl.\n  // FormControl is the common wrapper for all formcontrol components and contains common elements i.e. label, subtitle, helpertext\n  renderInputTextControlViaFormControl({\n    configProperty,\n    dataType,\n    encrypted,\n    fieldValidator,\n    isRequired,\n    isSecretExistsPath,\n    label,\n    placeholderText,\n  }: {\n    configProperty: string;\n    label: string;\n    placeholderText: string;\n    dataType: \"TEXT\" | \"PASSWORD\" | \"NUMBER\";\n    encrypted: boolean;\n    isRequired: boolean;\n    fieldValidator?: (value: string) => { isValid: boolean; message: string };\n    isSecretExistsPath?: string;\n  }) {\n    return (\n      <FormControl\n        config={{\n          id: \"\",\n          isValid: false,\n          isRequired: isRequired,\n          controlType: \"INPUT_TEXT\",\n          dataType: dataType,\n          configProperty: configProperty,\n          encrypted: encrypted,\n          label: label,\n          conditionals: {},\n          placeholderText: placeholderText,\n          formName: this.props.formName,\n          validator: fieldValidator,\n          isSecretExistsPath,\n        }}\n        formName={this.props.formName}\n        multipleConfig={[]}\n      />\n    );\n  }\n\n  renderDropdownControlViaFormControl(\n    configProperty: string,\n    options: {\n      label: string;\n      value: string | boolean;\n    }[],\n    label: string,\n    placeholderText: string,\n    isRequired: boolean,\n    subtitle?: string,\n    initialValue?: any,\n  ) {\n    const config = {\n      id: \"\",\n      isValid: false,\n      isRequired: isRequired,\n      controlType: \"DROP_DOWN\",\n      configProperty: configProperty,\n      options: options,\n      subtitle: subtitle,\n      label: label,\n      conditionals: {},\n      placeholderText: placeholderText,\n      formName: this.props.formName,\n      initialValue: initialValue,\n    };\n    return (\n      <FormControl\n        config={config}\n        formName={this.props.formName}\n        multipleConfig={[]}\n      />\n    );\n  }\n\n  renderKeyValueControlViaFormControl(\n    configProperty: string,\n    label: string,\n    placeholderText: string,\n    isRequired: boolean,\n  ) {\n    const config = {\n      id: \"\",\n      configProperty: configProperty,\n      isValid: false,\n      controlType: \"KEYVALUE_ARRAY\",\n      placeholderText: placeholderText,\n      label: label,\n      conditionals: {},\n      formName: this.props.formName,\n      isRequired: isRequired,\n    };\n    return (\n      <FormControl\n        config={config}\n        formName={this.props.formName}\n        multipleConfig={[]}\n      />\n    );\n  }\n\n  renderFilePickerControlViaFormControl(\n    configProperty: string,\n    label: string,\n    placeholderText: string,\n    isRequired: boolean,\n    encrypted: boolean,\n  ) {\n    const config = {\n      id: \"\",\n      configProperty: configProperty,\n      isValid: false,\n      controlType: \"FILE_PICKER\",\n      placeholderText: placeholderText,\n      encrypted: encrypted,\n      label: label,\n      conditionals: {},\n      formName: this.props.formName,\n      isRequired: isRequired,\n    };\n    return (\n      <FormControl\n        config={config}\n        formName={this.props.formName}\n        multipleConfig={[]}\n      />\n    );\n  }\n\n  renderCheckboxViaFormControl(\n    configProperty: string,\n    label: string,\n    placeholderText: string,\n    isRequired: boolean,\n  ) {\n    return (\n      <FormControl\n        config={{\n          id: \"\",\n          isValid: false,\n          isRequired: isRequired,\n          controlType: \"CHECKBOX\",\n          configProperty: configProperty,\n          label: label,\n          conditionals: {},\n          placeholderText: placeholderText,\n          formName: this.props.formName,\n        }}\n        formName={this.props.formName}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = (state: AppState, props: any) => {\n  const { currentEnvironment, datasource, formName } = props;\n  const hintMessages = datasource && datasource.messages;\n\n  const isFeatureEnabled = selectFeatureFlagCheck(\n    state,\n    FEATURE_FLAG.license_gac_enabled,\n  );\n\n  return {\n    initialValues: datasourceToFormValues(datasource, currentEnvironment),\n    formMeta: getFormMeta(formName)(state),\n    messages: hintMessages,\n    datasourceName: datasource?.name ?? \"\",\n    isFeatureEnabled,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    initializeReplayEntity: (id: string, data: any) =>\n      dispatch(updateReplayEntity(id, data, ENTITY_TYPE.DATASOURCE)),\n    updateDatasource: (\n      formData: any,\n      currEditingEnvId: string,\n      onSuccess?: ReduxAction<unknown>,\n    ) => dispatch(updateDatasource(formData, currEditingEnvId, onSuccess)),\n    createDatasource: (formData: any, onSuccess?: ReduxAction<unknown>) =>\n      dispatch(createDatasourceFromForm(formData, onSuccess)),\n    toggleSaveActionFlag: (flag: boolean) =>\n      dispatch(toggleSaveActionFlag(flag)),\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(\n  reduxForm<ApiDatasourceForm, DatasourceRestApiEditorProps>({\n    form: DATASOURCE_REST_API_FORM,\n    enableReinitialize: true,\n  })(DatasourceRestAPIEditor),\n);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  getFormInitialValues,\n  getFormValues,\n  initialize,\n  isDirty,\n  reset,\n} from \"redux-form\";\nimport type { AppState } from \"@appsmith/reducers\";\nimport { get, isEmpty, isEqual, isNil, memoize, merge } from \"lodash\";\nimport {\n  getPluginImages,\n  getDatasource,\n  getPlugin,\n  getDatasourceFormButtonConfig,\n} from \"@appsmith/selectors/entitiesSelector\";\nimport {\n  switchDatasource,\n  setDatasourceViewMode,\n  removeTempDatasource,\n  deleteTempDSFromDraft,\n  toggleSaveActionFlag,\n  toggleSaveActionFromPopupFlag,\n  createTempDatasourceFromForm,\n  resetDefaultKeyValPairFlag,\n  initializeDatasourceFormDefaults,\n  datasourceDiscardAction,\n  setDatasourceViewModeFlag,\n} from \"actions/datasourceActions\";\nimport {\n  DATASOURCE_DB_FORM,\n  DATASOURCE_REST_API_FORM,\n} from \"@appsmith/constants/forms\";\nimport DataSourceEditorForm from \"./DBForm\";\nimport RestAPIDatasourceForm from \"./RestAPIDatasourceForm\";\nimport type { Datasource, DatasourceStorage } from \"entities/Datasource\";\nimport { ToastMessageType } from \"entities/Datasource\";\nimport type { RouteComponentProps } from \"react-router\";\nimport EntityNotFoundPane from \"pages/Editor/EntityNotFoundPane\";\nimport { DatasourceComponentTypes } from \"api/PluginApi\";\nimport DatasourceSaasForm from \"../SaaSEditor/DatasourceForm\";\nimport {\n  getCurrentApplicationId,\n  selectURLSlugs,\n} from \"selectors/editorSelectors\";\nimport { saasEditorDatasourceIdURL } from \"@appsmith/RouteBuilder\";\nimport {\n  createMessage,\n  REST_API_AUTHORIZATION_APPSMITH_ERROR,\n  REST_API_AUTHORIZATION_FAILED,\n  REST_API_AUTHORIZATION_SUCCESSFUL,\n  SAVE_BUTTON_TEXT,\n  TEST_DATASOURCE_ERROR,\n  TEST_DATASOURCE_SUCCESS,\n} from \"@appsmith/constants/messages\";\nimport { isDatasourceInViewMode } from \"selectors/ui\";\nimport { getQueryParams } from \"utils/URLUtils\";\nimport { TEMP_DATASOURCE_ID } from \"constants/Datasource\";\nimport SaveOrDiscardDatasourceModal from \"./SaveOrDiscardDatasourceModal\";\n\nimport { toast, Callout } from \"design-system\";\nimport styled from \"styled-components\";\nimport {\n  isDatasourceAuthorizedForQueryCreation,\n  isEnabledForPreviewData,\n} from \"utils/editorContextUtils\";\nimport Debugger, {\n  ResizerContentContainer,\n  ResizerMainContainer,\n} from \"./Debugger\";\nimport { showDebuggerFlag } from \"selectors/debuggerSelectors\";\nimport DatasourceAuth from \"pages/common/datasourceAuth\";\nimport {\n  getConfigInitialValues,\n  getIsFormDirty,\n  getTrimmedData,\n  isHidden,\n  normalizeValues,\n  validate,\n} from \"components/formControls/utils\";\nimport type { ControlProps } from \"components/formControls/BaseControl\";\nimport type { ApiDatasourceForm } from \"entities/Datasource/RestAPIForm\";\nimport { formValuesToDatasource } from \"transformers/RestAPIDatasourceFormTransformer\";\nimport { DSFormHeader } from \"./DSFormHeader\";\nimport type { PluginType } from \"entities/Action\";\nimport { PluginPackageName } from \"entities/Action\";\nimport DSDataFilter from \"@appsmith/components/DSDataFilter\";\nimport { DEFAULT_ENV_ID } from \"@appsmith/api/ApiUtils\";\nimport { isStorageEnvironmentCreated } from \"@appsmith/utils/Environments\";\nimport type { CalloutKind } from \"design-system\";\nimport type { FeatureFlags } from \"@appsmith/entities/FeatureFlag\";\n\nimport { selectFeatureFlags } from \"@appsmith/selectors/featureFlagsSelectors\";\nimport AnalyticsUtil from \"@appsmith/utils/AnalyticsUtil\";\nimport { setCurrentEditingEnvironmentID } from \"@appsmith/actions/environmentAction\";\nimport { getCurrentEnvironmentDetails } from \"@appsmith/selectors/environmentSelectors\";\nimport { isGACEnabled } from \"@appsmith/utils/planHelpers\";\nimport {\n  getHasDeleteDatasourcePermission,\n  getHasManageDatasourcePermission,\n} from \"@appsmith/utils/BusinessFeatures/permissionPageHelpers\";\nimport DatasourceTabs from \"../DatasourceInfo/DatasorceTabs\";\nimport DatasourceInformation, { ViewModeWrapper } from \"./DatasourceSection\";\n\ninterface ReduxStateProps {\n  canDeleteDatasource: boolean;\n  canManageDatasource: boolean;\n  datasourceButtonConfiguration: string[] | undefined;\n  datasourceId: string;\n  formData: Datasource | ApiDatasourceForm;\n  formName: string;\n  isSaving: boolean;\n  isTesting: boolean;\n  formConfig: any[];\n  isDeleting: boolean;\n  isNewDatasource: boolean;\n  isPluginAuthorized: boolean;\n  pageId: string;\n  pluginImage: string;\n  pluginId: string;\n  viewMode: boolean;\n  pluginType: string;\n  pluginName: string;\n  pluginDatasourceForm: string;\n  pluginPackageName: string;\n  applicationId: string;\n  applicationSlug: string;\n  pageSlug: string;\n  // isInsideReconnectModal: indicates that the datasource form is rendering inside reconnect modal\n  isInsideReconnectModal?: boolean;\n  isDatasourceBeingSaved: boolean;\n  triggerSave: boolean;\n  isFormDirty: boolean;\n  datasource: Datasource | ApiDatasourceForm | undefined;\n  defaultKeyValueArrayConfig: Array<string>;\n  initialValue: Datasource | ApiDatasourceForm | undefined;\n  showDebugger: boolean;\n  featureFlags?: FeatureFlags;\n  isPluginAllowedToPreviewData: boolean;\n  isOnboardingFlow?: boolean;\n}\n\nconst Form = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  overflow: hidden;\n  flex: 1;\n`;\n\ntype Props = ReduxStateProps &\n  DatasourcePaneFunctions &\n  RouteComponentProps<{\n    datasourceId: string;\n    pageId: string;\n  }>;\n\nexport const DSEditorWrapper = styled.div`\n  height: calc(100vh - ${(props) => props.theme.headerHeight});\n  overflow: hidden;\n  display: flex;\n  flex-direction: row;\n\n  &.onboarding-flow {\n    height: 100%;\n  }\n`;\n\nexport const CalloutContainer = styled.div<{\n  viewMode: boolean;\n}>`\n  width: 30vw;\n  margin-top: 24px;\n  margin-left: ${(props) => (!props.viewMode ? \"24px\" : \"0px\")};\n`;\n\nexport interface DatasourceFilterState {\n  id: string;\n  name: string;\n  userPermissions: string[];\n}\n\n/*\n  **** State Variables Description ****\n  showDialog: flag used to show/hide the datasource discard popup\n  routesBlocked: flag used to identity if routes are blocked or not\n  readUrlParams: flag used to identity if url params are read or not\n  requiredFields: object containing the required fields for the datasource form\n  configDetails: object containing the details of the datasource form\n  filterParams: object containing the details of the datasource filter\n  unblock: on blocking routes using history.block, it returns a function which can be used to unblock the routes\n  navigation: function that navigates to path that we want to transition to, after discard action on datasource discard dialog popup\n*/\ninterface State {\n  showDialog: boolean;\n  routesBlocked: boolean;\n  switchFilterBlocked: boolean;\n  readUrlParams: boolean;\n  requiredFields: Record<string, ControlProps>;\n  configDetails: Record<string, string>;\n  filterParams: DatasourceFilterState;\n\n  unblock(): void;\n  navigation(): void;\n}\n\nexport interface DatasourcePaneFunctions {\n  switchDatasource: (id: string) => void;\n  setDatasourceViewMode: (payload: {\n    datasourceId: string;\n    viewMode: boolean;\n  }) => void;\n  setDatasourceViewModeFlag: (viewMode: boolean) => void;\n  discardTempDatasource: () => void;\n  deleteTempDSFromDraft: () => void;\n  toggleSaveActionFlag: (flag: boolean) => void;\n  toggleSaveActionFromPopupFlag: (flag: boolean) => void;\n  reinitializeForm: (formName: string, value: any) => void;\n  createTempDatasource: (data: any) => void;\n  resetDefaultKeyValPairFlag: () => void;\n  resetForm: (formName: string) => void;\n  initializeFormWithDefaults: (pluginType: string) => void;\n  datasourceDiscardAction: (pluginId: string) => void;\n  setCurrentEditingEnvironmentID: (id: string) => void;\n}\n\nclass DatasourceEditorRouter extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      showDialog: false,\n      routesBlocked: false,\n      switchFilterBlocked: false,\n      readUrlParams: false,\n      requiredFields: {},\n      configDetails: {},\n      filterParams: {\n        id: DEFAULT_ENV_ID,\n        name: \"\",\n        userPermissions: [],\n      },\n      unblock: () => {\n        return undefined;\n      },\n      navigation: () => {\n        return undefined;\n      },\n    };\n    this.closeDialog = this.closeDialog.bind(this);\n    this.onSave = this.onSave.bind(this);\n    this.onDiscard = this.onDiscard.bind(this);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    //Fix to prevent restapi datasource from being set in DatasourceDBForm in view mode\n    if (\n      this.props.pluginDatasourceForm !==\n        DatasourceComponentTypes.RestAPIDatasourceForm &&\n      this.props.datasourceId &&\n      this.props.datasourceId !== prevProps.datasourceId\n    ) {\n      this.props.switchDatasource(this.props.datasourceId);\n    }\n\n    // update block state when form becomes dirty/view mode is switched on\n    if (\n      prevProps.viewMode !== this.props.viewMode &&\n      !this.props.viewMode &&\n      !!this.props.pluginId\n    ) {\n      this.blockRoutes();\n    }\n\n    // When save button is clicked in DS form, routes should be unblocked\n    if (this.props.isDatasourceBeingSaved) {\n      this.closeDialogAndUnblockRoutes();\n    }\n    this.setViewModeFromQueryParams();\n\n    if (\n      !isEqual(\n        this.props.defaultKeyValueArrayConfig,\n        prevProps.defaultKeyValueArrayConfig,\n      )\n    ) {\n      this.props.initializeFormWithDefaults(this.props.pluginType);\n    }\n\n    // if the datasource id changes, we need to reset the required fields and configDetails\n    if (this.props.datasourceId !== prevProps.datasourceId) {\n      this.setState({\n        requiredFields: {},\n        configDetails: {},\n      });\n    }\n  }\n\n  getEnvironmentId = () => {\n    if (\n      this.props.isInsideReconnectModal &&\n      this.state.filterParams.id.length === 0 &&\n      !!this.props.datasource\n    ) {\n      return Object.keys(\n        (this.props.datasource as Datasource).datasourceStorages,\n      )[0];\n    }\n    return this.state.filterParams.id;\n  };\n\n  componentDidMount() {\n    const urlObject = new URL(window.location.href);\n    const pluginId = urlObject?.searchParams.get(\"pluginId\");\n    // Create Temp Datasource on component mount,\n    // if user hasnt saved datasource for the first time and refreshed the page\n    if (\n      !this.props.datasource &&\n      this.props?.match?.params?.datasourceId === TEMP_DATASOURCE_ID\n    ) {\n      this.props.createTempDatasource({\n        pluginId,\n      });\n    }\n    if (!this.props.viewMode && !!this.props.pluginId) {\n      this.blockRoutes();\n    }\n\n    // In case of Rest API forms, we need to set view mode from query params\n    if (\n      this.props.pluginDatasourceForm ===\n      DatasourceComponentTypes.RestAPIDatasourceForm\n    ) {\n      this.setViewModeFromQueryParams();\n    }\n\n    //Fix to prevent restapi datasource from being set in DatasourceDBForm in datasource view mode\n    //TODO: Needs cleanup\n    if (\n      this.props.datasourceId &&\n      this.props.pluginDatasourceForm !==\n        DatasourceComponentTypes.RestAPIDatasourceForm\n    ) {\n      this.props.switchDatasource(this.props.datasourceId);\n    }\n\n    if (\n      this.props.pluginDatasourceForm ===\n        DatasourceComponentTypes.RestAPIDatasourceForm &&\n      this.props.location\n    ) {\n      const search = new URLSearchParams(this.props.location.search);\n      const responseStatus = search.get(\"response_status\");\n      const responseMessage = search.get(\"display_message\");\n      if (responseStatus) {\n        // Set default error message\n        let message = REST_API_AUTHORIZATION_FAILED;\n        if (responseStatus === \"success\") {\n          message = REST_API_AUTHORIZATION_SUCCESSFUL;\n        } else if (responseStatus === \"appsmith_error\") {\n          message = REST_API_AUTHORIZATION_APPSMITH_ERROR;\n        }\n        toast.show(responseMessage || createMessage(message));\n      }\n    }\n  }\n\n  // To move to edit state for new datasources and when we want to move to edit state\n  // from outside the datasource route\n  setViewModeFromQueryParams() {\n    const params = getQueryParams();\n    if (this.props.viewMode) {\n      if (\n        (params.viewMode === \"false\" && !this.state.readUrlParams) ||\n        this.props.isNewDatasource\n      ) {\n        // We just want to read the query params once. Cannot remove query params\n        // here as this triggers history.block\n        this.setState(\n          {\n            readUrlParams: true,\n          },\n          () => {\n            this.props.setDatasourceViewModeFlag(false);\n          },\n        );\n      }\n    }\n  }\n\n  // updates the configDetails and requiredFields objects in the state\n  setupConfig = (config: ControlProps) => {\n    const { configProperty, controlType, isRequired } = config;\n    const configDetails = this.state.configDetails;\n    const requiredFields = this.state.requiredFields;\n    if (!configProperty || !configProperty.includes(this.getEnvironmentId()))\n      return;\n    configDetails[configProperty] = controlType;\n    if (isRequired) requiredFields[configProperty] = config;\n\n    // if the required fields being rendered has been hidden, then remove them.\n    if (this.hasRequiredFieldsChanged()) {\n      // derive new states\n      const newConfigDetails = { ...configDetails };\n      const newRequiredFields = { ...requiredFields };\n\n      Object.keys(requiredFields).forEach((field) => {\n        const currentConfig = requiredFields[field];\n\n        if (\n          !!field &&\n          this.props.formData &&\n          this.props.pluginDatasourceForm !==\n            DatasourceComponentTypes.RestAPIDatasourceForm &&\n          isHidden(\n            (this.props.formData as Datasource).datasourceStorages[\n              this.getEnvironmentId()\n            ],\n            currentConfig.hidden,\n            this.props?.featureFlags,\n            false,\n          )\n        ) {\n          // delete those fields.\n          delete newConfigDetails[field];\n          delete newRequiredFields[field];\n        }\n      });\n\n      this.setState({\n        configDetails: newConfigDetails,\n        requiredFields: newRequiredFields,\n      });\n    } else {\n      this.setState({\n        configDetails,\n        requiredFields,\n      });\n    }\n  };\n\n  // this method checks if any of the current required fields has been hidden/not rendered.\n  //\n  hasRequiredFieldsChanged = () => {\n    return Object.keys(this.state.requiredFields).some((field) => {\n      const currentConfig = this.state.requiredFields[field];\n\n      if (\n        !!field &&\n        this.props.formData &&\n        this.props.pluginDatasourceForm !==\n          DatasourceComponentTypes.RestAPIDatasourceForm &&\n        isHidden(\n          (this.props.formData as Datasource).datasourceStorages[\n            this.getEnvironmentId()\n          ],\n          currentConfig.hidden,\n          this.props?.featureFlags,\n          false,\n        )\n      ) {\n        return true;\n      } else {\n        return false;\n      }\n    });\n  };\n\n  componentWillUnmount() {\n    this.props.discardTempDatasource();\n    this.props.deleteTempDSFromDraft();\n    !!this.state.unblock && this.state.unblock();\n    this.props.resetDefaultKeyValPairFlag();\n  }\n\n  routesBlockFormChangeCallback() {\n    if (this.props.isFormDirty) {\n      if (!this.state.routesBlocked) {\n        this.blockRoutes();\n      }\n    } else {\n      if (this.state.routesBlocked) {\n        this.closeDialogAndUnblockRoutes(true);\n      }\n    }\n  }\n\n  blockRoutes() {\n    this.setState({\n      unblock: this.props?.history?.block((tx: any) => {\n        const nextPath = tx.pathname + tx.search;\n        const prevPath =\n          this.props.history.location.pathname +\n          this.props.history.location.search;\n        // On reload, it goes from same path to same path, we do not need to show popup in that case\n        if (nextPath !== prevPath && this.props.isFormDirty) {\n          this.setState(\n            {\n              // need to pass in query params as well as state, when user navigates away from ds form page\n              navigation: () =>\n                this.props.history.push(tx.pathname + tx.search, tx.state),\n              showDialog: true,\n              routesBlocked: true,\n            },\n            this.routesBlockFormChangeCallback.bind(this),\n          );\n          return false;\n        }\n      }),\n    });\n  }\n\n  onCancel() {\n    // if form has changed, show modal popup, or else simply set to view mode.\n    if (this.props.isFormDirty) {\n      this.setState({ showDialog: true });\n    } else {\n      this.props.setDatasourceViewMode({\n        datasourceId: this.props.datasourceId,\n        viewMode: true,\n      });\n    }\n  }\n\n  closeDialog() {\n    this.setState({ showDialog: false, switchFilterBlocked: false });\n  }\n\n  onSave() {\n    this.props.toggleSaveActionFromPopupFlag(true);\n  }\n\n  onDiscard() {\n    this.props.resetForm(this.props.formName);\n    this.closeDialogAndUnblockRoutes();\n    if (this.state.switchFilterBlocked) {\n      //unblock switch filter\n      this.setState({ switchFilterBlocked: false });\n    } else {\n      this.props.discardTempDatasource();\n      this.props.deleteTempDSFromDraft();\n      this.props.datasourceDiscardAction(this.props?.pluginId);\n    }\n    this.state.navigation();\n    this.props.datasourceDiscardAction(this.props?.pluginId);\n\n    if (!this.props.viewMode && !this.state.switchFilterBlocked) {\n      this.props.setDatasourceViewMode({\n        datasourceId: this.props.datasourceId,\n        viewMode: true,\n      });\n    }\n\n    if (this.props.isFormDirty) {\n      this.props.resetForm(this.props.formName);\n    }\n  }\n\n  closeDialogAndUnblockRoutes(isNavigateBack?: boolean) {\n    this.closeDialog();\n    !!this.state.unblock && this.state.unblock();\n    this.props.toggleSaveActionFlag(false);\n    this.props.toggleSaveActionFromPopupFlag(false);\n    this.setState({ routesBlocked: false });\n    if (isNavigateBack) {\n      this.state.navigation();\n    }\n  }\n\n  datasourceDeleteTrigger() {\n    !!this.state.unblock && this.state.unblock();\n  }\n\n  resetDefaultKeyValPairFlag() {\n    if (\n      this.props.defaultKeyValueArrayConfig.length > 0 &&\n      !!this.props.initialValue\n    ) {\n      this.props.resetDefaultKeyValPairFlag();\n    }\n  }\n\n  updateFilter = (id: string, name: string, userPermissions: string[]) => {\n    if (id.length > 0) {\n      if (!this.props.viewMode) {\n        this.props.setCurrentEditingEnvironmentID(id);\n      }\n      if (this.state.filterParams.id !== id) {\n        if (\n          !isEmpty(this.props.formData) &&\n          this.props.isFormDirty &&\n          this.state.filterParams.id.length > 0\n        ) {\n          this.setState({\n            showDialog: true,\n            switchFilterBlocked: true,\n            navigation: () => {\n              this.updateFilterSuccess(id, name, userPermissions);\n            },\n          });\n          return false;\n        } else {\n          this.props.resetForm(this.props.formName);\n        }\n        return this.updateFilterSuccess(id, name, userPermissions);\n      } else if (\n        !isStorageEnvironmentCreated(this.props.formData as Datasource, id)\n      ) {\n        return this.updateFilterSuccess(id, name, userPermissions);\n      }\n    }\n    return true;\n  };\n\n  updateFilterSuccess = (\n    id: string,\n    name: string,\n    userPermissions: string[],\n  ) => {\n    const { datasourceStorages } = this.props.datasource as Datasource;\n    // check all datasource storages and remove the ones which do not have an id object\n    const datasourceStoragesWithId = Object.keys(datasourceStorages).reduce(\n      (acc: Record<string, DatasourceStorage>, envId: string) => {\n        if (\n          datasourceStorages[envId].hasOwnProperty(\"id\") ||\n          datasourceStorages[envId].hasOwnProperty(\"datasourceId\")\n        ) {\n          acc[envId] = datasourceStorages[envId];\n        }\n        return acc;\n      },\n      {},\n    );\n    const initialValues = merge(getConfigInitialValues(this.props.formConfig), {\n      properties: [],\n    });\n    if (!datasourceStoragesWithId.hasOwnProperty(id)) {\n      // Create the new datasource storage object\n      const newDsStorageObject: DatasourceStorage = {\n        datasourceId: this.props.datasourceId,\n        environmentId: id,\n        isValid: false,\n        datasourceConfiguration: initialValues.datasourceConfiguration,\n        toastMessage: ToastMessageType.EMPTY_TOAST_MESSAGE,\n      };\n\n      // // Add the new datasource storage object to the datasource storages\n      this.props.reinitializeForm(this.props.formName, {\n        ...this.props.formData,\n        datasourceStorages: {\n          ...datasourceStoragesWithId,\n          [id]: newDsStorageObject,\n        },\n      });\n    } else if (\n      !datasourceStoragesWithId[id].hasOwnProperty(\"datasourceConfiguration\")\n    ) {\n      // Add the new datasource storage object to the datasource storages\n      this.props.reinitializeForm(this.props.formName, {\n        ...this.props.formData,\n        datasourceStorages: {\n          ...datasourceStoragesWithId,\n          [id]: {\n            ...datasourceStoragesWithId[id],\n            datasourceConfiguration: initialValues.datasourceConfiguration,\n          },\n        },\n      });\n    }\n    AnalyticsUtil.logEvent(\"SWITCH_ENVIRONMENT\", {\n      fromEnvId: this.state.filterParams.id,\n      toEnvId: id,\n      fromEnvName: this.state.filterParams.name,\n      toEnvName: name,\n      mode: \"CONFIGURATION\",\n    });\n    // This is the event that changes the filter and updates the datasource\n    this.setState({\n      filterParams: {\n        id,\n        name,\n        userPermissions,\n      },\n      configDetails: {},\n      requiredFields: {},\n    });\n    this.blockRoutes();\n    return true;\n  };\n\n  renderSaveDisacardModal() {\n    return (\n      <SaveOrDiscardDatasourceModal\n        datasourceId={this.props.datasourceId}\n        datasourcePermissions={this.props.datasource?.userPermissions || []}\n        isOpen={this.state.showDialog}\n        onClose={this.closeDialog}\n        onDiscard={this.onDiscard}\n        onSave={this.onSave}\n        saveButtonText={createMessage(SAVE_BUTTON_TEXT)}\n      />\n    );\n  }\n\n  //based on type of toast message, return the message and kind.\n  decodeToastMessage(\n    messageType: string,\n    datasourceName: string,\n    environmentId: string | null,\n  ): { message: string; kind: string } {\n    switch (messageType) {\n      case ToastMessageType.TEST_DATASOURCE_ERROR:\n        return { message: createMessage(TEST_DATASOURCE_ERROR), kind: \"error\" };\n      case ToastMessageType.TEST_DATASOURCE_SUCCESS:\n        return {\n          message: createMessage(\n            TEST_DATASOURCE_SUCCESS,\n            datasourceName,\n            environmentId,\n          ),\n          kind: \"success\",\n        };\n      default:\n        return { message: \"\", kind: \"\" };\n    }\n  }\n\n  // function to render toast message.\n  renderToast() {\n    const { datasource, viewMode } = this.props;\n    const environmentId = this.getEnvironmentId() || \"\";\n    const path = `datasourceStorages.${environmentId}.toastMessage`;\n    const toastMessage = this.decodeToastMessage(\n      get(datasource, path),\n      (datasource as Datasource).name,\n      this.state.filterParams.name,\n    );\n    if (toastMessage.message)\n      return (\n        <CalloutContainer viewMode={viewMode}>\n          <Callout\n            isClosable\n            kind={toastMessage.kind as CalloutKind}\n            onClose={() => {\n              this.props.setDatasourceViewMode({\n                datasourceId: this.props.datasourceId,\n                viewMode: false,\n              });\n            }}\n          >\n            {toastMessage.message}\n          </Callout>\n        </CalloutContainer>\n      );\n    return null;\n  }\n\n  shouldRenderRestAPIForm = () => {\n    const { isInsideReconnectModal, pluginDatasourceForm, viewMode } =\n      this.props;\n\n    const shouldViewMode = viewMode && !isInsideReconnectModal;\n    // Check for specific form types first\n    return (\n      pluginDatasourceForm === DatasourceComponentTypes.RestAPIDatasourceForm &&\n      !shouldViewMode\n    );\n  };\n\n  renderForm() {\n    const {\n      datasource,\n      datasourceId,\n      featureFlags,\n      formConfig,\n      formData,\n      formName,\n      isFormDirty,\n      isInsideReconnectModal,\n      isSaving,\n      location,\n      pageId,\n      pluginName,\n      pluginPackageName,\n      pluginType,\n      viewMode,\n    } = this.props;\n\n    // Check for specific form types first\n    if (this.shouldRenderRestAPIForm()) {\n      return (\n        <>\n          <RestAPIDatasourceForm\n            applicationId={this.props.applicationId}\n            currentEnvironment={this.state.filterParams.id}\n            currentEnvironmentName={this.state.filterParams.name}\n            datasource={datasource}\n            datasourceId={datasourceId}\n            formData={formData}\n            formName={formName}\n            hiddenHeader={isInsideReconnectModal}\n            isFormDirty={isFormDirty}\n            isSaving={isSaving}\n            location={location}\n            pageId={pageId}\n            pluginName={pluginName}\n            pluginPackageName={pluginPackageName}\n          />\n          {this.renderSaveDisacardModal()}\n        </>\n      );\n    }\n\n    // Default to DB Editor Form\n    return (\n      <>\n        <DataSourceEditorForm\n          applicationId={this.props.applicationId}\n          currentEnvironment={this.getEnvironmentId()}\n          datasourceId={datasourceId}\n          featureFlags={featureFlags}\n          formConfig={formConfig}\n          formData={formData}\n          formName={DATASOURCE_DB_FORM}\n          hiddenHeader={isInsideReconnectModal}\n          isPluginAllowedToPreviewData={this.props.isPluginAllowedToPreviewData}\n          isSaving={isSaving}\n          pageId={pageId}\n          pluginType={pluginType}\n          setupConfig={this.setupConfig}\n          viewMode={viewMode && !isInsideReconnectModal}\n        />\n        {this.renderSaveDisacardModal()}\n      </>\n    );\n  }\n\n  // returns normalized and trimmed datasource form data\n  getSanitizedData = () => {\n    if (\n      this.props.pluginDatasourceForm ===\n      DatasourceComponentTypes.RestAPIDatasourceForm\n    )\n      return formValuesToDatasource(\n        this.props.datasource as Datasource,\n        this.props.formData as ApiDatasourceForm,\n        this.state.filterParams.id,\n      );\n    else\n      return getTrimmedData({\n        ...normalizeValues(\n          { ...this.props.formData },\n          this.state.configDetails,\n        ),\n        name: this.props.datasource?.name || \"\",\n      });\n  };\n\n  renderViewConfigChild = () => {\n    const { datasource, formConfig, viewMode } = this.props;\n    return (\n      <ViewModeWrapper data-testid=\"t--ds-review-section\">\n        {!isNil(formConfig) && !isNil(datasource) ? (\n          <DatasourceInformation\n            config={formConfig[0]}\n            datasource={datasource}\n            viewMode={viewMode}\n          />\n        ) : undefined}\n      </ViewModeWrapper>\n    );\n  };\n\n  shouldShowTabs = () => {\n    const { isPluginAllowedToPreviewData } = this.props;\n    return isPluginAllowedToPreviewData;\n  };\n\n  renderTabsForViewMode = () => {\n    const { datasource } = this.props;\n    return this.shouldShowTabs() ? (\n      <DatasourceTabs\n        configChild={this.renderViewConfigChild()}\n        datasource={datasource as Datasource}\n      />\n    ) : (\n      this.renderViewConfigChild()\n    );\n  };\n\n  render() {\n    const {\n      canDeleteDatasource,\n      canManageDatasource,\n      datasource,\n      datasourceButtonConfiguration,\n      datasourceId,\n      formData,\n      history,\n      isDeleting,\n      isInsideReconnectModal,\n      isNewDatasource,\n      isOnboardingFlow,\n      isPluginAuthorized,\n      isSaving,\n      isTesting,\n      pageId,\n      pluginId,\n      pluginImage,\n      pluginName,\n      pluginPackageName,\n      pluginType,\n      setDatasourceViewMode,\n      showDebugger,\n      triggerSave,\n      viewMode,\n    } = this.props;\n\n    if (!pluginId && datasourceId) {\n      return <EntityNotFoundPane />;\n    }\n\n    // for saas form\n    if (pluginType === \"SAAS\") {\n      // todo check if we can remove the flag here\n      if (isInsideReconnectModal) {\n        return (\n          <DatasourceSaasForm\n            datasourceId={datasourceId}\n            hiddenHeader\n            isInsideReconnectModal={isInsideReconnectModal}\n            pageId={pageId}\n            pluginPackageName={pluginPackageName}\n          />\n        );\n      }\n      history.push(\n        saasEditorDatasourceIdURL({\n          pageId,\n          pluginPackageName,\n          datasourceId,\n        }),\n      );\n      return null;\n    }\n\n    const showingTabsOnViewMode =\n      this.shouldShowTabs() && viewMode && !isInsideReconnectModal;\n\n    return (\n      <Form\n        className=\"t--json-to-form-wrapper\"\n        onSubmit={(e) => {\n          e.preventDefault();\n        }}\n      >\n        {!isInsideReconnectModal && (\n          <DSFormHeader\n            canDeleteDatasource={canDeleteDatasource}\n            canManageDatasource={canManageDatasource}\n            datasource={datasource}\n            datasourceId={datasourceId}\n            isDeleting={isDeleting}\n            isNewDatasource={isNewDatasource}\n            isPluginAuthorized={isPluginAuthorized}\n            noBottomBorder={showingTabsOnViewMode}\n            pluginImage={pluginImage}\n            pluginName={pluginName}\n            pluginType={pluginType}\n            setDatasourceViewMode={setDatasourceViewMode}\n            viewMode={viewMode}\n          />\n        )}\n        <ResizerMainContainer>\n          <ResizerContentContainer\n            className={`db-form-resizer-content ${\n              showingTabsOnViewMode && \"db-form-resizer-content-show-tabs\"\n            }`}\n          >\n            <DSEditorWrapper\n              className={!!isOnboardingFlow ? \"onboarding-flow\" : \"\"}\n            >\n              {viewMode && !isInsideReconnectModal ? (\n                this.renderTabsForViewMode()\n              ) : (\n                <>\n                  <DSDataFilter\n                    filterId={this.state.filterParams.id}\n                    isInsideReconnectModal={!!isInsideReconnectModal}\n                    pluginName={pluginName}\n                    pluginType={pluginType}\n                    updateFilter={this.updateFilter}\n                    viewMode={viewMode}\n                  />\n                  <div className=\"db-form-content-container\">\n                    {this.renderToast()}\n                    {this.renderForm()}\n                    {/* Render datasource form call-to-actions */}\n                    {datasource && (\n                      <DatasourceAuth\n                        currentEnvironment={this.getEnvironmentId()}\n                        datasource={datasource as Datasource}\n                        datasourceButtonConfiguration={\n                          datasourceButtonConfiguration\n                        }\n                        formData={formData}\n                        formName={this.props.formName}\n                        getSanitizedFormData={memoize(this.getSanitizedData)}\n                        isFormDirty={this.props.isFormDirty}\n                        isInsideReconnectModal={isInsideReconnectModal}\n                        isInvalid={this.validateForm()}\n                        isOnboardingFlow={isOnboardingFlow}\n                        isSaving={isSaving}\n                        isTesting={isTesting}\n                        onCancel={() => this.onCancel()}\n                        parentEntityId={pageId}\n                        pluginName={pluginName}\n                        pluginPackageName={pluginPackageName}\n                        pluginType={pluginType as PluginType}\n                        setDatasourceViewMode={setDatasourceViewMode}\n                        triggerSave={triggerSave}\n                        viewMode={viewMode}\n                      />\n                    )}\n                  </div>\n                </>\n              )}\n            </DSEditorWrapper>\n          </ResizerContentContainer>\n          {showDebugger && <Debugger />}\n        </ResizerMainContainer>\n      </Form>\n    );\n  }\n  validateForm(): boolean {\n    const {\n      canManageDatasource,\n      datasourceId,\n      formData,\n      pluginDatasourceForm,\n    } = this.props;\n    if (\n      pluginDatasourceForm === DatasourceComponentTypes.RestAPIDatasourceForm\n    ) {\n      const createMode = datasourceId === TEMP_DATASOURCE_ID;\n      if (!formData) return true;\n      return (\n        !(formData as ApiDatasourceForm).url ||\n        (!createMode && !canManageDatasource)\n      );\n    }\n    return validate(\n      this.state.requiredFields,\n      formData,\n      this.state.filterParams.id,\n    );\n  }\n}\n\nconst mapStateToProps = (state: AppState, props: any): ReduxStateProps => {\n  const datasourceId = props.datasourceId ?? props.match?.params?.datasourceId;\n  const { datasourcePane } = state.ui;\n  const { datasources, plugins } = state.entities;\n  const viewMode = isDatasourceInViewMode(state);\n  const datasource = getDatasource(state, datasourceId) as\n    | Datasource\n    | ApiDatasourceForm;\n  const { formConfigs } = plugins;\n  const pluginId = get(datasource, \"pluginId\", \"\");\n  const plugin = getPlugin(state, pluginId);\n  const { applicationSlug, pageSlug } = selectURLSlugs(state);\n  const formName =\n    plugin?.type === \"API\" ? DATASOURCE_REST_API_FORM : DATASOURCE_DB_FORM;\n  const formData = getFormValues(formName)(state) as\n    | Datasource\n    | ApiDatasourceForm;\n  const isNewDatasource = datasourcePane.newDatasource === TEMP_DATASOURCE_ID;\n  const pluginDatasourceForm =\n    plugin?.datasourceComponent ?? DatasourceComponentTypes.AutoForm;\n  const currentEnvDetails = getCurrentEnvironmentDetails(state);\n  const isFormDirty = getIsFormDirty(\n    isDirty(formName)(state),\n    formData,\n    isNewDatasource,\n    pluginDatasourceForm === DatasourceComponentTypes.RestAPIDatasourceForm,\n    currentEnvDetails.editingId,\n  );\n  const initialValue = getFormInitialValues(formName)(state) as\n    | Datasource\n    | ApiDatasourceForm;\n  const defaultKeyValueArrayConfig =\n    datasourcePane?.defaultKeyValueArrayConfig as any;\n\n  const datasourcePermissions = datasource?.userPermissions || [];\n\n  const featureFlags = selectFeatureFlags(state);\n  const isFeatureEnabled = isGACEnabled(featureFlags);\n\n  const canManageDatasource = getHasManageDatasourcePermission(\n    isFeatureEnabled,\n    datasourcePermissions,\n  );\n\n  const canDeleteDatasource = getHasDeleteDatasourcePermission(\n    isFeatureEnabled,\n    datasourcePermissions,\n  );\n  // Debugger render flag\n  const showDebugger = showDebuggerFlag(state);\n  const pluginPackageName = plugin?.packageName ?? \"\";\n\n  const isPluginAuthorized =\n    pluginPackageName === PluginPackageName.GOOGLE_SHEETS\n      ? plugin &&\n        isDatasourceAuthorizedForQueryCreation(\n          formData as Datasource,\n          plugin,\n          currentEnvDetails.id,\n        )\n      : true;\n\n  const datasourceButtonConfiguration = getDatasourceFormButtonConfig(\n    state,\n    pluginId,\n  );\n\n  // should plugin be able to preview data\n  const isPluginAllowedToPreviewData =\n    !!plugin && isEnabledForPreviewData(datasource as Datasource, plugin);\n\n  return {\n    canDeleteDatasource,\n    canManageDatasource,\n    datasourceButtonConfiguration,\n    datasourceId,\n    pluginImage: getPluginImages(state)[pluginId],\n    featureFlags,\n    formData,\n    formName,\n    isInsideReconnectModal: props.isInsideReconnectModal ?? false,\n    pluginId,\n    isSaving: datasources.loading,\n    isDeleting: !!(datasource as Datasource)?.isDeleting,\n    isPluginAuthorized: !!isPluginAuthorized,\n    isTesting: datasources.isTesting,\n    formConfig: formConfigs[pluginId] || [],\n    isNewDatasource,\n    isPluginAllowedToPreviewData,\n    pageId: props.pageId ?? props.match?.params?.pageId,\n    viewMode,\n    pluginType: plugin?.type ?? \"\",\n    pluginName: plugin?.name ?? \"\",\n    pluginDatasourceForm,\n    pluginPackageName,\n    applicationId: props.applicationId ?? getCurrentApplicationId(state),\n    applicationSlug,\n    pageSlug,\n    isDatasourceBeingSaved: datasources.isDatasourceBeingSaved,\n    triggerSave: datasources.isDatasourceBeingSavedFromPopup,\n    isFormDirty,\n    datasource,\n    defaultKeyValueArrayConfig,\n    initialValue,\n    showDebugger,\n  };\n};\n\nconst mapDispatchToProps = (\n  dispatch: any,\n  ownProps: any,\n): DatasourcePaneFunctions => ({\n  switchDatasource: (id: string) => {\n    // on reconnect data modal, it shouldn't be redirected to datasource edit page\n    dispatch(switchDatasource(id, ownProps.isInsideReconnectModal));\n  },\n  setDatasourceViewMode: (payload: {\n    datasourceId: string;\n    viewMode: boolean;\n  }) => dispatch(setDatasourceViewMode(payload)),\n  setDatasourceViewModeFlag: (viewMode: boolean) =>\n    dispatch(setDatasourceViewModeFlag(viewMode)),\n  discardTempDatasource: () => dispatch(removeTempDatasource()),\n  deleteTempDSFromDraft: () => dispatch(deleteTempDSFromDraft()),\n  toggleSaveActionFlag: (flag) => dispatch(toggleSaveActionFlag(flag)),\n  toggleSaveActionFromPopupFlag: (flag) =>\n    dispatch(toggleSaveActionFromPopupFlag(flag)),\n  reinitializeForm: (formName: string, value: any) =>\n    dispatch(initialize(formName, value, false)),\n  createTempDatasource: (data: any) =>\n    dispatch(createTempDatasourceFromForm(data)),\n  resetForm: (formName: string) => dispatch(reset(formName)),\n  resetDefaultKeyValPairFlag: () => dispatch(resetDefaultKeyValPairFlag()),\n  initializeFormWithDefaults: (pluginType: string) =>\n    dispatch(initializeDatasourceFormDefaults(pluginType)),\n  datasourceDiscardAction: (pluginId) =>\n    dispatch(datasourceDiscardAction(pluginId)),\n  setCurrentEditingEnvironmentID: (id: string) =>\n    dispatch(setCurrentEditingEnvironmentID(id)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(DatasourceEditorRouter);\n","import React, { useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Button, Text } from \"design-system\";\nimport styled from \"styled-components\";\nimport { refreshDatasourceStructure } from \"actions/datasourceActions\";\nimport {\n  GSHEET_SPREADSHEET_LABEL,\n  SCHEMA_LABEL,\n  createMessage,\n} from \"@appsmith/constants/messages\";\nimport type { Datasource } from \"entities/Datasource\";\nimport { DatasourceStructureContext } from \"entities/Datasource\";\nimport { getPluginPackageNameFromId } from \"@appsmith/selectors/entitiesSelector\";\nimport { isGoogleSheetPluginDS } from \"utils/editorContextUtils\";\n\ninterface Props {\n  datasource?: Datasource;\n  onRefreshCallback?: () => void;\n  paddingBottom?: boolean;\n  refetchFn?: () => void;\n}\n\nconst HeaderWrapper = styled.div<{ paddingBottom: boolean }>`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  ${(props) => props.paddingBottom && \"padding-bottom: var(--ads-v2-spaces-4);\"}\n`;\n\nexport default function DatasourceStructureHeader(props: Props) {\n  const dispatch = useDispatch();\n\n  const dispatchRefresh = useCallback(\n    (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n      if (props.datasource?.id) {\n        event.stopPropagation();\n\n        if (props.refetchFn) {\n          props.refetchFn();\n        } else {\n          dispatch(\n            refreshDatasourceStructure(\n              props.datasource?.id,\n              DatasourceStructureContext.QUERY_EDITOR,\n            ),\n          );\n        }\n\n        !!props.onRefreshCallback && props.onRefreshCallback();\n      }\n    },\n    [dispatch, props.datasource?.id],\n  );\n\n  const pluginPackageName = useSelector((state) =>\n    getPluginPackageNameFromId(state, props.datasource?.pluginId || \"\"),\n  );\n  const isGoogleSheetPlugin = isGoogleSheetPluginDS(pluginPackageName);\n\n  return (\n    <HeaderWrapper\n      className=\"datasourceStructure-header\"\n      paddingBottom={!!props.paddingBottom}\n    >\n      <Text kind=\"heading-xs\" renderAs=\"h3\">\n        {createMessage(\n          isGoogleSheetPlugin ? GSHEET_SPREADSHEET_LABEL : SCHEMA_LABEL,\n        )}\n      </Text>\n      <Button\n        className=\"datasourceStructure-refresh\"\n        isIconButton\n        kind=\"tertiary\"\n        onClick={(event: any) => dispatchRefresh(event)}\n        size=\"md\"\n        startIcon=\"refresh\"\n      />\n    </HeaderWrapper>\n  );\n}\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { DatasourceStructureContainer as DatasourceStructureList } from \"./DatasourceStructureContainer\";\nimport {\n  getDatasourceStructureById,\n  getIsFetchingDatasourceStructure,\n  getNumberOfEntitiesInCurrentPage,\n  getSelectedTableName,\n} from \"@appsmith/selectors/entitiesSelector\";\nimport DatasourceStructureHeader from \"./DatasourceStructureHeader\";\nimport { Button } from \"design-system\";\nimport {\n  DATASOURCE_GENERATE_PAGE_BUTTON,\n  createMessage,\n} from \"@appsmith/constants/messages\";\nimport Table from \"pages/Editor/QueryEditor/Table\";\nimport { generateTemplateToUpdatePage } from \"actions/pageActions\";\nimport { useParams } from \"react-router\";\nimport type { ExplorerURLParams } from \"@appsmith/pages/Editor/Explorer/helpers\";\nimport {\n  getCurrentApplicationId,\n  getPagePermissions,\n} from \"selectors/editorSelectors\";\nimport { GENERATE_PAGE_MODE } from \"../GeneratePage/components/GeneratePageForm/GeneratePageForm\";\nimport { useDatasourceQuery } from \"../DataSourceEditor/hooks\";\nimport type {\n  Datasource,\n  DatasourceTable,\n  QueryTemplate,\n} from \"entities/Datasource\";\nimport { DatasourceStructureContext } from \"entities/Datasource\";\nimport { getCurrentApplication } from \"@appsmith/selectors/applicationSelectors\";\nimport type { AppState } from \"@appsmith/reducers\";\nimport AnalyticsUtil from \"@appsmith/utils/AnalyticsUtil\";\nimport { useFeatureFlag } from \"utils/hooks/useFeatureFlag\";\nimport { FEATURE_FLAG } from \"@appsmith/entities/FeatureFlag\";\nimport {\n  getHasCreatePagePermission,\n  hasCreateDSActionPermissionInApp,\n} from \"@appsmith/utils/BusinessFeatures/permissionPageHelpers\";\nimport RenderInterimDataState from \"./RenderInterimDataState\";\nimport {\n  ButtonContainer,\n  DataWrapperContainer,\n  DatasourceDataContainer,\n  DatasourceListContainer,\n  StructureContainer,\n  TableWrapper,\n  ViewModeSchemaContainer,\n} from \"./SchemaViewModeCSS\";\nimport { useEditorType } from \"@appsmith/hooks\";\nimport history from \"utils/history\";\nimport { getIsGeneratingTemplatePage } from \"selectors/pageListSelectors\";\nimport { setDatasourcePreviewSelectedTableName } from \"actions/datasourceActions\";\n\ninterface Props {\n  datasource: Datasource;\n  setDatasourceViewModeFlag: (viewMode: boolean) => void;\n}\n\nconst DatasourceViewModeSchema = (props: Props) => {\n  const dispatch = useDispatch();\n\n  const datasourceStructure = useSelector((state) =>\n    getDatasourceStructureById(state, props.datasource.id),\n  );\n\n  const isDatasourceStructureLoading = useSelector((state: AppState) =>\n    getIsFetchingDatasourceStructure(state, props.datasource.id),\n  );\n\n  const pagePermissions = useSelector(getPagePermissions);\n  const datasourcePermissions = props.datasource?.userPermissions || [];\n\n  const userAppPermissions = useSelector(\n    (state: AppState) => getCurrentApplication(state)?.userPermissions ?? [],\n  );\n\n  const isFeatureEnabled = useFeatureFlag(FEATURE_FLAG.license_gac_enabled);\n\n  const editorType = useEditorType(history.location.pathname);\n\n  const canCreatePages = getHasCreatePagePermission(\n    isFeatureEnabled,\n    userAppPermissions,\n  );\n\n  const canCreateDatasourceActions = hasCreateDSActionPermissionInApp({\n    isEnabled: isFeatureEnabled,\n    dsPermissions: datasourcePermissions,\n    pagePermissions,\n    editorType,\n  });\n\n  const applicationId: string = useSelector(getCurrentApplicationId);\n  const { pageId: currentPageId } = useParams<ExplorerURLParams>();\n\n  const [previewData, setPreviewData] = useState([]);\n  // this error is for when there's an issue with the datasource structure\n  const [previewDataError, setPreviewDataError] = useState(false);\n\n  const numberOfEntities = useSelector(getNumberOfEntitiesInCurrentPage);\n  const currentMode = useRef(\n    numberOfEntities > 0\n      ? GENERATE_PAGE_MODE.NEW\n      : GENERATE_PAGE_MODE.REPLACE_EMPTY,\n  );\n\n  const tableName = useSelector(getSelectedTableName);\n\n  const { failedFetchingPreviewData, fetchPreviewData, isLoading } =\n    useDatasourceQuery({ setPreviewData, setPreviewDataError });\n\n  const isGeneratePageLoading = useSelector(getIsGeneratingTemplatePage);\n\n  // default table name to first table\n  useEffect(() => {\n    if (\n      datasourceStructure &&\n      !!datasourceStructure.tables &&\n      datasourceStructure.tables?.length > 0\n    ) {\n      dispatch(\n        setDatasourcePreviewSelectedTableName(\n          datasourceStructure.tables[0].name,\n        ),\n      );\n    }\n\n    // if the datasource structure is loading or undefined or if there's an error in the structure\n    // reset the preview data states\n    if (\n      isDatasourceStructureLoading ||\n      !datasourceStructure ||\n      !datasourceStructure.tables ||\n      (datasourceStructure && datasourceStructure?.error)\n    ) {\n      setPreviewData([]);\n      setPreviewDataError(true);\n      dispatch(setDatasourcePreviewSelectedTableName(\"\"));\n    }\n  }, [datasourceStructure, isDatasourceStructureLoading]);\n\n  // this fetches the preview data when the table name changes\n  useEffect(() => {\n    if (\n      !isDatasourceStructureLoading &&\n      tableName &&\n      datasourceStructure &&\n      datasourceStructure.tables\n    ) {\n      const templates: QueryTemplate[] | undefined =\n        datasourceStructure.tables.find(\n          (structure: DatasourceTable) => structure.name === tableName,\n        )?.templates;\n\n      if (templates) {\n        let suggestedTemPlate: QueryTemplate | undefined = templates?.find(\n          (template) => template.suggested,\n        );\n\n        // if no suggested template exists, default to first template.\n        if (!suggestedTemPlate) {\n          suggestedTemPlate = templates[0];\n        }\n\n        fetchPreviewData({\n          datasourceId: props.datasource.id,\n          template: suggestedTemPlate,\n        });\n      }\n    }\n  }, [tableName, isDatasourceStructureLoading]);\n\n  useEffect(() => {\n    if (previewData && previewData.length > 0) {\n      AnalyticsUtil.logEvent(\"DATASOURCE_PREVIEW_DATA_SHOWN\", {\n        datasourceId: props.datasource.id,\n        pluginId: props.datasource.pluginId,\n      });\n    }\n  }, [previewData]);\n\n  useEffect(() => {\n    setPreviewData([]);\n  }, [props.datasource.id]);\n\n  const onEntityTableClick = (table: string) => {\n    AnalyticsUtil.logEvent(\"DATASOURCE_PREVIEW_TABLE_CHANGE\", {\n      datasourceId: props.datasource.id,\n      pluginId: props.datasource.pluginId,\n    });\n    // This sets table name in redux state to be used to create appropriate query\n    dispatch(setDatasourcePreviewSelectedTableName(table));\n  };\n\n  const generatePageAction = () => {\n    if (\n      datasourceStructure &&\n      datasourceStructure?.tables &&\n      datasourceStructure?.tables?.length > 0\n    ) {\n      const payload = {\n        applicationId: applicationId || \"\",\n        pageId:\n          currentMode.current === GENERATE_PAGE_MODE.NEW\n            ? \"\"\n            : currentPageId || \"\",\n        columns: [],\n        searchColumn: \"\",\n        tableName: tableName,\n        datasourceId: props.datasource.id || \"\",\n      };\n\n      AnalyticsUtil.logEvent(\"DATASOURCE_GENERATE_PAGE_BUTTON_CLICKED\", {\n        datasourceId: props.datasource.id,\n        pluginId: props.datasource.pluginId,\n      });\n\n      dispatch(generateTemplateToUpdatePage(payload));\n    }\n  };\n\n  // custom edit datasource function\n  const customEditDatasourceFn = () => {\n    props.setDatasourceViewModeFlag(false);\n  };\n\n  // only show generate button if schema is not being fetched, if the preview data is not being fetched\n  // if there was a failure in the fetching of the data\n  // if tableName from schema is availble\n  // if the user has permissions\n  const showGeneratePageBtn =\n    !isDatasourceStructureLoading &&\n    !isLoading &&\n    !failedFetchingPreviewData &&\n    tableName &&\n    canCreateDatasourceActions &&\n    canCreatePages;\n\n  return (\n    <ViewModeSchemaContainer>\n      <DataWrapperContainer data-testId=\"datasource-schema-container\">\n        <StructureContainer>\n          {props.datasource && (\n            <DatasourceStructureHeader\n              datasource={props.datasource}\n              paddingBottom\n            />\n          )}\n          <DatasourceListContainer>\n            <DatasourceStructureList\n              context={DatasourceStructureContext.DATASOURCE_VIEW_MODE}\n              customEditDatasourceFn={customEditDatasourceFn}\n              datasourceId={props.datasource.id}\n              datasourceName={props.datasource.name}\n              datasourceStructure={datasourceStructure}\n              onEntityTableClick={onEntityTableClick}\n              step={0}\n              tableName={tableName}\n            />\n          </DatasourceListContainer>\n        </StructureContainer>\n        <DatasourceDataContainer>\n          <TableWrapper>\n            {(isLoading || isDatasourceStructureLoading) && (\n              <RenderInterimDataState state=\"LOADING\" />\n            )}\n            {(!isLoading || !isDatasourceStructureLoading) &&\n              (failedFetchingPreviewData || previewDataError) && (\n                <RenderInterimDataState state=\"FAILED\" />\n              )}\n            {!isLoading &&\n              !isDatasourceStructureLoading &&\n              !failedFetchingPreviewData &&\n              !previewDataError &&\n              previewData?.length > 0 && (\n                <Table data={previewData} shouldResize={false} />\n              )}\n            {!isLoading &&\n              !isDatasourceStructureLoading &&\n              !failedFetchingPreviewData &&\n              !previewDataError &&\n              !previewData?.length && <RenderInterimDataState state=\"NODATA\" />}\n          </TableWrapper>\n        </DatasourceDataContainer>\n      </DataWrapperContainer>\n      {showGeneratePageBtn && (\n        <ButtonContainer>\n          <Button\n            className=\"t--datasource-generate-page\"\n            isLoading={isGeneratePageLoading}\n            key=\"datasource-generate-page\"\n            kind=\"primary\"\n            onClick={generatePageAction}\n            size=\"md\"\n          >\n            {createMessage(DATASOURCE_GENERATE_PAGE_BUTTON)}\n          </Button>\n        </ButtonContainer>\n      )}\n    </ViewModeSchemaContainer>\n  );\n};\n\nexport default DatasourceViewModeSchema;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport type { DropdownOption } from \"design-system-old\";\nimport { Button, SearchInput } from \"design-system\";\nimport {\n  useSheetData,\n  useSheetsList,\n  useSpreadSheets,\n} from \"../GeneratePage/components/GeneratePageForm/hooks\";\nimport type { DropdownOptions } from \"../GeneratePage/components/constants\";\nimport { DEFAULT_DROPDOWN_OPTION } from \"../GeneratePage/components/constants\";\nimport { isEmpty } from \"lodash\";\nimport Table from \"pages/Editor/QueryEditor/Table\";\nimport {\n  getCurrentApplicationId,\n  getPagePermissions,\n} from \"selectors/editorSelectors\";\nimport { generateTemplateToUpdatePage } from \"actions/pageActions\";\nimport {\n  createMessage,\n  DATASOURCE_GENERATE_PAGE_BUTTON,\n  GSHEET_SEARCH_PLACEHOLDER,\n} from \"@appsmith/constants/messages\";\nimport AnalyticsUtil from \"@appsmith/utils/AnalyticsUtil\";\nimport { getCurrentApplication } from \"@appsmith/selectors/applicationSelectors\";\nimport type { AppState } from \"@appsmith/reducers\";\nimport { getDatasource } from \"@appsmith/selectors/entitiesSelector\";\nimport { useFeatureFlag } from \"utils/hooks/useFeatureFlag\";\nimport { FEATURE_FLAG } from \"@appsmith/entities/FeatureFlag\";\nimport {\n  getHasCreatePagePermission,\n  hasCreateDSActionPermissionInApp,\n} from \"@appsmith/utils/BusinessFeatures/permissionPageHelpers\";\nimport RenderInterimDataState from \"./RenderInterimDataState\";\nimport {\n  ButtonContainer,\n  DataWrapperContainer,\n  DatasourceAttributesWrapper,\n  DatasourceDataContainer,\n  DatasourceListContainer,\n  DatasourceStructureSearchContainer,\n  StructureContainer,\n  TableWrapper,\n  ViewModeSchemaContainer,\n} from \"./SchemaViewModeCSS\";\nimport DatasourceStructureHeader from \"./DatasourceStructureHeader\";\nimport Entity from \"../Explorer/Entity\";\nimport DatasourceField from \"./DatasourceField\";\nimport { setEntityCollapsibleState } from \"actions/editorContextActions\";\nimport ItemLoadingIndicator from \"./ItemLoadingIndicator\";\nimport { useEditorType } from \"@appsmith/hooks\";\nimport history from \"utils/history\";\nimport { getIsGeneratingTemplatePage } from \"selectors/pageListSelectors\";\n\ninterface Props {\n  datasourceId: string;\n  pluginId?: string;\n}\n\nconst MAX_SHEET_ROWS_LENGTH = 12;\n\n// ---------- GoogleSheetSchema Component -------\n\nfunction GoogleSheetSchema(props: Props) {\n  const [spreadsheetOptions, setSpreadsheetOptions] = useState<DropdownOptions>(\n    [],\n  );\n  const [sheetOptions, setSheetOptions] = useState<DropdownOptions>([]);\n  const [sheetData, setSheetData] = useState<any>([]);\n  const [selectedSpreadsheet, setSelectedSpreadsheet] =\n    useState<DropdownOption>({});\n  const [selectedSheet, setSelectedSheet] = useState<DropdownOption>({});\n  const [searchString, setSearchString] = useState<string>(\"\");\n  const [selectedDatasourceIsInvalid, setSelectedDatasourceIsInvalid] =\n    useState(false);\n  const { fetchAllSpreadsheets, isFetchingSpreadsheets } = useSpreadSheets({\n    setSelectedDatasourceTableOptions: setSpreadsheetOptions,\n    setSelectedDatasourceIsInvalid,\n  });\n\n  const toggleOnUnmountRefObject = useRef<{\n    selectedSheet?: string;\n    selectedSpreadSheet?: string;\n  }>({});\n\n  const isGeneratePageLoading = useSelector(getIsGeneratingTemplatePage);\n\n  const handleSearch = (value: string) => {\n    setSearchString(value.toLowerCase());\n\n    AnalyticsUtil.logEvent(\"GSHEET_SPREADSHEET_SEARCH\", {\n      datasourceId: props.datasourceId,\n      pluginId: props.pluginId,\n    });\n  };\n\n  const setSlicedSheetData = (response: DropdownOptions) => {\n    // Getting the top 12 rows as for experimentation we need to keep this number fixed for preview\n    AnalyticsUtil.logEvent(\"GSHEET_PREVIEW_DATA_SHOWN\", {\n      datasourceId: props.datasourceId,\n      pluginId: props.pluginId,\n    });\n    setSheetData(response.slice(0, MAX_SHEET_ROWS_LENGTH));\n  };\n\n  const { failedFetchingSheetsList, fetchSheetsList, isFetchingSheetsList } =\n    useSheetsList({ setSheetOptions });\n  const { failedFetchingSheetData, fetchSheetData, isFetchingSheetData } =\n    useSheetData({\n      setSheetData: setSlicedSheetData,\n    });\n\n  const applicationId: string = useSelector(getCurrentApplicationId);\n  const datasource = useSelector((state) =>\n    getDatasource(state, props.datasourceId),\n  );\n\n  const dispatch = useDispatch();\n\n  const scrollIntoView = (\n    elementId: string,\n    containerId: string,\n    offset: number = 0,\n  ) => {\n    try {\n      const element = document.querySelector(elementId);\n      const container = document.querySelector(containerId);\n      if (element && container) {\n        const elementRect = element.getBoundingClientRect();\n        const containerRect = container.getBoundingClientRect();\n        const scrollTop = container.scrollTop;\n\n        const scrollAmount =\n          elementRect.top - containerRect.top + scrollTop + offset;\n\n        container.scrollTop = scrollAmount;\n      }\n    } catch {}\n  };\n\n  const collapseAccordions = (\n    datasourceId: string,\n    spreadSheet?: string,\n    sheet?: string,\n    collapseSpreadsheet: boolean = true,\n  ) => {\n    if (!isEmpty(spreadSheet) && !isEmpty(sheet)) {\n      dispatch(\n        setEntityCollapsibleState(\n          `${datasourceId}-${spreadSheet}-${sheet}`,\n          false,\n        ),\n      );\n    }\n    if (!isEmpty(spreadSheet) && collapseSpreadsheet) {\n      dispatch(\n        setEntityCollapsibleState(`${datasourceId}-${spreadSheet}`, false),\n      );\n    }\n  };\n\n  const selectSpreadsheetAndToggle = (option: DropdownOption) => {\n    collapseAccordions(\n      datasource?.id || \"\",\n      selectedSpreadsheet.value,\n      selectedSheet.value,\n    );\n    setSheetOptions([]);\n    setSelectedSheet(DEFAULT_DROPDOWN_OPTION);\n    setSheetData(undefined);\n    dispatch(\n      setEntityCollapsibleState(`${datasource?.id}-${option.value}`, true),\n    );\n    scrollIntoView(\n      `#${CSS.escape(`entity-${datasource?.id}-${option.value}`)}`,\n      \".t--gsheet-structure .t--gsheet-structure-list\",\n    );\n    setSelectedSpreadsheet(option);\n    fetchSheetsList({\n      requestObject: {},\n      selectedDatasourceId: props.datasourceId,\n      selectedSpreadsheetUrl: option.value || \"\",\n      pluginId: props.pluginId || \"\",\n    });\n  };\n\n  const selectSheetAndToggle = (option: DropdownOption) => {\n    collapseAccordions(\n      datasource?.id || \"\",\n      selectedSpreadsheet.value,\n      selectedSheet.value,\n      false,\n    );\n    dispatch(\n      setEntityCollapsibleState(\n        `${datasource?.id}-${selectedSpreadsheet.value}-${option.value}`,\n        true,\n      ),\n    );\n    scrollIntoView(\n      `#${CSS.escape(\n        `entity-${datasource?.id}-${selectedSpreadsheet.value}-${option.value}`,\n      )}`,\n      \".t--gsheet-structure .t--gsheet-structure-list\",\n      -30,\n    );\n    setSelectedSheet(option);\n    setSheetData(undefined);\n    fetchSheetData({\n      selectedDatasourceId: datasource?.id || \"\",\n      selectedSpreadsheetUrl: selectedSpreadsheet.value || \"\",\n      selectedSheetName: option.value || \"\",\n      pluginId: props.pluginId || \"\",\n    });\n  };\n\n  const refetchAllSpreadsheets = () => {\n    if (!!props.datasourceId && !!props.pluginId) {\n      fetchAllSpreadsheets({\n        selectedDatasourceId: props.datasourceId,\n        pluginId: props.pluginId || \"\",\n        requestObject: {},\n      });\n      setSpreadsheetOptions([]);\n      setSheetOptions([]);\n      setSheetData(undefined);\n      setSelectedSpreadsheet((ss) => {\n        setSelectedSheet((s) => {\n          collapseAccordions(datasource?.id || \"\", ss.value, s.value);\n          return {};\n        });\n        return {};\n      });\n    }\n  };\n\n  // Fetch spreadsheets if datasourceId present\n  useEffect(() => {\n    fetchAllSpreadsheets({\n      selectedDatasourceId: props.datasourceId,\n      pluginId: props.pluginId || \"\",\n      requestObject: {},\n    });\n  }, [props.datasourceId, props.pluginId, dispatch]);\n\n  // Set first spreadsheet as default option in the dropdown\n  useEffect(() => {\n    if (spreadsheetOptions?.length > 0 && isEmpty(selectedSpreadsheet.value)) {\n      selectSpreadsheetAndToggle(spreadsheetOptions[0]);\n    }\n  }, [selectedSpreadsheet, spreadsheetOptions]);\n\n  // Set first sheet as default option in the dropdown\n  useEffect(() => {\n    if (\n      sheetOptions?.length > 0 &&\n      isEmpty(selectedSheet.value) &&\n      !isFetchingSheetsList &&\n      !isFetchingSpreadsheets\n    ) {\n      selectSheetAndToggle(sheetOptions[0]);\n    }\n  }, [\n    selectedSheet,\n    sheetOptions,\n    isFetchingSheetsList,\n    isFetchingSpreadsheets,\n  ]);\n\n  useEffect(() => {\n    toggleOnUnmountRefObject.current.selectedSpreadSheet =\n      selectedSpreadsheet.value;\n    toggleOnUnmountRefObject.current.selectedSheet = selectedSheet.value;\n  }, [selectedSpreadsheet, selectedSheet]);\n\n  useEffect(() => {\n    return () => {\n      collapseAccordions(\n        datasource?.id || \"\",\n        toggleOnUnmountRefObject.current.selectedSpreadSheet,\n        toggleOnUnmountRefObject.current.selectedSheet,\n      );\n    };\n  }, [datasource?.id]);\n\n  const onSelectSpreadsheet = (\n    table: string | undefined,\n    tableObj: DropdownOption | undefined,\n  ) => {\n    if (table && tableObj) {\n      AnalyticsUtil.logEvent(\"GSHEET_PREVIEW_SPREADSHEET_CHANGE\", {\n        datasourceId: props.datasourceId,\n        pluginId: props.pluginId,\n      });\n      selectSpreadsheetAndToggle(tableObj);\n    }\n  };\n\n  const onSelectSheetOption = (\n    sheetValue: string | undefined,\n    sheetObj: DropdownOption | undefined,\n  ) => {\n    if (sheetValue && sheetObj) {\n      AnalyticsUtil.logEvent(\"GSHEET_PREVIEW_SHEET_CHANGE\", {\n        datasourceId: props.datasourceId,\n        pluginId: props.pluginId,\n      });\n      selectSheetAndToggle(sheetObj);\n    }\n  };\n\n  const isError =\n    selectedDatasourceIsInvalid ||\n    failedFetchingSheetsList ||\n    failedFetchingSheetData;\n  const isLoading =\n    isFetchingSpreadsheets || isFetchingSheetsList || isFetchingSheetData;\n\n  const onGsheetGeneratePage = () => {\n    const payload = {\n      applicationId: applicationId || \"\",\n      pageId: \"\",\n      columns: sheetData?.length > 0 ? Object.keys(sheetData[0]) : [],\n      searchColumn: \"\",\n      tableName: selectedSheet?.value || \"\",\n      datasourceId: props.datasourceId || \"\",\n      pluginSpecificParams: {\n        sheetName: selectedSheet?.value || \"\",\n        sheetUrl: selectedSpreadsheet?.value || \"\",\n        tableHeaderIndex: 1,\n      },\n    };\n\n    AnalyticsUtil.logEvent(\"GSHEET_GENERATE_PAGE_BUTTON_CLICKED\", {\n      datasourceId: props.datasourceId,\n      pluginId: props.pluginId,\n    });\n\n    dispatch(generateTemplateToUpdatePage(payload));\n  };\n\n  const pagePermissions = useSelector(getPagePermissions);\n  const datasourcePermissions = datasource?.userPermissions || [];\n\n  const userAppPermissions = useSelector(\n    (state: AppState) => getCurrentApplication(state)?.userPermissions ?? [],\n  );\n\n  const isFeatureEnabled = useFeatureFlag(FEATURE_FLAG.license_gac_enabled);\n\n  const editorType = useEditorType(history.location.pathname);\n\n  const canCreatePages = getHasCreatePagePermission(\n    isFeatureEnabled,\n    userAppPermissions,\n  );\n\n  const canCreateDatasourceActions = hasCreateDSActionPermissionInApp({\n    isEnabled: isFeatureEnabled,\n    dsPermissions: datasourcePermissions,\n    pagePermissions,\n    editorType,\n  });\n\n  const refreshSpreadSheetButton = (option: DropdownOption) => (\n    <Button\n      isIconButton\n      kind=\"tertiary\"\n      onClick={() => selectSpreadsheetAndToggle(option)}\n      startIcon=\"refresh\"\n    />\n  );\n\n  const showGeneratePageBtn =\n    !isLoading &&\n    !isError &&\n    sheetData?.length &&\n    canCreateDatasourceActions &&\n    canCreatePages;\n\n  const filteredSpreadsheets = spreadsheetOptions.filter((option) =>\n    (option.label || \"\").toLowerCase()?.includes(searchString),\n  );\n\n  return (\n    <ViewModeSchemaContainer>\n      <DataWrapperContainer>\n        <StructureContainer data-testId=\"datasource-schema-container\">\n          {datasource && (\n            <DatasourceStructureHeader\n              datasource={datasource}\n              paddingBottom\n              refetchFn={refetchAllSpreadsheets}\n            />\n          )}\n          <DatasourceListContainer className=\"t--gsheet-structure\">\n            {!isFetchingSpreadsheets && (\n              <DatasourceStructureSearchContainer className=\"t--gsheet-search-container\">\n                <SearchInput\n                  className=\"datasourceStructure-search\"\n                  endIcon=\"close\"\n                  onChange={(value) => handleSearch(value)}\n                  placeholder={createMessage(GSHEET_SEARCH_PLACEHOLDER)}\n                  size={\"sm\"}\n                  startIcon=\"search\"\n                  type=\"text\"\n                />\n              </DatasourceStructureSearchContainer>\n            )}\n            <div className=\"t--gsheet-structure-list\">\n              {isFetchingSpreadsheets ? (\n                <ItemLoadingIndicator type=\"SPREADSHEET\" />\n              ) : (\n                filteredSpreadsheets.map((spreadsheet) => {\n                  return (\n                    <Entity\n                      className=\"t--spreadsheet-structure\"\n                      customAddButton={refreshSpreadSheetButton(spreadsheet)}\n                      entityId={`${datasource?.id}-${spreadsheet.value}`}\n                      icon={null}\n                      key={`${datasource?.id}-${spreadsheet.value}`}\n                      name={spreadsheet.label as string}\n                      onToggle={(isOpen) => {\n                        isOpen &&\n                          onSelectSpreadsheet(spreadsheet.value, spreadsheet);\n                      }}\n                      showAddButton={\n                        spreadsheet.value === selectedSpreadsheet.value\n                      }\n                      step={0}\n                    >\n                      {isFetchingSheetsList ? (\n                        <ItemLoadingIndicator type=\"SHEET\" />\n                      ) : sheetOptions.length > 0 ? (\n                        sheetOptions.map((sheet) => (\n                          <Entity\n                            className={`t--sheet-structure ${\n                              spreadsheet.value === selectedSpreadsheet.value &&\n                              sheet.value === selectedSheet.value\n                                ? \"t--sheet-structure-active\"\n                                : \"\"\n                            }`}\n                            entityId={`${datasource?.id}-${selectedSpreadsheet.value}-${sheet.value}`}\n                            icon={null}\n                            key={`${datasource?.id}-${selectedSpreadsheet.value}-${sheet.value}`}\n                            name={sheet.label as string}\n                            onToggle={(isOpen) => {\n                              isOpen && onSelectSheetOption(sheet.value, sheet);\n                            }}\n                            step={1}\n                          >\n                            {selectedSheet.value === sheet.value ? (\n                              isFetchingSheetData ? (\n                                <ItemLoadingIndicator type=\"DATA\" />\n                              ) : sheetData?.length > 0 ? (\n                                <DatasourceAttributesWrapper>\n                                  {Object.keys(sheetData[0]).map(\n                                    (fieldValue, index) => (\n                                      <DatasourceField\n                                        field={{\n                                          name: fieldValue,\n                                          type: \"string\",\n                                        }}\n                                        key={`${fieldValue}${index}`}\n                                        step={2}\n                                      />\n                                    ),\n                                  )}\n                                </DatasourceAttributesWrapper>\n                              ) : null\n                            ) : (\n                              <ItemLoadingIndicator type=\"DATA\" />\n                            )}\n                          </Entity>\n                        ))\n                      ) : (\n                        <ItemLoadingIndicator type=\"SPREADSHEET\" />\n                      )}\n                    </Entity>\n                  );\n                })\n              )}\n            </div>\n          </DatasourceListContainer>\n        </StructureContainer>\n        <DatasourceDataContainer>\n          <TableWrapper>\n            {isLoading ? (\n              <RenderInterimDataState state=\"LOADING\" />\n            ) : isError ? (\n              <RenderInterimDataState state=\"FAILED\" />\n            ) : sheetData?.length > 0 ? (\n              <Table data={sheetData} shouldResize={false} />\n            ) : (\n              <RenderInterimDataState state=\"NODATA\" />\n            )}\n          </TableWrapper>\n        </DatasourceDataContainer>\n      </DataWrapperContainer>\n      {showGeneratePageBtn && (\n        <ButtonContainer>\n          <Button\n            className=\"t--datasource-generate-page\"\n            isLoading={isGeneratePageLoading}\n            key=\"datasource-generate-page\"\n            kind=\"primary\"\n            onClick={onGsheetGeneratePage}\n            size=\"md\"\n          >\n            {createMessage(DATASOURCE_GENERATE_PAGE_BUTTON)}\n          </Button>\n        </ButtonContainer>\n      )}\n    </ViewModeSchemaContainer>\n  );\n}\n\nexport default GoogleSheetSchema;\n","import React from \"react\";\nimport { VIEW_MODE_TABS } from \"constants/DatasourceEditorConstants\";\nimport { Tabs, Tab, TabsList, TabPanel } from \"design-system\";\nimport styled from \"styled-components\";\nimport {\n  DATASOURCE_CONFIGURATIONS_TAB,\n  DATASOURCE_VIEW_DATA_TAB,\n  createMessage,\n} from \"@appsmith/constants/messages\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setDatasourceViewModeFlag } from \"actions/datasourceActions\";\nimport DatasourceViewModeSchema from \"./DatasourceViewModeSchema\";\nimport { getCurrentEnvironmentId } from \"@appsmith/selectors/environmentSelectors\";\nimport { isEnvironmentValid } from \"@appsmith/utils/Environments\";\nimport type { Datasource } from \"entities/Datasource\";\nimport {\n  isDatasourceAuthorizedForQueryCreation,\n  isGoogleSheetPluginDS,\n} from \"utils/editorContextUtils\";\nimport { getPlugin } from \"@appsmith/selectors/entitiesSelector\";\nimport GoogleSheetSchema from \"./GoogleSheetSchema\";\n\nconst TabsContainer = styled(Tabs)`\n  height: 100%;\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst TabListWrapper = styled(TabsList)`\n  flex-shrink: 0;\n  margin-left: var(--ads-v2-spaces-7);\n`;\n\nconst TabPanelContainer = styled(TabPanel)`\n  margin-top: 0;\n  overflow: hidden;\n  flex-grow: 1;\n`;\n\nconst ConfigurationsTabPanelContainer = styled(TabPanel)`\n  margin-top: 0;\n  overflow: scroll;\n  flex-grow: 1;\n  padding: 0 var(--ads-v2-spaces-7);\n`;\n\ninterface DatasourceTabProps {\n  configChild: JSX.Element;\n  datasource: Datasource;\n}\n\nconst DatasourceTabs = (props: DatasourceTabProps) => {\n  const currentEnvironmentId = useSelector(getCurrentEnvironmentId);\n  const isDatasourceValid =\n    isEnvironmentValid(props.datasource, currentEnvironmentId) || false;\n  const dispatch = useDispatch();\n  const setDatasourceViewModeFlagClick = (value: boolean) => {\n    dispatch(setDatasourceViewModeFlag(value));\n  };\n  const plugin = useSelector((state) =>\n    getPlugin(state, props.datasource.pluginId),\n  );\n  const isGoogleSheetPlugin = isGoogleSheetPluginDS(plugin?.packageName);\n  const isPluginAuthorized =\n    !!plugin && !!props.datasource\n      ? isDatasourceAuthorizedForQueryCreation(\n          props.datasource,\n          plugin,\n          currentEnvironmentId,\n        )\n      : false;\n  return (\n    <TabsContainer\n      defaultValue={\n        isDatasourceValid || isPluginAuthorized\n          ? VIEW_MODE_TABS.VIEW_DATA\n          : VIEW_MODE_TABS.CONFIGURATIONS\n      }\n    >\n      <TabListWrapper className=\"t--datasource-tab-list\">\n        <Tab value={VIEW_MODE_TABS.VIEW_DATA}>\n          {createMessage(DATASOURCE_VIEW_DATA_TAB)}\n        </Tab>\n        <Tab value={VIEW_MODE_TABS.CONFIGURATIONS}>\n          {createMessage(DATASOURCE_CONFIGURATIONS_TAB)}\n        </Tab>\n      </TabListWrapper>\n      <TabPanelContainer\n        className=\"t--datasource-tab-container\"\n        value={VIEW_MODE_TABS.VIEW_DATA}\n      >\n        {isGoogleSheetPlugin ? (\n          <GoogleSheetSchema\n            datasourceId={props.datasource.id}\n            pluginId={props.datasource?.pluginId}\n          />\n        ) : (\n          <DatasourceViewModeSchema\n            datasource={props.datasource}\n            setDatasourceViewModeFlag={setDatasourceViewModeFlagClick}\n          />\n        )}\n      </TabPanelContainer>\n      <ConfigurationsTabPanelContainer\n        className=\"t--datasource-tab-container\"\n        value={VIEW_MODE_TABS.CONFIGURATIONS}\n      >\n        {props.configChild}\n      </ConfigurationsTabPanelContainer>\n    </TabsContainer>\n  );\n};\n\nexport default DatasourceTabs;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector } from \"react-redux\";\nimport { getPluginImages } from \"@appsmith/selectors/entitiesSelector\";\nimport type {\n  DropdownOption,\n  RenderDropdownOptionType,\n} from \"design-system-old\";\nimport { Classes, Text, TextType } from \"design-system-old\";\nimport _ from \"lodash\";\nimport { Tooltip, Icon } from \"design-system\";\nimport { getAssetUrl } from \"@appsmith/utils/airgapHelpers\";\n\n// ---------- Helpers and constants ----------\n\nexport const CONNECT_NEW_DATASOURCE_OPTION_ID = _.uniqueId();\n\n//  ---------- Styles ----------\n\nconst OptionWrapper = styled.div<{\n  disabled?: boolean;\n  selected?: boolean;\n  width?: string;\n}>`\n  display: flex;\n  align-items: center;\n  user-select: none;\n  width: 100%;\n\n  &&& svg {\n    rect {\n      fill: ${(props) => props.theme.colors.dropdownIconBg};\n    }\n  }\n\n  .${Classes.TEXT} {\n    color: ${(props) =>\n      props.disabled\n        ? \"var(--ads-v2-color-fg-muted)\"\n        : \"var(--ads-v2-color-fg)\"};\n  }\n\n  .${Classes.ICON} {\n    margin-right: ${(props) => props.theme.spaces[5]}px;\n    svg {\n      path {\n        ${(props) => `fill: ${props.theme.colors.dropdown.icon}`};\n      }\n    }\n  }\n`;\n\nconst ImageWrapper = styled.div`\n  height: 16px;\n  width: auto;\n  display: flex;\n  align-items: center;\n  margin: 0px 8px 0px 0px;\n`;\n\nexport const DatasourceImage = styled.img`\n  height: 16px;\n  width: 16px;\n`;\n\nconst CreateIconWrapper = styled.div`\n  margin: 0px 8px 0px 0px;\n  cursor: pointer;\n  height: 16px;\n`;\n\ninterface DataSourceOptionType extends RenderDropdownOptionType {\n  dataTestid: string;\n  optionWidth: string;\n}\nfunction DataSourceOption({\n  dataTestid,\n  isHighlighted,\n  isSelectedNode,\n  option: dropdownOption,\n  optionClickHandler,\n  optionWidth,\n}: DataSourceOptionType) {\n  const { label } = dropdownOption as DropdownOption;\n  const pluginImages = useSelector(getPluginImages);\n  const isConnectNewDataSourceBtn =\n    CONNECT_NEW_DATASOURCE_OPTION_ID === (dropdownOption as DropdownOption).id;\n\n  const isSupportedForTemplate = (dropdownOption as DropdownOption)?.data\n    ?.isSupportedForTemplate;\n  const isNotSupportedDatasource =\n    !isSupportedForTemplate && !isSelectedNode && !isConnectNewDataSourceBtn;\n\n  const optionCypressSelector = isConnectNewDataSourceBtn\n    ? \".t--connectNewDatasource-option\"\n    : isSelectedNode\n      ? \"\"\n      : dataTestid;\n  return (\n    <Tooltip\n      content=\"Not supported for template generation\"\n      isDisabled={\n        isSupportedForTemplate || isSelectedNode || isConnectNewDataSourceBtn\n      }\n    >\n      <OptionWrapper\n        className={`t--dropdown-option ${\n          isHighlighted ? \"highlight-option\" : \"\"\n        }`}\n        data-testid={optionCypressSelector}\n        disabled={isNotSupportedDatasource}\n        key={(dropdownOption as DropdownOption).id}\n        onClick={() => {\n          if (isNotSupportedDatasource) {\n            return;\n          }\n          if (optionClickHandler) {\n            optionClickHandler(dropdownOption as DropdownOption);\n          }\n        }}\n        selected={isSelectedNode}\n        width={optionWidth}\n      >\n        {isConnectNewDataSourceBtn ? (\n          <CreateIconWrapper>\n            <Icon name=\"plus\" size=\"md\" />\n          </CreateIconWrapper>\n        ) : pluginImages[(dropdownOption as DropdownOption)?.data?.pluginId] ? (\n          <ImageWrapper>\n            <DatasourceImage\n              alt=\"\"\n              className=\"dataSourceImage\"\n              src={getAssetUrl(\n                pluginImages[\n                  (dropdownOption as DropdownOption)?.data?.pluginId\n                ],\n              )}\n            />\n          </ImageWrapper>\n        ) : null}\n\n        <Text type={TextType.P1}>{label}</Text>\n      </OptionWrapper>\n    </Tooltip>\n  );\n}\n\nexport default DataSourceOption;\n","import styled from \"styled-components\";\nimport { getTypographyByKey } from \"design-system-old\";\n\nexport const SelectWrapper = styled.div<{ width: string }>`\n  display: inline-block;\n  margin: 8px 0;\n  max-width: ${(props) => props.width};\n  width: 100%;\n  &:first-child {\n    margin-top: 16px;\n  }\n`;\n\nexport const Label = styled.p`\n  flex: 1;\n  ${getTypographyByKey(\"p1\")};\n  white-space: nowrap;\n  display: flex;\n  align-items: center;\n  margin-bottom: 4px;\n`;\n\nexport const Bold = styled.span`\n  font-weight: 500;\n  /* margin-left: 2px; */\n`;\n","import type { ReactElement } from \"react\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getEditorConfig } from \"@appsmith/selectors/entitiesSelector\";\nimport type { AppState } from \"@appsmith/reducers\";\nimport { fetchPluginFormConfig } from \"actions/pluginActions\";\nimport { DROPDOWN_DIMENSION, DEFAULT_DROPDOWN_OPTION } from \"../constants\";\nimport { SelectWrapper, Label, Bold } from \"./styles\";\nimport type { GeneratePagePayload } from \"./types\";\nimport styled from \"styled-components\";\nimport type {\n  UseSheetListReturn,\n  UseSpreadSheetsReturn,\n  UseSheetColumnHeadersReturn,\n} from \"./hooks\";\nimport type { DropdownOption } from \"design-system-old\";\nimport { getTypographyByKey, Text, TextType } from \"design-system-old\";\nimport { debounce } from \"lodash\";\nimport {\n  createMessage,\n  GEN_CRUD_TABLE_HEADER_LABEL,\n  GEN_CRUD_COLUMN_HEADER_TITLE,\n  GEN_CRUD_NO_COLUMNS,\n  GEN_CRUD_TABLE_HEADER_TOOLTIP_DESC,\n} from \"@appsmith/constants/messages\";\nimport { Icon, Option, Select, Input, Tooltip } from \"design-system\";\n\ninterface Props {\n  googleSheetPluginId: string;\n  selectedDatasource: DropdownOption;\n  selectedSpreadsheet: DropdownOption;\n  generatePageAction: (payload: GeneratePagePayload) => void;\n  renderSubmitButton: ({\n    disabled,\n    isLoading,\n    onSubmit,\n  }: {\n    onSubmit: () => void;\n    disabled: boolean;\n    isLoading: boolean;\n  }) => ReactElement<any, any>;\n  sheetsListProps: UseSheetListReturn;\n  spreadSheetsProps: UseSpreadSheetsReturn;\n  sheetColumnsHeaderProps: UseSheetColumnHeadersReturn;\n}\n\n// styles\n\nconst RoundBg = styled.div``;\n\nconst Row = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: center;\n  margin-bottom: 4px;\n`;\n\nconst ColumnName = styled.span`\n  ${getTypographyByKey(\"p3\")};\n  text-align: center;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nconst ColumnInfoWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: flex-start;\n  margin-bottom: 24px;\n  width: ${DROPDOWN_DIMENSION.WIDTH};\n  overflow: hidden;\n  flex-wrap: wrap;\n  margin-top: 2px;\n  .cs-text {\n    color: var(--ads-v2-color-fg-muted);\n  }\n`;\n\nconst ColumnNameWrapper = styled.div`\n  display: flex;\n  color: var(--ads-v2-color-fg-muted);\n`;\n\nconst RowHeading = styled.p`\n  ${getTypographyByKey(\"p1\")};\n  margin-right: 6px;\n`;\n\n// As TextInput with dataType as number allows `e` as input, hence adding a number validator\n// to check for only whole numbers.\nexport function isNumberValidator(value: string) {\n  const isValid = (/^\\d+$/.test(value) && Number(value) > 0) || value === \"\";\n  return {\n    isValid: isValid,\n    message: !isValid ? \"Only numeric value allowed\" : \"\",\n  };\n}\n\n// constants\n\nconst MAX_COLUMNS_VISIBLE = 3;\n\n// ---------- GoogleSheetForm Component -------\n\nfunction GoogleSheetForm(props: Props) {\n  const {\n    generatePageAction,\n    googleSheetPluginId,\n    renderSubmitButton,\n    selectedDatasource,\n    selectedSpreadsheet,\n    sheetColumnsHeaderProps,\n    sheetsListProps,\n    spreadSheetsProps,\n  } = props;\n\n  const { fetchSheetsList, isFetchingSheetsList, sheetsList } = sheetsListProps;\n  const { fetchAllSpreadsheets } = spreadSheetsProps;\n  const {\n    columnHeaderList,\n    errorFetchingColumnHeaderList,\n    fetchColumnHeaderList,\n    isFetchingColumnHeaderList,\n  } = sheetColumnsHeaderProps;\n\n  const [tableHeaderIndex, setTableHeaderIndex] = useState<string>(\"1\");\n  const [selectedSheet, setSelectedSheet] = useState<DropdownOption>(\n    DEFAULT_DROPDOWN_OPTION,\n  );\n  const dispatch = useDispatch();\n\n  const googleSheetEditorConfig = useSelector((state: AppState) =>\n    getEditorConfig(state, googleSheetPluginId),\n  );\n\n  const [sheetQueryRequest, setSheetQueryRequest] = useState<\n    Record<any, string>\n  >({});\n\n  useEffect(() => {\n    // Check if google sheet editor config is fetched.\n    // if not, fetch it.\n\n    if (!googleSheetEditorConfig) {\n      dispatch(\n        fetchPluginFormConfig({\n          pluginId: selectedDatasource.data?.pluginId,\n        }),\n      );\n    }\n  }, [googleSheetEditorConfig]);\n\n  useEffect(() => {\n    if (googleSheetEditorConfig && googleSheetEditorConfig[0]) {\n      const requestObject: Record<any, string> = {};\n      const configs = googleSheetEditorConfig[0]?.children;\n      if (Array.isArray(configs)) {\n        for (let index = 0; index < configs.length; index += 2) {\n          const keyConfig = configs[index];\n          const valueConfig = configs[index + 1];\n          if (keyConfig && valueConfig) {\n            const key = keyConfig?.initialValue;\n            const value = valueConfig?.initialValue;\n            if (key && value !== undefined) requestObject[key] = value;\n          }\n        }\n      }\n      setSheetQueryRequest(requestObject);\n    }\n  }, [googleSheetEditorConfig]);\n\n  useEffect(() => {\n    // On change of datasource selection\n    // if googleSheetEditorConfig if fetched then get all spreadsheets\n    if (\n      selectedDatasource.value &&\n      selectedDatasource.id &&\n      googleSheetEditorConfig\n    ) {\n      fetchAllSpreadsheets({\n        selectedDatasourceId: selectedDatasource.id,\n        pluginId: selectedDatasource?.data?.pluginId,\n        requestObject: sheetQueryRequest,\n      });\n    }\n  }, [selectedDatasource.value, googleSheetEditorConfig, dispatch]);\n\n  // When user selects a spreadsheet\n  // Fetch all sheets inside that spreadsheet\n  useEffect(() => {\n    if (\n      selectedDatasource.value &&\n      selectedDatasource.id &&\n      selectedSpreadsheet.value\n    ) {\n      setSelectedSheet(DEFAULT_DROPDOWN_OPTION);\n      fetchSheetsList({\n        requestObject: sheetQueryRequest,\n        selectedDatasourceId: selectedDatasource.id,\n        selectedSpreadsheetUrl: selectedSpreadsheet.value,\n        pluginId: selectedDatasource?.data?.pluginId,\n      });\n    }\n  }, [\n    selectedSpreadsheet.value,\n    selectedDatasource.id,\n    selectedDatasource.value,\n    dispatch,\n    fetchSheetsList,\n  ]);\n\n  const onSelectSheetOption = (\n    sheetValue: string | undefined,\n    sheetObj: DropdownOption | undefined,\n  ) => {\n    if (sheetValue && sheetObj) {\n      setSelectedSheet(sheetObj);\n      if (selectedDatasource.id && selectedSpreadsheet.value) {\n        fetchColumnHeaderList({\n          selectedDatasourceId: selectedDatasource.id,\n          selectedSpreadsheetUrl: selectedSpreadsheet.value,\n          sheetName: sheetValue,\n          tableHeaderIndex,\n          pluginId: selectedDatasource?.data?.pluginId,\n          requestObject: sheetQueryRequest,\n        });\n      }\n    }\n  };\n\n  const onSubmit = () => {\n    if (selectedSpreadsheet.value) {\n      const columns: string[] = [];\n      columnHeaderList.forEach(({ value }) => {\n        if (value) columns.push(value);\n      });\n      const payload = {\n        columns,\n        searchColumn: \"\",\n        tableName: selectedSheet.value || \"\",\n        pluginSpecificParams: {\n          sheetUrl: selectedSpreadsheet.value,\n          tableHeaderIndex,\n          sheetName: selectedSheet.value,\n        },\n      };\n      generatePageAction(payload);\n    }\n  };\n\n  const debouncedFetchColumns = useCallback(\n    debounce((value: string) => {\n      if (\n        selectedDatasource.id &&\n        selectedSpreadsheet.value &&\n        selectedSheet.value\n      ) {\n        fetchColumnHeaderList({\n          selectedDatasourceId: selectedDatasource.id,\n          selectedSpreadsheetUrl: selectedSpreadsheet.value,\n          pluginId: selectedDatasource?.data?.pluginId,\n          sheetName: selectedSheet.value,\n          tableHeaderIndex: value,\n          requestObject: sheetQueryRequest,\n        });\n      }\n    }, 200),\n    [selectedSheet, selectedDatasource, selectedSheet],\n  );\n\n  const tableHeaderIndexChangeHandler = (value: string) => {\n    if (isNumberValidator(value).isValid) {\n      setTableHeaderIndex(value);\n      debouncedFetchColumns(value);\n    }\n  };\n\n  return (\n    <>\n      {selectedSpreadsheet.value ? (\n        <SelectWrapper width={DROPDOWN_DIMENSION.WIDTH}>\n          <Label>\n            Select sheet from&nbsp;<Bold>{selectedSpreadsheet.label}</Bold>\n          </Label>\n\n          <Select\n            data-testid=\"t--sheetName-dropdown\"\n            isLoading={isFetchingSheetsList}\n            onChange={(value) =>\n              onSelectSheetOption(\n                value,\n                sheetsList.find((sheet) => sheet.value === value),\n              )\n            }\n            value={selectedSheet}\n          >\n            {sheetsList.map((sheet) => {\n              return (\n                <Option key={sheet.label} value={sheet.label}>\n                  {sheet?.label}\n                </Option>\n              );\n            })}\n          </Select>\n        </SelectWrapper>\n      ) : null}\n\n      {selectedSheet.value ? (\n        <SelectWrapper width={DROPDOWN_DIMENSION.WIDTH}>\n          <>\n            <Row>\n              <RowHeading>\n                {createMessage(GEN_CRUD_TABLE_HEADER_LABEL)}\n              </RowHeading>\n              <Tooltip\n                content={createMessage(GEN_CRUD_TABLE_HEADER_TOOLTIP_DESC)}\n                // hoverOpenDelay={200}\n              >\n                <RoundBg>\n                  <Icon name=\"question-line\" size=\"md\" />\n                </RoundBg>\n              </Tooltip>\n            </Row>\n            <Input\n              data-testid=\"t--tableHeaderIndex\"\n              onChange={tableHeaderIndexChangeHandler}\n              placeholder=\"Table header index\"\n              size=\"md\"\n              type=\"text\"\n              value={tableHeaderIndex}\n            />\n            <ColumnInfoWrapper>\n              {columnHeaderList.length ? (\n                <>\n                  <Text type={TextType.P3}>\n                    {createMessage(GEN_CRUD_COLUMN_HEADER_TITLE)}:&nbsp;\n                  </Text>\n                  {columnHeaderList\n                    .slice(0, MAX_COLUMNS_VISIBLE)\n                    .map((column, index) => (\n                      <ColumnNameWrapper key={column.id}>\n                        <ColumnName>{column.label}</ColumnName>\n                        {columnHeaderList.length - 1 === index ? null : (\n                          <ColumnName>,&nbsp;</ColumnName>\n                        )}\n                      </ColumnNameWrapper>\n                    ))}\n                  {columnHeaderList.length > MAX_COLUMNS_VISIBLE ? (\n                    <ColumnName>\n                      and +{columnHeaderList.length - MAX_COLUMNS_VISIBLE} more.\n                    </ColumnName>\n                  ) : (\n                    \"\"\n                  )}\n                </>\n              ) : (\n                <ColumnName>{createMessage(GEN_CRUD_NO_COLUMNS)}</ColumnName>\n              )}\n            </ColumnInfoWrapper>\n          </>\n        </SelectWrapper>\n      ) : null}\n\n      {selectedSheet.value\n        ? renderSubmitButton({\n            onSubmit,\n            disabled:\n              !columnHeaderList.length ||\n              isFetchingColumnHeaderList ||\n              !!errorFetchingColumnHeaderList,\n            isLoading: isFetchingColumnHeaderList,\n          })\n        : null}\n    </>\n  );\n}\n\nexport default GoogleSheetForm;\n","import React, { useEffect, useState, useCallback, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  getDatasources,\n  getIsFetchingDatasourceStructure,\n  getGenerateCRUDEnabledPluginMap,\n  getIsFetchingSinglePluginForm,\n  getDatasourcesStructure,\n  getNumberOfEntitiesInCurrentPage,\n} from \"@appsmith/selectors/entitiesSelector\";\n\nimport type { Datasource } from \"entities/Datasource\";\nimport { fetchDatasourceStructure } from \"actions/datasourceActions\";\nimport { generateTemplateToUpdatePage } from \"actions/pageActions\";\nimport { useParams, useLocation } from \"react-router\";\nimport type { ExplorerURLParams } from \"@appsmith/pages/Editor/Explorer/helpers\";\nimport { INTEGRATION_TABS } from \"constants/routes\";\nimport history from \"utils/history\";\nimport { getQueryParams } from \"utils/URLUtils\";\nimport { getIsGeneratingTemplatePage } from \"selectors/pageListSelectors\";\nimport DataSourceOption, {\n  CONNECT_NEW_DATASOURCE_OPTION_ID,\n  DatasourceImage,\n} from \"../DataSourceOption\";\nimport { getQueryStringfromObject } from \"@appsmith/entities/URLRedirect/URLAssembly\";\nimport type { DropdownOption } from \"design-system-old\";\nimport { Button, Icon, Text, Select, Option, Tooltip } from \"design-system\";\nimport GoogleSheetForm from \"./GoogleSheetForm\";\nimport {\n  GENERATE_PAGE_FORM_TITLE,\n  createMessage,\n  GEN_CRUD_DATASOURCE_DROPDOWN_LABEL,\n} from \"@appsmith/constants/messages\";\nimport type { GenerateCRUDEnabledPluginMap } from \"api/PluginApi\";\nimport {\n  useDatasourceOptions,\n  useSheetsList,\n  useSpreadSheets,\n  useSheetColumnHeaders,\n  useS3BucketList,\n} from \"./hooks\";\nimport AnalyticsUtil from \"@appsmith/utils/AnalyticsUtil\";\nimport type { AppState } from \"@appsmith/reducers\";\nimport type {\n  DropdownOptions,\n  DatasourceTableDropdownOption,\n} from \"../constants\";\nimport {\n  PluginFormInputFieldMap,\n  DEFAULT_DROPDOWN_OPTION,\n  DROPDOWN_DIMENSION,\n  ALLOWED_SEARCH_DATATYPE,\n} from \"../constants\";\nimport { Bold, Label, SelectWrapper } from \"./styles\";\nimport type { GeneratePagePayload } from \"./types\";\nimport { getCurrentApplicationId } from \"selectors/editorSelectors\";\n\nimport {\n  datasourcesEditorIdURL,\n  integrationEditorURL,\n} from \"@appsmith/RouteBuilder\";\nimport { PluginPackageName } from \"entities/Action\";\nimport { getCurrentAppWorkspace } from \"@appsmith/selectors/selectedWorkspaceSelectors\";\nimport { getPluginImages } from \"@appsmith/selectors/entitiesSelector\";\nimport { getAssetUrl } from \"@appsmith/utils/airgapHelpers\";\nimport { DatasourceCreateEntryPoints } from \"constants/Datasource\";\nimport { isGoogleSheetPluginDS } from \"utils/editorContextUtils\";\nimport equal from \"fast-deep-equal\";\nimport { useFeatureFlag } from \"utils/hooks/useFeatureFlag\";\nimport { FEATURE_FLAG } from \"@appsmith/entities/FeatureFlag\";\nimport { getHasCreateDatasourcePermission } from \"@appsmith/utils/BusinessFeatures/permissionPageHelpers\";\n\n//  ---------- Styles ----------\n\nconst TooltipWrapper = styled.div`\n  margin-left: 6px;\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  border: none;\n`;\n\nconst FormWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst DescWrapper = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Row = styled.p`\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: center;\n  white-space: nowrap;\n  margin-bottom: 4px;\n`;\n\nconst ErrorMsg = styled.span`\n  font-weight: normal;\n  font-size: 12px;\n  line-height: 16px;\n  letter-spacing: -0.221538px;\n  color: var(--ads-v2-color-fg-error);\n  margin-top: var(--ads-spaces-3);\n`;\n\nconst HelperMsg = styled.span`\n  font-weight: normal;\n  font-size: 12px;\n  line-height: 16px;\n  letter-spacing: -0.221538px;\n  color: var(--ads-v2-color-fg-muted);\n  margin: 6px 0px 10px;\n`;\n\nconst StyledIconWrapper = styled.div`\n  height: 20px;\n  width: auto;\n  display: flex;\n  align-items: center;\n  margin: 0px 8px 0px 0px;\n`;\n\nconst OptionWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  position: relative;\n\n  .datasource-sub-text {\n    position: absolute;\n    right: 4px;\n    font-size: 12px;\n  }\n`;\n// Constants\n\nconst datasourceIcon = \"layout-5-line\";\nconst columnIcon = \"layout-column-line\";\n\nexport const GENERATE_PAGE_MODE = {\n  NEW: \"NEW\", // a new page is created for the template. (new pageId created)\n  REPLACE_EMPTY: \"REPLACE_EMPTY\", // current page's content (DSL) is updated to template DSL. (same pageId)\n};\n\nfunction GeneratePageSubmitBtn({\n  disabled,\n  isLoading,\n  onSubmit,\n  showSubmitButton,\n}: {\n  onSubmit: () => void;\n  isLoading: boolean;\n  showSubmitButton: boolean;\n  disabled: boolean;\n}) {\n  return showSubmitButton ? (\n    <div>\n      <Button\n        data-testid=\"t--generate-page-form-submit\"\n        isDisabled={disabled}\n        isLoading={isLoading}\n        kind=\"primary\"\n        onClick={() => !disabled && onSubmit()}\n        size=\"md\"\n      >\n        Generate page\n      </Button>\n    </div>\n  ) : null;\n}\n\nenum GeneratePageSelectedViewIconEnum {\n  PLUGIN_ICON = \"plugin-icon\",\n  ADS_ICON = \"ads-icon\",\n}\n\nconst DatasourceOptionSelectedView = (props: any) => {\n  const { iconType, option, pluginImages } = props;\n  return (\n    <OptionWrapper>\n      <StyledIconWrapper>\n        {props.iconType === GeneratePageSelectedViewIconEnum.PLUGIN_ICON && (\n          <DatasourceImage\n            alt=\"\"\n            className=\"dataSourceImage\"\n            src={getAssetUrl(\n              pluginImages[(option as DropdownOption)?.data?.pluginId],\n            )}\n          />\n        )}\n        {iconType === GeneratePageSelectedViewIconEnum.ADS_ICON && (\n          <Icon\n            color={option?.iconColor}\n            name={option.icon}\n            size={option?.iconSize}\n          />\n        )}\n      </StyledIconWrapper>\n      <Text renderAs=\"p\">{option.label} </Text>\n    </OptionWrapper>\n  );\n};\n\n// ---------- GeneratePageForm Component ----------\n\nfunction GeneratePageForm() {\n  const dispatch = useDispatch();\n  const querySearch = useLocation().search;\n\n  const { pageId: currentPageId } = useParams<ExplorerURLParams>();\n\n  const pluginImages = useSelector(getPluginImages);\n\n  const applicationId = useSelector(getCurrentApplicationId);\n  const workspace = useSelector(getCurrentAppWorkspace);\n\n  const datasources: Datasource[] = useSelector(getDatasources);\n  const isGeneratingTemplatePage = useSelector(getIsGeneratingTemplatePage);\n  const numberOfEntities = useSelector(getNumberOfEntitiesInCurrentPage);\n  const currentMode = useRef(\n    numberOfEntities > 0\n      ? GENERATE_PAGE_MODE.NEW\n      : GENERATE_PAGE_MODE.REPLACE_EMPTY,\n  );\n\n  const [datasourceIdToBeSelected, setDatasourceIdToBeSelected] =\n    useState<string>(\"\");\n  const datasourcesStructure = useSelector(getDatasourcesStructure);\n\n  const generateCRUDSupportedPlugin: GenerateCRUDEnabledPluginMap = useSelector(\n    getGenerateCRUDEnabledPluginMap,\n  );\n\n  const [datasourceTableOptions, setSelectedDatasourceTableOptions] =\n    useState<DropdownOptions>([]);\n\n  const [selectedTableColumnOptions, setSelectedTableColumnOptions] =\n    useState<DropdownOptions>([]);\n\n  const [selectedDatasource, selectDataSource] = useState<DropdownOption>(\n    DEFAULT_DROPDOWN_OPTION,\n  );\n\n  const isFetchingDatasourceStructure = useSelector((state: AppState) =>\n    getIsFetchingDatasourceStructure(state, selectedDatasource.id || \"\"),\n  );\n\n  const [isSelectedTableEmpty, setIsSelectedTableEmpty] =\n    useState<boolean>(false);\n\n  const selectedDatasourcePluginId: string = selectedDatasource.data?.pluginId;\n  const selectedDatasourcePluginPackageName: string =\n    generateCRUDSupportedPlugin[selectedDatasourcePluginId];\n\n  const isGoogleSheetPlugin = isGoogleSheetPluginDS(\n    selectedDatasourcePluginPackageName,\n  );\n\n  const isS3Plugin =\n    selectedDatasourcePluginPackageName === PluginPackageName.S3;\n\n  const isFetchingSheetPluginForm = useSelector((state: AppState) => {\n    if (isGoogleSheetPlugin) {\n      return getIsFetchingSinglePluginForm(\n        state,\n        selectedDatasource.data?.pluginId,\n      );\n    }\n    return false;\n  });\n\n  const [selectedTable, selectTable] = useState<DropdownOption>(\n    DEFAULT_DROPDOWN_OPTION,\n  );\n\n  const [selectedDatasourceIsInvalid, setSelectedDatasourceIsInvalid] =\n    useState(false);\n\n  const [selectedColumn, selectColumn] = useState<DropdownOption>(\n    DEFAULT_DROPDOWN_OPTION,\n  );\n\n  const { bucketList, failedFetchingBucketList, isFetchingBucketList } =\n    useS3BucketList();\n\n  const onSelectDataSource = useCallback(\n    (\n      datasource: string | undefined,\n      dataSourceObj: DropdownOption | undefined,\n    ) => {\n      if (\n        datasource &&\n        dataSourceObj &&\n        selectedDatasource.id !== dataSourceObj.id\n      ) {\n        const pluginId: string = dataSourceObj.data.pluginId;\n        const pluginPackageName: string = generateCRUDSupportedPlugin[pluginId];\n        AnalyticsUtil.logEvent(\"GEN_CRUD_PAGE_SELECT_DATASOURCE\", {\n          datasourceType: pluginPackageName,\n        });\n        selectDataSource(dataSourceObj);\n        setSelectedDatasourceTableOptions([]);\n        setSelectedTableColumnOptions([]);\n        selectTable(DEFAULT_DROPDOWN_OPTION);\n        selectColumn(DEFAULT_DROPDOWN_OPTION);\n        setSelectedDatasourceIsInvalid(false);\n        if (dataSourceObj.id) {\n          switch (pluginPackageName) {\n            case PluginPackageName.GOOGLE_SHEETS:\n              break;\n            default: {\n              if (dataSourceObj.id) {\n                dispatch(fetchDatasourceStructure(dataSourceObj.id, true));\n              }\n            }\n          }\n        }\n      }\n    },\n    [\n      generateCRUDSupportedPlugin,\n      selectDataSource,\n      setSelectedDatasourceTableOptions,\n      setSelectedTableColumnOptions,\n      selectTable,\n      selectColumn,\n      dispatch,\n      setSelectedDatasourceIsInvalid,\n      selectedDatasource,\n      generateCRUDSupportedPlugin,\n    ],\n  );\n\n  const onSelectTable = useCallback(\n    (\n      table: string | undefined,\n      TableObj: DatasourceTableDropdownOption | undefined,\n    ) => {\n      if (table && TableObj) {\n        AnalyticsUtil.logEvent(\"GEN_CRUD_PAGE_SELECT_TABLE\");\n        selectTable(TableObj);\n        selectColumn(DEFAULT_DROPDOWN_OPTION);\n        if (!isGoogleSheetPlugin && !isS3Plugin) {\n          const { data } = TableObj;\n\n          if (Array.isArray(data.columns)) {\n            if (data.columns.length === 0) setIsSelectedTableEmpty(true);\n            else {\n              if (isSelectedTableEmpty) setIsSelectedTableEmpty(false);\n              const newSelectedTableColumnOptions: DropdownOption[] = [];\n              data.columns.map((column) => {\n                if (\n                  column.type &&\n                  ALLOWED_SEARCH_DATATYPE.includes(column.type.toLowerCase())\n                ) {\n                  newSelectedTableColumnOptions.push({\n                    id: column.name,\n                    label: column.name,\n                    value: column.name,\n                    subText: column.type,\n                    icon: columnIcon,\n                    iconSize: \"md\",\n                    iconColor: \"var(--ads-v2-color-fg)\",\n                  });\n                }\n              });\n              setSelectedTableColumnOptions(newSelectedTableColumnOptions);\n            }\n          } else {\n            setSelectedTableColumnOptions([]);\n          }\n        }\n      }\n    },\n    [\n      isSelectedTableEmpty,\n      selectTable,\n      setSelectedTableColumnOptions,\n      selectColumn,\n      setIsSelectedTableEmpty,\n      isGoogleSheetPlugin,\n      isS3Plugin,\n    ],\n  );\n\n  const onSelectColumn = useCallback(\n    (table: string | undefined, ColumnObj: DropdownOption | undefined) => {\n      if (table && ColumnObj) {\n        AnalyticsUtil.logEvent(\"GEN_CRUD_PAGE_SELECT_SEARCH_COLUMN\");\n        selectColumn(ColumnObj);\n      }\n    },\n    [selectColumn],\n  );\n\n  const isFeatureEnabled = useFeatureFlag(FEATURE_FLAG.license_gac_enabled);\n\n  const canCreateDatasource = getHasCreateDatasourcePermission(\n    isFeatureEnabled,\n    workspace?.userPermissions || [],\n  );\n\n  const spreadSheetsProps = useSpreadSheets({\n    setSelectedDatasourceTableOptions,\n    setSelectedDatasourceIsInvalid,\n  });\n\n  // Flag to indicate fetching of datasource configs or structure\n  const fetchingDatasourceConfigs =\n    isFetchingDatasourceStructure ||\n    (isFetchingBucketList && isS3Plugin) ||\n    ((isFetchingSheetPluginForm || spreadSheetsProps.isFetchingSpreadsheets) &&\n      isGoogleSheetPlugin);\n\n  // Options for datasource dropdown\n  const dataSourceOptions = useDatasourceOptions({\n    canCreateDatasource,\n    datasources,\n    generateCRUDSupportedPlugin,\n    fetchingDatasourceConfigs,\n  });\n\n  const sheetsListProps = useSheetsList();\n\n  const sheetColumnsHeaderProps = useSheetColumnHeaders();\n\n  useEffect(() => {\n    if (isS3Plugin && bucketList && bucketList.length) {\n      const tables = bucketList.map((bucketName) => ({\n        id: bucketName,\n        label: bucketName,\n        value: bucketName,\n        icon: datasourceIcon,\n        iconSize: \"md\",\n        iconColor: \"var(--ads-v2-color-fg)\",\n      }));\n      setSelectedDatasourceTableOptions(tables);\n    }\n  }, [bucketList, isS3Plugin, setSelectedDatasourceTableOptions]);\n\n  useEffect(() => {\n    if (\n      selectedDatasource.id &&\n      selectedDatasource.value &&\n      !isFetchingDatasourceStructure\n    ) {\n      // when finished fetching datasource structure\n      const selectedDatasourceStructure =\n        datasourcesStructure[selectedDatasource.id] || {};\n\n      const hasError = selectedDatasourceStructure?.error;\n\n      if (hasError) {\n        setSelectedDatasourceIsInvalid(true);\n      } else {\n        setSelectedDatasourceIsInvalid(false);\n        const tables = selectedDatasourceStructure?.tables;\n        if (tables) {\n          const newTables = tables.map(({ columns, name }) => ({\n            id: name,\n            label: name,\n            value: name,\n            icon: datasourceIcon,\n            iconSize: \"md\",\n            iconColor: \"var(--ads-v2-color-fg)\",\n            data: {\n              columns,\n            },\n          }));\n          setSelectedDatasourceTableOptions(newTables);\n        }\n      }\n    }\n  }, [\n    datasourcesStructure,\n    selectedDatasource,\n    isFetchingDatasourceStructure,\n    setSelectedDatasourceIsInvalid,\n    setSelectedDatasourceTableOptions,\n  ]);\n\n  useEffect(() => {\n    // If there is any datasource id passed in queryParams which needs to be selected\n    if (datasourceIdToBeSelected) {\n      if (selectedDatasource.id !== datasourceIdToBeSelected) {\n        for (let i = 0; i < dataSourceOptions.length; i++) {\n          if (dataSourceOptions[i].id === datasourceIdToBeSelected) {\n            onSelectDataSource(\n              dataSourceOptions[i].value,\n              dataSourceOptions[i],\n            );\n            setDatasourceIdToBeSelected(\"\");\n            break;\n          }\n        }\n      }\n    }\n\n    // The datasourceOptions can be update in case the environments are refreshed, need to sync the\n    // selected datasource with the updated datasourceOptions\n    for (let i = 0; i < dataSourceOptions.length; i++) {\n      if (dataSourceOptions[i].id === selectedDatasource.id) {\n        if (!equal(dataSourceOptions[i], selectedDatasource))\n          selectDataSource(dataSourceOptions[i]);\n        break;\n      }\n    }\n  }, [\n    dataSourceOptions,\n    datasourceIdToBeSelected,\n    onSelectDataSource,\n    selectedDatasource,\n    setDatasourceIdToBeSelected,\n    selectDataSource,\n  ]);\n\n  useEffect(() => {\n    if (querySearch) {\n      const queryParams = getQueryParams();\n      const datasourceId = queryParams.datasourceId;\n      const generateNewPage = queryParams.new_page;\n      if (datasourceId) {\n        if (generateNewPage || numberOfEntities > 0) {\n          currentMode.current = GENERATE_PAGE_MODE.NEW;\n        } else {\n          currentMode.current = GENERATE_PAGE_MODE.REPLACE_EMPTY;\n        }\n        setDatasourceIdToBeSelected(datasourceId);\n        delete queryParams.datasourceId;\n        delete queryParams.new_page;\n        const redirectURL =\n          window.location.pathname + getQueryStringfromObject(queryParams);\n        history.replace(redirectURL);\n      }\n    }\n  }, [numberOfEntities, querySearch, setDatasourceIdToBeSelected]);\n\n  const routeToCreateNewDatasource = () => {\n    AnalyticsUtil.logEvent(\"GEN_CRUD_PAGE_CREATE_NEW_DATASOURCE\");\n    history.push(\n      integrationEditorURL({\n        pageId: currentPageId,\n        selectedTab: INTEGRATION_TABS.NEW,\n        params: { isGeneratePageMode: \"generate-page\" },\n      }),\n    );\n    // Event for datasource creation click\n    const entryPoint = DatasourceCreateEntryPoints.GENERATE_CRUD;\n    AnalyticsUtil.logEvent(\"NAVIGATE_TO_CREATE_NEW_DATASOURCE_PAGE\", {\n      entryPoint,\n    });\n  };\n\n  const generatePageAction = (data: GeneratePagePayload) => {\n    let extraParams = {};\n    if (data.pluginSpecificParams) {\n      extraParams = {\n        pluginSpecificParams: data.pluginSpecificParams,\n      };\n    }\n\n    const payload = {\n      applicationId: applicationId || \"\",\n      pageId:\n        currentMode.current === GENERATE_PAGE_MODE.NEW\n          ? \"\"\n          : currentPageId || \"\",\n      columns: data.columns || [],\n      searchColumn: data.searchColumn,\n      tableName: data.tableName,\n      datasourceId: selectedDatasource.id || \"\",\n      mode: currentMode.current,\n      ...extraParams,\n    };\n\n    AnalyticsUtil.logEvent(\"GEN_CRUD_PAGE_FORM_SUBMIT\");\n    dispatch(generateTemplateToUpdatePage(payload));\n  };\n\n  const handleFormSubmit = () => {\n    const payload = {\n      columns: [],\n      searchColumn: selectedColumn.value,\n      tableName: selectedTable.value || \"\",\n    };\n    generatePageAction(payload);\n  };\n\n  const goToEditDatasource = () => {\n    AnalyticsUtil.logEvent(\"GEN_CRUD_PAGE_EDIT_DATASOURCE_CONFIG\", {\n      datasourceId: selectedDatasource.id,\n    });\n    const redirectURL = datasourcesEditorIdURL({\n      pageId: currentPageId,\n      datasourceId: selectedDatasource.id as string,\n      params: { isGeneratePageMode: \"generate-page\" },\n    });\n    history.push(redirectURL);\n  };\n\n  // if the datasource has basic information to connect to db it is considered as a valid structure hence isValid true.\n  const isValidDatasourceConfig = selectedDatasource.data?.isValid;\n\n  const pluginField: {\n    TABLE: string;\n    COLUMN: string;\n  } =\n    selectedDatasourcePluginPackageName &&\n    PluginFormInputFieldMap[selectedDatasourcePluginPackageName]\n      ? PluginFormInputFieldMap[selectedDatasourcePluginPackageName]\n      : PluginFormInputFieldMap.DEFAULT;\n\n  let tableDropdownErrorMsg = \"\";\n\n  const fetchingDatasourceConfigError =\n    selectedDatasourceIsInvalid ||\n    !isValidDatasourceConfig ||\n    (failedFetchingBucketList && isS3Plugin);\n\n  if (!fetchingDatasourceConfigs) {\n    if (datasourceTableOptions.length === 0) {\n      tableDropdownErrorMsg = `Couldn't find any ${pluginField.TABLE}, Please select another datasource`;\n    }\n    if (fetchingDatasourceConfigError) {\n      tableDropdownErrorMsg = `Failed fetching datasource structure, Please check your datasource configuration`;\n    }\n    if (isSelectedTableEmpty) {\n      tableDropdownErrorMsg = `Couldn't find any columns, Please select table with columns.`;\n    }\n  }\n\n  const showEditDatasourceBtn =\n    !isFetchingDatasourceStructure &&\n    (selectedDatasourceIsInvalid || !isValidDatasourceConfig) &&\n    !!selectedDatasource.value;\n\n  const showSearchableColumn =\n    !!selectedTable.value &&\n    !fetchingDatasourceConfigs &&\n    !fetchingDatasourceConfigError &&\n    PluginPackageName.S3 !== selectedDatasourcePluginPackageName;\n\n  const showSubmitButton =\n    selectedTable.value &&\n    !showEditDatasourceBtn &&\n    !fetchingDatasourceConfigs &&\n    !fetchingDatasourceConfigError &&\n    !!selectedDatasource.value;\n\n  const submitButtonDisable =\n    !selectedTable.value || !showSubmitButton || isSelectedTableEmpty;\n\n  return (\n    <div>\n      <Wrapper>\n        <DescWrapper>\n          <Text kind=\"heading-m\">{GENERATE_PAGE_FORM_TITLE()}</Text>\n        </DescWrapper>\n      </Wrapper>\n      <FormWrapper>\n        <SelectWrapper width={DROPDOWN_DIMENSION.WIDTH}>\n          <Label>{createMessage(GEN_CRUD_DATASOURCE_DROPDOWN_LABEL)}</Label>\n          <Select\n            data-testid=\"t--datasource-dropdown\"\n            onChange={(value) => {\n              if (value === CONNECT_NEW_DATASOURCE_OPTION_ID) {\n                routeToCreateNewDatasource();\n              } else {\n                onSelectDataSource(\n                  value,\n                  dataSourceOptions.find((ds) => ds.value === value),\n                );\n              }\n            }}\n            style={{ width: DROPDOWN_DIMENSION.WIDTH }}\n            value={\n              selectedDatasource?.label !== DEFAULT_DROPDOWN_OPTION?.label\n                ? {\n                    key: selectedDatasource?.value,\n                    label: (\n                      <DatasourceOptionSelectedView\n                        iconType={GeneratePageSelectedViewIconEnum.PLUGIN_ICON}\n                        option={selectedDatasource}\n                        pluginImages={pluginImages}\n                      />\n                    ),\n                  }\n                : selectedDatasource\n            }\n            // TODO: This needs to be fixed. Removed for cypress tests to pass\n            virtual={false}\n          >\n            {dataSourceOptions.map((option) => {\n              const isConnectNewDataSourceBtn =\n                CONNECT_NEW_DATASOURCE_OPTION_ID ===\n                (option as DropdownOption).id;\n              const isSupportedForTemplate = (option as DropdownOption)?.data\n                ?.isSupportedForTemplate;\n              const isNotSupportedDatasource =\n                !isSupportedForTemplate && !isConnectNewDataSourceBtn;\n\n              return (\n                <Option\n                  disabled={isNotSupportedDatasource}\n                  key={option.value}\n                  value={option.value}\n                >\n                  <DataSourceOption\n                    dataTestid=\"t--datasource-dropdown-option\"\n                    extraProps={{ routeToCreateNewDatasource }}\n                    key={(option as DropdownOption).id}\n                    option={option}\n                    optionWidth={DROPDOWN_DIMENSION.WIDTH}\n                  />\n                </Option>\n              );\n            })}\n          </Select>\n        </SelectWrapper>\n        {selectedDatasource.value ? (\n          <SelectWrapper width={DROPDOWN_DIMENSION.WIDTH}>\n            <Label>\n              Select {pluginField.TABLE} from&nbsp;\n              <Bold>{selectedDatasource.label}</Bold>\n            </Label>\n\n            <Select\n              data-testid=\"t--table-dropdown\"\n              isDisabled={!!tableDropdownErrorMsg}\n              isLoading={fetchingDatasourceConfigs}\n              isValid={!tableDropdownErrorMsg}\n              onChange={(value) =>\n                onSelectTable(\n                  value,\n                  datasourceTableOptions.find(\n                    (table) => table.value === value,\n                  ) as DatasourceTableDropdownOption,\n                )\n              }\n              value={\n                selectedTable?.label !== DEFAULT_DROPDOWN_OPTION?.label\n                  ? {\n                      key: selectedTable?.value,\n                      label: (\n                        <DatasourceOptionSelectedView\n                          iconType={GeneratePageSelectedViewIconEnum.ADS_ICON}\n                          option={selectedTable}\n                        />\n                      ),\n                    }\n                  : selectedTable\n              }\n              // TODO: This needs to be fixed. Removed for cypress tests to pass\n              virtual={false}\n            >\n              {datasourceTableOptions.map((table) => {\n                return (\n                  <Option key={table.value} value={table.value}>\n                    <OptionWrapper>\n                      <StyledIconWrapper>\n                        <Icon\n                          color={table?.iconColor}\n                          name={table.icon}\n                          size={table.iconSize}\n                        />\n                      </StyledIconWrapper>\n                      <Text renderAs=\"p\">{table.label}</Text>\n                    </OptionWrapper>\n                  </Option>\n                );\n              })}\n            </Select>\n            {tableDropdownErrorMsg && (\n              <ErrorMsg className=\"ads-dropdown-errorMsg\">\n                {tableDropdownErrorMsg}\n              </ErrorMsg>\n            )}\n          </SelectWrapper>\n        ) : null}\n        {showEditDatasourceBtn && (\n          <div>\n            <Button kind=\"primary\" onClick={goToEditDatasource} size=\"md\">\n              Edit datasource\n            </Button>\n          </div>\n        )}\n        {!isGoogleSheetPlugin ? (\n          <>\n            {showSearchableColumn && (\n              <SelectWrapper width={DROPDOWN_DIMENSION.WIDTH}>\n                <Row>\n                  Select a searchable {pluginField.COLUMN} from the\n                  selected&nbsp;\n                  {pluginField.TABLE}\n                  <TooltipWrapper>\n                    <Tooltip content=\"Only string values are allowed for searchable column\">\n                      <Icon name=\"question-line\" size=\"md\" />\n                    </Tooltip>\n                  </TooltipWrapper>\n                </Row>\n                <Select\n                  data-testid=\"t--table-dropdown\"\n                  isDisabled={selectedTableColumnOptions.length === 0}\n                  onChange={(value) =>\n                    onSelectColumn(\n                      value,\n                      selectedTableColumnOptions.find(\n                        (column) => column.value === value,\n                      ),\n                    )\n                  }\n                  value={\n                    selectedColumn?.label !== DEFAULT_DROPDOWN_OPTION?.label\n                      ? {\n                          key: selectedColumn?.value,\n                          label: (\n                            <DatasourceOptionSelectedView\n                              iconType={\n                                GeneratePageSelectedViewIconEnum.ADS_ICON\n                              }\n                              option={selectedColumn}\n                            />\n                          ),\n                        }\n                      : selectedColumn\n                  }\n                  virtual={false}\n                >\n                  {selectedTableColumnOptions.map((column) => {\n                    return (\n                      <Option key={column.value} value={column.value}>\n                        <OptionWrapper>\n                          <StyledIconWrapper>\n                            <Icon\n                              color={column?.iconColor}\n                              name={column.icon}\n                              size={column.iconSize}\n                            />\n                          </StyledIconWrapper>\n                          <Text renderAs=\"p\">{column.label}</Text>\n                          <Text\n                            className=\"datasource-sub-text\"\n                            color=\"var(--ads-v2-color-fg-muted)\"\n                            renderAs=\"span\"\n                          >\n                            {column.subText}\n                          </Text>\n                        </OptionWrapper>\n                      </Option>\n                    );\n                  })}\n                </Select>\n                <HelperMsg>\n                  {selectedTableColumnOptions.length === 0\n                    ? `* Optional (No searchable ${pluginField.COLUMN} to select)`\n                    : \"* Optional\"}\n                </HelperMsg>\n              </SelectWrapper>\n            )}\n            <div className=\"mt-4\">\n              <GeneratePageSubmitBtn\n                disabled={submitButtonDisable}\n                isLoading={!!isGeneratingTemplatePage}\n                onSubmit={handleFormSubmit}\n                showSubmitButton={!!showSubmitButton}\n              />\n            </div>\n          </>\n        ) : (\n          <GoogleSheetForm\n            generatePageAction={generatePageAction}\n            googleSheetPluginId={selectedDatasourcePluginId}\n            renderSubmitButton={({\n              disabled,\n              isLoading,\n              onSubmit,\n            }: {\n              onSubmit: () => void;\n              disabled: boolean;\n              isLoading: boolean;\n            }) => (\n              <GeneratePageSubmitBtn\n                disabled={disabled}\n                isLoading={!!isGeneratingTemplatePage || isLoading}\n                onSubmit={onSubmit}\n                showSubmitButton={!!showSubmitButton}\n              />\n            )}\n            selectedDatasource={selectedDatasource}\n            selectedSpreadsheet={selectedTable}\n            sheetColumnsHeaderProps={sheetColumnsHeaderProps}\n            sheetsListProps={sheetsListProps}\n            spreadSheetsProps={spreadSheetsProps}\n          />\n        )}\n      </FormWrapper>\n    </div>\n  );\n}\n\nexport default GeneratePageForm;\n","import { useEffect, useState, useCallback } from \"react\";\nimport type { DropdownOptions } from \"../constants\";\nimport type { Datasource } from \"entities/Datasource\";\nimport type { GenerateCRUDEnabledPluginMap } from \"api/PluginApi\";\nimport { CONNECT_NEW_DATASOURCE_OPTION_ID } from \"../DataSourceOption\";\nimport type { executeDatasourceQuerySuccessPayload } from \"actions/datasourceActions\";\nimport { executeDatasourceQuery } from \"actions/datasourceActions\";\nimport type { DropdownOption } from \"design-system-old\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { PluginPackageName } from \"entities/Action\";\nimport { getCurrentEnvironmentId } from \"@appsmith/selectors/environmentSelectors\";\nimport AnalyticsUtil from \"@appsmith/utils/AnalyticsUtil\";\n\nexport const FAKE_DATASOURCE_OPTION = {\n  CONNECT_NEW_DATASOURCE_OPTION: {\n    id: CONNECT_NEW_DATASOURCE_OPTION_ID,\n    label: \"Connect new datasource\",\n    value: CONNECT_NEW_DATASOURCE_OPTION_ID,\n    data: {\n      pluginId: \"\",\n    },\n  },\n};\n\nexport const useDatasourceOptions = ({\n  canCreateDatasource,\n  datasources,\n  fetchingDatasourceConfigs,\n  generateCRUDSupportedPlugin,\n}: {\n  canCreateDatasource: boolean;\n  datasources: Datasource[];\n  fetchingDatasourceConfigs: boolean;\n  generateCRUDSupportedPlugin: GenerateCRUDEnabledPluginMap;\n}) => {\n  const [dataSourceOptions, setDataSourceOptions] = useState<DropdownOptions>(\n    [],\n  );\n  const currentEnvironment = useSelector(getCurrentEnvironmentId);\n\n  useEffect(() => {\n    // On mount of component and on change of datasources, Update the list.\n    const unSupportedDatasourceOptions: DropdownOptions = [];\n    const supportedDatasourceOptions: DropdownOptions = [];\n    let newDataSourceOptions: DropdownOptions = [];\n    if (canCreateDatasource) {\n      newDataSourceOptions.push(\n        FAKE_DATASOURCE_OPTION.CONNECT_NEW_DATASOURCE_OPTION,\n      );\n    }\n    datasources.forEach(({ datasourceStorages, id, name, pluginId }) => {\n      // Doing this since g sheets plugin is not supported for environments\n      // and we need to show the option in the dropdown\n      const isGoogleSheetPlugin =\n        generateCRUDSupportedPlugin.hasOwnProperty(pluginId) &&\n        generateCRUDSupportedPlugin[pluginId] ===\n          PluginPackageName.GOOGLE_SHEETS;\n      const datasourceStorage = isGoogleSheetPlugin\n        ? Object.values(datasourceStorages)[0]\n        : datasourceStorages[currentEnvironment];\n      const datasourceObject = {\n        id,\n        label: name,\n        value: name,\n        data: {\n          pluginId,\n          isSupportedForTemplate: !!generateCRUDSupportedPlugin[pluginId],\n          isValid: datasourceStorage?.isValid,\n        },\n      };\n      if (generateCRUDSupportedPlugin[pluginId])\n        supportedDatasourceOptions.push(datasourceObject);\n      else {\n        unSupportedDatasourceOptions.push(datasourceObject);\n      }\n    });\n    newDataSourceOptions = newDataSourceOptions.concat(\n      supportedDatasourceOptions,\n      unSupportedDatasourceOptions,\n    );\n    setDataSourceOptions(newDataSourceOptions);\n  }, [\n    datasources,\n    setDataSourceOptions,\n    generateCRUDSupportedPlugin,\n    fetchingDatasourceConfigs,\n  ]);\n  return dataSourceOptions;\n};\n\n// const GOOGLE_SHEET_METHODS = {\n//   GET_ALL_SPREADSHEETS: \"LIST\", // Get all the spreadsheets\n//   GET_ALL_SHEETS: \"INFO\", // fetch all the sub-sheets\n//   GET_ALL_COLUMNS: \"GET_STRUCTURE\", // Get column names\n// };\n\n// const demoRequest: Record<any, string> = {\n//   method: \"\",\n//   sheetUrl: \"\",\n//   range: \"\",\n//   spreadsheetName: \"\",\n//   tableHeaderIndex: \"1\",\n//   queryFormat: \"ROWS\",\n//   rowLimit: \"\",\n//   sheetName: \"\",\n//   rowOffset: \"\",\n//   rowObject: \"\",\n//   rowObjects: \"\",\n//   rowIndex: \"\",\n//   deleteFormat: \"SHEET\",\n// };\n\ninterface FetchAllSpreadSheets {\n  selectedDatasourceId: string;\n  pluginId: string;\n  requestObject?: Record<any, string>;\n}\n\nexport interface UseSpreadSheetsReturn {\n  fetchAllSpreadsheets: ({\n    requestObject,\n    selectedDatasourceId,\n  }: FetchAllSpreadSheets) => void;\n  isFetchingSpreadsheets: boolean;\n  failedFetchingSpreadsheets: boolean;\n}\n\nexport const useSpreadSheets = ({\n  setSelectedDatasourceIsInvalid,\n  setSelectedDatasourceTableOptions,\n}: {\n  setSelectedDatasourceIsInvalid: (isInvalid: boolean) => void;\n  setSelectedDatasourceTableOptions: (tableOptions: DropdownOptions) => void;\n}): UseSpreadSheetsReturn => {\n  const dispatch = useDispatch();\n\n  // const [spreadsheetsList, setSpreadsheets] = useState<DropdownOption[]>([]);\n\n  const [isFetchingSpreadsheets, setIsFetchingSpreadsheets] =\n    useState<boolean>(false);\n  const [failedFetchingSpreadsheets, setFailedFetchingSpreadsheets] =\n    useState<boolean>(false);\n\n  // TODO :- Create loading state and set Loading state false on success or error\n  const onFetchAllSpreadsheetFailure = useCallback(() => {\n    setIsFetchingSpreadsheets(false);\n    setFailedFetchingSpreadsheets(true);\n  }, [setIsFetchingSpreadsheets]);\n\n  const onFetchAllSpreadsheetSuccess = useCallback(\n    (\n      payload: executeDatasourceQuerySuccessPayload<\n        Array<{ label: string; value: string }>\n      >,\n    ) => {\n      setIsFetchingSpreadsheets(false);\n      if (payload.data && payload.data.trigger) {\n        const spreadSheets = payload.data.trigger;\n\n        if (Array.isArray(spreadSheets)) {\n          setSelectedDatasourceTableOptions(spreadSheets);\n        } else {\n          // to handle error like \"401 Unauthorized\"\n          setSelectedDatasourceIsInvalid(true);\n        }\n      }\n    },\n    [\n      setSelectedDatasourceIsInvalid,\n      setSelectedDatasourceTableOptions,\n      setIsFetchingSpreadsheets,\n    ],\n  );\n\n  const fetchAllSpreadsheets = useCallback(\n    ({\n      pluginId,\n      requestObject,\n      selectedDatasourceId,\n    }: FetchAllSpreadSheets) => {\n      setIsFetchingSpreadsheets(true);\n      setFailedFetchingSpreadsheets(false);\n      const formattedRequestData = {\n        datasourceId: selectedDatasourceId,\n        displayType: \"DROP_DOWN\",\n        pluginId,\n        requestType: \"SPREADSHEET_SELECTOR\",\n        ...requestObject,\n      };\n      dispatch(\n        executeDatasourceQuery({\n          payload: {\n            datasourceId: selectedDatasourceId,\n            data: formattedRequestData,\n            isGeneratePage: true,\n          },\n          onSuccessCallback: onFetchAllSpreadsheetSuccess,\n          onErrorCallback: onFetchAllSpreadsheetFailure,\n        }),\n      );\n    },\n    [\n      onFetchAllSpreadsheetSuccess,\n      onFetchAllSpreadsheetFailure,\n      setIsFetchingSpreadsheets,\n      setFailedFetchingSpreadsheets,\n    ],\n  );\n\n  return {\n    fetchAllSpreadsheets,\n    // spreadsheetsList,\n    isFetchingSpreadsheets,\n    failedFetchingSpreadsheets,\n  };\n};\n\n// Types\n\nexport interface GridProperties {\n  rowCount: number;\n  columnCount: number;\n}\n\nexport interface Sheet {\n  sheetId: number;\n  title: string;\n  index: number;\n  sheetType: string;\n  gridProperties: GridProperties;\n}\n\nexport type Sheets = Sheet[];\n\nexport const getSheetUrl = (sheetId: string): string =>\n  `https://docs.google.com/spreadsheets/d/${sheetId}/edit#gid=0`;\n\nexport interface FetchSheetsList {\n  selectedDatasourceId: string;\n  selectedSpreadsheetUrl: string;\n  pluginId: string;\n  requestObject?: Record<any, string>;\n}\n\nexport interface FetchSheetData {\n  selectedDatasourceId: string;\n  selectedSpreadsheetUrl: string;\n  selectedSheetName: string;\n  pluginId: string;\n  requestObject?: Record<any, string>;\n}\n\nexport interface UseSheetListReturn {\n  sheetsList: DropdownOption[];\n  isFetchingSheetsList: boolean;\n  failedFetchingSheetsList: boolean;\n  fetchSheetsList: ({\n    requestObject,\n    selectedDatasourceId,\n    selectedSpreadsheetUrl,\n  }: FetchSheetsList) => void;\n}\n\nexport interface UseSheetDataReturn {\n  sheetData: Array<any>;\n  isFetchingSheetData: boolean;\n  failedFetchingSheetData: boolean;\n  fetchSheetData: ({\n    requestObject,\n    selectedDatasourceId,\n    selectedSheetName,\n    selectedSpreadsheetUrl,\n  }: FetchSheetData) => void;\n}\n\nexport interface UseSheetListProps {\n  setSheetOptions?: (tableOptions: DropdownOptions) => void;\n}\n\nexport interface UseSheetDataProps {\n  setSheetData?: (tableOptions: DropdownOptions) => void;\n}\n\nexport const useSheetsList = (\n  props: UseSheetListProps = {},\n): UseSheetListReturn => {\n  const dispatch = useDispatch();\n\n  const [sheetsList, setSheetsList] = useState<DropdownOption[]>([]);\n\n  const [isFetchingSheetsList, setIsFetchingSheetsList] =\n    useState<boolean>(false);\n  const [failedFetchingSheetsList, setFailedFetchingSheetsList] =\n    useState<boolean>(false);\n\n  const onFetchAllSheetFailure = useCallback(() => {\n    setIsFetchingSheetsList(false);\n    setFailedFetchingSheetsList(true);\n  }, [setIsFetchingSheetsList]);\n\n  const onFetchAllSheetSuccess = useCallback(\n    (\n      payload: executeDatasourceQuerySuccessPayload<\n        Array<{ label: string; value: string }>\n      >,\n    ) => {\n      setIsFetchingSheetsList(false);\n      if (payload.data && payload.data.trigger) {\n        const responseBody = payload.data.trigger;\n        if (Array.isArray(responseBody)) {\n          setSheetsList(responseBody);\n          props.setSheetOptions && props.setSheetOptions(responseBody);\n        } else {\n          // to handle error like \"401 Unauthorized\"\n        }\n      }\n    },\n    [setSheetsList, setIsFetchingSheetsList, props.setSheetOptions],\n  );\n\n  const fetchSheetsList = useCallback(\n    ({\n      pluginId,\n      // requestObject,\n      selectedDatasourceId,\n      selectedSpreadsheetUrl,\n    }: FetchSheetsList) => {\n      setSheetsList([]);\n      props.setSheetOptions && props.setSheetOptions([]);\n      setIsFetchingSheetsList(true);\n      setFailedFetchingSheetsList(false);\n      const formattedRequestData = {\n        datasourceId: selectedDatasourceId,\n        displayType: \"DROP_DOWN\",\n        parameters: {\n          sheetUrl: selectedSpreadsheetUrl,\n        },\n        pluginId: pluginId,\n        requestType: \"SHEET_SELECTOR\",\n      };\n      dispatch(\n        executeDatasourceQuery({\n          payload: {\n            datasourceId: selectedDatasourceId,\n            data: formattedRequestData,\n            isGeneratePage: true,\n          },\n          onSuccessCallback: onFetchAllSheetSuccess,\n          onErrorCallback: onFetchAllSheetFailure,\n        }),\n      );\n    },\n    [\n      setSheetsList,\n      onFetchAllSheetSuccess,\n      onFetchAllSheetFailure,\n      setIsFetchingSheetsList,\n      setFailedFetchingSheetsList,\n      props.setSheetOptions,\n    ],\n  );\n\n  return {\n    sheetsList,\n    isFetchingSheetsList,\n    failedFetchingSheetsList,\n    fetchSheetsList,\n  };\n};\n\nexport const useSheetData = (\n  props: UseSheetDataProps = {},\n): UseSheetDataReturn => {\n  const dispatch = useDispatch();\n\n  const [sheetData, setSheetData] = useState<any>([]);\n\n  const [isFetchingSheetData, setIsFetchingSheetData] =\n    useState<boolean>(false);\n  const [failedFetchingSheetData, setFailedFetchingSheetData] =\n    useState<boolean>(false);\n\n  const onFetchAllSheetFailure = useCallback(\n    (error: string) => {\n      setIsFetchingSheetData(false);\n      setFailedFetchingSheetData(true);\n      AnalyticsUtil.logEvent(\"DATA_FETCH_FAILED_POST_SCHEMA_FETCH\", {\n        error: error,\n      });\n    },\n    [setIsFetchingSheetData],\n  );\n\n  const onFetchAllSheetSuccess = useCallback(\n    (\n      payload: executeDatasourceQuerySuccessPayload<\n        Array<{ label: string; value: string }>\n      >,\n    ) => {\n      setIsFetchingSheetData(false);\n      if (payload.data && payload.data.trigger) {\n        const responseBody = payload.data.trigger;\n        if (Array.isArray(responseBody)) {\n          setSheetData(responseBody);\n          props.setSheetData && props.setSheetData(responseBody);\n        } else {\n          // to handle error like \"401 Unauthorized\"\n          AnalyticsUtil.logEvent(\n            \"DATA_FETCH_FAILED_POST_SCHEMA_FETCH\",\n            { error: payload }, // sending the entire payload here because it is not clear if there is a distinct\n            // field holding the error message\n          );\n        }\n      }\n    },\n    [setSheetData, setIsFetchingSheetData, props.setSheetData],\n  );\n\n  const fetchSheetData = useCallback(\n    ({\n      pluginId,\n      selectedDatasourceId,\n      selectedSheetName,\n      selectedSpreadsheetUrl,\n    }: FetchSheetData) => {\n      setSheetData([]);\n      props.setSheetData && props.setSheetData([]);\n      setIsFetchingSheetData(true);\n      setFailedFetchingSheetData(false);\n      const formattedRequestData = {\n        datasourceId: selectedDatasourceId,\n        displayType: \"DROP_DOWN\",\n        parameters: {\n          sheetUrl: selectedSpreadsheetUrl,\n          sheetName: selectedSheetName,\n          queryFormat: \"ROWS\",\n          tableHeaderIndex: 1,\n        },\n        pluginId: pluginId,\n        requestType: \"SHEET_DATA\",\n      };\n      dispatch(\n        executeDatasourceQuery({\n          payload: {\n            datasourceId: selectedDatasourceId,\n            data: formattedRequestData,\n            isGeneratePage: true,\n          },\n          onSuccessCallback: onFetchAllSheetSuccess,\n          onErrorCallback: onFetchAllSheetFailure,\n        }),\n      );\n    },\n    [\n      setSheetData,\n      onFetchAllSheetSuccess,\n      onFetchAllSheetFailure,\n      setIsFetchingSheetData,\n      setFailedFetchingSheetData,\n      props.setSheetData,\n    ],\n  );\n\n  return {\n    sheetData,\n    isFetchingSheetData,\n    failedFetchingSheetData,\n    fetchSheetData,\n  };\n};\n\nexport interface FetchColumnHeaderListParams {\n  selectedDatasourceId: string;\n  selectedSpreadsheetUrl: string;\n  sheetName: string;\n  pluginId: string;\n  tableHeaderIndex: string;\n  requestObject?: Record<any, string>; //possily unneccesary\n}\n\nexport interface UseSheetColumnHeadersReturn {\n  columnHeaderList: DropdownOption[];\n  isFetchingColumnHeaderList: boolean;\n  errorFetchingColumnHeaderList: string;\n  fetchColumnHeaderList: ({\n    selectedDatasourceId,\n    selectedSpreadsheetUrl,\n    sheetName,\n    tableHeaderIndex,\n  }: FetchColumnHeaderListParams) => void;\n}\n\nexport const useSheetColumnHeaders = () => {\n  const dispatch = useDispatch();\n\n  const [columnHeaderList, setColumnHeaderList] = useState<DropdownOption[]>(\n    [],\n  );\n\n  const [isFetchingColumnHeaderList, setIsFetchingColumnHeaderList] =\n    useState<boolean>(false);\n  const [errorFetchingColumnHeaderList, setErrorFetchingColumnHeaderList] =\n    useState<string>(\"\");\n\n  const onFetchColumnHeadersFailure = useCallback(\n    (error: string) => {\n      setIsFetchingColumnHeaderList(false);\n      setErrorFetchingColumnHeaderList(error);\n      setColumnHeaderList([]);\n    },\n    [setErrorFetchingColumnHeaderList, setIsFetchingColumnHeaderList],\n  );\n\n  const onFetchColumnHeadersSuccess = useCallback(\n    (\n      payload: executeDatasourceQuerySuccessPayload<Record<string, string>[]>,\n    ) => {\n      setIsFetchingColumnHeaderList(false);\n\n      if (payload.data && payload.data.trigger) {\n        const responseBody = payload.data.trigger;\n        if (Array.isArray(responseBody)) {\n          setColumnHeaderList(responseBody);\n        } else {\n          let error = \"Failed fetching Column headers\";\n          if (typeof responseBody === \"string\") {\n            error = responseBody;\n          }\n          setColumnHeaderList([]);\n          setErrorFetchingColumnHeaderList(error);\n        }\n      }\n    },\n    [\n      setColumnHeaderList,\n      setIsFetchingColumnHeaderList,\n      setErrorFetchingColumnHeaderList,\n    ],\n  );\n\n  const fetchColumnHeaderList = useCallback(\n    (params: FetchColumnHeaderListParams) => {\n      setIsFetchingColumnHeaderList(true);\n      setErrorFetchingColumnHeaderList(\"\");\n      const formattedRequestData = {\n        datasourceId: params.selectedDatasourceId,\n        displayType: \"DROP_DOWN\",\n        parameters: {\n          sheetName: params.sheetName,\n          sheetUrl: params.selectedSpreadsheetUrl,\n          tableHeaderIndex: params.tableHeaderIndex,\n        },\n        pluginId: params.pluginId,\n        requestType: \"COLUMNS_SELECTOR\",\n      };\n\n      dispatch(\n        executeDatasourceQuery({\n          payload: {\n            datasourceId: params.selectedDatasourceId,\n            data: formattedRequestData,\n            isGeneratePage: true,\n          },\n          onSuccessCallback: onFetchColumnHeadersSuccess,\n          onErrorCallback: onFetchColumnHeadersFailure,\n        }),\n      );\n    },\n    [\n      onFetchColumnHeadersSuccess,\n      onFetchColumnHeadersFailure,\n      setIsFetchingColumnHeaderList,\n      setErrorFetchingColumnHeaderList,\n    ],\n  );\n\n  return {\n    columnHeaderList,\n    isFetchingColumnHeaderList,\n    errorFetchingColumnHeaderList,\n    fetchColumnHeaderList,\n  };\n};\n\nconst payload = [\n  {\n    value: \"LIST_BUCKETS\",\n  },\n];\n\nexport const useS3BucketList = () => {\n  const dispatch = useDispatch();\n\n  const [bucketList, setBucketList] = useState<Array<string>>([]);\n  const [isFetchingBucketList, setIsFetchingBucketList] =\n    useState<boolean>(false);\n  const [failedFetchingBucketList, setFailedFetchingBucketList] =\n    useState<boolean>(false);\n  const onFetchBucketSuccess = useCallback(\n    (\n      payload: executeDatasourceQuerySuccessPayload<{\n        bucketList: Array<string>;\n      }>,\n    ) => {\n      setIsFetchingBucketList(false);\n      if (payload.data && payload.data.body) {\n        const payloadBody = payload.data.body;\n        if (Array.isArray(payloadBody.bucketList)) {\n          const { bucketList: list = [] } = payloadBody;\n          setBucketList(list);\n        }\n      }\n    },\n    [setBucketList, setIsFetchingBucketList],\n  );\n\n  const onFetchBucketFailure = useCallback(() => {\n    setIsFetchingBucketList(false);\n    setFailedFetchingBucketList(true);\n  }, [setIsFetchingBucketList]);\n\n  const fetchBucketList = useCallback(\n    ({ selectedDatasource }: { selectedDatasource: DropdownOption }) => {\n      if (selectedDatasource.id) {\n        setIsFetchingBucketList(true);\n        setFailedFetchingBucketList(false);\n        dispatch(\n          executeDatasourceQuery({\n            payload: {\n              datasourceId: selectedDatasource.id,\n              data: payload,\n              isGeneratePage: true,\n            },\n            onSuccessCallback: onFetchBucketSuccess,\n            onErrorCallback: onFetchBucketFailure,\n          }),\n        );\n      }\n    },\n    [onFetchBucketSuccess, onFetchBucketFailure, setIsFetchingBucketList],\n  );\n\n  return {\n    bucketList,\n    isFetchingBucketList,\n    failedFetchingBucketList,\n    fetchBucketList,\n  };\n};\n","import type { AppState } from \"@appsmith/reducers\";\nimport { redirectAuthorizationCode } from \"actions/datasourceActions\";\nimport type { CalloutKind } from \"design-system\";\nimport { Callout } from \"design-system\";\nimport type { Datasource } from \"entities/Datasource\";\nimport { ActionType } from \"entities/Datasource\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getPlugin,\n  getPluginTypeFromDatasourceId,\n} from \"@appsmith/selectors/entitiesSelector\";\nimport styled from \"styled-components\";\nimport {\n  GOOGLE_SHEETS_AUTHORIZE_DATASOURCE,\n  GOOGLE_SHEETS_LEARN_MORE,\n  createMessage,\n  GOOGLE_SHEETS_ASK_FOR_SUPPORT,\n  DATASOURCE_INTERCOM_TEXT,\n} from \"@appsmith/constants/messages\";\nimport { getAppsmithConfigs } from \"@appsmith/configs\";\nimport { DocsLink, openDoc } from \"constants/DocumentationLinks\";\nimport type { Plugin } from \"api/PluginApi\";\nconst { intercomAppID } = getAppsmithConfigs();\n\nconst StyledAuthMessage = styled.div<{ isInViewMode: boolean }>`\n  width: fit-content;\n  ${(props) =>\n    !props.isInViewMode &&\n    `margin-top: var(--ads-v2-spaces-5);margin-bottom: var(--ads-v2-spaces-4);`}\n`;\n\ninterface AuthMessageProps {\n  // We can handle for other action types as well eg. save, delete etc.\n  actionType?: string;\n  datasource: Datasource;\n  description: string;\n  pageId?: string;\n  style?: any;\n  calloutType?: CalloutKind;\n  isInViewMode?: boolean;\n}\n\nexport default function AuthMessage(props: AuthMessageProps) {\n  const {\n    actionType,\n    calloutType = \"error\",\n    datasource,\n    description,\n    isInViewMode = false,\n    pageId,\n    style = {},\n  } = props;\n  const dispatch = useDispatch();\n  const pluginType = useSelector((state: AppState) =>\n    getPluginTypeFromDatasourceId(state, datasource.id),\n  );\n  const pluginId: string = props?.datasource?.pluginId || \"\";\n  const plugin: Plugin | undefined = useSelector((state) =>\n    getPlugin(state, pluginId),\n  );\n  const handleOauthAuthorization: any = () => {\n    if (!pluginType || !pageId) return;\n    dispatch(redirectAuthorizationCode(pageId, datasource.id, pluginType));\n  };\n  const handleDocumentationClick: any = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    openDoc(DocsLink.QUERY, plugin?.documentationLink, plugin?.name);\n  };\n\n  const getCallOutLinks = () => {\n    switch (actionType) {\n      case ActionType.AUTHORIZE:\n        return [\n          {\n            children: createMessage(GOOGLE_SHEETS_AUTHORIZE_DATASOURCE),\n            onClick: handleOauthAuthorization,\n          },\n          {\n            children: createMessage(GOOGLE_SHEETS_ASK_FOR_SUPPORT),\n            onClick: () => {\n              // Triggering intercom here, to understand what exact\n              // problem user is facing while creating google sheets datasource\n              if (intercomAppID && window.Intercom) {\n                window.Intercom(\n                  \"showNewMessage\",\n                  createMessage(DATASOURCE_INTERCOM_TEXT),\n                );\n              }\n            },\n          },\n        ];\n      case ActionType.DOCUMENTATION:\n        return [\n          {\n            children: createMessage(GOOGLE_SHEETS_LEARN_MORE),\n            onClick: handleDocumentationClick,\n          },\n        ];\n      default:\n        return undefined;\n    }\n  };\n\n  return (\n    <StyledAuthMessage isInViewMode={isInViewMode} style={style}>\n      <Callout kind={calloutType} links={getCallOutLinks()}>\n        {description}\n      </Callout>\n    </StyledAuthMessage>\n  );\n}\n","import type { Datasource } from \"entities/Datasource\";\nimport { AuthenticationStatus } from \"entities/Datasource\";\nimport type { Plugin } from \"api/PluginApi\";\nimport {\n  createMessage,\n  GSHEET_AUTHORISED_FILE_IDS_KEY,\n  GSHEET_AUTHORIZATION_ERROR,\n  GSHEET_FILES_NOT_SELECTED,\n} from \"@appsmith/constants/messages\";\nimport { getDatasourcePropertyValue } from \"utils/editorContextUtils\";\nimport { GOOGLE_SHEET_SPECIFIC_SHEETS_SCOPE } from \"constants/Datasource\";\nimport { PluginPackageName } from \"entities/Action\";\nimport { get } from \"lodash\";\n\n/**\n * Returns true if :\n * - google sheet datasource has specific sheets modality and authorised file list is empty\n * @param datasource Datasource\n * @param propertyKey string\n * @returns boolean\n */\nexport function isAuthorisedFilesEmptyGsheet(\n  datasource: Datasource,\n  propertyKey: string,\n  currentEnvironment: string,\n): boolean {\n  const value = get(\n    datasource,\n    `datasourceStorages.${currentEnvironment}.datasourceConfiguration.authentication.scopeString`,\n  );\n  const scopeValue: string = value ? value : \"\";\n\n  const authorisedFileIds = getDatasourcePropertyValue(\n    datasource,\n    propertyKey,\n    currentEnvironment,\n  );\n  const authStatus = get(\n    datasource,\n    `datasourceStorages.${currentEnvironment}.datasourceConfiguration.authentication.authenticationStatus`,\n  );\n  const isAuthFailure =\n    !!authStatus &&\n    authStatus === AuthenticationStatus.FAILURE_FILE_NOT_SELECTED;\n  const gapiLoadSuccess = (window as any).googleAPIsLoaded;\n\n  return (\n    !!authorisedFileIds &&\n    authorisedFileIds.length === 0 &&\n    scopeValue.includes(GOOGLE_SHEET_SPECIFIC_SHEETS_SCOPE) &&\n    isAuthFailure &&\n    !!gapiLoadSuccess\n  );\n}\n\n/**\n * Returns true if :\n * - google sheet datasource error message\n * @param datasource Datasource\n * @param plugin Plugin\n * @returns string\n */\nexport function getDatasourceErrorMessage(\n  datasource: Datasource,\n  plugin: Plugin | undefined,\n  currentEnvironment: string,\n): string {\n  if (!datasource) return \"\";\n\n  let authErrorMessage = \"\";\n\n  switch (plugin?.packageName) {\n    case PluginPackageName.GOOGLE_SHEETS: {\n      const authorisedFilesEmptyGsheet = isAuthorisedFilesEmptyGsheet(\n        datasource,\n        createMessage(GSHEET_AUTHORISED_FILE_IDS_KEY),\n        currentEnvironment,\n      );\n\n      authErrorMessage = authorisedFilesEmptyGsheet\n        ? GSHEET_FILES_NOT_SELECTED\n        : GSHEET_AUTHORIZATION_ERROR;\n      break;\n    }\n    default:\n      break;\n  }\n\n  return authErrorMessage;\n}\n","import { removeClassFromDocumentRoot } from \"pages/utils\";\nimport React, { useState, useEffect } from \"react\";\nimport { FilePickerActionStatus } from \"entities/Datasource\";\nimport { useDispatch } from \"react-redux\";\nimport { filePickerCallbackAction } from \"actions/datasourceActions\";\nimport { GOOGLE_SHEET_FILE_PICKER_OVERLAY_CLASS } from \"constants/Datasource\";\nimport AnalyticsUtil from \"@appsmith/utils/AnalyticsUtil\";\nimport {\n  createMessage,\n  GOOGLE_SHEETS_FILE_PICKER_TITLE,\n} from \"@appsmith/constants/messages\";\n\ninterface Props {\n  datasourceId: string;\n  gsheetToken?: string;\n  gsheetProjectID?: string;\n}\n\nfunction GoogleSheetFilePicker({\n  datasourceId,\n  gsheetProjectID,\n  gsheetToken,\n}: Props) {\n  const [scriptLoadedFlag] = useState<boolean>(\n    (window as any).googleAPIsLoaded,\n  );\n  const [pickerInitiated, setPickerInitiated] = useState<boolean>(false);\n  const [pickerVisible, setPickerVisible] = useState<boolean>(false);\n\n  // hooks\n  const dispatch = useDispatch();\n\n  // objects gapi and google are set, when google apis script is loaded\n  const gapi: any = (window as any).gapi;\n  const google: any = (window as any).google;\n\n  useEffect(() => {\n    // When google apis javascript does not load, we need to update auth status to failure\n    if (!scriptLoadedFlag) {\n      dispatch(\n        filePickerCallbackAction({\n          action: FilePickerActionStatus.CANCEL,\n          fileIds: [],\n          datasourceId: datasourceId,\n        }),\n      );\n    }\n  }, [scriptLoadedFlag]);\n\n  useEffect(() => {\n    // Since we need to display file picker on blank page, as soon as file picker is visible\n    // Add overlay on the file picker background\n    if (pickerVisible) {\n      const element: HTMLElement | null =\n        document.querySelector(\".picker-dialog-bg\");\n      const elements: NodeListOf<HTMLElement> =\n        document.querySelectorAll(\".picker-dialog\");\n      // When the reconnect modal the ads modal disables pointer events everywhere else.\n      // To enable selection from the google sheets picker we set pointer events auto to it.\n      if (!!element) {\n        element.style.pointerEvents = \"auto\";\n      }\n      elements.forEach((element) => {\n        element.style.pointerEvents = \"auto\";\n      });\n    }\n  }, [pickerVisible]);\n\n  useEffect(() => {\n    // This loads the picker object in gapi script\n    if (!!gsheetToken && !!gapi && !!gsheetProjectID) {\n      gapi.load(\"client:picker\", async () => {\n        await gapi.client.load(\n          \"https://www.googleapis.com/discovery/v1/apis/drive/v3/rest\",\n        );\n        setPickerInitiated(true);\n      });\n    }\n  }, [scriptLoadedFlag, gsheetToken, gsheetProjectID]);\n\n  // This useEffect will be triggered when google apis script is loaded (script tag added in index.html)\n  // and when picker object is successfully loaded (check useEffect above) and\n  // and when google sheet token and project id are available\n  useEffect(() => {\n    if (\n      !!gsheetToken &&\n      !!scriptLoadedFlag &&\n      pickerInitiated &&\n      !!google &&\n      !!gsheetProjectID\n    ) {\n      createPicker(gsheetToken, gsheetProjectID);\n    }\n  }, [gsheetToken, scriptLoadedFlag, pickerInitiated, gsheetProjectID]);\n\n  // This is added in useEffect instead of file picker callback,\n  // because in case when browser has blocked third party cookies\n  // The file picker needs to be displayed with allow cookies option\n  // hence as soon as file picker is visible we should remove the overlay\n  // Ref: https://github.com/appsmithorg/appsmith/issues/22753\n  useEffect(() => {\n    if (!!pickerVisible) {\n      // Event would be emitted when file picker initialisation is done,\n      // but its either showing cookies permission page or the files to select\n      AnalyticsUtil.logEvent(\"GOOGLE_SHEET_FILE_PICKER_INITIATED\");\n    }\n  }, [pickerVisible]);\n\n  // This triggers google's picker object from google apis script to create file picker and display it\n  // It takes google sheet token and project id as inputs\n  const createPicker = async (accessToken: string, projectID: string) => {\n    const view = new google.picker.DocsView(google.picker.ViewId.SPREADSHEETS);\n    view.setMimeTypes(\"application/vnd.google-apps.spreadsheet\");\n    view.setMode(google.picker.DocsViewMode.LIST);\n    const title = createMessage(GOOGLE_SHEETS_FILE_PICKER_TITLE);\n    const picker = new google.picker.PickerBuilder()\n      .enableFeature(google.picker.Feature.NAV_HIDDEN)\n      .enableFeature(google.picker.Feature.MULTISELECT_ENABLED)\n      .setAppId(projectID)\n      .setOAuthToken(accessToken)\n      .addView(view)\n      .setTitle(title)\n      .setCallback(pickerCallback)\n      .build();\n    picker.setVisible(true);\n    setPickerVisible(true);\n  };\n\n  const addAnalyticalEvents = (data: any) => {\n    switch (data?.action) {\n      case FilePickerActionStatus.LOADED:\n        AnalyticsUtil.logEvent(\"GOOGLE_SHEET_FILE_PICKER_FILES_LISTED\");\n        break;\n      case FilePickerActionStatus.CANCEL:\n        AnalyticsUtil.logEvent(\"GOOGLE_SHEET_FILE_PICKER_CANCEL\");\n        break;\n      case FilePickerActionStatus.PICKED:\n        AnalyticsUtil.logEvent(\"GOOGLE_SHEET_FILE_PICKER_PICKED\", {\n          numberOfSheetsSelected: data?.docs?.length,\n        });\n        break;\n      default:\n        break;\n    }\n  };\n\n  const pickerCallback = async (data: any) => {\n    addAnalyticalEvents(data);\n    if (\n      data.action === FilePickerActionStatus.CANCEL ||\n      data.action === FilePickerActionStatus.PICKED\n    ) {\n      removeClassFromDocumentRoot(GOOGLE_SHEET_FILE_PICKER_OVERLAY_CLASS);\n      setPickerVisible(false);\n      const fileIds = data?.docs?.map((element: any) => element.id) || [];\n      dispatch(\n        filePickerCallbackAction({\n          action: data.action,\n          datasourceId: datasourceId,\n          fileIds: fileIds,\n        }),\n      );\n    }\n  };\n\n  return <div />;\n}\n\nexport default GoogleSheetFilePicker;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { get, isEqual, isNil, map, memoize, omit } from \"lodash\";\nimport { DATASOURCE_SAAS_FORM } from \"@appsmith/constants/forms\";\nimport type { Datasource } from \"entities/Datasource\";\nimport { AuthenticationStatus } from \"entities/Datasource\";\nimport { ActionType } from \"entities/Datasource\";\nimport type { InjectedFormProps } from \"redux-form\";\nimport {\n  getFormValues,\n  isDirty,\n  reduxForm,\n  initialize,\n  getFormInitialValues,\n  reset,\n} from \"redux-form\";\nimport type { RouteComponentProps } from \"react-router\";\nimport { connect } from \"react-redux\";\nimport type { AppState } from \"@appsmith/reducers\";\nimport {\n  getDatasource,\n  getPluginImages,\n  getDatasourceFormButtonConfig,\n  getPlugin,\n  getPluginDocumentationLinks,\n  getDatasourceScopeValue,\n} from \"@appsmith/selectors/entitiesSelector\";\nimport type { ActionDataState } from \"@appsmith/reducers/entityReducers/actionsReducer\";\nimport type { JSONtoFormProps } from \"../DataSourceEditor/JSONtoForm\";\nimport { JSONtoForm } from \"../DataSourceEditor/JSONtoForm\";\nimport { normalizeValues, validate } from \"components/formControls/utils\";\nimport {\n  getCurrentApplicationId,\n  getGsheetProjectID,\n  getGsheetToken,\n} from \"selectors/editorSelectors\";\nimport DatasourceAuth from \"pages/common/datasourceAuth\";\nimport EntityNotFoundPane from \"../EntityNotFoundPane\";\nimport type { Plugin } from \"api/PluginApi\";\nimport {\n  isDatasourceAuthorizedForQueryCreation,\n  isEnabledForPreviewData,\n  isGoogleSheetPluginDS,\n} from \"utils/editorContextUtils\";\nimport type { PluginType } from \"entities/Action\";\nimport AuthMessage from \"pages/common/datasourceAuth/AuthMessage\";\nimport { isDatasourceInViewMode } from \"selectors/ui\";\nimport { TEMP_DATASOURCE_ID } from \"constants/Datasource\";\nimport {\n  createTempDatasourceFromForm,\n  deleteTempDSFromDraft,\n  loadFilePickerAction,\n  removeTempDatasource,\n  setDatasourceViewMode,\n  toggleSaveActionFlag,\n  toggleSaveActionFromPopupFlag,\n  datasourceDiscardAction,\n} from \"actions/datasourceActions\";\nimport SaveOrDiscardDatasourceModal from \"../DataSourceEditor/SaveOrDiscardDatasourceModal\";\nimport {\n  createMessage,\n  GOOGLE_SHEETS_INFO_BANNER_MESSAGE,\n  GSHEET_AUTHORIZATION_ERROR,\n  SAVE_AND_AUTHORIZE_BUTTON_TEXT,\n} from \"@appsmith/constants/messages\";\nimport { getDatasourceErrorMessage } from \"./errorUtils\";\nimport GoogleSheetFilePicker from \"./GoogleSheetFilePicker\";\nimport DatasourceInformation, {\n  ViewModeWrapper,\n} from \"./../DataSourceEditor/DatasourceSection\";\nimport type { ControlProps } from \"components/formControls/BaseControl\";\nimport { DSFormHeader } from \"../DataSourceEditor/DSFormHeader\";\nimport Debugger, {\n  ResizerContentContainer,\n  ResizerMainContainer,\n} from \"../DataSourceEditor/Debugger\";\nimport { showDebuggerFlag } from \"selectors/debuggerSelectors\";\nimport { Form } from \"../DataSourceEditor/DBForm\";\nimport DSDataFilter from \"@appsmith/components/DSDataFilter\";\nimport { DSEditorWrapper } from \"../DataSourceEditor\";\nimport type { DatasourceFilterState } from \"../DataSourceEditor\";\nimport { getQueryParams } from \"utils/URLUtils\";\nimport AnalyticsUtil from \"@appsmith/utils/AnalyticsUtil\";\nimport { getDefaultEnvironmentId } from \"@appsmith/selectors/environmentSelectors\";\nimport { DEFAULT_ENV_ID } from \"@appsmith/api/ApiUtils\";\nimport {\n  getHasDeleteDatasourcePermission,\n  getHasManageDatasourcePermission,\n} from \"@appsmith/utils/BusinessFeatures/permissionPageHelpers\";\nimport {\n  selectFeatureFlagCheck,\n  selectFeatureFlags,\n} from \"@appsmith/selectors/featureFlagsSelectors\";\nimport { FEATURE_FLAG } from \"@appsmith/entities/FeatureFlag\";\nimport DatasourceTabs from \"../DatasourceInfo/DatasorceTabs\";\nimport { getCurrentApplicationIdForCreateNewApp } from \"@appsmith/selectors/applicationSelectors\";\n\nconst ViewModeContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  width: 100%;\n`;\n\ninterface StateProps extends JSONtoFormProps {\n  applicationId: string;\n  canManageDatasource?: boolean;\n  canDeleteDatasource?: boolean;\n  isSaving: boolean;\n  isTesting: boolean;\n  isDeleting: boolean;\n  loadingFormConfigs: boolean;\n  isNewDatasource: boolean;\n  pluginImage: string;\n  plugin?: Plugin;\n  pluginId: string;\n  actions: ActionDataState;\n  datasource?: Datasource;\n  datasourceButtonConfiguration: string[] | undefined;\n  pageId?: string; // for reconnect modal\n  pluginPackageName: string; // for reconnect modal\n  datasourceName: string;\n  viewMode: boolean;\n  isDatasourceBeingSaved: boolean;\n  isDatasourceBeingSavedFromPopup: boolean;\n  isFormDirty: boolean;\n  isPluginAuthorized: boolean;\n  gsheetToken?: string;\n  gsheetProjectID?: string;\n  showDebugger: boolean;\n  scopeValue?: string;\n  requiredFields: Record<string, ControlProps>;\n  configDetails: Record<string, string>;\n  isPluginAuthFailed: boolean;\n  isPluginAllowedToPreviewData: boolean;\n}\ninterface DatasourceFormFunctions {\n  discardTempDatasource: () => void;\n  deleteTempDSFromDraft: () => void;\n  toggleSaveActionFlag: (flag: boolean) => void;\n  toggleSaveActionFromPopupFlag: (flag: boolean) => void;\n  createTempDatasource: (data: any) => void;\n  setDatasourceViewMode: (payload: {\n    datasourceId: string;\n    viewMode: boolean;\n  }) => void;\n  loadFilePickerAction: () => void;\n  datasourceDiscardAction: (pluginId: string) => void;\n  initializeDatasource: (values: any) => void;\n  resetForm: (formName: string) => void;\n}\n\ntype DatasourceSaaSEditorProps = StateProps &\n  DatasourceFormFunctions &\n  SaasEditorWrappperProps &\n  RouteComponentProps<RouteProps> & { dispatch: any };\n\ntype Props = DatasourceSaaSEditorProps &\n  InjectedFormProps<Datasource, DatasourceSaaSEditorProps>;\n\n/*\n  **** State Variables Description ****\n  showDialog: flag used to show/hide the datasource discard popup\n  routesBlocked: flag used to identity if routes are blocked or not\n  unblock: on blocking routes using history.block, it returns a function which can be used to unblock the routes\n  navigation: function that navigates to path that we want to transition to, after discard action on datasource discard dialog popup\n*/\ninterface State {\n  showDialog: boolean;\n  routesBlocked: boolean;\n  readUrlParams: boolean;\n  filterParams: DatasourceFilterState;\n  unblock(): void;\n  navigation(): void;\n}\n\ntype SaasEditorWrappperProps = RouteProps & {\n  hiddenHeader?: boolean; // for reconnect modal\n  isInsideReconnectModal?: boolean; // for reconnect modal\n  currentEnvironment: string;\n  isOnboardingFlow?: boolean;\n};\ninterface RouteProps {\n  datasourceId: string;\n  pageId: string;\n  pluginPackageName: string;\n}\n\ninterface SaasEditorWrappperState {\n  requiredFields: Record<string, ControlProps>;\n  configDetails: Record<string, string>;\n}\nclass SaasEditorWrapper extends React.Component<\n  SaasEditorWrappperProps,\n  SaasEditorWrappperState\n> {\n  constructor(props: SaasEditorWrappperProps) {\n    super(props);\n    this.state = {\n      requiredFields: {},\n      configDetails: {},\n    };\n  }\n\n  componentDidUpdate(prevProps: Readonly<SaasEditorWrappperProps>): void {\n    // if the datasource id changes, we need to reset the required fields and configDetails\n    if (this.props.datasourceId !== prevProps.datasourceId) {\n      this.setState({\n        requiredFields: {},\n        configDetails: {},\n      });\n    }\n  }\n\n  // updates the configDetails and requiredFields objects in the state\n  setupConfig = (config: ControlProps) => {\n    const { configProperty, controlType, isRequired } = config;\n    const configDetails = this.state.configDetails;\n    const requiredFields = this.state.requiredFields;\n    configDetails[configProperty] = controlType;\n    if (isRequired) requiredFields[configProperty] = config;\n    this.setState({\n      configDetails,\n      requiredFields,\n    });\n  };\n\n  render() {\n    return (\n      <SaaSEditor\n        {...this.props}\n        configDetails={this.state.configDetails}\n        requiredFields={this.state.requiredFields}\n        setupConfig={this.setupConfig}\n      />\n    );\n  }\n}\n\nclass DatasourceSaaSEditor extends JSONtoForm<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      showDialog: false,\n      routesBlocked: false,\n      readUrlParams: false,\n      filterParams: {\n        id: DEFAULT_ENV_ID,\n        name: \"\",\n        userPermissions: [],\n      },\n      unblock: () => {\n        return undefined;\n      },\n      navigation: () => {\n        return undefined;\n      },\n    };\n    this.closeDialog = this.closeDialog.bind(this);\n    this.updateFilter = this.updateFilter.bind(this);\n    this.onSave = this.onSave.bind(this);\n    this.onDiscard = this.onDiscard.bind(this);\n    this.datasourceDeleteTrigger = this.datasourceDeleteTrigger.bind(this);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const urlObject = new URL(window?.location?.href);\n    const pluginId = urlObject?.searchParams?.get(\"pluginId\");\n    // update block state when form becomes dirty/view mode is switched on\n\n    // if the datasource configurations (except the name) has changed, we reinitialize the form.\n    // this is to allow for cases when the datasource has been authorized\n    if (\n      !isEqual(\n        omit(this.props.datasource, \"name\"),\n        omit(prevProps.datasource, \"name\"),\n      )\n    ) {\n      this.props.initializeDatasource(omit(this.props.datasource, \"name\"));\n    }\n\n    if (\n      prevProps.viewMode !== this.props.viewMode &&\n      !this.props.viewMode &&\n      !!pluginId\n    ) {\n      this.blockRoutes();\n    }\n\n    if (!this.props.isOnboardingFlow) {\n      this.setViewModeFromQueryParams();\n    }\n\n    // When save button is clicked in DS form, routes should be unblocked\n    if (this.props.isDatasourceBeingSaved) {\n      this.closeDialogAndUnblockRoutes();\n    }\n  }\n\n  // To move to edit state for new datasources and when we want to move to edit state\n  // from outside the datasource route\n  setViewModeFromQueryParams() {\n    const params = getQueryParams();\n    if (this.props.viewMode) {\n      if (\n        (params.viewMode === \"false\" && !this.state.readUrlParams) ||\n        this.props.isNewDatasource\n      ) {\n        // We just want to read the query params once. Cannot remove query params\n        // here as this triggers history.block\n        this.setState(\n          {\n            readUrlParams: true,\n          },\n          () => {\n            this.props.setDatasourceViewMode({\n              datasourceId: this.props.datasourceId,\n              viewMode: false,\n            });\n          },\n        );\n      }\n    }\n  }\n\n  routesBlockFormChangeCallback() {\n    if (this.props.isFormDirty) {\n      if (!this.state.routesBlocked) {\n        this.blockRoutes();\n      }\n    } else {\n      if (this.state.routesBlocked) {\n        this.closeDialogAndUnblockRoutes(true);\n      }\n    }\n  }\n\n  updateFilter(id: string, name: string, userPermissions: string[]) {\n    if (this.state.filterParams.id === id) return false;\n\n    AnalyticsUtil.logEvent(\"SWITCH_ENVIRONMENT\", {\n      fromEnvId: this.state.filterParams.id,\n      toEnvId: id,\n      fromEnvName: this.state.filterParams.name,\n      toEnvName: name,\n      mode: \"CONFIGURATION\",\n    });\n    this.setState({\n      filterParams: {\n        id,\n        name,\n        userPermissions,\n      },\n    });\n    return true;\n  }\n\n  componentDidMount() {\n    const urlObject = new URL(window?.location?.href);\n    const pluginId = urlObject?.searchParams?.get(\"pluginId\");\n\n    // if there are no initial values, it means the form has not been initialized, hence we initialize the form.\n    if (!this.props.initialValues) {\n      this.props.initializeDatasource(omit(this.props.datasource, \"name\"));\n    }\n\n    // Create Temp Datasource on component mount,\n    // if user hasnt saved datasource for the first time and refreshed the page\n    if (\n      !this.props.datasource &&\n      this.props?.match?.params?.datasourceId === TEMP_DATASOURCE_ID\n    ) {\n      this.props.createTempDatasource({\n        pluginId,\n      });\n    }\n\n    if (!this.props.viewMode && !!pluginId) {\n      this.blockRoutes();\n    }\n    this.props.loadFilePickerAction();\n  }\n\n  componentWillUnmount() {\n    this.props.discardTempDatasource();\n    this.props.deleteTempDSFromDraft();\n    !!this.state.unblock && this.state.unblock();\n  }\n\n  closeDialog() {\n    this.setState({ showDialog: false });\n  }\n\n  onSave() {\n    this.props.toggleSaveActionFromPopupFlag(true);\n  }\n\n  blockRoutes() {\n    this.setState({\n      unblock: this.props?.history?.block((tx: any) => {\n        this.setState(\n          {\n            // need to pass in query params as well as state, when user navigates away from ds form page\n            navigation: () =>\n              this.props.history.push(tx.pathname + tx.search, tx.state),\n            showDialog: true,\n            routesBlocked: true,\n          },\n          this.routesBlockFormChangeCallback.bind(this),\n        );\n        return false;\n      }),\n    });\n  }\n\n  onDiscard() {\n    this.closeDialogAndUnblockRoutes();\n    this.state.navigation();\n    this.props.datasourceDiscardAction(this.props?.pluginId);\n\n    if (!this.props.viewMode) {\n      this.props.setDatasourceViewMode({\n        datasourceId: this.props.datasourceId,\n        viewMode: true,\n      });\n    }\n\n    if (this.props.isFormDirty) {\n      this.props.resetForm(this.props.formName);\n    }\n  }\n\n  closeDialogAndUnblockRoutes(isNavigateBack?: boolean) {\n    this.closeDialog();\n    !!this.state.unblock && this.state.unblock();\n    this.props.toggleSaveActionFlag(false);\n    this.props.toggleSaveActionFromPopupFlag(false);\n    this.setState({ routesBlocked: false });\n    if (isNavigateBack) {\n      this.state.navigation();\n    }\n  }\n\n  datasourceDeleteTrigger() {\n    !!this.state.unblock && this.state.unblock();\n  }\n\n  render() {\n    const { formConfig, pluginId } = this.props;\n    if (!pluginId) {\n      return <EntityNotFoundPane />;\n    }\n    const content = this.renderDataSourceConfigForm(formConfig);\n    return this.renderForm(content);\n  }\n\n  getSanitizedData = () => {\n    return {\n      ...normalizeValues(this.props.formData, this.props.configDetails),\n      name: this.props.datasourceName,\n    };\n  };\n\n  onCancel() {\n    // if form has changed, show modal popup, or else simply set to view mode.\n    if (this.props.isFormDirty) {\n      this.setState({ showDialog: true });\n    } else {\n      this.props.setDatasourceViewMode({\n        datasourceId: this.props.datasourceId,\n        viewMode: true,\n      });\n    }\n  }\n\n  renderDatasourceInfo = () => {\n    const {\n      datasource,\n      formConfig,\n      formData,\n      isPluginAuthFailed,\n      isPluginAuthorized,\n      pageId,\n      plugin,\n      pluginPackageName,\n      viewMode,\n    } = this.props;\n    const isGoogleSheetPlugin = isGoogleSheetPluginDS(pluginPackageName);\n    const authErrorMessage = getDatasourceErrorMessage(\n      formData,\n      plugin,\n      this.state.filterParams.id,\n    );\n    const hideDatasourceSection =\n      isGoogleSheetPlugin &&\n      !isPluginAuthorized &&\n      authErrorMessage == GSHEET_AUTHORIZATION_ERROR;\n\n    return (\n      <ViewModeWrapper data-testid=\"t--ds-review-section\">\n        {datasource &&\n          isGoogleSheetPlugin &&\n          isPluginAuthFailed &&\n          datasource.id !== TEMP_DATASOURCE_ID && (\n            <AuthMessage\n              actionType={ActionType.AUTHORIZE}\n              datasource={datasource}\n              description={authErrorMessage}\n              isInViewMode\n              pageId={pageId}\n            />\n          )}\n        {!isNil(formConfig) && !isNil(datasource) && !hideDatasourceSection && (\n          <DatasourceInformation\n            config={formConfig[0]}\n            datasource={datasource}\n            viewMode={viewMode}\n          />\n        )}\n      </ViewModeWrapper>\n    );\n  };\n\n  shouldShowTabs = () => {\n    const { isPluginAllowedToPreviewData, isPluginAuthorized } = this.props;\n    return isPluginAllowedToPreviewData && isPluginAuthorized;\n  };\n\n  renderTabsForViewMode = () => {\n    const { datasource } = this.props;\n    return (\n      <ViewModeContainer>\n        {this.shouldShowTabs() ? (\n          <DatasourceTabs\n            configChild={this.renderDatasourceInfo()}\n            datasource={datasource as Datasource}\n          />\n        ) : (\n          this.renderDatasourceInfo()\n        )}\n      </ViewModeContainer>\n    );\n  };\n\n  renderDataSourceConfigForm = (sections: any) => {\n    const {\n      canDeleteDatasource,\n      canManageDatasource,\n      datasource,\n      datasourceButtonConfiguration,\n      datasourceId,\n      formData,\n      gsheetProjectID,\n      gsheetToken,\n      hiddenHeader,\n      isDeleting,\n      isInsideReconnectModal,\n      isOnboardingFlow,\n      isPluginAuthFailed,\n      isPluginAuthorized,\n      isSaving,\n      isTesting,\n      pageId,\n      plugin,\n      pluginImage,\n      pluginPackageName,\n      scopeValue,\n      setDatasourceViewMode,\n      showDebugger,\n      viewMode,\n    } = this.props;\n\n    const isGoogleSheetPlugin = isGoogleSheetPluginDS(pluginPackageName);\n\n    const createFlow = datasourceId === TEMP_DATASOURCE_ID;\n\n    /*\n      Currently we show error message banner for google sheets only, but in future\n      if we want to extend this functionality for other plugins, we should be able\n      to extend this function for other plugins\n    */\n    const authErrorMessage = getDatasourceErrorMessage(\n      formData,\n      plugin,\n      this.state.filterParams.id,\n    );\n\n    const googleSheetsInfoMessage = createMessage(\n      GOOGLE_SHEETS_INFO_BANNER_MESSAGE,\n    );\n\n    const showingTabsOnViewMode =\n      this.shouldShowTabs() && viewMode && !isInsideReconnectModal;\n\n    return (\n      <>\n        {!hiddenHeader && (\n          <DSFormHeader\n            canDeleteDatasource={canDeleteDatasource || false}\n            canManageDatasource={canManageDatasource || false}\n            datasource={datasource}\n            datasourceId={datasourceId}\n            isDeleting={isDeleting}\n            isNewDatasource={createFlow}\n            isPluginAuthorized={isPluginAuthorized}\n            noBottomBorder={showingTabsOnViewMode}\n            pluginImage={pluginImage}\n            pluginName={plugin?.name || \"\"}\n            pluginType={plugin?.type || \"\"}\n            setDatasourceViewMode={setDatasourceViewMode}\n            viewMode={viewMode}\n          />\n        )}\n        <ResizerMainContainer>\n          <ResizerContentContainer\n            className={`saas-form-resizer-content ${\n              showingTabsOnViewMode && \"saas-form-resizer-content-show-tabs\"\n            }`}\n          >\n            <DSEditorWrapper>\n              <DSDataFilter\n                filterId={this.state.filterParams.id}\n                isInsideReconnectModal={!!isInsideReconnectModal}\n                pluginName={plugin?.name || \"\"}\n                pluginType={plugin?.type || \"\"}\n                updateFilter={this.updateFilter}\n                viewMode={viewMode}\n              />\n              <div className=\"db-form-content-container\">\n                <Form\n                  onSubmit={(e) => {\n                    e.preventDefault();\n                  }}\n                  viewMode={viewMode}\n                >\n                  {(!viewMode || createFlow || isInsideReconnectModal) && (\n                    <>\n                      {/* This adds information banner when creating google sheets datasource,\n              this info banner explains why appsmith requires permissions from users google account */}\n                      {datasource && isGoogleSheetPlugin && createFlow ? (\n                        <AuthMessage\n                          actionType={ActionType.DOCUMENTATION}\n                          calloutType=\"info\"\n                          datasource={datasource}\n                          description={googleSheetsInfoMessage}\n                          pageId={pageId}\n                        />\n                      ) : null}\n                      {/* This adds error banner for google sheets datasource if the datasource is unauthorised */}\n                      {datasource &&\n                      isGoogleSheetPlugin &&\n                      isPluginAuthFailed &&\n                      datasourceId !== TEMP_DATASOURCE_ID ? (\n                        <AuthMessage\n                          datasource={datasource}\n                          description={authErrorMessage}\n                          pageId={pageId}\n                        />\n                      ) : null}\n                      {!isNil(sections)\n                        ? map(sections, this.renderMainSection)\n                        : null}\n                      {\"\"}\n                    </>\n                  )}\n                  {viewMode &&\n                    !isInsideReconnectModal &&\n                    this.renderTabsForViewMode()}\n                </Form>\n                {/* Render datasource form call-to-actions */}\n                {datasource && (\n                  <DatasourceAuth\n                    currentEnvironment={this.state.filterParams.id}\n                    datasource={datasource}\n                    datasourceButtonConfiguration={\n                      datasourceButtonConfiguration\n                    }\n                    formData={formData}\n                    formName={this.props.formName}\n                    getSanitizedFormData={memoize(this.getSanitizedData)}\n                    isInsideReconnectModal={isInsideReconnectModal}\n                    isInvalid={validate(this.props.requiredFields, formData)}\n                    isOnboardingFlow={isOnboardingFlow}\n                    isSaving={isSaving}\n                    isTesting={isTesting}\n                    onCancel={() => this.onCancel()}\n                    parentEntityId={pageId}\n                    pluginName={plugin?.name || \"\"}\n                    pluginPackageName={pluginPackageName}\n                    pluginType={plugin?.type as PluginType}\n                    scopeValue={scopeValue}\n                    setDatasourceViewMode={setDatasourceViewMode}\n                    shouldDisplayAuthMessage={!isGoogleSheetPlugin}\n                    triggerSave={this.props.isDatasourceBeingSavedFromPopup}\n                    viewMode={viewMode}\n                  />\n                )}\n              </div>\n            </DSEditorWrapper>\n          </ResizerContentContainer>\n          {showDebugger && <Debugger />}\n        </ResizerMainContainer>\n        <SaveOrDiscardDatasourceModal\n          datasourceId={datasourceId}\n          datasourcePermissions={datasource?.userPermissions || []}\n          isOpen={this.state.showDialog}\n          onClose={this.closeDialog}\n          onDiscard={this.onDiscard}\n          onSave={this.onSave}\n          saveButtonText={createMessage(SAVE_AND_AUTHORIZE_BUTTON_TEXT)}\n        />\n        {!!gsheetToken ? (\n          <GoogleSheetFilePicker\n            datasourceId={datasourceId}\n            gsheetProjectID={gsheetProjectID}\n            gsheetToken={gsheetToken}\n          />\n        ) : null}\n      </>\n    );\n  };\n}\n\nconst mapStateToProps = (state: AppState, props: any) => {\n  const datasourceId = props.datasourceId || props.match?.params?.datasourceId;\n  const { datasourcePane } = state.ui;\n  const { datasources, plugins } = state.entities;\n  let viewMode = isDatasourceInViewMode(state);\n  const datasource = getDatasource(state, datasourceId);\n  const { formConfigs } = plugins;\n  const formData = getFormValues(DATASOURCE_SAAS_FORM)(state) as Datasource;\n  const pluginId = get(datasource, \"pluginId\", \"\");\n  const plugin = getPlugin(state, pluginId);\n  const formConfig = formConfigs[pluginId];\n  const initialValues = getFormInitialValues(DATASOURCE_SAAS_FORM)(\n    state,\n  ) as Datasource;\n\n  // get scopeValue to be shown in analytical events\n  const scopeValue = getDatasourceScopeValue(\n    state,\n    datasourceId,\n    DATASOURCE_SAAS_FORM,\n  );\n\n  const datasourceButtonConfiguration = getDatasourceFormButtonConfig(\n    state,\n    pluginId,\n  );\n  const isFormDirty =\n    datasourceId === TEMP_DATASOURCE_ID\n      ? true\n      : isDirty(DATASOURCE_SAAS_FORM)(state);\n\n  const datasourcePermissions = datasource?.userPermissions || [];\n\n  const isFeatureEnabled = selectFeatureFlagCheck(\n    state,\n    FEATURE_FLAG.license_gac_enabled,\n  );\n\n  const canManageDatasource = getHasManageDatasourcePermission(\n    isFeatureEnabled,\n    datasourcePermissions,\n  );\n\n  const canDeleteDatasource = getHasDeleteDatasourcePermission(\n    isFeatureEnabled,\n    datasourcePermissions,\n  );\n\n  const gsheetToken = getGsheetToken(state);\n  const gsheetProjectID = getGsheetProjectID(state);\n  const documentationLinks = getPluginDocumentationLinks(state);\n  // Debugger render flag\n  const showDebugger = showDebuggerFlag(state);\n\n  const params: string = location.search;\n  const viewModeFromURLParams = new URLSearchParams(params).get(\"viewMode\");\n  if (!!viewModeFromURLParams && viewModeFromURLParams?.length > 0) {\n    viewMode = viewModeFromURLParams === \"true\";\n  }\n\n  const { currentEnvironment } = props;\n\n  // Returning false to isPluginAuthorized if there exists no plugin or formdata.\n  const isPluginAuthorized =\n    !!plugin && !!formData\n      ? isDatasourceAuthorizedForQueryCreation(\n          formData,\n          plugin,\n          currentEnvironment,\n        )\n      : false;\n\n  // Auth could fail because of either:\n  // Failure to give permissions / Failure to select files / Failure on server\n  const isPluginAuthFailed =\n    !!plugin && !!formData\n      ? isDatasourceAuthorizedForQueryCreation(\n          formData,\n          plugin,\n          currentEnvironment,\n          [\n            AuthenticationStatus.FAILURE,\n            AuthenticationStatus.FAILURE_ACCESS_DENIED,\n            AuthenticationStatus.FAILURE_FILE_NOT_SELECTED,\n          ],\n        )\n      : false;\n\n  // This is only present during onboarding flow\n  const currentApplicationIdForCreateNewApp =\n    getCurrentApplicationIdForCreateNewApp(state);\n\n  // should plugin be able to preview data\n  const isPluginAllowedToPreviewData =\n    !!plugin && isEnabledForPreviewData(datasource as Datasource, plugin);\n\n  return {\n    datasource,\n    datasourceButtonConfiguration,\n    datasourceId,\n    documentationLink: documentationLinks[pluginId],\n    isSaving: datasources.loading,\n    isDeleting: !!datasource?.isDeleting,\n    isTesting: datasources.isTesting,\n    formData: formData,\n    formConfig,\n    viewMode: viewMode ?? !props.isInsideReconnectModal,\n    isNewDatasource: datasourcePane.newDatasource === TEMP_DATASOURCE_ID,\n    pageId: props.pageId || props.match?.params?.pageId,\n    plugin: plugin,\n    pluginImage: getPluginImages(state)[pluginId],\n    pluginPackageName:\n      props.pluginPackageName || props.match?.params?.pluginPackageName,\n    initialValues,\n    isPluginAuthorized,\n    pluginId: pluginId,\n    actions: state.entities.actions,\n    formName: DATASOURCE_SAAS_FORM,\n    applicationId: !!currentApplicationIdForCreateNewApp\n      ? currentApplicationIdForCreateNewApp\n      : getCurrentApplicationId(state),\n    canManageDatasource,\n    canDeleteDatasource,\n    datasourceName: datasource?.name ?? \"\",\n    isDatasourceBeingSaved: datasources.isDatasourceBeingSaved,\n    isDatasourceBeingSavedFromPopup:\n      state.entities.datasources.isDatasourceBeingSavedFromPopup,\n    isFormDirty,\n    gsheetToken,\n    gsheetProjectID,\n    showDebugger,\n    scopeValue,\n    isPluginAuthFailed,\n    featureFlags: selectFeatureFlags(state),\n    isPluginAllowedToPreviewData,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any): DatasourceFormFunctions => ({\n  discardTempDatasource: () => dispatch(removeTempDatasource()),\n  deleteTempDSFromDraft: () => dispatch(deleteTempDSFromDraft()),\n  toggleSaveActionFlag: (flag) => dispatch(toggleSaveActionFlag(flag)),\n  toggleSaveActionFromPopupFlag: (flag) =>\n    dispatch(toggleSaveActionFromPopupFlag(flag)),\n  setDatasourceViewMode: (payload: {\n    datasourceId: string;\n    viewMode: boolean;\n  }) => {\n    // Construct URLSearchParams object instance from current URL querystring.\n    const queryParams = new URLSearchParams(window.location.search);\n\n    queryParams.set(\"viewMode\", payload.viewMode.toString());\n    // Replace current querystring with the new one.\n    history.replaceState({}, \"\", \"?\" + queryParams.toString());\n\n    dispatch(setDatasourceViewMode(payload));\n  },\n  createTempDatasource: (data: any) =>\n    dispatch(createTempDatasourceFromForm(data)),\n  loadFilePickerAction: () => dispatch(loadFilePickerAction()),\n  datasourceDiscardAction: (pluginId) =>\n    dispatch(datasourceDiscardAction(pluginId)),\n  initializeDatasource: (values: any) =>\n    dispatch(initialize(DATASOURCE_SAAS_FORM, values)),\n  resetForm: (formName: string) => dispatch(reset(formName)),\n});\n\nconst SaaSEditor = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(\n  reduxForm<Datasource, DatasourceSaaSEditorProps>({\n    form: DATASOURCE_SAAS_FORM,\n    enableReinitialize: true,\n  })(DatasourceSaaSEditor),\n);\n\nexport default connect((state) => ({\n  currentEnvironment: getDefaultEnvironmentId(state),\n}))(SaasEditorWrapper);\n","import React from \"react\";\nimport { Text, TextType } from \"design-system-old\";\nimport { Icon, Tooltip } from \"design-system\";\nimport type { Datasource } from \"entities/Datasource\";\nimport styled from \"styled-components\";\nimport { getAssetUrl } from \"@appsmith/utils/airgapHelpers\";\nimport { PluginImage } from \"pages/Editor/DataSourceEditor/DSFormHeader\";\nimport { isEnvironmentConfigured } from \"@appsmith/utils/Environments\";\nimport type { Plugin } from \"api/PluginApi\";\nimport {\n  isDatasourceAuthorizedForQueryCreation,\n  isGoogleSheetPluginDS,\n} from \"utils/editorContextUtils\";\n\nconst ListItem = styled.div<{ disabled?: boolean }>`\n  display: flex;\n  height: 64px;\n  width: 100%;\n  padding: 10px 12px;\n  margin-bottom: 10px;\n  cursor: pointer;\n  opacity: ${(props) => (props.disabled ? 0.4 : 1)};\n  border-radius: var(--ads-v2-border-radius);\n  &.active {\n    background-color: var(--ads-v2-color-bg-muted);\n  }\n  &:hover {\n    background-color: var(--ads-v2-color-bg-subtle);\n  }\n  img {\n    width: 24px;\n    height: 24px;\n  }\n`;\n\nconst ListLabels = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst DsTitle = styled.div`\n  width: 100%;\n  display: flex;\n  margin-bottom: ${(props) => props.theme.spaces[1]}px;\n  .t--ds-list-title {\n    max-width: 160px;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    padding-right: 4px;\n  }\n  .cs-icon {\n    margin-left: ${(props) => props.theme.spaces[2]}px;\n  }\n`;\nfunction ListItemWrapper(props: {\n  currentEnvironment: string;\n  ds: Datasource;\n  selected?: boolean;\n  plugin: Plugin;\n  onClick: (ds: Datasource) => void;\n}) {\n  const { currentEnvironment, ds, onClick, plugin, selected } = props;\n  const isPluginAuthorized = isGoogleSheetPluginDS(plugin?.packageName)\n    ? isDatasourceAuthorizedForQueryCreation(\n        ds,\n        plugin ?? {},\n        currentEnvironment,\n      )\n    : isEnvironmentConfigured(ds, currentEnvironment);\n  return (\n    <ListItem\n      className={`t--ds-list ${selected ? \"active\" : \"\"}`}\n      onClick={() => onClick(ds)}\n    >\n      <PluginImage alt=\"Datasource\" src={getAssetUrl(plugin?.iconLocation)} />\n      <ListLabels>\n        <Tooltip content={ds.name} placement=\"left\">\n          <DsTitle>\n            <Text\n              className=\"t--ds-list-title\"\n              color=\"var(--ads-v2-color-fg-emphasis)\"\n              type={TextType.H4}\n            >\n              {ds.name}\n            </Text>\n            <Icon\n              color={\n                isPluginAuthorized\n                  ? \"var(--ads-v2-color-fg-success)\"\n                  : \"var(--ads-v2-color-fg-error)\"\n              }\n              name={isPluginAuthorized ? \"oval-check\" : \"info\"}\n              size=\"md\"\n            />\n          </DsTitle>\n        </Tooltip>\n        <Text color=\"var(--ads-v2-color-fg)\" type={TextType.H5}>\n          {plugin?.name}\n        </Text>\n      </ListLabels>\n    </ListItem>\n  );\n}\n\nexport default ListItemWrapper;\n","import { builderURL } from \"@appsmith/RouteBuilder\";\nimport {\n  RECONNECT_MISSING_DATASOURCE_CREDENTIALS_DESCRIPTION,\n  SKIP_TO_APPLICATION,\n  createMessage,\n} from \"@appsmith/constants/messages\";\nimport { EditorNames } from \"@appsmith/hooks\";\n\ninterface UseReconnectModalDataProps {\n  pageId: string | null;\n  appId: string | null;\n}\n\nfunction useReconnectModalData({ appId, pageId }: UseReconnectModalDataProps) {\n  const editorURL =\n    pageId &&\n    builderURL({\n      pageId,\n    });\n\n  return {\n    skipMessage: createMessage(SKIP_TO_APPLICATION),\n    missingDsCredentialsDescription: createMessage(\n      RECONNECT_MISSING_DATASOURCE_CREDENTIALS_DESCRIPTION,\n    ),\n    editorURL,\n    editorId: appId,\n    parentEntityId: pageId,\n    editorType: EditorNames.APPLICATION,\n  };\n}\n\nexport default useReconnectModalData;\n","export * from \"ce/pages/Editor/gitSync/useReconnectModalData\";\nimport { default as useCEReconnectModalData } from \"ce/pages/Editor/gitSync/useReconnectModalData\";\nexport default useCEReconnectModalData;\n","import React, { useCallback, useEffect, useMemo, useState } from \"react\";\n\nimport {\n  getImportedApplication,\n  getIsDatasourceConfigForImportFetched,\n  getWorkspaceIdForImport,\n  getPageIdForImport,\n} from \"@appsmith/selectors/applicationSelectors\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Colors } from \"constants/Colors\";\n\nimport styled from \"styled-components\";\nimport { Title } from \"./components/StyledComponents\";\nimport {\n  createMessage,\n  OAUTH_AUTHORIZATION_APPSMITH_ERROR,\n  OAUTH_AUTHORIZATION_FAILED,\n  RECONNECT_DATASOURCE_SUCCESS_MESSAGE1,\n  RECONNECT_DATASOURCE_SUCCESS_MESSAGE2,\n  RECONNECT_MISSING_DATASOURCE_CREDENTIALS,\n  SKIP_CONFIGURATION,\n  SKIP_TO_APPLICATION_TOOLTIP_DESCRIPTION,\n} from \"@appsmith/constants/messages\";\nimport {\n  getDatasourceLoading,\n  getDatasourcePlugins,\n  getDatasources,\n  getIsDatasourceTesting,\n  getIsListing,\n  getIsReconnectingDatasourcesModalOpen,\n  getUnconfiguredDatasources,\n} from \"@appsmith/selectors/entitiesSelector\";\nimport {\n  initDatasourceConnectionDuringImportRequest,\n  resetDatasourceConfigForImportFetchedFlag,\n  setIsReconnectingDatasourcesModalOpen,\n  setPageIdForImport,\n  setWorkspaceIdForImport,\n} from \"@appsmith/actions/applicationActions\";\nimport type { Datasource } from \"entities/Datasource\";\nimport DatasourceForm from \"../DataSourceEditor\";\nimport AnalyticsUtil from \"@appsmith/utils/AnalyticsUtil\";\nimport { useQuery } from \"../utils\";\nimport ListItemWrapper from \"./components/DatasourceListItem\";\nimport { getDefaultPageId } from \"@appsmith/sagas/ApplicationSagas\";\nimport { ReduxActionTypes } from \"@appsmith/constants/ReduxActionConstants\";\nimport {\n  getOAuthAccessToken,\n  loadFilePickerAction,\n} from \"actions/datasourceActions\";\nimport localStorage from \"utils/localStorage\";\nimport {\n  Modal,\n  ModalBody,\n  ModalContent,\n  ModalHeader,\n  toast,\n  Button,\n  Text,\n} from \"design-system\";\nimport { isEnvironmentConfigured } from \"@appsmith/utils/Environments\";\nimport { keyBy } from \"lodash\";\nimport type { Plugin } from \"api/PluginApi\";\nimport {\n  isDatasourceAuthorizedForQueryCreation,\n  isGoogleSheetPluginDS,\n} from \"utils/editorContextUtils\";\nimport {\n  areEnvironmentsFetched,\n  getCurrentEnvironmentDetails,\n} from \"@appsmith/selectors/environmentSelectors\";\nimport type { AppState } from \"@appsmith/reducers\";\nimport { getFetchedWorkspaces } from \"@appsmith/selectors/workspaceSelectors\";\nimport { getApplicationsOfWorkspace } from \"@appsmith/selectors/selectedWorkspaceSelectors\";\nimport useReconnectModalData from \"@appsmith/pages/Editor/gitSync/useReconnectModalData\";\nimport { resetImportData } from \"@appsmith/actions/workspaceActions\";\n\nconst Section = styled.div`\n  display: flex;\n  align-items: center;\n  flex: 1;\n  justify-content: center;\n  margin-bottom: ${(props) => props.theme.spaces[11]}px;\n  width: calc(100% - 206px);\n`;\n\nconst BodyContainer = styled.div`\n  flex: 3;\n  height: 640px;\n  max-height: 82vh;\n`;\n\n// TODO: Removed usage of \"t--\" classes since they clash with the test classes.\nconst ContentWrapper = styled.div`\n  height: calc(100% - 16px);\n  display: flex;\n  margin-top: 24px;\n  border-top: 1px solid var(--ads-v2-color-border);\n  padding-top: 16px;\n\n  .t--json-to-form-wrapper {\n    width: 100%;\n\n    .t--collapse-section-container {\n      margin-top: 20px;\n    }\n\n    .t--close-editor {\n      display: none;\n    }\n\n    div[class^=\"JSONtoForm__DBForm-\"] {\n      padding-top: 0px;\n\n      div[class^=\"JSONtoForm__SaveButtonContainer-\"] {\n        button:first-child {\n          display: none;\n        }\n      }\n    }\n\n    .t--collapse-section-container {\n      width: 100%;\n\n      & > div {\n        color: ${Colors.BLACK};\n      }\n    }\n\n    .label-icon-wrapper div[class^=\"IconConstants__IconWrapper-\"] {\n      width: 12px;\n      height: 14px;\n      margin-left: 6px;\n      margin-right: 6px;\n\n      svg {\n        width: 12px;\n        height: 14px;\n\n        path {\n          fill: ${Colors.GREEN};\n        }\n      }\n    }\n\n    div > label[class^=\"StyledFormComponents__StyledFormLabel-\"] {\n      &:last-child {\n        width: 140px !important;\n      }\n    }\n  }\n\n  .t--message-container {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n  }\n`;\n\nconst ListContainer = styled.div`\n  height: inherit;\n  overflow: auto;\n  width: 256px;\n  padding-right: 8px;\n\n  .t--collapse-section-container {\n    width: 90%;\n    margin-left: 5%;\n    margin-bottom: ${(props) => props.theme.spaces[11] + 2}px;\n\n    & > div {\n      font-style: normal;\n      font-weight: normal;\n      font-size: 12px;\n      line-height: 16px;\n      color: ${Colors.BLACK};\n    }\n  }\n`;\n\nconst Message = styled.div`\n  font-size: ${(props) => props.theme.typography[\"p0\"].fontSize}px;\n  line-height: ${(props) => props.theme.typography[\"p0\"].lineHeight}px;\n  letter-spacing: ${(props) => props.theme.typography[\"p0\"].letterSpacing}px;\n  text-align: center;\n  margin-bottom: ${(props) => props.theme.spaces[6]}px;\n`;\n\nconst DBFormWrapper = styled.div`\n  width: calc(100% - 206px);\n  overflow: auto;\n  display: flex;\n  overflow: hidden;\n  height: inherit;\n  flex: 1;\n  display: flex;\n  border-left: 1px solid var(--ads-v2-color-border);\n  border-right: 1px solid var(--ads-v2-color-border);\n  margin-right: 12px;\n  width: calc(100% - 256px - 256px);\n\n  > div {\n    width: 100%;\n    height: calc(100% - 68px); // Adding height offset of the buttons container\n  }\n  div[class^=\"RestAPIDatasourceForm__RestApiForm-\"] {\n    padding-top: 0px;\n    height: 100%;\n  }\n\n  .t--cancel-edit-datasource {\n    display: none;\n  }\n`;\n\nconst ModalContentWrapper = styled(ModalContent)`\n  width: 100%;\n`;\nconst ModalBodyWrapper = styled(ModalBody)`\n  overflow-y: hidden;\n`;\nconst SkipToAppWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 256px;\n`;\n\nenum AuthorizationStatus {\n  SUCCESS = \"success\",\n  APPSMITH_ERROR = \"appsmith_error\",\n}\n\nfunction SuccessMessages() {\n  return (\n    <Section className=\"t--message-container\">\n      <Message>{createMessage(RECONNECT_DATASOURCE_SUCCESS_MESSAGE1)}</Message>\n      <Message>{createMessage(RECONNECT_DATASOURCE_SUCCESS_MESSAGE2)}</Message>\n    </Section>\n  );\n}\n\nfunction ReconnectDatasourceModal() {\n  const dispatch = useDispatch();\n  const isModalOpen = useSelector(getIsReconnectingDatasourcesModalOpen);\n  const workspaceId = useSelector(getWorkspaceIdForImport);\n  const pageIdForImport = useSelector(getPageIdForImport);\n  const environmentsFetched = useSelector((state: AppState) =>\n    areEnvironmentsFetched(state, workspaceId),\n  );\n  const unconfiguredDatasources = useSelector(getUnconfiguredDatasources);\n  const unconfiguredDatasourceIds = unconfiguredDatasources.map(\n    (ds: Datasource) => ds.id,\n  );\n  const datasourcesList = useSelector(getDatasources);\n  const datasources = useMemo(() => {\n    return datasourcesList.filter((ds: Datasource) =>\n      unconfiguredDatasourceIds.includes(ds.id),\n    );\n  }, [datasourcesList, unconfiguredDatasourceIds]);\n  const pluginsArray = useSelector(getDatasourcePlugins);\n  const plugins = keyBy(pluginsArray, \"id\");\n  const isLoading = useSelector(getIsListing);\n  const isDatasourceTesting = useSelector(getIsDatasourceTesting);\n  const isDatasourceUpdating = useSelector(getDatasourceLoading);\n\n  // checking refresh modal\n  const pendingApp = JSON.parse(\n    localStorage.getItem(\"importedAppPendingInfo\") || \"null\",\n  );\n  // getting query from redirection url\n  const workspaces = useSelector(getFetchedWorkspaces);\n  const applications = useSelector(getApplicationsOfWorkspace);\n  const currentEnvDetails = useSelector(getCurrentEnvironmentDetails);\n  const queryParams = useQuery();\n  const queryAppId =\n    queryParams.get(\"appId\") || (pendingApp ? pendingApp.appId : null);\n  const queryPageId =\n    queryParams.get(\"pageId\") || (pendingApp ? pendingApp.pageId : null);\n  const queryDatasourceId =\n    queryParams.get(\"datasourceId\") ||\n    (pendingApp ? pendingApp.datasourceId : null);\n  const queryIsImport =\n    queryParams.get(\"importForGit\") === \"true\" || !!pendingApp;\n\n  const [selectedDatasourceId, setSelectedDatasourceId] = useState<\n    string | null\n  >(queryDatasourceId);\n  const [pageId, setPageId] = useState<string | null>(queryPageId);\n  const [appId, setAppId] = useState<string | null>(queryAppId);\n  const [datasource, setDatasource] = useState<Datasource | null>(null);\n  const [isImport, setIsImport] = useState(queryIsImport);\n  const [isTesting, setIsTesting] = useState(false);\n  const queryDS = datasources.find((ds) => ds.id === queryDatasourceId);\n  const dsName = queryDS?.name;\n  const orgId = queryDS?.workspaceId;\n\n  const checkIfDatasourceIsConfigured = (ds: Datasource | null) => {\n    if (!ds || pluginsArray.length === 0) return false;\n    const plugin = plugins[ds.pluginId];\n    const output = isGoogleSheetPluginDS(plugin?.packageName)\n      ? isDatasourceAuthorizedForQueryCreation(\n          ds,\n          plugin as Plugin,\n          currentEnvDetails.id,\n        )\n      : ds.datasourceStorages\n        ? isEnvironmentConfigured(ds, currentEnvDetails.id)\n        : false;\n    return output;\n  };\n\n  /**\n   * The role of useReconnectModalData is to provide editorId (appId or packageId), parentEntityId (pageId or moduleId)\n   * and any differentiating elements when a app vs package is imported.\n   * Right now it takes the pageId and appId and returns editorId/parentEntityId to reduces the changes required to\n   * refactor this for packages. Ideally the hook should calculate everything and return the necessary values.\n   */\n  const {\n    editorId,\n    editorType,\n    editorURL,\n    missingDsCredentialsDescription, // pageId or moduleId\n    parentEntityId, // appId or packageId from query params\n    skipMessage,\n  } = useReconnectModalData({ pageId, appId });\n\n  // when redirecting from oauth, processing the status\n  if (isImport) {\n    setIsImport(false);\n    const status = queryParams.get(\"response_status\");\n    const display_message = queryParams.get(\"display_message\");\n    if (status !== AuthorizationStatus.SUCCESS) {\n      const message =\n        status === AuthorizationStatus.APPSMITH_ERROR\n          ? OAUTH_AUTHORIZATION_APPSMITH_ERROR\n          : OAUTH_AUTHORIZATION_FAILED;\n      toast.show(display_message || message, { kind: \"error\" });\n      AnalyticsUtil.logEvent(\"DATASOURCE_AUTH_COMPLETE\", {\n        applicationId: queryAppId,\n        datasourceId: queryDatasourceId,\n        environmentId: currentEnvDetails.id,\n        environmentName: currentEnvDetails.name,\n        pageId: queryPageId,\n        oAuthPassOrFailVerdict: status,\n        workspaceId: orgId,\n        datasourceName: dsName,\n        pluginName: plugins[datasource?.pluginId || \"\"]?.name,\n        editorType,\n      });\n    } else if (queryDatasourceId) {\n      dispatch(loadFilePickerAction());\n      dispatch(getOAuthAccessToken(queryDatasourceId));\n    }\n  }\n\n  // should open reconnect datasource modal\n  useEffect(() => {\n    if (applications && queryIsImport && queryDatasourceId) {\n      if (queryAppId) {\n        const app = applications.find((app: any) => app.id === queryAppId);\n        if (app) {\n          dispatch(\n            setWorkspaceIdForImport({\n              editorId: editorId || \"\",\n              workspaceId: app.workspaceId,\n            }),\n          );\n          dispatch(setIsReconnectingDatasourcesModalOpen({ isOpen: true }));\n          const defaultPageId = getDefaultPageId(app.pages);\n          if (pageIdForImport) {\n            setPageId(pageIdForImport);\n          } else if (defaultPageId) {\n            setPageId(defaultPageId);\n          }\n          if (!datasources.length) {\n            dispatch({\n              type: ReduxActionTypes.FETCH_UNCONFIGURED_DATASOURCE_LIST,\n              payload: {\n                applicationId: editorId,\n                workspaceId: app.workspaceId,\n              },\n            });\n          }\n        }\n      }\n    }\n  }, [workspaces, queryIsImport, applications]);\n\n  const isConfigFetched = useSelector(getIsDatasourceConfigForImportFetched);\n\n  // todo uncomment this to fetch datasource config\n  useEffect(() => {\n    if (isModalOpen && workspaceId && environmentsFetched) {\n      dispatch(\n        initDatasourceConnectionDuringImportRequest({\n          workspaceId: workspaceId as string,\n        }),\n      );\n    }\n  }, [workspaceId, isModalOpen, environmentsFetched]);\n\n  useEffect(() => {\n    if (isModalOpen) {\n      // while updating datasource, testing flag should be false\n      if (isDatasourceUpdating) {\n        setIsTesting(false);\n      }\n      // while testing datasource, testing flag should be true\n      if (isDatasourceTesting) {\n        setIsTesting(true);\n      }\n    }\n  }, [isModalOpen, isDatasourceTesting, isDatasourceUpdating]);\n\n  const handleClose = (e: any) => {\n    // Some magic code to handle the scenario where the reconnect modal and google sheets\n    // file picker are both open.\n    // Check if the overlay of the modal was clicked\n    function isOverlayClicked(classList: DOMTokenList) {\n      return classList.contains(\"reconnect-datasource-modal\");\n    }\n    // Check if the close button of the modal was clicked\n    function isCloseButtonClicked(e: HTMLDivElement) {\n      const dialogCloseButton = document.querySelector(\n        \".ads-v2-modal__content-header-close-button\",\n      );\n      if (dialogCloseButton) {\n        return dialogCloseButton.contains(e);\n      }\n      return false;\n    }\n\n    let shouldClose = false;\n    if (e) {\n      shouldClose = isOverlayClicked(e.target.classList);\n      shouldClose = shouldClose || isCloseButtonClicked(e.target);\n      // If either the close button or the overlay was clicked close the modal\n      if (shouldClose) {\n        onClose();\n        const isInsideApplication =\n          window.location.pathname.split(\"/\")[1] === \"app\";\n        if (isInsideApplication && editorURL) {\n          window.location.href = editorURL;\n        }\n      }\n    }\n  };\n\n  const clearImportData = () => {\n    dispatch(resetImportData());\n  };\n\n  const onClose = () => {\n    localStorage.setItem(\"importedAppPendingInfo\", \"null\");\n    dispatch(setIsReconnectingDatasourcesModalOpen({ isOpen: false }));\n    dispatch(\n      setWorkspaceIdForImport({ editorId: editorId || \"\", workspaceId: \"\" }),\n    );\n    dispatch(setPageIdForImport(\"\"));\n    dispatch(resetDatasourceConfigForImportFetchedFlag());\n    setSelectedDatasourceId(\"\");\n    clearImportData();\n  };\n\n  const onSelectDatasource = useCallback((ds: Datasource) => {\n    setIsTesting(false);\n    setSelectedDatasourceId(ds.id);\n    setDatasource(ds);\n    AnalyticsUtil.logEvent(\"RECONNECTING_DATASOURCE_ITEM_CLICK\", {\n      id: ds.id,\n      name: ds.name,\n      pluginName: plugins[ds.id]?.name,\n      isConfigured: checkIfDatasourceIsConfigured(ds),\n    });\n  }, []);\n\n  useEffect(() => {\n    if (\n      isConfigFetched &&\n      datasources &&\n      !selectedDatasourceId &&\n      !queryIsImport\n    ) {\n      setDatasource(datasources[0]);\n      setSelectedDatasourceId(datasources[0].id ?? \"\");\n    }\n  }, [isConfigFetched, selectedDatasourceId, queryIsImport]);\n\n  const importedApplication = useSelector(getImportedApplication);\n  useEffect(() => {\n    if (!queryIsImport) {\n      // @ts-expect-error: importedApplication is of type unknown\n      const defaultPage = importedApplication?.pages?.find(\n        (page: any) => page.isDefault,\n      );\n      if (defaultPage) {\n        setPageId(defaultPage.id);\n        // @ts-expect-error: importedApplication is of type unknown\n        setAppId(importedApplication?.id);\n      }\n    }\n  }, [importedApplication, queryIsImport]);\n\n  // checking of full configured\n  useEffect(() => {\n    if (isModalOpen && !isTesting) {\n      const id = selectedDatasourceId;\n      const pending = datasources.filter(\n        (ds: Datasource) => !checkIfDatasourceIsConfigured(ds),\n      );\n      if (pending.length > 0) {\n        if (id) {\n          // checking if the current datasource is still pending\n          const index = pending.findIndex((ds: Datasource) => ds.id === id);\n          if (index > -1) {\n            // don't do anything if the current datasource is still pending\n            return;\n          }\n        }\n        // goto next pending datasource\n        const next: Datasource = pending[0];\n        if (next && next.id) {\n          setSelectedDatasourceId(next.id);\n          setDatasource(next);\n          // when refresh, it should be opened.\n          const appInfo = {\n            appId: appId,\n            pageId: pageId,\n            datasourceId: next.id,\n          };\n          localStorage.setItem(\n            \"importedAppPendingInfo\",\n            JSON.stringify(appInfo),\n          );\n        }\n      }\n      // When datasources are present and pending datasources are 0,\n      // then only we want to update status as success\n      else if (editorURL && pending.length === 0 && datasources.length > 0) {\n        // open application import successfule\n        localStorage.setItem(\"importSuccess\", \"true\");\n        localStorage.setItem(\"importedAppPendingInfo\", \"null\");\n        window.open(editorURL, \"_self\");\n      }\n    }\n  }, [datasources, editorURL, isModalOpen, isTesting, queryIsImport]);\n\n  const mappedDataSources = datasources.map((ds: Datasource) => {\n    return (\n      <ListItemWrapper\n        currentEnvironment={currentEnvDetails.id}\n        ds={ds}\n        key={ds.id}\n        onClick={() => {\n          onSelectDatasource(ds);\n        }}\n        plugin={plugins[ds.pluginId]}\n        selected={ds.id === selectedDatasourceId}\n      />\n    );\n  });\n\n  const shouldShowDBForm =\n    isConfigFetched && !isLoading && !checkIfDatasourceIsConfigured(datasource);\n\n  const onSkipBtnClick = () => {\n    AnalyticsUtil.logEvent(\"RECONNECTING_SKIP_TO_APPLICATION_BUTTON_CLICK\");\n    localStorage.setItem(\"importedAppPendingInfo\", \"null\");\n    if (editorURL) {\n      // window location because history push changes routes shallowly and some side effects needed for page loading might not run\n      window.location.href = editorURL;\n    }\n    onClose();\n  };\n\n  return (\n    <Modal open={isModalOpen}>\n      <ModalContentWrapper\n        data-testId=\"reconnect-datasource-modal\"\n        onClick={handleClose}\n        onEscapeKeyDown={onClose}\n        onInteractOutside={handleClose}\n        overlayClassName=\"reconnect-datasource-modal\"\n      >\n        <ModalHeader>Reconnect datasources</ModalHeader>\n        <ModalBodyWrapper>\n          <BodyContainer>\n            <Title>\n              {createMessage(RECONNECT_MISSING_DATASOURCE_CREDENTIALS)}\n            </Title>\n\n            <Text>{missingDsCredentialsDescription}</Text>\n            <ContentWrapper>\n              <ListContainer>{mappedDataSources}</ListContainer>\n\n              <DBFormWrapper>\n                {shouldShowDBForm && (\n                  <DatasourceForm\n                    applicationId={editorId}\n                    datasourceId={selectedDatasourceId}\n                    fromImporting\n                    // isInsideReconnectModal: indicates that the datasource form is rendering inside reconnect modal\n                    isInsideReconnectModal\n                    pageId={parentEntityId}\n                  />\n                )}\n                {checkIfDatasourceIsConfigured(datasource) && SuccessMessages()}\n              </DBFormWrapper>\n\n              <SkipToAppWrapper>\n                <Text kind=\"heading-s\">\n                  {createMessage(SKIP_CONFIGURATION)}\n                </Text>\n                <Text>\n                  {createMessage(SKIP_TO_APPLICATION_TOOLTIP_DESCRIPTION)}\n                </Text>\n                <Button\n                  UNSAFE_width={\"100px\"}\n                  className=\"t--skip-to-application-btn mt-5\"\n                  kind=\"secondary\"\n                  onClick={onSkipBtnClick}\n                  renderAs=\"a\"\n                  size=\"md\"\n                >\n                  {skipMessage}\n                </Button>\n              </SkipToAppWrapper>\n            </ContentWrapper>\n          </BodyContainer>\n        </ModalBodyWrapper>\n      </ModalContentWrapper>\n    </Modal>\n  );\n}\n\nexport default ReconnectDatasourceModal;\n","import styled from \"styled-components\";\nimport { getTypographyByKey } from \"design-system-old\";\n\nexport const Title = styled.p`\n  ${getTypographyByKey(\"h2\")};\n  /* margin: ${(props) =>\n    `${props.theme.spaces[7]}px 0px ${props.theme.spaces[3]}px 0px`}; */\n  color: var(--ads-v2-color-fg-emphasis);\n`;\n\nexport const Subtitle = styled.div`\n  margin-top: 8px;\n  ${getTypographyByKey(\"p1\")};\n  color: var(--ads-v2-color-fg);\n`;\n\nexport const Caption = styled.span`\n  ${getTypographyByKey(\"p1\")};\n`;\n\ntype sizeType =\n  | 0\n  | 1\n  | 2\n  | 3\n  | 4\n  | 5\n  | 6\n  | 7\n  | 8\n  | 9\n  | 10\n  | 11\n  | 12\n  | 13\n  | 14\n  | 15;\n\nexport const Space = styled.div<{ size: sizeType; horizontal?: boolean }>`\n  margin: ${(props) =>\n    props.horizontal\n      ? `0px ${props.theme.spaces[props.size]}px `\n      : `${props.theme.spaces[props.size]}px 0px`};\n`;\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  overflow-y: scroll;\n  overflow-x: hidden;\n  scrollbar-width: none;\n\n  &::-webkit-scrollbar-thumb {\n    background-color: transparent;\n  }\n\n  &::-webkit-scrollbar {\n    width: 0;\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const BuildingBlockWrapper = styled.div`\n  border: 1px solid var(--ads-v2-color-border);\n  margin-bottom: 24px;\n  cursor: pointer;\n  background-color: var(--ads-v2-color-bg);\n  border-radius: var(--ads-v2-border-radius);\n\n  &:hover {\n    border-color: var(--ads-v2-color-border-emphasis);\n  }\n`;\n\nexport const ImageWrapper = styled.div`\n  overflow: hidden;\n  margin-bottom: ${(props) => props.theme.spaces[9]}px;\n`;\n\nexport const StyledImage = styled.img`\n  object-fit: cover;\n  width: 100%;\n  height: 236px;\n`;\n\nexport const BuildingBlockContent = styled.div`\n  padding: 0 25px 16px 25px;\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n\n  .title {\n    color: var(--ads-v2-color-fg-emphasis-plus);\n    overflow: hidden;\n    display: -webkit-box;\n    -webkit-line-clamp: 1;\n    -webkit-box-orient: vertical;\n  }\n  .description {\n    margin-top: ${(props) => props.theme.spaces[2]}px;\n    color: var(--ads-v2-color-fg);\n    font-size: 15px;\n    height: 65px;\n    overflow: hidden;\n    display: -webkit-box;\n    -webkit-line-clamp: 4;\n    -webkit-box-orient: vertical;\n  }\n`;\n\nexport const BuildingBlockContentFooter = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  margin-top: ${(props) => props.theme.spaces[9]}px;\n`;\n","import React, { useState } from \"react\";\nimport type { Template as TemplateInterface } from \"api/TemplatesApi\";\nimport {\n  BuildingBlockWrapper,\n  ImageWrapper,\n  StyledImage,\n  BuildingBlockContent,\n  BuildingBlockContentFooter,\n} from \"./StyledComponents\";\nimport { Button, Text, Tooltip } from \"design-system\";\nimport history from \"utils/history\";\nimport {\n  FORK_THIS_TEMPLATE_BUILDING_BLOCK,\n  createMessage,\n} from \"@appsmith/constants/messages\";\nimport { Position } from \"@blueprintjs/core\";\nimport { useSelector } from \"react-redux\";\nimport {\n  activeLoadingTemplateId,\n  isImportingTemplateToAppSelector,\n} from \"selectors/templatesSelectors\";\nimport { templateIdUrl } from \"@appsmith/RouteBuilder\";\nimport { BUILDING_BLOCK_THUMBNAIL_ALT_TEXT } from \"../constants\";\nimport ForkTemplateDialog from \"../ForkTemplate\";\n\nexport interface BuildingBlockProps {\n  buildingBlock: TemplateInterface;\n  onClick?: (id: string) => void;\n  onForkTemplateClick?: (buildingBlock: TemplateInterface) => void;\n  hideForkTemplateButton?: boolean;\n}\n\nconst BuildingBlock = (props: BuildingBlockProps) => {\n  const { description, id, screenshotUrls, title } = props.buildingBlock;\n  const [showForkModal, setShowForkModal] = useState(false);\n  const loadingTemplateId = useSelector(activeLoadingTemplateId);\n  const isImportingTemplateToApp = useSelector(\n    isImportingTemplateToAppSelector,\n  );\n  const onForkButtonTrigger = (e: React.MouseEvent<HTMLElement>) => {\n    if (props.onForkTemplateClick) {\n      e.preventDefault();\n      e.stopPropagation();\n      props.onForkTemplateClick(props.buildingBlock);\n    } else {\n      e.stopPropagation();\n      setShowForkModal(true);\n    }\n  };\n\n  const onClick = () => {\n    if (props.onClick) {\n      props.onClick(id);\n    } else {\n      history.push(templateIdUrl({ id }));\n    }\n  };\n\n  const onForkModalClose = (e?: React.MouseEvent<HTMLElement>) => {\n    e?.stopPropagation();\n    setShowForkModal(false);\n  };\n\n  return (\n    <>\n      <ForkTemplateDialog\n        onClose={onForkModalClose}\n        showForkModal={showForkModal}\n        templateId={id}\n      />\n      <BuildingBlockWrapper onClick={onClick}>\n        <ImageWrapper className=\"image-wrapper\">\n          <StyledImage\n            alt={BUILDING_BLOCK_THUMBNAIL_ALT_TEXT}\n            src={screenshotUrls[0]}\n          />\n        </ImageWrapper>\n        <BuildingBlockContent>\n          <Text className=\"title\" kind=\"heading-m\" renderAs=\"h1\">\n            {title}\n          </Text>\n\n          <Text className=\"description\" kind=\"body-m\">\n            {description}\n          </Text>\n\n          <BuildingBlockContentFooter>\n            {!props.hideForkTemplateButton && (\n              <Tooltip\n                content={createMessage(FORK_THIS_TEMPLATE_BUILDING_BLOCK)}\n                placement={Position.BOTTOM}\n              >\n                <Button\n                  className=\"t--fork-template fork-button\"\n                  data-testid=\"t--fork-building-block\"\n                  isDisabled={!!isImportingTemplateToApp || !!loadingTemplateId}\n                  isIconButton\n                  isLoading={\n                    props.onForkTemplateClick && loadingTemplateId === id\n                  }\n                  onClick={onForkButtonTrigger}\n                  size=\"sm\"\n                  startIcon=\"plus\"\n                />\n              </Tooltip>\n            )}\n          </BuildingBlockContentFooter>\n        </BuildingBlockContent>\n      </BuildingBlockWrapper>\n    </>\n  );\n};\n\nexport default BuildingBlock;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport type { AppState } from \"@appsmith/reducers\";\nimport { getDefaultPlugin } from \"@appsmith/selectors/entitiesSelector\";\nimport styled from \"styled-components\";\nimport { Tag } from \"design-system\";\n\nconst StyledDatasourceChip = styled(Tag)`\n  .image {\n    height: 13px;\n    margin-right: 4px;\n    display: inline-block;\n  }\n\n  .ads-v2-text {\n    display: flex;\n    align-items: center;\n  }\n\n  .plugin-name {\n    flex-shrink: 0;\n  }\n`;\n\ninterface DatasourceChipProps {\n  className?: string;\n  pluginPackageName: string;\n}\n\nfunction DatasourceChip(props: DatasourceChipProps) {\n  const plugin = useSelector((state: AppState) =>\n    getDefaultPlugin(state, props.pluginPackageName),\n  );\n\n  if (!plugin) return null;\n\n  return (\n    <StyledDatasourceChip isClosable={false} size=\"md\">\n      <img className=\"image\" src={plugin.iconLocation} />\n      <span className=\"plugin-name\">{plugin.name}</span>\n    </StyledDatasourceChip>\n  );\n}\n\nexport default DatasourceChip;\n","import type { ReactNode } from \"react\";\nimport React, { useState } from \"react\";\nimport {\n  Button,\n  Modal,\n  ModalBody,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  Select,\n} from \"design-system\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getForkableWorkspaces,\n  isImportingTemplateSelector,\n} from \"selectors/templatesSelectors\";\nimport { importTemplateToWorkspace } from \"actions/templateActions\";\nimport {\n  CANCEL,\n  CHOOSE_WHERE_TO_FORK,\n  createMessage,\n  FORK_TEMPLATE,\n  SELECT_WORKSPACE,\n} from \"@appsmith/constants/messages\";\n\ninterface ForkTemplateProps {\n  children?: ReactNode;\n  showForkModal: boolean;\n  onClose: (e?: React.MouseEvent<HTMLElement>) => void;\n  templateId: string;\n}\n\nfunction ForkTemplate({\n  children,\n  onClose,\n  showForkModal,\n  templateId,\n}: ForkTemplateProps) {\n  const workspaceList = useSelector(getForkableWorkspaces);\n  const [selectedWorkspace, setSelectedWorkspace] = useState(workspaceList[0]);\n  const isImportingTemplate = useSelector(isImportingTemplateSelector);\n  const dispatch = useDispatch();\n\n  const onFork = () => {\n    dispatch(importTemplateToWorkspace(templateId, selectedWorkspace.value));\n  };\n\n  const closeModal = (isOpen: boolean) => {\n    if (!isOpen && !isImportingTemplate) {\n      onClose();\n    }\n  };\n\n  return (\n    <>\n      {children}\n      <Modal onOpenChange={closeModal} open={showForkModal}>\n        <ModalContent style={{ width: \"640px\" }}>\n          <ModalHeader>{createMessage(CHOOSE_WHERE_TO_FORK)}</ModalHeader>\n          <ModalBody style={{ overflow: \"unset\", paddingBottom: \"4px\" }}>\n            <Select\n              dropdownMatchSelectWidth\n              getPopupContainer={(triggerNode) => triggerNode.parentNode}\n              // TODO: (Albin) Fix this\n              // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n              //@ts-ignore\n              onSelect={(\n                dropdownOptionValue: string,\n                dropdownOption: {\n                  label: string;\n                  value: string;\n                },\n              ) => setSelectedWorkspace(dropdownOption)}\n              options={workspaceList}\n              placeholder={createMessage(SELECT_WORKSPACE)}\n              value={selectedWorkspace}\n            />\n          </ModalBody>\n          <ModalFooter>\n            <Button\n              isDisabled={isImportingTemplate}\n              kind=\"secondary\"\n              onClick={onClose}\n              size=\"md\"\n            >\n              {createMessage(CANCEL)}\n            </Button>\n            <Button\n              className=\"t--fork-template-button\"\n              isLoading={isImportingTemplate}\n              onClick={onFork}\n              size=\"md\"\n            >\n              {createMessage(FORK_TEMPLATE)}\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n}\n\nexport default ForkTemplate;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport history from \"utils/history\";\nimport type { Template as TemplateInterface } from \"api/TemplatesApi\";\nimport { Button, Tooltip, Text } from \"design-system\";\nimport ForkTemplateDialog from \"../ForkTemplate\";\nimport DatasourceChip from \"../DatasourceChip\";\nimport {\n  createMessage,\n  FORK_THIS_TEMPLATE,\n} from \"@appsmith/constants/messages\";\nimport { templateIdUrl } from \"@appsmith/RouteBuilder\";\nimport { Position } from \"@blueprintjs/core\";\nimport {\n  activeLoadingTemplateId,\n  isImportingTemplateToAppSelector,\n} from \"selectors/templatesSelectors\";\nimport { useSelector } from \"react-redux\";\n\nconst TemplateWrapper = styled.div`\n  border: 1px solid var(--ads-v2-color-border);\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  margin-bottom: 24px;\n  cursor: pointer;\n  background-color: var(--ads-v2-color-bg);\n  border-radius: var(--ads-v2-border-radius);\n\n  &:hover {\n    border-color: var(--ads-v2-color-border-emphasis);\n  }\n`;\n\nconst ImageWrapper = styled.div`\n  padding: ${(props) => props.theme.spaces[9]}px;\n  overflow: hidden;\n`;\n\nconst StyledImage = styled.img`\n  object-fit: contain;\n  width: 100%;\n  height: 236px;\n`;\n\nconst TemplateContent = styled.div`\n  padding: 0 25px 0 25px;\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n\n  .title {\n    color: var(--ads-v2-color-fg-emphasis-plus);\n  }\n  .categories {\n    // font-weight: normal;\n    color: var(--ads-v2-color-fg-emphasis);\n    margin-top: ${(props) => props.theme.spaces[1]}px;\n  }\n  .description {\n    margin-top: ${(props) => props.theme.spaces[2]}px;\n    color: var(--ads-v2-color-fg);\n  }\n`;\n\nconst TemplateContentFooter = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: ${(props) => props.theme.spaces[7]}px;\n  padding: 0 25px 20px 25px;\n`;\n\nconst TemplateDatasources = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: ${(props) => props.theme.spaces[1]}px;\n`;\n\nexport interface TemplateProps {\n  hideForkTemplateButton: boolean;\n  template: TemplateInterface;\n  size?: string;\n  onClick?: (id: string) => void;\n  onForkTemplateClick?: (template: TemplateInterface) => void;\n}\n\nconst Template = (props: TemplateProps) => {\n  return <TemplateLayout {...props} />;\n};\n\nexport interface TemplateLayoutProps extends TemplateProps {\n  className?: string;\n}\n\nexport function TemplateLayout(props: TemplateLayoutProps) {\n  const { datasources, description, functions, id, screenshotUrls, title } =\n    props.template;\n\n  const [showForkModal, setShowForkModal] = useState(false);\n  const loadingTemplateId = useSelector(activeLoadingTemplateId);\n  const isImportingTemplateToApp = useSelector(\n    isImportingTemplateToAppSelector,\n  );\n  const onClick = () => {\n    if (props.onClick) {\n      props.onClick(id);\n    } else {\n      history.push(templateIdUrl({ id }));\n    }\n  };\n\n  const onForkButtonTrigger = (e: React.MouseEvent<HTMLElement>) => {\n    if (props.onForkTemplateClick) {\n      e.preventDefault();\n      e.stopPropagation();\n      props.onForkTemplateClick(props.template);\n    } else {\n      e.stopPropagation();\n      setShowForkModal(true);\n    }\n  };\n\n  const onForkModalClose = (e?: React.MouseEvent<HTMLElement>) => {\n    e?.stopPropagation();\n    setShowForkModal(false);\n  };\n\n  return (\n    <>\n      <ForkTemplateDialog\n        onClose={onForkModalClose}\n        showForkModal={showForkModal}\n        templateId={id}\n      />\n      <TemplateWrapper\n        className={props.className}\n        data-testid=\"template-card\"\n        onClick={onClick}\n      >\n        <ImageWrapper className=\"image-wrapper\">\n          <StyledImage alt=\"Template Thumbnail\" src={screenshotUrls[0]} />\n        </ImageWrapper>\n        <TemplateContent className=\"template-content\">\n          <Tooltip content={title} placement=\"right\">\n            <Text\n              className=\"title\"\n              data-testid=\"template-content-title\"\n              kind=\"heading-m\"\n              renderAs=\"h1\"\n            >\n              {title}\n            </Text>\n          </Tooltip>\n          <Text className=\"categories\" kind=\"heading-s\" renderAs=\"h4\">\n            {functions.join(\" • \")}\n          </Text>\n          <Text className=\"description\" kind=\"body-m\">\n            {description}\n          </Text>\n        </TemplateContent>\n\n        <TemplateContentFooter>\n          <TemplateDatasources>\n            {datasources.map((pluginPackageName) => {\n              return (\n                <DatasourceChip\n                  key={pluginPackageName}\n                  pluginPackageName={pluginPackageName}\n                />\n              );\n            })}\n          </TemplateDatasources>\n          {!props.hideForkTemplateButton && (\n            <Tooltip\n              content={createMessage(FORK_THIS_TEMPLATE)}\n              placement={Position.BOTTOM}\n            >\n              <Button\n                className=\"t--fork-template fork-button\"\n                data-testid=\"t--fork-template-button\"\n                isDisabled={isImportingTemplateToApp || !!loadingTemplateId}\n                isIconButton\n                isLoading={\n                  props.onForkTemplateClick && loadingTemplateId === id\n                }\n                onClick={onForkButtonTrigger}\n                size=\"sm\"\n                startIcon=\"plus\"\n              />\n            </Tooltip>\n          )}\n        </TemplateContentFooter>\n      </TemplateWrapper>\n    </>\n  );\n}\n\nexport default Template;\n","import styled from \"styled-components\";\nimport { TemplateLayout } from \"./index\";\n\nconst FixedHeightTemplate = styled(TemplateLayout)`\n  && {\n    .title {\n      overflow: hidden;\n      display: -webkit-box;\n      -webkit-line-clamp: 1;\n      -webkit-box-orient: vertical;\n    }\n    .categories {\n      overflow: hidden;\n      display: -webkit-box;\n      -webkit-line-clamp: 1;\n      -webkit-box-orient: vertical;\n    }\n    .description {\n      height: 85px;\n      overflow: hidden;\n      display: -webkit-box;\n      -webkit-line-clamp: 4;\n      -webkit-box-orient: vertical;\n    }\n  }\n\n  .image-wrapper {\n    & > img {\n      object-position: top;\n      height: 180px;\n    }\n  }\n`;\n\nexport default FixedHeightTemplate;\n","import {\n  createMessage,\n  SIMILAR_TEMPLATES,\n  VIEW_ALL_TEMPLATES,\n} from \"@appsmith/constants/messages\";\nimport type { Template as TemplateInterface } from \"api/TemplatesApi\";\nimport { Text, Link } from \"design-system\";\nimport React, { useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport { Section } from \"./TemplateDescription\";\nimport FixedHeightTemplate from \"./FixedHeightTemplate\";\nimport BuildingBlock from \"../BuildingBlock\";\nimport { TEMPLATE_BUILDING_BLOCKS_FILTER_FUNCTION_VALUE } from \"../constants\";\n\nconst SimilarTemplatesWrapper = styled.div`\n  padding-right: 132px;\n  padding-left: 132px;\n`;\n\nconst SimilarTemplatesTitleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst TemplateGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\n  grid-gap: 16px;\n  margin-top: ${(props) => props.theme.spaces[12]}px;\n`;\n\ninterface SimilarTemplatesProp {\n  similarTemplates: TemplateInterface[];\n  onBackPress: (e: React.MouseEvent) => void;\n  onClick: (template: TemplateInterface) => void;\n  onFork?: (template: TemplateInterface) => void;\n  className?: string;\n  isForkingEnabled: boolean;\n}\n\nfunction SimilarTemplates(props: SimilarTemplatesProp) {\n  const handleClick = useCallback(\n    (template: TemplateInterface) => {\n      props.onClick(template);\n    },\n    [props.onClick],\n  );\n\n  if (!props.similarTemplates.length) {\n    return null;\n  }\n\n  return (\n    <SimilarTemplatesWrapper className={props.className}>\n      <Section>\n        <SimilarTemplatesTitleWrapper>\n          <Text kind=\"heading-m\" renderAs=\"h4\">\n            {createMessage(SIMILAR_TEMPLATES)}\n          </Text>\n          <Link endIcon=\"view-all\" onClick={props.onBackPress}>\n            {createMessage(VIEW_ALL_TEMPLATES)}\n          </Link>\n        </SimilarTemplatesTitleWrapper>\n        <TemplateGrid>\n          {props.similarTemplates.map((template) => {\n            if (\n              template.functions.includes(\n                TEMPLATE_BUILDING_BLOCKS_FILTER_FUNCTION_VALUE,\n              )\n            ) {\n              return (\n                <BuildingBlock\n                  buildingBlock={template}\n                  hideForkTemplateButton={props.isForkingEnabled}\n                  key={template.id}\n                  onClick={() => handleClick(template)}\n                  onForkTemplateClick={props.onFork}\n                />\n              );\n            }\n            return (\n              <FixedHeightTemplate\n                hideForkTemplateButton={props.isForkingEnabled}\n                key={template.id}\n                onClick={() => handleClick(template)}\n                onForkTemplateClick={props.onFork}\n                template={template}\n              />\n            );\n          })}\n        </TemplateGrid>\n      </Section>\n    </SimilarTemplatesWrapper>\n  );\n}\n\nexport default SimilarTemplates;\n","import React, { useMemo } from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector } from \"react-redux\";\nimport { Text } from \"design-system\";\nimport { IconWrapper } from \"constants/IconConstants\";\nimport { getWidgetCards } from \"selectors/editorSelectors\";\nimport { getAssetUrl } from \"@appsmith/utils/airgapHelpers\";\n\nconst Wrapper = styled.div`\n  display: inline-flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\ninterface WidgetInfoProps {\n  widgetType: string;\n}\n\nfunction WidgetInfo({ widgetType }: WidgetInfoProps) {\n  const widgetList = useSelector(getWidgetCards);\n  const widgetInfo = useMemo(() => {\n    return widgetList.find((widget) => widget.type === widgetType);\n  }, [widgetType, widgetList.length]);\n\n  return (\n    <Wrapper>\n      <IconWrapper>\n        <img\n          className=\"w-5 h-5\"\n          src={getAssetUrl(widgetInfo?.icon as string)}\n        />\n      </IconWrapper>\n      <Text kind=\"body-m\">{widgetInfo?.displayName}</Text>\n    </Wrapper>\n  );\n}\n\nexport default WidgetInfo;\n","import type { Template } from \"api/TemplatesApi\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport DatasourceChip from \"../DatasourceChip\";\nimport { Text } from \"design-system\";\nimport {\n  createMessage,\n  DATASOURCES,\n  FUNCTION,\n  INDUSTRY,\n  NOTE,\n  NOTE_MESSAGE,\n  OVERVIEW,\n  WIDGET_USED,\n} from \"@appsmith/constants/messages\";\nimport WidgetInfo from \"../WidgetInfo\";\n\nexport const DescriptionWrapper = styled.div`\n  display: flex;\n  gap: ${(props) => props.theme.spaces[17]}px;\n  margin-top: ${(props) => props.theme.spaces[15]}px;\n`;\n\nexport const DescriptionColumn = styled.div`\n  flex: 1;\n`;\n\nexport const Section = styled.div`\n  padding-top: ${(props) => props.theme.spaces[12]}px;\n\n  .section-content {\n    margin-top: ${(props) => props.theme.spaces[3]}px;\n  }\n\n  .template-fork-button {\n    margin-top: ${(props) => props.theme.spaces[7]}px;\n  }\n\n  .datasource-note {\n    margin-top: ${(props) => props.theme.spaces[5]}px;\n  }\n`;\n\nexport const StyledDatasourceChip = styled(DatasourceChip)`\n  padding: ${(props) =>\n    `${props.theme.spaces[4]}px ${props.theme.spaces[10]}px`};\n  .image {\n    height: 25px;\n    width: 25px;\n  }\n`;\n\nexport const TemplatesWidgetList = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: ${(props) => props.theme.spaces[12]}px;\n`;\n\nexport const TemplateDatasources = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: ${(props) => props.theme.spaces[4]}px;\n`;\n\ninterface TemplateDescriptionProps {\n  template: Template;\n}\n\nfunction TemplateDescription(props: TemplateDescriptionProps) {\n  const { template } = props;\n\n  return (\n    <DescriptionWrapper>\n      <DescriptionColumn>\n        <Section>\n          <Text kind=\"heading-m\" renderAs=\"h4\">\n            {createMessage(OVERVIEW)}\n          </Text>\n          <div className=\"section-content\">\n            <Text kind=\"body-m\">{template.description}</Text>\n          </div>\n        </Section>\n        <Section>\n          <Text kind=\"heading-m\" renderAs=\"h4\">\n            {createMessage(FUNCTION)}\n          </Text>\n          <div className=\"section-content\">\n            <Text kind=\"body-m\">{template.functions.join(\" • \")}</Text>\n          </div>\n        </Section>\n        <Section>\n          <Text kind=\"heading-m\" renderAs=\"h4\">\n            {createMessage(INDUSTRY)}\n          </Text>\n          <div className=\"section-content\">\n            <Text kind=\"body-m\">{template.useCases.join(\" • \")}</Text>\n          </div>\n        </Section>\n      </DescriptionColumn>\n      <DescriptionColumn>\n        <Section>\n          <Text kind=\"heading-m\" renderAs=\"h4\">\n            {createMessage(DATASOURCES)}\n          </Text>\n          <div className=\"section-content\">\n            <TemplateDatasources>\n              {template.datasources.map((packageName) => {\n                return (\n                  <StyledDatasourceChip\n                    key={packageName}\n                    pluginPackageName={packageName}\n                  />\n                );\n              })}\n            </TemplateDatasources>\n            <div className=\"datasource-note\">\n              <Text kind=\"body-m\">{createMessage(NOTE)}</Text>\n              <Text kind=\"body-m\">{createMessage(NOTE_MESSAGE)}</Text>\n            </div>\n          </div>\n        </Section>\n        <Section>\n          <Text kind=\"heading-m\" renderAs=\"h4\">\n            {createMessage(WIDGET_USED)}\n          </Text>\n          <div className=\"section-content\">\n            <TemplatesWidgetList>\n              {template.widgets.map((widgetType) => {\n                return <WidgetInfo key={widgetType} widgetType={widgetType} />;\n              })}\n            </TemplatesWidgetList>\n          </div>\n        </Section>\n      </DescriptionColumn>\n    </DescriptionWrapper>\n  );\n}\n\nexport default TemplateDescription;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Text, TextType } from \"design-system-old\";\nimport { Button } from \"design-system\";\nimport RequestTemplateSvg from \"assets/images/request-template.svg\";\nimport {\n  COULDNT_FIND_TEMPLATE,\n  createMessage,\n  COULDNT_FIND_TEMPLATE_DESCRIPTION,\n  REQUEST_TEMPLATE,\n  REQUEST_BUILDING_BLOCK,\n} from \"@appsmith/constants/messages\";\nimport AnalyticsUtil from \"@appsmith/utils/AnalyticsUtil\";\n\nconst Wrapper = styled.div`\n  border: 1px solid var(--ads-v2-color-border);\n  border-radius: var(--ads-v2-border-radius);\n  display: flex;\n  flex-direction: column;\n  padding: ${(props) => props.theme.spaces[11]}px;\n  background-color: var(--ads-v2-color-bg-subtle);\n  margin-bottom: ${(props) => props.theme.spaces[12]}px;\n  cursor: pointer;\n\n  &:hover {\n    border-color: var(--ads-v2-color-border-emphasis);\n  }\n\n  .title {\n    color: var(--ads-v2-color-fg-emphasis-plus);\n    margin-top: ${(props) => props.theme.spaces[9]}px;\n  }\n\n  .description {\n    color: var(--ads-v2-color-fg);\n    margin-top: ${(props) => props.theme.spaces[2]}px;\n  }\n\n  .button {\n    margin-top: ${(props) => props.theme.spaces[8]}px;\n    max-width: 229px;\n  }\n`;\n\nconst StyledImage = styled.img`\n  height: 168px;\n  object-fit: cover;\n  border-radius: var(--ads-v2-border-radius);\n`;\n\nconst REQUEST_TEMPLATE_URL =\n  \"https://app.appsmith.com/app/request-templates/request-list-6241c12fc99df2369931a714\";\n\ninterface RequestTemplateProps {\n  isBuildingBlock?: boolean;\n}\n\nfunction RequestTemplate(props: RequestTemplateProps) {\n  const REQUEST_TEXT = props.isBuildingBlock\n    ? createMessage(REQUEST_BUILDING_BLOCK)\n    : createMessage(REQUEST_TEMPLATE);\n\n  const onClick = () => {\n    AnalyticsUtil.logEvent(\"REQUEST_NEW_TEMPLATE\");\n    window.open(REQUEST_TEMPLATE_URL);\n  };\n\n  return (\n    <Wrapper>\n      <StyledImage src={RequestTemplateSvg} />\n      <Text className={\"title\"} type={TextType.H1}>\n        {createMessage(COULDNT_FIND_TEMPLATE)}\n      </Text>\n      <Text className={\"description\"} type={TextType.P1}>\n        {createMessage(COULDNT_FIND_TEMPLATE_DESCRIPTION)}\n      </Text>\n      <Button className=\"button\" onClick={onClick} size=\"md\">\n        {REQUEST_TEXT}\n      </Button>\n    </Wrapper>\n  );\n}\n\nexport default RequestTemplate;\n","import styled from \"styled-components\";\nimport { Text } from \"design-system\";\n\nexport const Wrapper = styled.div<{ isModalLayout?: boolean }>`\n  ${(props) =>\n    !props.isModalLayout &&\n    `\n  padding: 48px;\n  border: 1px solid var(--ads-v2-color-border);\n  border-radius: var(--ads-v2-border-radius);\n  background-color: var(--ads-v2-color-bg);\n  `}\n\n  margin-right: 24px;\n  .grid {\n    display: flex;\n  }\n\n  .grid_column {\n    padding: 11px;\n  }\n`;\n\nexport const SubheadingText = styled(Text)`\n  font-weight: 600;\n  margin-bottom: 4px;\n`;\n\nexport const HorizontalLine = styled.div`\n  width: 100%;\n  height: 1px;\n  background-color: var(--ads-v2-color-bg-emphasis);\n  margin: 48px 0;\n`;\n\nexport const TemplateGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\n  grid-gap: 16px;\n  margin-top: ${(props) => props.theme.spaces[9]}px;\n`;\n","import {\n  ADD_PAGE_FROM_TEMPLATE_MODAL,\n  createMessage,\n} from \"@appsmith/constants/messages\";\nimport type { Template as TemplateInterface } from \"api/TemplatesApi\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport {\n  getSearchedTemplateList,\n  getTemplateFilterSelector,\n  isFetchingTemplatesSelector,\n} from \"selectors/templatesSelectors\";\nimport BuildingBlock from \"../BuildingBlock\";\nimport RequestTemplate from \"../Template/RequestTemplate\";\nimport LoadingScreen from \"../TemplatesModal/LoadingScreen\";\nimport {\n  TEMPLATE_ALL_FILTER_FUNCTION_VALUE,\n  TEMPLATE_BUILDING_BLOCKS_FILTER_FUNCTION_VALUE,\n} from \"../constants\";\nimport { getIsFetchingApplications } from \"@appsmith/selectors/selectedWorkspaceSelectors\";\nimport {\n  HorizontalLine,\n  SubheadingText,\n  TemplateGrid,\n  Wrapper,\n} from \"./StyledComponents\";\nimport FixedHeightTemplate from \"../Template/FixedHeightTemplate\";\n\ninterface TemplateListProps {\n  isForkingEnabled: boolean;\n  isModalLayout?: boolean;\n  templates: TemplateInterface[];\n  onTemplateClick?: (id: string) => void;\n  onForkTemplateClick?: (template: TemplateInterface) => void;\n}\n\nfunction TemplateList(props: TemplateListProps) {\n  const selectedFilters = useSelector(getTemplateFilterSelector);\n\n  const onlyBuildingBlocksFilterSet =\n    selectedFilters?.functions?.length === 1 &&\n    selectedFilters.functions[0] ===\n      TEMPLATE_BUILDING_BLOCKS_FILTER_FUNCTION_VALUE;\n\n  const noBuildingBlockFilterSet = !selectedFilters?.functions?.includes(\n    TEMPLATE_BUILDING_BLOCKS_FILTER_FUNCTION_VALUE,\n  );\n\n  const allFiltersSet =\n    selectedFilters?.functions?.length === 1 &&\n    selectedFilters.functions[0] === TEMPLATE_ALL_FILTER_FUNCTION_VALUE;\n\n  const showBuildingBlocksSection = !noBuildingBlockFilterSet || allFiltersSet;\n  const showHorizontalLine =\n    !onlyBuildingBlocksFilterSet && showBuildingBlocksSection;\n\n  const buildingBlocks = props.templates.filter(\n    (template) =>\n      template.functions[0] === TEMPLATE_BUILDING_BLOCKS_FILTER_FUNCTION_VALUE,\n  );\n  const useCaseTemplates = props.templates.filter(\n    (template) =>\n      template.functions[0] !== TEMPLATE_BUILDING_BLOCKS_FILTER_FUNCTION_VALUE,\n  );\n\n  return (\n    <Wrapper isModalLayout={props.isModalLayout}>\n      {!onlyBuildingBlocksFilterSet && (\n        <>\n          <SubheadingText kind=\"heading-m\">Use case templates</SubheadingText>\n\n          <TemplateGrid>\n            {useCaseTemplates.map((template) => (\n              <FixedHeightTemplate\n                hideForkTemplateButton={!props.isForkingEnabled}\n                key={template.id}\n                onClick={props.onTemplateClick}\n                onForkTemplateClick={props.onForkTemplateClick}\n                template={template}\n              />\n            ))}\n            <RequestTemplate />\n          </TemplateGrid>\n        </>\n      )}\n      {showHorizontalLine && <HorizontalLine />}\n      {showBuildingBlocksSection && (\n        <>\n          <SubheadingText kind=\"heading-m\">\n            {createMessage(ADD_PAGE_FROM_TEMPLATE_MODAL.buildingBlocksTitle)}\n          </SubheadingText>\n\n          <TemplateGrid>\n            {buildingBlocks.map((template) => (\n              <BuildingBlock\n                buildingBlock={template}\n                hideForkTemplateButton={!props.isForkingEnabled}\n                key={template.id}\n                onClick={props.onTemplateClick}\n                onForkTemplateClick={props.onForkTemplateClick}\n              />\n            ))}\n            {onlyBuildingBlocksFilterSet && <RequestTemplate isBuildingBlock />}\n          </TemplateGrid>\n        </>\n      )}\n    </Wrapper>\n  );\n}\n\ninterface TemplateContentProps {\n  isModalLayout?: boolean;\n  onTemplateClick?: (id: string) => void;\n  onForkTemplateClick?: (template: TemplateInterface) => void;\n  stickySearchBar?: boolean;\n  isForkingEnabled: boolean;\n  filterWithAllowPageImport?: boolean;\n}\n\nexport function TemplateContent(props: TemplateContentProps) {\n  const isFetchingApplications = useSelector(getIsFetchingApplications);\n  const isFetchingTemplates = useSelector(isFetchingTemplatesSelector);\n  const isLoading = isFetchingApplications || isFetchingTemplates;\n\n  const filterWithAllowPageImport = props.filterWithAllowPageImport || false;\n  const templates = useSelector(getSearchedTemplateList).filter((template) =>\n    filterWithAllowPageImport ? !!template.allowPageImport : true,\n  );\n\n  if (isLoading) {\n    return <LoadingScreen text=\"Loading templates\" />;\n  }\n\n  return (\n    <TemplateList\n      isForkingEnabled={props.isForkingEnabled}\n      isModalLayout={props.isModalLayout}\n      onForkTemplateClick={props.onForkTemplateClick}\n      onTemplateClick={props.onTemplateClick}\n      templates={templates}\n    />\n  );\n}\n","import styled from \"styled-components\";\nimport { Text } from \"design-system\";\n\nexport const FilterWrapper = styled.div`\n  overflow: auto;\n  height: calc(100vh - ${(props) => props.theme.homePage.header + 256}px);\n\n  .more {\n    padding-left: ${(props) => props.theme.spaces[11]}px;\n    cursor: pointer;\n  }\n\n  .hide {\n    visibility: hidden;\n  }\n`;\n\nexport const FilterItemWrapper = styled.div<{ selected: boolean }>`\n  padding: 8px;\n  background-color: ${(props) =>\n    props.selected ? \"var(--ads-v2-color-bg)\" : \"inherit\"};\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 4px;\n  border-radius: var(--ads-v2-border-radius);\n  cursor: pointer;\n`;\n\nexport const FilterItemText = styled(Text)`\n  font-size: 14px;\n  font-weight: 400;\n`;\n\nexport const StyledFilterCategory = styled(Text)`\n  margin-top: 12px;\n  padding-left: 8px;\n  text-transform: capitalize;\n  font-size: 14px;\n  font-weight: 500;\n\n  &.title {\n    color: var(--ads-v2-color-fg-emphasis);\n  }\n`;\n\nexport const ListWrapper = styled.div`\n  margin-top: ${(props) => props.theme.spaces[2]}px;\n`;\n\nexport const FilterCategoryWrapper = styled.div`\n  padding-bottom: ${(props) => props.theme.spaces[13] - 11}px;\n`;\n\nexport const SearchWrapper = styled.div<{ sticky?: boolean }>`\n  margin-bottom: ${(props) => props.theme.spaces[11]}px;\n  .templates-search {\n    max-width: 250px;\n  }\n  ${(props) =>\n    props.sticky &&\n    `position: sticky;\n  top: 0;\n  position: -webkit-sticky;\n  z-index: 1;\n  background-color: var(--ads-v2-color-bg);\n  padding: var(--ads-v2-spaces-7);\n  margin-left: 0; \n  `}\n`;\n","import { SEARCH_TEMPLATES, createMessage } from \"@appsmith/constants/messages\";\nimport {\n  filterTemplates,\n  setTemplateSearchQuery,\n} from \"actions/templateActions\";\nimport { Icon, SearchInput } from \"design-system\";\nimport { debounce } from \"lodash\";\nimport React, { useMemo, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getFilterListSelector,\n  getTemplateFilterSelector,\n  getTemplateSearchQuery,\n  isFetchingTemplatesSelector,\n} from \"selectors/templatesSelectors\";\nimport AnalyticsUtil from \"@appsmith/utils/AnalyticsUtil\";\nimport {\n  FilterCategoryWrapper,\n  FilterItemText,\n  FilterItemWrapper,\n  FilterWrapper,\n  ListWrapper,\n  SearchWrapper,\n  StyledFilterCategory,\n} from \"./StyledComponents\";\nimport { getIsFetchingApplications } from \"@appsmith/selectors/selectedWorkspaceSelectors\";\n\nexport interface Filter {\n  label: string;\n  value?: string;\n}\n\ninterface FilterItemProps {\n  item: Filter;\n  selectedFilter: boolean;\n  onSelectFilter: (item: string, action: \"add\" | \"remove\") => void;\n}\n\ninterface FilterCategoryProps {\n  label: string;\n  filterList: Filter[];\n  selectedFilters: string[];\n}\n\ninterface FilterWrapperProps {\n  initialFilters?: Record<string, string[]>;\n  stickySearchBar?: boolean;\n}\n\nconst ALL_TEMPLATES_UPDATED_LABEL = \"All Templates\";\nconst ALL_TEMPLATES_FILTER_VALUE = \"All\";\n\nconst FilterItem = ({\n  item,\n  onSelectFilter,\n  selectedFilter,\n}: FilterItemProps) => {\n  const onClick = () => {\n    const action = selectedFilter ? \"remove\" : \"add\";\n    const filterValue = item?.value ?? item.label;\n    onSelectFilter(filterValue, action);\n    if (action === \"add\") {\n      AnalyticsUtil.logEvent(\"TEMPLATE_FILTER_SELECTED\", {\n        filter: filterValue,\n      });\n    }\n  };\n\n  return (\n    <FilterItemWrapper onClick={onClick} selected={selectedFilter}>\n      <FilterItemText data-testid=\"t--templates-filter-item\" kind=\"body-m\">\n        {item.label}\n      </FilterItemText>\n      {selectedFilter && (\n        <Icon\n          color=\"var(--ads-v2-color-bg-brand-secondary-emphasis-plus)\"\n          data-testid=\"t--templates-filter-item-selected-icon\"\n          name=\"check-line\"\n          size=\"md\"\n        />\n      )}\n    </FilterItemWrapper>\n  );\n};\n\nfunction modifyAndSortFilterList(originalFilterList: Filter[]) {\n  // Define the order of filter categories\n  const filterOrder = [\n    \"All Templates\",\n    \"Building Blocks\",\n    \"Customer Support\",\n    \"Operations\",\n    \"Human Resources (HR)\",\n    \"Finance\",\n    \"Sales\",\n    \"Marketing\",\n    \"Other\",\n  ];\n\n  // Change the label from \"All\" to \"All Templates\"\n  const modifiedFilterList = originalFilterList.map((filter) => {\n    if (filter.label === ALL_TEMPLATES_FILTER_VALUE) {\n      return { ...filter, label: ALL_TEMPLATES_UPDATED_LABEL };\n    }\n    return filter;\n  });\n\n  // Sort the filterList based on the predefined order\n  modifiedFilterList.sort((a, b) => {\n    const indexA = filterOrder.indexOf(a.label);\n    const indexB = filterOrder.indexOf(b.label);\n\n    // If both labels are in the predefined order, use their order\n    if (indexA !== -1 && indexB !== -1) {\n      return indexA - indexB;\n    }\n\n    // If only one label is in the predefined order, prioritize it\n    if (indexA !== -1) return -1;\n    if (indexB !== -1) return 1;\n\n    // If neither label is in the predefined order, use the default localeCompare\n    return a.label.localeCompare(b.label);\n  });\n\n  return modifiedFilterList;\n}\n\nconst FilterCategory = ({\n  filterList,\n  label,\n  selectedFilters,\n}: FilterCategoryProps) => {\n  const filterLabelsToDisplay: Record<string, string> = useMemo(\n    () => ({\n      functions: \"categories\",\n    }),\n    [],\n  );\n  const dispatch = useDispatch();\n  const onSelectFilter = (item: string, type: \"add\" | \"remove\") => {\n    // Check if \"All\" or \"All Templates\" is selected\n    const allTemplatesFilterSelected =\n      item === ALL_TEMPLATES_FILTER_VALUE ||\n      item === ALL_TEMPLATES_UPDATED_LABEL;\n\n    if (type === \"add\") {\n      // If \"All\" or \"All Templates\" is selected, set filterList to [\"All\"] only\n      const filterList = allTemplatesFilterSelected\n        ? [ALL_TEMPLATES_FILTER_VALUE]\n        : [\n            ...selectedFilters.filter(\n              (selectedItem) => selectedItem !== ALL_TEMPLATES_FILTER_VALUE, // Remove \"All\" if it exists\n            ),\n            item,\n          ];\n      dispatch(filterTemplates(label, filterList));\n    } else {\n      // If \"All\" or \"All Templates\" is selected for removal, do nothing\n      if (allTemplatesFilterSelected) return;\n\n      const filterList =\n        selectedFilters.length === 1\n          ? [ALL_TEMPLATES_FILTER_VALUE] // If this is the last filter, set filterList to default [\"All\"]\n          : selectedFilters.filter((selectedItem) => selectedItem !== item);\n\n      dispatch(filterTemplates(label, filterList));\n    }\n  };\n\n  const isSelected = (filter: Filter) => {\n    return selectedFilters.includes(filter?.value ?? filter.label);\n  };\n\n  return (\n    <FilterCategoryWrapper>\n      <StyledFilterCategory kind=\"body-m\" renderAs=\"h4\">\n        {`${filterLabelsToDisplay[label] ?? label} `}\n        {!!selectedFilters.length && `(${selectedFilters.length})`}\n      </StyledFilterCategory>\n      <ListWrapper>\n        {modifyAndSortFilterList(filterList).map((filter) => {\n          return (\n            <FilterItem\n              item={filter}\n              key={filter.label}\n              onSelectFilter={onSelectFilter}\n              selectedFilter={isSelected(filter)}\n            />\n          );\n        })}\n      </ListWrapper>\n    </FilterCategoryWrapper>\n  );\n};\n\nconst INPUT_DEBOUNCE_TIMER = 500;\nconst TemplateFilters = (props: FilterWrapperProps) => {\n  const dispatch = useDispatch();\n  const filters = useSelector(getFilterListSelector);\n  const selectedFilters = useSelector(getTemplateFilterSelector);\n  const templateSearchQuery = useSelector(getTemplateSearchQuery);\n  const isFetchingApplications = useSelector(getIsFetchingApplications);\n  const isFetchingTemplates = useSelector(isFetchingTemplatesSelector);\n\n  const isLoading = isFetchingApplications || isFetchingTemplates;\n\n  const onChange = debounce((query: string) => {\n    dispatch(setTemplateSearchQuery(query));\n    AnalyticsUtil.logEvent(\"TEMPLATES_SEARCH_INPUT_EVENT\", { query });\n  }, INPUT_DEBOUNCE_TIMER);\n\n  // Set default filter to \"All\" on mount\n  useEffect(() => {\n    if (props.initialFilters) {\n      Object.keys(props.initialFilters).forEach((filter) => {\n        dispatch(filterTemplates(filter, props.initialFilters![filter]));\n      });\n    } else {\n      dispatch(filterTemplates(\"functions\", [\"All\"]));\n    }\n  }, [props.initialFilters]);\n\n  return (\n    <FilterWrapper className=\"filter-wrapper\">\n      <SearchWrapper sticky={props.stickySearchBar}>\n        <div className=\"templates-search\">\n          <SearchInput\n            aria-label={createMessage(SEARCH_TEMPLATES)}\n            data-testid={\"t--application-search-input\"}\n            isDisabled={false}\n            onChange={onChange}\n            placeholder={createMessage(SEARCH_TEMPLATES)}\n            value={templateSearchQuery}\n          />\n        </div>\n      </SearchWrapper>\n\n      {!isLoading &&\n        Object.keys(filters).map((filter) => {\n          return (\n            <FilterCategory\n              filterList={filters[filter]}\n              key={filter}\n              label={filter}\n              selectedFilters={selectedFilters[filter] ?? []}\n            />\n          );\n        })}\n    </FilterWrapper>\n  );\n};\n\nexport default TemplateFilters;\n","import { templateIdUrl } from \"@appsmith/RouteBuilder\";\nimport {\n  FORK_THIS_TEMPLATE,\n  FORK_THIS_TEMPLATE_BUILDING_BLOCK,\n  GO_BACK,\n  createMessage,\n} from \"@appsmith/constants/messages\";\nimport { Button, Link, Text } from \"design-system\";\nimport { useQuery } from \"pages/Editor/utils\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport {\n  getActiveTemplateSelector,\n  getForkableWorkspaces,\n  isImportingTemplateSelector,\n  isImportingTemplateToAppSelector,\n} from \"selectors/templatesSelectors\";\nimport styled from \"styled-components\";\nimport history from \"utils/history\";\nimport ForkTemplate from \"./ForkTemplate\";\nimport { TEMPLATE_BUILDING_BLOCKS_FILTER_FUNCTION_VALUE } from \"./constants\";\n\nconst HeaderWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst Title = styled(Text)`\n  display: inline-block;\n  color: var(--ads-v2-color-fg-emphasis-plus);\n`;\n\ninterface Props {\n  handleBackPress?: () => void;\n  templateId: string;\n  onClickUseTemplate?: (id: string) => void;\n  showBack: boolean;\n}\nconst SHOW_FORK_MODAL_PARAM = \"showForkTemplateModal\";\n\nfunction TemplateViewHeader({\n  handleBackPress,\n  onClickUseTemplate,\n  showBack,\n  templateId,\n}: Props) {\n  const currentTemplate = useSelector(getActiveTemplateSelector);\n  const query = useQuery();\n  const workspaceList = useSelector(getForkableWorkspaces);\n  const isImportingTemplateToApp = useSelector(\n    isImportingTemplateToAppSelector,\n  );\n  const isImportingTemplate = useSelector(isImportingTemplateSelector);\n  const goBack = () => {\n    if (handleBackPress) {\n      handleBackPress();\n    } else {\n      history.goBack();\n    }\n  };\n  const onForkModalClose = () => {\n    history.replace(`${templateIdUrl({ id: templateId })}`);\n  };\n  const onForkButtonTrigger = () => {\n    if (onClickUseTemplate) {\n      onClickUseTemplate(templateId);\n    } else {\n      history.replace(\n        `${templateIdUrl({ id: templateId })}?${SHOW_FORK_MODAL_PARAM}=true`,\n      );\n    }\n  };\n\n  const FORK_BUTTON_TEXT = currentTemplate?.functions.includes(\n    TEMPLATE_BUILDING_BLOCKS_FILTER_FUNCTION_VALUE,\n  )\n    ? FORK_THIS_TEMPLATE_BUILDING_BLOCK\n    : FORK_THIS_TEMPLATE;\n\n  return (\n    <HeaderWrapper>\n      {showBack && (\n        <Link\n          data-testid=\"t--template-view-goback\"\n          onClick={goBack}\n          startIcon=\"arrow-left-line\"\n        >\n          {createMessage(GO_BACK)}\n        </Link>\n      )}\n      <Title kind=\"heading-l\" renderAs=\"h1\">\n        {currentTemplate?.title}\n      </Title>\n      <section>\n        {!!workspaceList.length && (\n          <ForkTemplate\n            onClose={onForkModalClose}\n            showForkModal={!!query.get(SHOW_FORK_MODAL_PARAM)}\n            templateId={templateId}\n          >\n            <Button\n              className=\"template-fork-button\"\n              data-testid=\"template-fork-button\"\n              isLoading={\n                onClickUseTemplate &&\n                (isImportingTemplateToApp || isImportingTemplate)\n              }\n              onClick={onForkButtonTrigger}\n              size=\"md\"\n              startIcon=\"fork-2\"\n            >\n              {createMessage(FORK_BUTTON_TEXT)}\n            </Button>\n          </ForkTemplate>\n        )}\n      </section>\n    </HeaderWrapper>\n  );\n}\n\nexport default TemplateViewHeader;\n","import React, { useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { Classes } from \"@blueprintjs/core\";\nimport { useParams } from \"react-router\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport EntityNotFoundPane from \"pages/Editor/EntityNotFoundPane\";\nimport type { Template as TemplateInterface } from \"api/TemplatesApi\";\nimport {\n  getActiveTemplateSelector,\n  getForkableWorkspaces,\n  isFetchingTemplateSelector,\n} from \"selectors/templatesSelectors\";\nimport {\n  getSimilarTemplatesInit,\n  getTemplateInformation,\n} from \"actions/templateActions\";\nimport type { AppState } from \"@appsmith/reducers\";\nimport history from \"utils/history\";\nimport { TEMPLATES_PATH } from \"constants/routes\";\nimport { Colors } from \"constants/Colors\";\nimport AnalyticsUtil from \"@appsmith/utils/AnalyticsUtil\";\nimport ReconnectDatasourceModal from \"pages/Editor/gitSync/ReconnectDatasourceModal\";\nimport TemplateDescription from \"./Template/TemplateDescription\";\nimport SimilarTemplates from \"./Template/SimilarTemplates\";\nimport { templateIdUrl } from \"@appsmith/RouteBuilder\";\nimport TemplateViewHeader from \"./TemplateViewHeader\";\nimport { registerEditorWidgets } from \"utils/editor/EditorUtils\";\n\nconst Wrapper = styled.div`\n  overflow: auto;\n  position: relative;\n  width: 100%;\n`;\n\nconst TemplateViewWrapper = styled.div<{ isModalLayout?: boolean }>`\n  ${(props) =>\n    props.isModalLayout\n      ? `padding-right: 12px; padding-left: 12px;`\n      : `padding-right: 132px; padding-left: 132px;`}\n  padding-top: var(--ads-v2-spaces-7);\n  padding-bottom: 80px;\n  background-color: var(--ads-v2-color-bg);\n`;\n\nexport const IframeWrapper = styled.div`\n  border-radius: 16px;\n  margin-top: ${(props) => props.theme.spaces[12]}px;\n\n  iframe {\n    border-radius: 0px 0px 16px 16px;\n    box-shadow:\n      0px 20px 24px -4px rgba(16, 24, 40, 0.1),\n      0px 8px 8px -4px rgba(16, 24, 40, 0.04);\n    width: 100%;\n    height: 734px;\n  }\n`;\n\nexport const IframeTopBar = styled.div`\n  width: 100%;\n  background-color: var(--ads-v2-color-bg-muted);\n  border-radius: 8px 8px 0px 0px;\n  display: flex;\n  gap: ${(props) => props.theme.spaces[3]}px;\n  height: 41px;\n  align-items: center;\n  padding-left: ${(props) => props.theme.spaces[5]}px;\n\n  .round {\n    height: 12px;\n    width: 12px;\n    border-radius: var(--ads-v2-border-radius-circle);\n  }\n\n  .red {\n    background-color: ${Colors.PERSIMMON};\n  }\n  .yellow {\n    background-color: ${Colors.SUNGLOW_2};\n  }\n  .green {\n    background-color: ${Colors.MOUNTAIN_MEADOW};\n  }\n`;\n\nconst PageWrapper = styled.div`\n  display: flex;\n  margin-top: ${(props) => props.theme.homePage.header}px;\n  height: calc(100vh - ${(props) => props.theme.homePage.header}px);\n`;\n\nconst LoadingWrapper = styled.div`\n  height: 100vh;\n  width: 100%;\n  .title-placeholder {\n    margin-top: ${(props) => props.theme.spaces[11]}px;\n    height: 28px;\n    width: 100%;\n  }\n  .iframe-placeholder {\n    margin-top: ${(props) => props.theme.spaces[12]}px;\n    height: 500px;\n    width: 100%;\n  }\n`;\n\nfunction TemplateViewLoader() {\n  return (\n    <LoadingWrapper>\n      <TemplateViewWrapper>\n        <div className={`title-placeholder ${Classes.SKELETON}`} />\n        <div className={`iframe-placeholder ${Classes.SKELETON}`} />\n      </TemplateViewWrapper>\n    </LoadingWrapper>\n  );\n}\n\nfunction TemplateNotFound() {\n  return <EntityNotFoundPane />;\n}\n\ninterface TemplateViewProps {\n  isModalLayout?: boolean;\n  onClickUseTemplate?: (id: string) => void;\n  showBack?: boolean;\n  showSimilarTemplate?: boolean;\n  templateId: string;\n  handleBackPress?: () => void;\n  handleSimilarTemplateClick?: (templateId: TemplateInterface) => void;\n  similarTemplatesClassName?: string;\n}\n\nexport function TemplateView({\n  handleBackPress,\n  handleSimilarTemplateClick,\n  isModalLayout = false,\n  onClickUseTemplate,\n  showBack = true,\n  showSimilarTemplate = true,\n  similarTemplatesClassName = \"\",\n  templateId,\n}: TemplateViewProps) {\n  const dispatch = useDispatch();\n  const similarTemplates = useSelector(\n    (state: AppState) => state.ui.templates.similarTemplates,\n  );\n  const isFetchingTemplate = useSelector(isFetchingTemplateSelector);\n  const workspaceList = useSelector(getForkableWorkspaces);\n  const currentTemplate = useSelector(getActiveTemplateSelector);\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const goToTemplateListView = () => {\n    handleBackPress ? handleBackPress() : history.push(TEMPLATES_PATH);\n  };\n\n  useEffect(() => {\n    registerEditorWidgets();\n  }, []);\n  useEffect(() => {\n    dispatch(getTemplateInformation(templateId));\n    dispatch(getSimilarTemplatesInit(templateId));\n    if (containerRef.current) {\n      containerRef.current.scrollTo({ top: 0 });\n    }\n  }, [templateId]);\n\n  const onSimilarTemplateClick = (template: TemplateInterface) => {\n    AnalyticsUtil.logEvent(\"SIMILAR_TEMPLATE_CLICK\", {\n      from: {\n        id: currentTemplate?.id,\n        name: currentTemplate?.title,\n      },\n      to: {\n        id: template.id,\n        name: template.title,\n      },\n    });\n    handleSimilarTemplateClick\n      ? handleSimilarTemplateClick(template)\n      : history.push(templateIdUrl({ id: template.id }));\n  };\n\n  return isFetchingTemplate ? (\n    <TemplateViewLoader />\n  ) : !currentTemplate ? (\n    <TemplateNotFound />\n  ) : (\n    <Wrapper ref={containerRef}>\n      <ReconnectDatasourceModal />\n      <TemplateViewWrapper isModalLayout={isModalLayout}>\n        <TemplateViewHeader\n          handleBackPress={handleBackPress}\n          onClickUseTemplate={onClickUseTemplate}\n          showBack={showBack}\n          templateId={templateId}\n        />\n        <IframeWrapper>\n          <IframeTopBar>\n            <div className=\"round red\" />\n            <div className=\"round yellow\" />\n            <div className=\"round green\" />\n          </IframeTopBar>\n          <iframe src={currentTemplate.appUrl} width={\"100%\"} />\n        </IframeWrapper>\n        <TemplateDescription template={currentTemplate} />\n      </TemplateViewWrapper>\n      {showSimilarTemplate && (\n        <SimilarTemplates\n          className={similarTemplatesClassName}\n          isForkingEnabled={!!workspaceList.length}\n          onBackPress={goToTemplateListView}\n          onClick={onSimilarTemplateClick}\n          similarTemplates={similarTemplates}\n        />\n      )}\n    </Wrapper>\n  );\n}\n\nfunction TemplateViewContainer() {\n  const params = useParams<{ templateId: string }>();\n  return (\n    <PageWrapper>\n      <TemplateView templateId={params.templateId} />\n    </PageWrapper>\n  );\n}\n\nexport default TemplateViewContainer;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Spinner, Text } from \"design-system\";\n\nconst Wrapper = styled.div`\n  height: 85vh;\n  justify-content: center;\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  gap: ${(props) => props.theme.spaces[9]}px;\n`;\n\ninterface LoadingScreenProps {\n  text: string;\n}\n\nfunction LoadingScreen(props: LoadingScreenProps) {\n  return (\n    <Wrapper>\n      <Spinner size=\"lg\" />\n      <Text kind=\"heading-m\">{props.text}</Text>\n    </Wrapper>\n  );\n}\n\nexport default LoadingScreen;\n"],"names":["setCurrentEditingEnvironmentID","currentEditingId","type","payload","fetchingEnvironmentConfigs","_ref","editorId","_ref$fetchDatasourceM","fetchDatasourceMeta","workspaceId","getCustomBackgroundColor","theme","prevButtonStyle","buttonVariant","backgroundColor","ButtonVariantTypes","colors","button","ButtonStyleTypes","toLowerCase","primary","bgColor","StyledButton","styled","props","_jsx","Button","_objectSpread","_omit","_templateObject","_taggedTemplateLiteral","fontWeights","buttonColor","buttonStyle","concat","warning","danger","info","secondary","hoverColor","tertiary","tinycolor","lighten","toString","darken","getCustomHoverColor","disabled","textColor","borderColor","getCustomBorderColor","isDark","custom","solid","light","dark","getCustomTextColor","_ref2","borderRadius","ButtonBorderRadiusTypes","_ref3","boxShadow","boxShadowColor","ButtonBoxShadowTypes","default","variant1","variant2","variant3","variant4","variant5","BaseButton","className","icon","iconAlign","iconName","loading","onClick","rightIcon","text","Alignment","alignText","fill","defaultProps","minimal","Container","FilterComponentContainer","_templateObject2","isSelected","FilterComponentLabel","Text","_templateObject3","Link","_templateObject4","isInsideReconnectModal","viewMode","_useState","useState","_useState2","_slicedToArray","showFilterPane","setShowFilterPane","showRampSelector","showProductRamps","RAMP_NAME","canShowRamp","useSelector","rampLinkSelector","getRampLink","section","RampSection","feature","RampFeature","rampLink","useEffect","isRenderAllowed","environmentList","renderOption","env","isDisabled","disabledState","_jsxs","selected","children","name","kind","capitalizeFirstLetter","id","Tag","isClosable","size","style","marginLeft","createMessage","BUSINESS_TAG","Tooltip","content","DisabledTooltipContent","placement","Wrapper","StyledText","StyledIcon","Icon","TooltipLink","color","SWITCH_ENV_DISABLED_TOOLTIP_TEXT","target","to","BUSINESS_EDITION_TEXT","_objectDestructuringEmpty","disableSwitchEnvironment","setDisableSwitchEnvironment","matchDatasourcePath","window","location","pathname","matchSAASGsheetsPath","isDatasourceViewMode","isDatasourceInViewMode","renderEnvOption","Select","dropdownClassName","getPopupContainer","triggerNode","parentNode","listHeight","value","index","Option","label","datasource","isLoading","isNewQuerySecondaryButton","pluginType","setIsSelected","_useState3","_useState4","isPageSelectionOpen","setIsPageSelectionOpen","dispatch","useDispatch","currentPageId","getCurrentPageId","pages","getPageList","currentEnvironment","getCurrentEnvironmentId","pageMenuItems","find","p","pageId","_toConsumableArray","filter","queryDefaultTableName","getSelectedTableName","createQueryAction","useCallback","_datasource$datasourc","_datasource$datasourc2","PluginType","datasourceStorages","datasourceConfiguration","url","apiPluginHasUrl","createNewQueryAction","eventFrom","toast","ERROR_ADD_API_INVALID_URL","handleOnInteraction","open","length","Menu","onOpenChange","MenuTrigger","startIcon","NEW_QUERY_BUTTON_TEXT","NEW_AI_BUTTON_TEXT","NEW_API_BUTTON_TEXT","getCreateButtonText","MenuContent","align","height","side","map","page","i","MenuItem","onSelect","isDefault","title","pageName","MenuSeparator","useHeaderActions","editorType","isPluginAuthorized","_ref$showReconnectBut","showReconnectButton","isFeatureEnabled","useFeatureFlag","FEATURE_FLAG","userAppPermissions","state","_getCurrentApplicatio","_getCurrentApplicatio2","getCurrentApplication","userPermissions","pagePermissions","getPagePermissions","showGenerateButton","useShowPageGenerationOnHeader","plugin","getPlugin","pluginId","isPluginAllowedToPreviewData","isEnabledForPreviewData","EditorNames","_datasource$userPermi","canCreateDatasourceActions","hasCreateDSActionPermissionInApp","isEnabled","dsPermissions","canCreatePages","getHasCreatePagePermission","canGeneratePage","newActionButton","NewActionButton","generatePageButton","e","stopPropagation","preventDefault","AnalyticsUtil","history","generateTemplateFormURL","params","datasourceId","new_page","GENERATE_NEW_PAGE_BUTTON_TEXT","useParentEntityInfo","getCurrentApplicationId","parentEntityId","parentEntityType","ActionParentEntityType","SectionLabel","spaces","SectionContainer","headerIcon","_props$showSectionHea","showSectionHeader","cloudHosting","getAppsmithConfigs","Form","DatasourceDBEditor","_JSONtoForm","_this","_classCallCheck","_len","arguments","args","Array","_key","openDocumentation","store","entities","plugins","list","_this$props$datasourc","openDoc","DocsLink","documentationLink","renderDataSourceConfigForm","sections","_this$props","hiddenHeader","messages","onSubmit","msg","Callout","links","endIcon","convertArrayToSentence","APPSMITH_IP_ADDRESSES","TEMP_DATASOURCE_ID","_Fragment","_isNil","undefined","_map","renderMainSection","_inherits","_createClass","key","_this$props2","this","formConfig","initialized","JSONtoForm","connect","_datasource$name","datasources","datasourceName","reduxForm","destroyOnUnmount","form","DATASOURCE_DB_FORM","enableReinitialize","currentDatasource","getDatasource","getDatasources","forceUpdate","setForceUpdate","saveStatus","isSaving","ui","error","errors","hasNameConflict","React","datasourcesNames","includes","pluginName","isNameValid","isInvalidDatasourceName","trim","handleDatasourceNameChange","_currentDatasource$id","_currentDatasource$id2","datsourceName","saveDatasourceName","updateDatasourceName","EditableText","defaultValue","editInteractionKind","EditInteractionKind","forceDefault","isEditingDefault","focusOnMount","isInvalid","maxLength","onTextChanged","placeholder","underline","updating","MenuWrapper","StyledMenu","ActionWrapper","FormTitleContainer","Header","noBottomBorder","PluginImageWrapper","PluginImage","DSFormHeader","canDeleteDatasource","canManageDatasource","isDeleting","isNewDatasource","pluginImage","setDatasourceViewMode","confirmDelete","setConfirmDelete","useHistory","useEditorType","onCloseMenu","_debounce","currentEnv","envSupportedDs","DB_NOT_SUPPORTED","isEnvironmentConfigured","headerActions","alt","src","getAssetUrl","FormTitle","isIconButton","zIndex","width","deleteDatasource","CONFIRM_CONTEXT_DELETING","CONFIRM_CONTEXT_DELETE","CONTEXT_DELETE","entryPoint","DatasourceEditEntryPoints","EDIT","EnvConfigSection","renderDatasourceSection","config","Key","Value","ValueWrapper","FieldWrapper","ViewModeWrapper","_templateObject5","renderKVArray","firstConfigProperty","configProperty","configPropertyInfo","split","values","_get","reduce","acc","configPropertyKey","forEach","push","renderValue","isHidden","hidden","isKVArray","controlType","_section$subtitle","subtitle","customConfigProperty","reactKey","isArray","options","option","el","comparison","ComparisonOperationsEnum","initialValue","isPlural","Table","columns","accessor","Cell","formatFileSize","data","labelVisibleWithFiles","_isArray","display","log","RenderDatasourceInformation","_React$Component","isEnvEnabled","showOnlyCurrentEnv","ownProps","isMultipleEnvEnabled","selectFeatureFlags","currentEnvironmentId","getDefaultEnvId","FormContainer","FormContainerBody","renderForm","formContent","formData","hasOwnProperty","featureFlags","Collapsible","sectionName","renderEachConfig","renderSingleConfig","multipleConfig","customConfig","setupConfig","marginTop","FormControl","formName","c","sectionStyles","propertyControlOrSection","datasourcePermissions","isOpen","onClose","onDiscard","onSave","saveButtonText","createMode","canManageDatasources","getHasManageDatasourcePermission","disableSaveButton","Modal","ModalContent","ModalHeader","DELETE_CONFIRMATION_MODAL_TITLE","ModalBody","SAVE_OR_DISCARD_DATASOURCE_WARNING","ModalFooter","DISCARD_POPUP_DONT_SAVE_BUTTON_TEXT","useDatasourceQuery","setPreviewData","setPreviewDataError","setIsLoading","failedFetchingPreviewData","setFailedFetchingPreviewData","onFetchPreviewDataSuccess","_payload$data","_payload$data2","_payload$data3","body","pluginErrorDetails","onFetchPreviewDataFailure","fetchPreviewData","executeDatasourceQuery","isGeneratePage","onSuccessCallback","onErrorCallback","isGACEnabled","isGoogleSheetPlugin","isGoogleSheetPluginDS","packageName","DATASOURCES_ALLOWED_FOR_PREVIEW_MODE","PluginName","isMock","generateCRUDSupportedPlugin","getGenerateCRUDEnabledPluginMap","datasourceToFormValues","_datasource$datasourc3","_datasource$datasourc4","_datasource$datasourc5","_datasource$datasourc6","authType","AuthType","connection","ssl","SSLType","authTypeControl","_set","authentication","datasourceToFormAuthentication","isSendSessionEnabled","sessionSignatureKey","isValid","isEnvironmentValid","headers","cleanupProperties","queryParameters","formValuesToDatasource","dsStorage","formToDatasourceAuthentication","dsStorages","environmentId","conf","properties","isClientCredentials","isAuthorizationCode","oAuth2Common","authenticationType","accessTokenUrl","clientId","headerPrefix","scopeString","clientSecret","isAuthorizationHeader","isTokenHeader","audience","resource","sendScopeWithRefreshToken","refreshTokenClientCredentialsLocation","useSelfSignedCert","grantType","GrantType","customTokenParameters","authorizationUrl","isAuthorized","customAuthenticationParameters","expiresIn","username","password","secretExists","addTo","bearerToken","_datasource$datasourc7","_datasource$datasourc8","val","newValues","object","Object","every","x","TextInput","hasError","rest","_objectWithoutProperties","_excluded","InputGroup","border","Colors","textOnDarkBG","TextInputError","InputContainer","BaseTextInput","_Component","handleFocus","setState","inputIsFocused","input","onFocus","handleBlur","onBlur","meta","refHandler","showError","_excluded2","touched","active","inputRef","autoComplete","replayHighlightClass","tabIndex","Component","copyText","copyURLInput","createRef","isCopied","setIsCopied","onChange","current","setSelectionRange","copy","setTimeout","FormInputContainer","DatasourceRestAPIEditor","ensureAPIKeyDefaultsAreCorrect","change","ApiKeyAuthType","ensureOAuthDefaultsAreCorrect","isDirty","validate","getSanitizedFormData","save","onSuccess","toggleSaveActionFlag","normalizedValues","appId","applicationId","environmentName","currentEnvironmentName","pluginPackageName","updateDatasource","createDatasource","urlValidator","RegExp","test","message","INVALID_URL","render","renderEditor","renderGeneralSettings","renderOauth2AdvancedSettings","btoa","renderInputTextControlViaFormControl","placeholderText","dataType","encrypted","isRequired","fieldValidator","renderCheckboxViaFormControl","renderSelfSignedCertificateFields","renderKeyValueControlViaFormControl","renderDropdownControlViaFormControl","renderAuthFields","renderFilePickerControlViaFormControl","renderOauth2","renderBasic","renderApiKey","renderBearerToken","isSecretExistsPath","renderOauth2AuthorizationCode","renderOauth2ClientCredentials","renderOauth2Common","_this$props$formData","isGrantTypeAuthorizationCode","isAuthenticationTypeOAuth2","isConnectSelfSigned","renderOauth2CommonAdvanced","redirectURL","origin","FormLabel","StyledInfo","CopyToClipBoard","initializeReplayEntity","initialValues","prevProps","triggerSave","prop","formMeta","conditionals","validator","hintMessages","selectFeatureFlagCheck","getFormMeta","updateReplayEntity","ENTITY_TYPE","currEditingEnvId","createDatasourceFromForm","flag","DATASOURCE_REST_API_FORM","DSEditorWrapper","headerHeight","CalloutContainer","DatasourceEditorRouter","getEnvironmentId","filterParams","keys","configDetails","requiredFields","hasRequiredFieldsChanged","newConfigDetails","newRequiredFields","field","currentConfig","pluginDatasourceForm","DatasourceComponentTypes","some","updateFilter","_isEmpty","isFormDirty","showDialog","switchFilterBlocked","navigation","updateFilterSuccess","resetForm","isStorageEnvironmentCreated","datasourceStoragesWithId","envId","_merge","getConfigInitialValues","reinitializeForm","_defineProperty","newDsStorageObject","toastMessage","ToastMessageType","fromEnvId","toEnvId","fromEnvName","toEnvName","mode","blockRoutes","shouldRenderRestAPIForm","_this$props3","shouldViewMode","getSanitizedData","getTrimmedData","normalizeValues","renderViewConfigChild","_this$props4","DatasourceInformation","shouldShowTabs","renderTabsForViewMode","DatasourceTabs","configChild","routesBlocked","readUrlParams","DEFAULT_ENV_ID","unblock","closeDialog","bind","_assertThisInitialized","switchDatasource","isDatasourceBeingSaved","closeDialogAndUnblockRoutes","setViewModeFromQueryParams","_isEqual","defaultKeyValueArrayConfig","initializeFormWithDefaults","_this$props5","_this$props5$match","_this$props5$match$pa","urlObject","URL","href","searchParams","get","match","createTempDatasource","search","URLSearchParams","responseStatus","responseMessage","REST_API_AUTHORIZATION_FAILED","REST_API_AUTHORIZATION_SUCCESSFUL","REST_API_AUTHORIZATION_APPSMITH_ERROR","_this2","getQueryParams","setDatasourceViewModeFlag","discardTempDatasource","deleteTempDSFromDraft","resetDefaultKeyValPairFlag","_this$props6","_this$props6$history","_this3","block","tx","routesBlockFormChangeCallback","toggleSaveActionFromPopupFlag","_this$props8","_this$props7","datasourceDiscardAction","isNavigateBack","_this$props$datasourc2","SaveOrDiscardDatasourceModal","SAVE_BUTTON_TEXT","messageType","TEST_DATASOURCE_ERROR","TEST_DATASOURCE_SUCCESS","_this4","_this$props9","path","decodeToastMessage","_this$props10","RestAPIDatasourceForm","renderSaveDisacardModal","DataSourceEditorForm","_this5","_this$props11","datasourceButtonConfiguration","isOnboardingFlow","isTesting","showDebugger","EntityNotFoundPane","DatasourceSaasForm","saasEditorDatasourceIdURL","showingTabsOnViewMode","ResizerMainContainer","ResizerContentContainer","DSDataFilter","filterId","renderToast","DatasourceAuth","_memoize","validateForm","onCancel","Debugger","_this$props12","_props$datasourceId","_props$match","_props$match$params","_plugin$datasourceCom","_plugin$packageName","_props$isInsideReconn","_props$pageId","_props$match2","_props$match2$params","_plugin$type","_plugin$name","_props$applicationId","datasourcePane","_state$entities","formConfigs","_selectURLSlugs","selectURLSlugs","applicationSlug","pageSlug","getFormValues","newDatasource","datasourceComponent","currentEnvDetails","getCurrentEnvironmentDetails","getIsFormDirty","editingId","getFormInitialValues","getHasDeleteDatasourcePermission","showDebuggerFlag","PluginPackageName","isDatasourceAuthorizedForQueryCreation","getDatasourceFormButtonConfig","getPluginImages","isDatasourceBeingSavedFromPopup","removeTempDatasource","initialize","createTempDatasourceFromForm","reset","initializeDatasourceFormDefaults","HeaderWrapper","paddingBottom","DatasourceStructureHeader","_props$datasource3","dispatchRefresh","event","_props$datasource","_props$datasource2","refetchFn","refreshDatasourceStructure","DatasourceStructureContext","onRefreshCallback","_props$datasource4","getPluginPackageNameFromId","renderAs","GSHEET_SPREADSHEET_LABEL","SCHEMA_LABEL","datasourceStructure","getDatasourceStructureById","isDatasourceStructureLoading","getIsFetchingDatasourceStructure","useParams","previewData","previewDataError","numberOfEntities","getNumberOfEntitiesInCurrentPage","currentMode","useRef","GENERATE_PAGE_MODE","tableName","_useDatasourceQuery","isGeneratePageLoading","getIsGeneratingTemplatePage","_datasourceStructure$","tables","setDatasourcePreviewSelectedTableName","_datasourceStructure$2","templates","structure","suggestedTemPlate","template","suggested","showGeneratePageBtn","ViewModeSchemaContainer","DataWrapperContainer","StructureContainer","DatasourceListContainer","DatasourceStructureList","context","customEditDatasourceFn","onEntityTableClick","table","step","DatasourceDataContainer","TableWrapper","RenderInterimDataState","shouldResize","ButtonContainer","_datasourceStructure$3","searchColumn","generateTemplateToUpdatePage","DATASOURCE_GENERATE_PAGE_BUTTON","spreadsheetOptions","setSpreadsheetOptions","sheetOptions","setSheetOptions","_useState5","_useState6","sheetData","setSheetData","_useState7","_useState8","selectedSpreadsheet","setSelectedSpreadsheet","_useState9","_useState10","selectedSheet","setSelectedSheet","_useState11","_useState12","searchString","setSearchString","_useState13","_useState14","selectedDatasourceIsInvalid","setSelectedDatasourceIsInvalid","_useSpreadSheets","useSpreadSheets","setSelectedDatasourceTableOptions","fetchAllSpreadsheets","isFetchingSpreadsheets","toggleOnUnmountRefObject","_useSheetsList","useSheetsList","failedFetchingSheetsList","fetchSheetsList","isFetchingSheetsList","_useSheetData","useSheetData","response","slice","failedFetchingSheetData","fetchSheetData","isFetchingSheetData","scrollIntoView","elementId","containerId","offset","element","document","querySelector","container","elementRect","getBoundingClientRect","containerRect","scrollTop","scrollAmount","top","_unused","collapseAccordions","spreadSheet","sheet","collapseSpreadsheet","setEntityCollapsibleState","selectSpreadsheetAndToggle","DEFAULT_DROPDOWN_OPTION","CSS","escape","requestObject","selectedDatasourceId","selectedSpreadsheetUrl","selectSheetAndToggle","selectedSheetName","selectedSpreadSheet","isError","filteredSpreadsheets","_toLowerCase","ss","s","DatasourceStructureSearchContainer","SearchInput","handleSearch","GSHEET_SEARCH_PLACEHOLDER","ItemLoadingIndicator","spreadsheet","Entity","customAddButton","entityId","onToggle","tableObj","showAddButton","sheetValue","sheetObj","DatasourceAttributesWrapper","fieldValue","DatasourceField","pluginSpecificParams","sheetName","sheetUrl","tableHeaderIndex","TabsContainer","Tabs","TabListWrapper","TabsList","TabPanelContainer","TabPanel","ConfigurationsTabPanelContainer","isDatasourceValid","VIEW_MODE_TABS","Tab","DATASOURCE_VIEW_DATA_TAB","DATASOURCE_CONFIGURATIONS_TAB","GoogleSheetSchema","DatasourceViewModeSchema","CONNECT_NEW_DATASOURCE_OPTION_ID","_uniqueId","OptionWrapper","dropdownIconBg","Classes","dropdown","ImageWrapper","DatasourceImage","CreateIconWrapper","_data","_data2","_data3","dataTestid","isHighlighted","isSelectedNode","dropdownOption","optionClickHandler","optionWidth","pluginImages","isConnectNewDataSourceBtn","isSupportedForTemplate","isNotSupportedDatasource","optionCypressSelector","TextType","SelectWrapper","Label","getTypographyByKey","Bold","RoundBg","Row","ColumnName","ColumnInfoWrapper","DROPDOWN_DIMENSION","ColumnNameWrapper","RowHeading","_templateObject6","generatePageAction","googleSheetPluginId","renderSubmitButton","selectedDatasource","sheetColumnsHeaderProps","sheetsListProps","spreadSheetsProps","sheetsList","columnHeaderList","errorFetchingColumnHeaderList","fetchColumnHeaderList","isFetchingColumnHeaderList","setTableHeaderIndex","googleSheetEditorConfig","getEditorConfig","sheetQueryRequest","setSheetQueryRequest","_selectedDatasource$d","fetchPluginFormConfig","_googleSheetEditorCon","configs","keyConfig","valueConfig","_selectedDatasource$d2","_selectedDatasource$d3","debouncedFetchColumns","_selectedDatasource$d5","_selectedDatasource$d4","onSelectSheetOption","GEN_CRUD_TABLE_HEADER_LABEL","GEN_CRUD_TABLE_HEADER_TOOLTIP_DESC","Input","Number","isNumberValidator","GEN_CRUD_COLUMN_HEADER_TITLE","column","GEN_CRUD_NO_COLUMNS","TooltipWrapper","FormWrapper","DescWrapper","ErrorMsg","HelperMsg","_templateObject7","StyledIconWrapper","_templateObject8","_templateObject9","datasourceIcon","NEW","REPLACE_EMPTY","GeneratePageSubmitBtn","showSubmitButton","GeneratePageSelectedViewIconEnum","DatasourceOptionSelectedView","iconType","PLUGIN_ICON","ADS_ICON","iconColor","iconSize","querySearch","useLocation","workspace","getCurrentAppWorkspace","isGeneratingTemplatePage","datasourceIdToBeSelected","setDatasourceIdToBeSelected","datasourcesStructure","getDatasourcesStructure","datasourceTableOptions","selectedTableColumnOptions","setSelectedTableColumnOptions","selectDataSource","isFetchingDatasourceStructure","isSelectedTableEmpty","setIsSelectedTableEmpty","selectedDatasourcePluginId","selectedDatasourcePluginPackageName","isS3Plugin","isFetchingSheetPluginForm","getIsFetchingSinglePluginForm","selectedTable","selectTable","_useState15","_useState16","selectedColumn","selectColumn","_useS3BucketList","useS3BucketList","bucketList","failedFetchingBucketList","isFetchingBucketList","onSelectDataSource","dataSourceObj","datasourceType","fetchDatasourceStructure","onSelectTable","TableObj","newSelectedTableColumnOptions","ALLOWED_SEARCH_DATATYPE","subText","onSelectColumn","ColumnObj","canCreateDatasource","getHasCreateDatasourcePermission","fetchingDatasourceConfigs","dataSourceOptions","useDatasourceOptions","useSheetColumnHeaders","bucketName","selectedDatasourceStructure","newTables","equal","queryParams","generateNewPage","getQueryStringfromObject","routeToCreateNewDatasource","integrationEditorURL","selectedTab","INTEGRATION_TABS","isGeneratePageMode","DatasourceCreateEntryPoints","extraParams","isValidDatasourceConfig","pluginField","PluginFormInputFieldMap","tableDropdownErrorMsg","fetchingDatasourceConfigError","TABLE","showEditDatasourceBtn","showSearchableColumn","submitButtonDisable","GENERATE_PAGE_FORM_TITLE","GEN_CRUD_DATASOURCE_DROPDOWN_LABEL","ds","virtual","DataSourceOption","extraProps","datasourcesEditorIdURL","GoogleSheetForm","COLUMN","FAKE_DATASOURCE_OPTION","CONNECT_NEW_DATASOURCE_OPTION","setDataSourceOptions","unSupportedDatasourceOptions","supportedDatasourceOptions","newDataSourceOptions","datasourceStorage","datasourceObject","setIsFetchingSpreadsheets","failedFetchingSpreadsheets","setFailedFetchingSpreadsheets","onFetchAllSpreadsheetFailure","onFetchAllSpreadsheetSuccess","trigger","spreadSheets","_ref4","formattedRequestData","displayType","requestType","setSheetsList","setIsFetchingSheetsList","setFailedFetchingSheetsList","onFetchAllSheetFailure","onFetchAllSheetSuccess","responseBody","_ref5","parameters","setIsFetchingSheetData","_useState17","_useState18","setFailedFetchingSheetData","_ref6","queryFormat","_useState19","_useState20","setColumnHeaderList","_useState21","_useState22","setIsFetchingColumnHeaderList","_useState23","_useState24","setErrorFetchingColumnHeaderList","onFetchColumnHeadersFailure","onFetchColumnHeadersSuccess","_useState25","_useState26","setBucketList","_useState27","_useState28","setIsFetchingBucketList","_useState29","_useState30","setFailedFetchingBucketList","onFetchBucketSuccess","payloadBody","_payloadBody$bucketLi","onFetchBucketFailure","fetchBucketList","_ref7","intercomAppID","StyledAuthMessage","isInViewMode","AuthMessage","actionType","_props$calloutType","calloutType","description","_props$isInViewMode","_props$style","getPluginTypeFromDatasourceId","handleOauthAuthorization","redirectAuthorizationCode","handleDocumentationClick","ActionType","GOOGLE_SHEETS_AUTHORIZE_DATASOURCE","GOOGLE_SHEETS_ASK_FOR_SUPPORT","Intercom","DATASOURCE_INTERCOM_TEXT","GOOGLE_SHEETS_LEARN_MORE","getCallOutLinks","getDatasourceErrorMessage","authErrorMessage","authorisedFilesEmptyGsheet","propertyKey","scopeValue","authorisedFileIds","getDatasourcePropertyValue","authStatus","isAuthFailure","AuthenticationStatus","gapiLoadSuccess","googleAPIsLoaded","GOOGLE_SHEET_SPECIFIC_SHEETS_SCOPE","isAuthorisedFilesEmptyGsheet","GSHEET_AUTHORISED_FILE_IDS_KEY","GSHEET_FILES_NOT_SELECTED","GSHEET_AUTHORIZATION_ERROR","gsheetProjectID","gsheetToken","scriptLoadedFlag","pickerInitiated","setPickerInitiated","pickerVisible","setPickerVisible","gapi","google","filePickerCallbackAction","action","FilePickerActionStatus","fileIds","elements","querySelectorAll","pointerEvents","load","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","client","stop","createPicker","_callee2","accessToken","projectID","view","_context2","picker","DocsView","ViewId","SPREADSHEETS","setMimeTypes","setMode","DocsViewMode","LIST","GOOGLE_SHEETS_FILE_PICKER_TITLE","PickerBuilder","enableFeature","Feature","NAV_HIDDEN","MULTISELECT_ENABLED","setAppId","setOAuthToken","addView","setTitle","setCallback","pickerCallback","build","setVisible","_x","_x2","apply","addAnalyticalEvents","_data$docs","numberOfSheetsSelected","docs","_callee3","_data$docs2","_context3","removeClassFromDocumentRoot","GOOGLE_SHEET_FILE_PICKER_OVERLAY_CLASS","_x3","ViewModeContainer","SaasEditorWrapper","_callSuper","SaaSEditor","DatasourceSaaSEditor","renderDatasourceInfo","_this2$props","isPluginAuthFailed","hideDatasourceSection","_this2$props2","_this2$props3","createFlow","googleSheetsInfoMessage","GOOGLE_SHEETS_INFO_BANNER_MESSAGE","shouldDisplayAuthMessage","SAVE_AND_AUTHORIZE_BUTTON_TEXT","GoogleSheetFilePicker","datasourceDeleteTrigger","_window","_window$location","_urlObject$searchPara","initializeDatasource","_window2","_window2$location","_urlObject$searchPara2","_this$props$match","_this$props$match$par","loadFilePickerAction","_this$props2$history","_viewMode","_props$match3","_props$match3$params","DATASOURCE_SAAS_FORM","getDatasourceScopeValue","getGsheetToken","getGsheetProjectID","documentationLinks","getPluginDocumentationLinks","viewModeFromURLParams","currentApplicationIdForCreateNewApp","getCurrentApplicationIdForCreateNewApp","actions","set","replaceState","getDefaultEnvironmentId","ListItem","ListLabels","DsTitle","iconLocation","editorURL","builderURL","skipMessage","SKIP_TO_APPLICATION","missingDsCredentialsDescription","RECONNECT_MISSING_DATASOURCE_CREDENTIALS_DESCRIPTION","Section","BodyContainer","ContentWrapper","ListContainer","Message","typography","fontSize","lineHeight","letterSpacing","DBFormWrapper","ModalContentWrapper","ModalBodyWrapper","SkipToAppWrapper","AuthorizationStatus","isModalOpen","getIsReconnectingDatasourcesModalOpen","getWorkspaceIdForImport","pageIdForImport","getPageIdForImport","environmentsFetched","areEnvironmentsFetched","unconfiguredDatasourceIds","getUnconfiguredDatasources","datasourcesList","useMemo","pluginsArray","getDatasourcePlugins","_keyBy","getIsListing","isDatasourceTesting","getIsDatasourceTesting","isDatasourceUpdating","getDatasourceLoading","pendingApp","JSON","parse","localStorage","workspaces","getFetchedWorkspaces","applications","getApplicationsOfWorkspace","useQuery","queryAppId","queryPageId","queryDatasourceId","queryIsImport","setSelectedDatasourceId","setPageId","setDatasource","isImport","setIsImport","setIsTesting","queryDS","dsName","orgId","checkIfDatasourceIsConfigured","_useReconnectModalDat","useReconnectModalData","status","display_message","SUCCESS","_plugins","APPSMITH_ERROR","OAUTH_AUTHORIZATION_APPSMITH_ERROR","OAUTH_AUTHORIZATION_FAILED","oAuthPassOrFailVerdict","getOAuthAccessToken","app","setWorkspaceIdForImport","setIsReconnectingDatasourcesModalOpen","defaultPageId","getDefaultPageId","ReduxActionTypes","isConfigFetched","getIsDatasourceConfigForImportFetched","initDatasourceConnectionDuringImportRequest","handleClose","shouldClose","classList","contains","dialogCloseButton","isCloseButtonClicked","setPageIdForImport","resetDatasourceConfigForImportFetchedFlag","resetImportData","onSelectDatasource","_plugins$ds$id","isConfigured","_datasources$0$id","importedApplication","getImportedApplication","_importedApplication$","defaultPage","pending","findIndex","appInfo","stringify","mappedDataSources","ListItemWrapper","shouldShowDBForm","onEscapeKeyDown","onInteractOutside","overlayClassName","Title","RECONNECT_MISSING_DATASOURCE_CREDENTIALS","DatasourceForm","fromImporting","RECONNECT_DATASOURCE_SUCCESS_MESSAGE1","RECONNECT_DATASOURCE_SUCCESS_MESSAGE2","SKIP_CONFIGURATION","SKIP_TO_APPLICATION_TOOLTIP_DESCRIPTION","UNSAFE_width","Space","horizontal","BuildingBlockWrapper","StyledImage","BuildingBlockContent","BuildingBlockContentFooter","_props$buildingBlock","buildingBlock","screenshotUrls","showForkModal","setShowForkModal","loadingTemplateId","activeLoadingTemplateId","isImportingTemplateToApp","isImportingTemplateToAppSelector","ForkTemplateDialog","templateId","templateIdUrl","BUILDING_BLOCK_THUMBNAIL_ALT_TEXT","hideForkTemplateButton","FORK_THIS_TEMPLATE_BUILDING_BLOCK","Position","onForkTemplateClick","StyledDatasourceChip","getDefaultPlugin","workspaceList","getForkableWorkspaces","selectedWorkspace","setSelectedWorkspace","isImportingTemplate","isImportingTemplateSelector","CHOOSE_WHERE_TO_FORK","overflow","dropdownMatchSelectWidth","dropdownOptionValue","SELECT_WORKSPACE","CANCEL","importTemplateToWorkspace","FORK_TEMPLATE","TemplateWrapper","TemplateContent","TemplateContentFooter","TemplateDatasources","TemplateLayout","_props$template","functions","join","DatasourceChip","FORK_THIS_TEMPLATE","SimilarTemplatesWrapper","SimilarTemplatesTitleWrapper","TemplateGrid","handleClick","similarTemplates","SIMILAR_TEMPLATES","onBackPress","VIEW_ALL_TEMPLATES","TEMPLATE_BUILDING_BLOCKS_FILTER_FUNCTION_VALUE","BuildingBlock","isForkingEnabled","onFork","FixedHeightTemplate","widgetType","widgetList","getWidgetCards","widgetInfo","widget","IconWrapper","displayName","DescriptionWrapper","DescriptionColumn","TemplatesWidgetList","OVERVIEW","FUNCTION","INDUSTRY","useCases","DATASOURCES","NOTE","NOTE_MESSAGE","WIDGET_USED","widgets","WidgetInfo","REQUEST_TEXT","isBuildingBlock","REQUEST_BUILDING_BLOCK","REQUEST_TEMPLATE","RequestTemplateSvg","COULDNT_FIND_TEMPLATE","COULDNT_FIND_TEMPLATE_DESCRIPTION","isModalLayout","SubheadingText","HorizontalLine","TemplateList","_selectedFilters$func","_selectedFilters$func2","_selectedFilters$func3","selectedFilters","getTemplateFilterSelector","onlyBuildingBlocksFilterSet","noBuildingBlockFilterSet","allFiltersSet","TEMPLATE_ALL_FILTER_FUNCTION_VALUE","showBuildingBlocksSection","showHorizontalLine","buildingBlocks","useCaseTemplates","onTemplateClick","RequestTemplate","ADD_PAGE_FROM_TEMPLATE_MODAL","isFetchingApplications","getIsFetchingApplications","isFetchingTemplates","isFetchingTemplatesSelector","filterWithAllowPageImport","getSearchedTemplateList","allowPageImport","LoadingScreen","FilterWrapper","homePage","header","FilterItemWrapper","FilterItemText","StyledFilterCategory","ListWrapper","FilterCategoryWrapper","SearchWrapper","sticky","ALL_TEMPLATES_UPDATED_LABEL","ALL_TEMPLATES_FILTER_VALUE","FilterItem","item","onSelectFilter","selectedFilter","_item$value","filterValue","modifyAndSortFilterList","originalFilterList","filterOrder","modifiedFilterList","sort","a","b","indexA","indexOf","indexB","localeCompare","FilterCategory","_filterLabelsToDispla","filterList","filterLabelsToDisplay","allTemplatesFilterSelected","selectedItem","filterTemplates","_filter$value","filters","getFilterListSelector","templateSearchQuery","getTemplateSearchQuery","query","setTemplateSearchQuery","initialFilters","stickySearchBar","SEARCH_TEMPLATES","_selectedFilters$filt","SHOW_FORK_MODAL_PARAM","handleBackPress","onClickUseTemplate","showBack","currentTemplate","getActiveTemplateSelector","FORK_BUTTON_TEXT","GO_BACK","ForkTemplate","TemplateViewWrapper","IframeWrapper","IframeTopBar","PageWrapper","LoadingWrapper","TemplateViewLoader","TemplateNotFound","TemplateView","handleSimilarTemplateClick","_ref$isModalLayout","_ref$showBack","_ref$showSimilarTempl","showSimilarTemplate","_ref$similarTemplates","similarTemplatesClassName","isFetchingTemplate","isFetchingTemplateSelector","containerRef","registerEditorWidgets","getTemplateInformation","getSimilarTemplatesInit","scrollTo","ref","ReconnectDatasourceModal","TemplateViewHeader","appUrl","TemplateDescription","SimilarTemplates","TEMPLATES_PATH","from","Spinner"],"sourceRoot":""}