{"version":3,"file":"static/js/9318.cfe1146b.chunk.js","mappings":"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","sources":["components/editorComponents/CodeEditor/sql/customMimes/utils.ts","components/editorComponents/CodeEditor/sql/customMimes/arango.ts","components/editorComponents/CodeEditor/sql/customMimes/snowflake.ts","components/editorComponents/CodeEditor/sql/customMimes/redis.ts","components/editorComponents/CodeEditor/modes.ts","components/editorComponents/CodeEditor/styledComponents.ts","components/editorComponents/CodeEditor/lintHelpers.ts","utils/autocomplete/customDefUtils.ts","utils/autocomplete/customTreeTypeDefCreator.ts","selectors/lintingSelectors.ts","components/editorComponents/CodeEditor/utils/codeComment.ts","components/editorComponents/CodeEditor/PeekOverlayPopup/JsonWrapper.tsx","constants/CanvasEditorConstants.tsx","components/editorComponents/CodeEditor/PeekOverlayPopup/Analytics.ts","utils/FilterInternalProperties/Common.ts","utils/FilterInternalProperties/Appsmith.ts","ce/utils/FilterInternalProperties/getEntityPeekData.ts","utils/FilterInternalProperties/Action.ts","utils/FilterInternalProperties/JsAction.ts","utils/FilterInternalProperties/Widget.ts","components/editorComponents/CodeEditor/PeekOverlayPopup/PeekOverlayPopup.tsx","utils/FilterInternalProperties/index.ts","ce/components/editorComponents/GPT/index.tsx","ce/components/editorComponents/GPT/AskAIButton.tsx","components/editorComponents/CodeEditor/BindingPrompt.tsx","ce/components/editorComponents/CodeEditorSignPosting.tsx","utils/resizeObserver.ts","components/editorComponents/CodeEditor/index.tsx","components/editorComponents/CodeEditor/BindingPromptHelper.ts","components/editorComponents/CodeEditor/utils/cursorLeftMovement.ts","components/editorComponents/CodeEditor/utils/saveAndAutoIndent.ts","components/editorComponents/CodeEditor/utils/deleteLine.ts"],"sourcesContent":["export function spaceSeparatedStringToObject(str: string) {\n  const result: Record<string, true> = {};\n  const words = str.split(\" \");\n  for (const eachWord of words) result[eachWord] = true;\n  return result;\n}\n","import CodeMirror from \"codemirror\";\nimport { merge } from \"lodash\";\nimport { EditorModes } from \"../../EditorConfig\";\nimport { getSqlMimeFromMode } from \"../config\";\nimport { spaceSeparatedStringToObject } from \"./utils\";\n\n// @ts-expect-error: No type available\nconst defaultSQLConfig = CodeMirror.resolveMode(\"text/x-sql\");\n\nexport const arangoKeywordsMap = {\n  // https://www.arangodb.com/docs/stable/aql/fundamentals-syntax.html\n  keywords: spaceSeparatedStringToObject(\n    \"for return filter search sort limit let collect window insert update replace remove upsert with aggregate all all_shortest_paths and any asc collect desc distinct false filter for graph in inbound insert into k_paths k_shortest_paths let like limit none not null or outbound remove replace return shortest_path sort true update upsert window with keep count options prune search to current new\",\n  ),\n};\nconst arangoConfig = merge(defaultSQLConfig, arangoKeywordsMap);\n\n// Inspired by https://github.com/codemirror/codemirror5/blob/9974ded36bf01746eb2a00926916fef834d3d0d0/mode/sql/sql.js#L290\nCodeMirror.defineMIME(\n  getSqlMimeFromMode(EditorModes.ARANGO_WITH_BINDING),\n  arangoConfig,\n);\n","import CodeMirror from \"codemirror\";\nimport { merge } from \"lodash\";\nimport { EditorModes } from \"../../EditorConfig\";\nimport { getSqlMimeFromMode } from \"../config\";\nimport { spaceSeparatedStringToObject } from \"./utils\";\n\n// @ts-expect-error: No type available\nconst defaultSQLConfig = CodeMirror.resolveMode(\"text/x-sql\");\n\nexport const snowflakeKeywordsMap = {\n  // Ref:  https://docs.snowflake.com/en/sql-reference/reserved-keywords\n  keywords: spaceSeparatedStringToObject(\n    \"account all alter and any as between by case cast check column connect connection constraint create cross current current_date current_time current_timestamp current_user database delete distinct drop else exists false following for from full grant group gscluster having ilike in increment inner insert intersect into is issue join lateral left like localtime localtimestamp minus natural not null of on or order organization qualify regexp revoke right rlike row rows sample schema select set some start table tablesample then to trigger true try_cast union unique update using values  view when whenever where with\",\n  ),\n};\nconst snowflakeConfig = merge(defaultSQLConfig, snowflakeKeywordsMap);\n\n// Inspired by https://github.com/codemirror/codemirror5/blob/9974ded36bf01746eb2a00926916fef834d3d0d0/mode/sql/sql.js#L290\nCodeMirror.defineMIME(\n  getSqlMimeFromMode(EditorModes.SNOWFLAKE_WITH_BINDING),\n  snowflakeConfig,\n);\n","import CodeMirror from \"codemirror\";\nimport { merge } from \"lodash\";\nimport { EditorModes } from \"../../EditorConfig\";\nimport { getSqlMimeFromMode } from \"../config\";\nimport { spaceSeparatedStringToObject } from \"./utils\";\n\n// @ts-expect-error: No type available\nconst defaultSQLConfig = CodeMirror.resolveMode(\"text/x-sql\");\n\nexport const redisKeywordsMap = {\n  // https://redis.io/commands/\n  keywords: spaceSeparatedStringToObject(\n    \"acl cat deluser dryrun genpass getuser list load log save setuser users whoami append asking auth bf.add bf.card bf.exists bf.info bf.insert bf.loadchunk bf.madd bf.mexists bf.reserve bf.scandump bgrewriteaof bgsave bitcount bitfield bitfield_ro bitop bitpos blmove blmpop blpop brpop brpoplpush bzmpop bzpopmax bzpopmin cf.add cf.addnx cf.count cf.del cf.exists cf.info cf.insert cf.insertnx cf.loadchunk cf.mexists cf.reserve cf.scandump client caching getname getredir id info kill no-evict no-touch pause reply setinfo setname tracking trackinginfo unblock unpause cluster addslots addslotsrange bumpepoch count-failure-reports countkeysinslot delslots delslotsrange failover flushslots forget getkeysinslot keyslot links meet myid myshardid nodes replicas replicate reset saveconfig set-config-epoch setslot shards slaves slots cms.incrby cms.info cms.initbydim cms.initbyprob cms.merge cms.query command count docs getkeys getkeysandflags config get resetstat rewrite set copy dbsize decr decrby del discard dump echo eval eval_ro evalsha evalsha_ro exec exists expire expireat expiretime fcall fcall_ro flushall flushdb ft._list ft.aggregate ft.aliasadd ft.aliasdel ft.aliasupdate ft.alter ft.create ft.dictadd ft.dictdel ft.dictdump ft.dropindex ft.explain ft.explaincli ft.info ft.profile ft.search ft.spellcheck ft.sugadd ft.sugdel ft.sugget ft.suglen ft.syndump ft.synupdate ft.tagvals function delete flush restore stats geoadd geodist geohash geopos georadius georadius_ro georadiusbymember georadiusbymember_ro geosearch geosearchstore getbit getdel getex getrange getset graph.config graph.constraint create drop graph.delete graph.explain graph.list graph.profile graph.query graph.ro_query graph.slowlog hdel hello hexists hget hgetall hincrby hincrbyfloat hkeys hlen hmget hmset hrandfield hscan hset hsetnx hstrlen hvals incr incrby incrbyfloat json.arrappend json.arrindex json.arrinsert json.arrlen json.arrpop json.arrtrim json.clear json.debug json.del json.forget json.get json.mget json.numincrby json.nummultby json.objkeys json.objlen json.resp json.set json.strappend json.strlen json.toggle json.type keys lastsave latency doctor graph histogram history latest lcs lindex linsert llen lmove lmpop lolwut lpop lpos lpush lpushx lrange lrem lset ltrim mget migrate module loadex unload monitor move mset msetnx multi object encoding freq idletime refcount persist pexpire pexpireat pexpiretime pfadd pfcount pfdebug pfmerge pfselftest ping psetex psubscribe psync pttl publish pubsub channels numpat numsub shardchannels shardnumsub punsubscribe quit randomkey readonly readwrite rename renamenx replconf replicaof restore-asking role rpop rpoplpush rpush rpushx sadd scan scard script debug sdiff sdiffstore select setbit setex setnx setrange shutdown sinter sintercard sinterstore sismember slaveof slowlog len smembers smismember smove sort sort_ro spop spublish srandmember srem sscan ssubscribe strlen subscribe substr sunion sunionstore sunsubscribe swapdb sync tdigest.add tdigest.byrank tdigest.byrevrank tdigest.cdf tdigest.create tdigest.info tdigest.max tdigest.merge tdigest.min tdigest.quantile tdigest.rank tdigest.reset tdigest.revrank tdigest.trimmed_mean time topk.add topk.count topk.incrby topk.info topk.list topk.query topk.reserve touch ts.add ts.alter ts.create ts.createrule ts.decrby ts.del ts.deleterule ts.get ts.incrby ts.info ts.madd ts.mget ts.mrange ts.mrevrange ts.queryindex ts.range ts.revrange ttl type unlink unsubscribe unwatch wait waitaof watch xack xadd xautoclaim xclaim xdel xgroup createconsumer delconsumer destroy setid xinfo consumers groups stream xlen xpending xrange xread xreadgroup xrevrange xsetid xtrim zadd zcard zcount zdiff zdiffstore zincrby zinter zintercard zinterstore zlexcount zmpop zmscore zpopmax zpopmin zrandmember zrange zrangebylex zrangebyscore zrangestore zrank zrem zremrangebylex zremrangebyrank zremrangebyscore zrevrange zrevrangebylex zrevrangebyscore zrevrank zscan zscore zunion zunionstore\",\n  ),\n};\nconst redisConfig = merge(defaultSQLConfig, redisKeywordsMap);\n\n// Inspired by https://github.com/codemirror/codemirror5/blob/9974ded36bf01746eb2a00926916fef834d3d0d0/mode/sql/sql.js#L290\nCodeMirror.defineMIME(\n  getSqlMimeFromMode(EditorModes.REDIS_WITH_BINDING),\n  redisConfig,\n);\n","import CodeMirror from \"codemirror\";\nimport type { TEditorModes } from \"components/editorComponents/CodeEditor/EditorConfig\";\nimport { EditorModes } from \"components/editorComponents/CodeEditor/EditorConfig\";\nimport \"codemirror/addon/mode/multiplex\";\nimport \"codemirror/mode/javascript/javascript\";\nimport \"codemirror/mode/sql/sql\";\nimport \"codemirror/addon/hint/sql-hint\";\nimport type { TEditorSqlModes } from \"./sql/config\";\nimport { sqlModesConfig } from \"./sql/config\";\n\nexport const BINDING_OPEN = \"{{\",\n  BINDING_CLOSE = \"}}\";\n\nexport interface MultiplexingModeConfig {\n  outerMode: string | { name: string; json?: boolean };\n  innerModes: {\n    open: string;\n    close: string;\n  }[];\n}\n\nexport type MultiplexingModeConfigs = Record<\n  TEditorModes,\n  MultiplexingModeConfig | undefined\n>;\n\nexport const MULTIPLEXING_MODE_CONFIGS: MultiplexingModeConfigs = {\n  [EditorModes.TEXT_WITH_BINDING]: {\n    outerMode: EditorModes.TEXT,\n    innerModes: [\n      {\n        open: BINDING_OPEN,\n        close: BINDING_CLOSE,\n      },\n    ],\n  },\n  [EditorModes.JSON_WITH_BINDING]: {\n    outerMode: { name: \"javascript\", json: true },\n    innerModes: [\n      {\n        open: BINDING_OPEN,\n        close: BINDING_CLOSE,\n      },\n    ],\n  },\n  [EditorModes.GRAPHQL_WITH_BINDING]: {\n    outerMode: EditorModes.GRAPHQL,\n    innerModes: [\n      {\n        open: BINDING_OPEN,\n        close: BINDING_CLOSE,\n      },\n      {\n        // https://github.com/appsmithorg/appsmith/issues/16702\n        open: '\"{{',\n        close: '}}\"',\n      },\n    ],\n  },\n  ...Object.values(sqlModesConfig)\n    .filter((config) => config.isMultiplex)\n    .reduce(\n      (prev, current) => {\n        prev[current.mode] = {\n          outerMode: current.mime,\n          innerModes: [\n            {\n              open: BINDING_OPEN,\n              close: BINDING_CLOSE,\n            },\n          ],\n        };\n        return prev;\n      },\n      {} as Record<TEditorSqlModes, MultiplexingModeConfig | undefined>,\n    ),\n  \"text/plain\": undefined,\n  \"application/json\": undefined,\n  javascript: undefined,\n  graphql: undefined,\n  css: undefined,\n  htmlmixed: undefined,\n};\n\nObject.keys(MULTIPLEXING_MODE_CONFIGS).forEach((key) => {\n  const multiplexConfig = MULTIPLEXING_MODE_CONFIGS[key as TEditorModes];\n  if (!multiplexConfig) return;\n  CodeMirror.defineMode(key, function (config) {\n    // @ts-expect-error: Types are not available\n    return CodeMirror.multiplexingMode(\n      CodeMirror.getMode(config, multiplexConfig.outerMode),\n      ...multiplexConfig.innerModes.map((innerMode) => ({\n        open: innerMode.open,\n        close: innerMode.close,\n        delimStyle: \"binding-brackets\",\n        mode: CodeMirror.getMode(config, {\n          name: \"javascript\",\n          json: true,\n        }),\n      })),\n    );\n  });\n});\n","import styled from \"styled-components\";\nimport type { CodeEditorBorder } from \"components/editorComponents/CodeEditor/EditorConfig\";\n\nimport {\n  EditorSize,\n  EditorTheme,\n} from \"components/editorComponents/CodeEditor/EditorConfig\";\nimport { CodeEditorColors } from \"components/editorComponents/CodeEditor/constants\";\nimport type { Theme } from \"constants/DefaultTheme\";\nimport { Skin } from \"constants/DefaultTheme\";\nimport { Colors } from \"constants/Colors\";\nimport { NAVIGATION_CLASSNAME } from \"./MarkHelpers/entityMarker\";\n\nexport const PEEK_STYLE_PERSIST_CLASS = \"peek-style-persist\";\n\nconst getBorderStyle = (\n  props: { theme: Theme } & {\n    editorTheme?: EditorTheme;\n    hasError: boolean;\n    size: EditorSize;\n    isFocused: boolean;\n    disabled?: boolean;\n  },\n) => {\n  if (props.hasError) return \"var(--ads-v2-color-border-error)\";\n  if (props.editorTheme !== EditorTheme.DARK) {\n    if (props.isFocused) return \"var(--ads-v2-color-border-emphasis)\";\n    return \"var(--ads-v2-color-border)\";\n  }\n  return \"transparent\";\n};\n\nexport const EditorWrapper = styled.div<{\n  editorTheme?: EditorTheme;\n  hasError: boolean;\n  isFocused: boolean;\n  disabled?: boolean;\n  size: EditorSize;\n  height?: string | number;\n  borderLess?: boolean;\n  isNotHover?: boolean;\n  isReadOnly?: boolean;\n  isRawView?: boolean;\n  border?: CodeEditorBorder;\n  hoverInteraction?: boolean;\n  fillUp?: boolean;\n  className?: string;\n  codeEditorVisibleOverflow?: boolean;\n  ctrlPressed: boolean;\n  removeHoverAndFocusStyle?: boolean;\n  AIEnabled?: boolean;\n  mode: string;\n  maxHeight?: string | number;\n}>`\n  // Bottom border was getting clipped\n  .CodeMirror.cm-s-duotone-light.CodeMirror-wrap {\n    clip-path: none !important;\n  }\n  width: 100%;\n  ${(props) =>\n    (props.size === EditorSize.COMPACT ||\n      props.size === EditorSize.COMPACT_RETAIN_FORMATTING) &&\n    props.isFocused\n      ? `\n  z-index: 5;\n  right: 0;\n  left: 0;\n  top: 0;\n  `\n      : `position: relative;`}\n  min-height: 36px;\n  max-height: ${(props) => props.maxHeight || \"auto\"};\n  height: ${(props) => props.height || \"auto\"};\n  background-color: ${(props) =>\n    props.disabled ? \"var(--ads-v2-color-bg-muted)\" : \"var(--ads-v2-color-bg)\"};\n  border-color: ${getBorderStyle};\n  display: flex;\n  flex: 1;\n  flex-direction: row;\n  text-transform: none;\n\n  && {\n    .CodeMirror-cursor {\n      border-right: none;\n      border-left-width: 2px;\n      border-left-color: ${(props) =>\n        props.editorTheme === EditorTheme.DARK\n          ? props.theme.colors.textOnDarkBG\n          : props.theme.colors.textDefault} !important;\n    }\n    .cm-s-duotone-light.CodeMirror {\n      border-radius: var(--ads-v2-border-radius);\n      /* ${(props) =>\n        props.isFocused &&\n        `outline: ${\n          props?.removeHoverAndFocusStyle\n            ? \"none\"\n            : \"var(--ads-v2-border-width-outline) solid var(--ads-v2-color-outline)\"\n        };\n        outline-offset: var(--ads-v2-offset-outline);\n        clip-path: unset !important;\n        `} */\n      ${(props) => props.isFocused && `clip-path: unset !important;`}\n      font-family: ${(props) => props.theme.fonts.code};\n      font-size: ${(props) => (props.isReadOnly ? \"12px\" : \"13px\")};\n      border: 1px solid\n        ${(props) => {\n          switch (true) {\n            case props.border === \"none\":\n              return \"transparent\";\n            case props.border === \"bottom-side\":\n              return \"var(--ads-v2-color-border)\";\n            case props.hasError:\n              return \"var(--ads-v2-color-border-error)\";\n\n            case props.isFocused:\n              return \"var(--ads-v2-color-border-emphasis-plus) !important\";\n            default:\n              return \"var(--ads-v2-color-border)\";\n          }\n        }};\n      ${(props) => props.borderLess && \"border: none;\"}\n\n      background: var(--ads-v2-color-bg);\n      color: var(--ads-v2-color-fg);\n      & {\n        span.cm-operator {\n          color: ${CodeEditorColors.OPERATOR};\n        }\n      }\n      .cm-property {\n        color: ${CodeEditorColors.PROPERTY};\n      }\n      .cm-keyword {\n        color: ${CodeEditorColors.KEYWORD};\n      }\n\n      .cm-comment {\n        color: ${CodeEditorColors.COMMENT};\n      }\n\n      .CodeMirror-foldgutter {\n        width: 0.9em;\n      }\n\n      /* gutter arrow to collapse or expand code */\n      .CodeMirror-guttermarker-subtle {\n        color: #442334 !important;\n        &:after {\n          font-size: 14px;\n          position: absolute;\n          right: 4px;\n        }\n      }\n\n      /* Text selection */\n      div.CodeMirror-selected {\n        background: #dbeafe !important;\n      }\n      .cm-string,\n      .token.string {\n        color: ${CodeEditorColors.STRING};\n      }\n\n      /* json response in the debugger */\n      .cm-string.cm-property {\n        color: ${CodeEditorColors.PROPERTY};\n      }\n\n      // /* +, =>, -, etc. operators */\n      // span.cm-operator {\n      //   color: #009595;\n      // }A\n\n      /* function arguments */\n      .cm-def {\n        color: #364252; /* This is gray-7 from our new shades of gray */\n      }\n\n      /* variable declarations */\n      .cm-keyword + span + .cm-def {\n        color: #364252;\n      }\n\n      /* function arguments */\n      .cm-def,\n      .cm-property + span + .cm-def,\n      .cm-def + span + .cm-def {\n        color: ${CodeEditorColors.FUNCTION_ARGS};\n      }\n\n      .cm-atom + span + .cm-property,\n\n      /* object keys, object methods */\n      .cm-keyword + span + .cm-property,\n      .cm-variable + span + .cm-property,\n      .cm-property + span + .cm-property,\n      .cm-number + span + .cm-property,\n      .cm-string + span + .cm-property,\n      .cm-operator + span + .cm-property {\n        color: hsl(30, 77%, 40%);\n      }\n\n      span.cm-number {\n        color: ${CodeEditorColors.NUMBER};\n      }\n\n      .cm-s-duotone-light span.cm-variable-2,\n      .cm-s-duotone-light span.cm-variable-3 {\n        color: #364252;\n      }\n\n      .cm-positive,\n      .cm-string-2,\n      .cm-type,\n      .cm-url {\n        color: #364252;\n      }\n\n      .cm-binding-brackets,\n      .CodeMirror-matchingbracket {\n        font-weight: 400;\n      }\n\n      .navigable-entity-highlight:hover {\n        background-color: #ededed !important;\n        font-weight: 600;\n      }\n\n      .cm-binding-brackets {\n        // letter-spacing: -1.8px;\n        color: hsl(222, 70%, 77%);\n      }\n\n      /* some sql fixes */\n      .cm-m-sql.cm-keyword {\n        font-weight: 400;\n      }\n\n      .CodeMirror-activeline-background {\n        background-color: #ececec;\n      }\n    }\n    .CodeMirror-guttermarker-subtle {\n      color: var(--ads-v2-color-fg-subtle);\n    }\n    .cm-s-duotone-light .CodeMirror-gutters {\n      background: var(--ads-v2-color-bg-subtle);\n    }\n    .cm-s-duotone-light .CodeMirror-linenumber,\n    .cm-binding-brackets {\n      color: ${(props) =>\n        props.editorTheme === EditorTheme.DARK\n          ? props.theme.colors.bindingTextDark\n          : props.theme.colors.bindingText};\n      font-weight: 700;\n    }\n\n    .${PEEK_STYLE_PERSIST_CLASS} {\n      border-color: var(--ads-v2-color-border-emphasis);\n      background-color: #ededed;\n    }\n\n    .${NAVIGATION_CLASSNAME} {\n      cursor: ${(props) => (props.ctrlPressed ? \"pointer\" : \"selection\")};\n      ${(props) =>\n        props.ctrlPressed &&\n        `&:hover {\n        text-decoration: underline;\n        background-color:\t#ededed;\n      }`}\n    }\n\n    .CodeMirror-matchingbracket {\n      text-decoration: none;\n      color: #ffd600 !important;\n      background-color: #a74444;\n    }\n    .datasource-highlight {\n      background: ${(props) =>\n        props.editorTheme === EditorTheme.DARK ? \"#002B54\" : \"#e7f3ff\"};\n      border: 1px solid\n        ${(props) =>\n          props.editorTheme === EditorTheme.DARK ? \"#10569A\" : \"#69b5ff\"};\n      padding: 2px;\n      border-radius: 2px;\n      margin-right: 2px;\n    }\n    .datasource-highlight-error {\n      background: var(--ads-v2-color-bg-error);\n      border: 1px solid var(--ads-v2-color-border-error);\n    }\n    .datasource-highlight-success {\n      background: var(--ads-v2-color-bg-success);\n      border: 1px solid var(--ads-v2-color-border-success);\n    }\n    .CodeMirror {\n      flex: 1;\n      line-height: 21px;\n      z-index: 0;\n      border-radius: 4px;\n      height: auto;\n    }\n    ${(props) =>\n      props.disabled &&\n      `\n    .CodeMirror-cursor {\n      display: none !important;\n    }\n    `}\n    .CodeMirror pre.CodeMirror-placeholder {\n      color: var(--ads-v2-color-fg-subtle);\n    }\n    ${(props) =>\n      (props.size === EditorSize.COMPACT ||\n        props.size === EditorSize.COMPACT_RETAIN_FORMATTING) &&\n      `\n      .CodeMirror-hscrollbar {\n      -ms-overflow-style: none;\n      &::-webkit-scrollbar {\n        display: none;\n      }\n    }\n    `}\n  }\n  && {\n    .CodeMirror-lines {\n      padding: ${(props) => props.theme.spaces[2]}px 0px;\n      opacity: ${(props) => props.disabled && \"var(--ads-v2-opacity-disabled)\"};\n      cursor: ${(props) => (props.disabled ? \"not-allowed\" : \"text\")};\n      pre.CodeMirror-line,\n      pre.CodeMirror-line-like {\n        padding: 0 ${(props) => props.theme.spaces[2]}px;\n      }\n    }\n  }\n\n  pre.CodeMirror-line,\n  pre.CodeMirror-line-like {\n    padding: 0 ${(props) => props.theme.spaces[3]}px;\n  }\n\n  ${(props) =>\n    props.className === \"js-editor\" &&\n    `\n    overflow: hidden;\n    .cm-tab {\n      border-right: 1px dotted #ccc;\n    }\n    height: 100%;\n  `}\n\n  .bp3-popover-target {\n    padding-right: 10px;\n    padding-top: 5px;\n  }\n  .leftImageStyles {\n    width: 20px;\n    height: 20px;\n    margin: 5px;\n  }\n  .linkStyles {\n    margin: 5px;\n    margin-right: 11px;\n  }\n  .CodeMirror-foldmarker {\n    color: inherit;\n    text-shadow: none;\n    font: inherit;\n  }\n\n  ${(props) =>\n    props.isReadOnly &&\n    `\n  &&&&&&&& .CodeMirror-scroll {\n    width: 100%;\n  }\n  `}\n\n  .CodeEditorTarget {\n    width: 100%;\n\n    &:hover {\n      .CodeMirror.cm-s-duotone-light {\n        border-color: ${(props) =>\n          props.borderLess ? \"none\" : \"var(--ads-v2-color-border-emphasis)\"};\n      }\n    }\n\n    &:focus {\n      .CodeMirror.cm-s-duotone-light {\n        border-color: ${(props) =>\n          props.borderLess\n            ? \"none\"\n            : \"var(--ads-v2-color-border-emphasis-plus)\"};\n      }\n    }\n\n    ${(props) =>\n      props.size === EditorSize.COMPACT ||\n      props.size === EditorSize.COMPACT_RETAIN_FORMATTING\n        ? `\n        position: absolute;\n        left: 0;\n        right: 0;\n      `\n        : `\n          position: relative;\n        `}\n    ${(props) => (props.isFocused ? `z-index: 3;` : `z-index: 0;`)}\n\n    ${(props) => {\n      let height = props.height || \"auto\";\n      if (\n        (props.size === EditorSize.COMPACT ||\n          props.size === EditorSize.COMPACT_RETAIN_FORMATTING) &&\n        !props.isFocused\n      ) {\n        height = props.height || \"36px\";\n      }\n      return `height: ${height}`;\n    }}\n  }\n\n  ${(props) =>\n    props.codeEditorVisibleOverflow &&\n    `\n    &&&&&&&& .CodeMirror-scroll {\n      overflow: visible;\n    }\n\n    & .CodeEditorTarget {\n      height: ${props.isFocused ? \"auto\" : \"36px\"};\n    }\n  `}\n\n  ${(props) =>\n    props.isReadOnly &&\n    `\n      &&&&&&&&&& .cm-m-javascript.cm-number {\n        color: ${props.isRawView ? \"#000\" : \"#268bd2\"};\n\n      }\n      &&&&&&&& .cm-m-javascript.cm-string.cm-property {\n        color: ${props.isRawView ? \"#000\" : \"#002b36\"};\n      }\n\n      &&&&&&&& .cm-m-javascript.cm-string {\n        color: ${props.isRawView ? \"#000\" : \"#cb4b16\"};\n      }\n    `}\n`;\n\nexport const IconContainer = styled.div`\n  border-radius: 4px 0 0 4px;\n  margin: 0;\n  height: 30px;\n  width: 30px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: #eef2f5;\n  svg {\n    height: 20px;\n    width: 20px;\n    path {\n      fill: #979797;\n    }\n  }\n`;\n\nexport const DynamicAutocompleteInputWrapper = styled.div<{\n  skin: Skin;\n  theme: Theme;\n  isActive: boolean;\n  isNotHover: boolean;\n  isError: boolean;\n}>`\n  width: 100%;\n  height: 100%;\n  flex: 1;\n  position: relative;\n  > span:first-of-type {\n    width: 30px;\n    position: absolute;\n    right: 0;\n  }\n  &:hover {\n    .lightning-menu {\n      background: ${(props) => (!props.isNotHover ? \"#090707\" : \"\")};\n      svg {\n        path,\n        circle {\n          fill: ${(props) =>\n            !props.isNotHover\n              ? props.skin === Skin.DARK\n                ? Colors.BLUE_CHARCOAL\n                : Colors.ALTO2\n              : \"\"};\n        }\n      }\n    }\n    button {\n      visibility: visible;\n    }\n  }\n  border-radius: var(--ads-v2-border-radius);\n  .ur--has-border {\n    border-radius: var(--ads-v2-border-radius);\n  }\n  .lightning-menu {\n    z-index: 1 !important;\n  }\n`;\n","import { last, isNumber, isEmpty } from \"lodash\";\nimport type { Annotation, Position } from \"codemirror\";\nimport type { LintError } from \"utils/DynamicBindingUtils\";\nimport { isDynamicValue } from \"utils/DynamicBindingUtils\";\nimport { Severity } from \"entities/AppsmithConsole\";\nimport {\n  CODE_EDITOR_START_POSITION,\n  LintTooltipDirection,\n  VALID_JS_OBJECT_BINDING_POSITION,\n} from \"./constants\";\nimport type { AdditionalDynamicDataTree } from \"utils/autocomplete/customTreeTypeDefCreator\";\nimport {\n  CUSTOM_LINT_ERRORS,\n  IDENTIFIER_NOT_DEFINED_LINT_ERROR_CODE,\n  INVALID_JSOBJECT_START_STATEMENT,\n  INVALID_JSOBJECT_START_STATEMENT_ERROR_CODE,\n} from \"plugins/Linting/constants\";\nexport const getIndexOfRegex = (\n  str: string,\n  regex: RegExp,\n  start = 0,\n): number => {\n  const pos = str.slice(start).search(regex);\n  return pos > -1 ? pos + start : pos;\n};\n\ninterface LintAnnotationOptions {\n  isJSObject: boolean;\n  contextData: AdditionalDynamicDataTree;\n}\n\n/**\n *\n * @param error\n * @param contextData\n * @returns A boolean signifying the presence of an identifier which the linter records as been \"not defined\"\n * but is passed to the editor as additional dynamic data\n */\nconst hasUndefinedIdentifierInContextData = (\n  error: LintError,\n  contextData: LintAnnotationOptions[\"contextData\"],\n) => {\n  /**\n   * W117: \"'{a}' is not defined.\",\n   * error has only one variable \"a\", which is the name of the variable which is not defined.\n   *  */\n  return (\n    error.code === IDENTIFIER_NOT_DEFINED_LINT_ERROR_CODE &&\n    error.variables &&\n    error.variables[0] &&\n    error.variables[0] in contextData\n  );\n};\nconst buildBoundaryRegex = (key: string) => {\n  return key\n    .replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\")\n    .replace(/\\w+/g, \"\\\\b$&\\\\b\");\n};\n\nexport const getAllWordOccurrences = (str: string, key: string) => {\n  const indices = [];\n  let index, startIndex;\n  const regex = new RegExp(buildBoundaryRegex(key));\n  index = getIndexOfRegex(str, regex, startIndex);\n  while (index > -1) {\n    indices.push(index);\n    startIndex = index + key.length;\n    index = getIndexOfRegex(str, regex, startIndex);\n  }\n\n  return indices;\n};\n\nexport const getKeyPositionInString = (\n  str: string,\n  key: string,\n): Position[] => {\n  const indices = getAllWordOccurrences(str, key);\n  let positions: Position[] = [];\n  if (str.includes(\"\\n\")) {\n    for (const index of indices) {\n      const substr = str.slice(0, index);\n      const substrLines = substr.split(\"\\n\");\n      const ch = last(substrLines)?.length || 0;\n      const line = substrLines.length - 1;\n\n      positions.push({ line, ch });\n    }\n  } else {\n    positions = indices.map((index) => ({ line: 0, ch: index }));\n  }\n  return positions;\n};\n\nexport const getFirstNonEmptyPosition = (lines: string[]): Position => {\n  const lineNumber = lines.findIndex((line) => !isEmpty(line));\n  return lineNumber > -1\n    ? {\n        line: lineNumber,\n        ch: lines[lineNumber].length,\n      }\n    : CODE_EDITOR_START_POSITION;\n};\n\nexport const filterInvalidLintErrors = (\n  errors: LintError[],\n  contextData?: AdditionalDynamicDataTree,\n) => {\n  return errors.filter(\n    (error) =>\n      // Remove all errors where additional dynamic data is reported as undefined\n      !(contextData && hasUndefinedIdentifierInContextData(error, contextData)),\n  );\n};\n\nexport const getLintAnnotations = (\n  value: string,\n  errors: LintError[],\n  options: Partial<LintAnnotationOptions>,\n): Annotation[] => {\n  const { contextData, isJSObject } = options;\n  const annotations: Annotation[] = [];\n  const lintErrors = filterInvalidLintErrors(errors, contextData);\n  const lines = value.split(\"\\n\");\n\n  lintErrors.forEach((error) => {\n    const {\n      ch,\n      code,\n      errorMessage,\n      line,\n      originalBinding,\n      severity,\n      variables,\n    } = error;\n\n    if (!originalBinding) {\n      return annotations;\n    }\n    if (code === INVALID_JSOBJECT_START_STATEMENT_ERROR_CODE) {\n      // The binding position of every valid JS Object is constant, so we need not\n      // waste time checking for position of binding.\n      // For JS Objects not starting with the expected \"export default\" statement, we return early\n      // with a \"invalid start statement\" lint error\n      return annotations.push({\n        from: CODE_EDITOR_START_POSITION,\n        to: getFirstNonEmptyPosition(lines),\n        message: INVALID_JSOBJECT_START_STATEMENT,\n        severity: Severity.ERROR,\n      });\n    }\n    let variableLength = 1;\n    // Find the variable with minimal length\n    if (variables) {\n      for (const variable of variables) {\n        if (variable) {\n          variableLength =\n            variableLength === 1\n              ? String(variable).length\n              : Math.min(String(variable).length, variableLength);\n        }\n      }\n    }\n\n    const bindingPositions = isJSObject\n      ? [VALID_JS_OBJECT_BINDING_POSITION]\n      : getKeyPositionInString(value, originalBinding);\n\n    if (isNumber(line) && isNumber(ch)) {\n      for (const bindingLocation of bindingPositions) {\n        const currentLine = bindingLocation.line + line;\n        const lineContent = lines[currentLine] || \"\";\n        let currentCh: number;\n\n        // for case where \"{{\" is in the same line as the lint error\n        if (bindingLocation.line === currentLine) {\n          currentCh =\n            bindingLocation.ch +\n            ch +\n            // Add 2 to account for \"{{\", if binding is a dynamicValue (NB: JS Objects are dynamicValues without \"{{}}\")\n            (isDynamicValue(originalBinding) ? 2 : 0);\n        } else {\n          currentCh = ch;\n        }\n\n        // Jshint counts \\t as two characters and codemirror counts it as 1.\n        // So we need to subtract number of tabs to get accurate position.\n        // This is not needed for custom lint errors, since they are not generated by JSHint\n        const tabs =\n          error.code && error.code in CUSTOM_LINT_ERRORS\n            ? 0\n            : lineContent.slice(0, currentCh).match(/\\t/g)?.length || 0;\n        const from = {\n          line: currentLine,\n          ch: currentCh - tabs - 1,\n        };\n        const to = {\n          line: from.line,\n          ch: from.ch + variableLength,\n        };\n        annotations.push({\n          from,\n          to,\n          message: errorMessage.message,\n          severity,\n        });\n      }\n    } else {\n      // Don't show linting errors if code has parsing errors\n      return [];\n    }\n  });\n  return annotations;\n};\n\n/* By default, lint tooltips are rendered to the right of the cursor\nif the tooltip overflows out of the page, we want to render it to the left of the cursor\n*/\nexport const getLintTooltipDirection = (\n  tooltip: Element,\n): LintTooltipDirection => {\n  if (\n    tooltip.getBoundingClientRect().right >\n    (window.innerWidth || document.documentElement.clientWidth)\n  ) {\n    return LintTooltipDirection.left;\n  } else {\n    return LintTooltipDirection.right;\n  }\n};\n","import equal from \"fast-deep-equal/es6\";\nimport { isEmpty } from \"lodash\";\nimport { debug } from \"loglevel\";\nimport type { AdditionalDynamicDataTree } from \"./customTreeTypeDefCreator\";\nimport { customTreeTypeDefCreator } from \"./customTreeTypeDefCreator\";\nimport CodemirrorTernService from \"./CodemirrorTernService\";\n\nclass CustomDef {\n  private static lastCustomDataDef: AdditionalDynamicDataTree | undefined;\n\n  update(customData?: AdditionalDynamicDataTree) {\n    if (customData && !isEmpty(customData)) {\n      const customDataDef = customTreeTypeDefCreator(customData);\n      if (!equal(CustomDef.lastCustomDataDef, customDataDef)) {\n        const start = performance.now();\n\n        CodemirrorTernService.updateDef(\"customDataTree\", customDataDef);\n\n        debug(\n          \"Tern: updateDef for customDataTree took\",\n          (performance.now() - start).toFixed(),\n          \"ms\",\n        );\n\n        CustomDef.lastCustomDataDef = customDataDef;\n      }\n    } else if (CustomDef.lastCustomDataDef) {\n      const start = performance.now();\n      CodemirrorTernService.removeDef(\"customDataTree\");\n      debug(\n        \"Tern: removeDef for customDataTree took\",\n        (performance.now() - start).toFixed(),\n        \"ms\",\n      );\n      CustomDef.lastCustomDataDef = undefined;\n    }\n  }\n}\n\n/**\n * This method is responsible for both add and remove def in CodemirrorTernService for customDataTree.\n *\n * if customData is not defined then check if lastCustomDataDef was present and remove it.\n *\n * if customData is defined then generate new customDataDef and compare with lastCustomDataDef if different then run updateDef\n * @param customData\n */\nconst updateCustomDef = new CustomDef().update;\n\nexport { updateCustomDef };\n","import type { Def } from \"tern\";\nimport type { TruthyPrimitiveTypes } from \"utils/TypeHelpers\";\nimport { generateTypeDef } from \"./defCreatorUtils\";\n\nexport type AdditionalDynamicDataTree = Record<\n  string,\n  Record<string, unknown> | TruthyPrimitiveTypes\n>;\n\nexport const customTreeTypeDefCreator = (data: AdditionalDynamicDataTree) => {\n  const extraDefsToDefine: Def = {};\n  const def: Def = {\n    \"!name\": \"customDataTree\",\n  };\n  Object.keys(data).forEach((keyName) => {\n    const entity = data[keyName];\n    def[keyName] = generateTypeDef(entity, extraDefsToDefine);\n  });\n  def[\"!define\"] = { ...extraDefsToDefine };\n\n  return { ...def };\n};\n","import type { AppState } from \"@appsmith/reducers\";\nimport { get } from \"lodash\";\nimport type { LintError } from \"utils/DynamicBindingUtils\";\n\nconst emptyLint: LintError[] = [];\n\nexport const getEntityLintErrors = (state: AppState, path?: string) => {\n  if (!path) return emptyLint;\n  return get(state.linting.errors, path, emptyLint);\n};\n","import CodeMirror from \"codemirror\";\nimport { getPlatformOS } from \"utils/helpers\";\nimport type { TEditorModes } from \"../EditorConfig\";\nimport { EditorModes } from \"../EditorConfig\";\nimport { isSqlMode } from \"../sql/config\";\nimport { KEYBOARD_SHORTCUTS_BY_PLATFORM } from \"./keyboardShortcutConstants\";\n\nexport const getCodeCommentKeyMap = () => {\n  const platformOS = getPlatformOS() || \"default\";\n  return KEYBOARD_SHORTCUTS_BY_PLATFORM[platformOS].codeComment;\n};\n\nexport function getLineCommentString(editorMode: TEditorModes) {\n  return isSqlMode(editorMode) ? \"--\" : \"//\";\n}\n\n// Most of the code below is copied from https://github.com/codemirror/codemirror5/blob/master/addon/comment/comment.js\n// with minor modifications to support commenting in JS fields with {{ }} syntax\n// CodeMirror's APIs don't allow such things, so copied functions and overrode them\n\n/** Get end of line for line comment */\nfunction getEndLineForLineComment(\n  from: CodeMirror.Position,\n  to: CodeMirror.Position,\n  cm: CodeMirror.Editor,\n) {\n  return Math.min(\n    to.ch != 0 || to.line == from.line ? to.line + 1 : to.line,\n    cm.lastLine() + 1,\n  );\n}\n\n/** Get end of line for line comment */\nfunction getEndLineForLineUncomment(\n  from: CodeMirror.Position,\n  to: CodeMirror.Position,\n  cm: CodeMirror.Editor,\n) {\n  return Math.min(\n    to.ch != 0 || to.line == from.line ? to.line : to.line - 1,\n    cm.lastLine() + 1,\n  );\n}\n\nconst JS_FIELD_BEGIN = \"{{\";\nconst JS_FIELD_END = \"}}\";\n\nconst nonWhitespace = /[^\\s\\u00a0]/;\n\nconst noOptions: CodeMirror.CommentOptions = {};\n\n/**\n * Gives index of the first non whitespace character in the line\n **/\nfunction firstNonWhitespace(str: string, mode: TEditorModes) {\n  const found = str.search(\n    (\n      [EditorModes.JAVASCRIPT, EditorModes.TEXT_WITH_BINDING] as TEditorModes[]\n    ).includes(mode) && str.includes(JS_FIELD_BEGIN)\n      ? JS_FIELD_BEGIN\n      : nonWhitespace,\n  );\n  return found === -1 ? 0 : found;\n}\n\n// Rough heuristic to try and detect lines that are part of multi-line string\nfunction probablyInsideString(\n  cm: CodeMirror.Editor,\n  pos: CodeMirror.Position,\n  line: string,\n) {\n  return (\n    /\\bstring\\b/.test(cm.getTokenTypeAt(CodeMirror.Pos(pos.line, 0))) &&\n    !/^[\\'\\\"\\`]/.test(line)\n  );\n}\n\nfunction performLineCommenting(\n  // this is a fake parameter to specify type for this\n  // https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-0.html#specifying-the-type-of-this-for-functions\n  this: CodeMirror.Editor,\n  from: CodeMirror.Position,\n  to: CodeMirror.Position,\n  options = noOptions,\n) {\n  // eslint-disable-next-line @typescript-eslint/no-this-alias\n  const self: CodeMirror.Editor = this as any;\n  const mode = self.getMode();\n  const firstLine = self.getLine(from.line);\n  if (firstLine === null || probablyInsideString(self, from, firstLine)) return;\n\n  // When mode is TEXT, the name is null string, we skip commenting\n  const commentString =\n    mode.name === EditorModes.TEXT_WITH_BINDING &&\n    !(firstLine.includes(JS_FIELD_BEGIN) || firstLine.includes(JS_FIELD_END))\n      ? \"\"\n      : options.lineComment || mode.lineComment;\n\n  if (!commentString) {\n    if (options.blockCommentStart || mode.blockCommentStart) {\n      options.fullLines = true;\n      self.blockComment(from, to, options);\n    }\n    return;\n  }\n\n  const end = getEndLineForLineComment(from, to, self);\n  const padding = options.padding || \" \";\n  const blankLines = options.commentBlankLines || from.line === to.line;\n\n  self.operation(function () {\n    if (options.indent) {\n      for (let i = from.line; i < end; ++i) {\n        const line = self.getLine(i);\n\n        const baseString =\n          line.search(nonWhitespace) === -1\n            ? line\n            : line.slice(\n                0,\n                firstNonWhitespace(\n                  line,\n                  // When there is JS bindings inside SQL, the mode is JAVASCRIPT instead of SQL\n                  // we need to explicitly check if the SQL comment string is passed, make the mode SQL\n                  commentString === getLineCommentString(EditorModes.SQL)\n                    ? EditorModes.SQL\n                    : (mode.name as TEditorModes),\n                ),\n              );\n\n        const offset = (baseString || \"\").length;\n\n        if (!blankLines && !nonWhitespace.test(line)) continue;\n\n        // Handle JS field lines starting with {{\n        if (line.slice(offset).startsWith(JS_FIELD_BEGIN)) {\n          self.replaceRange(\n            baseString + JS_FIELD_BEGIN + commentString + padding,\n            CodeMirror.Pos(i, 0),\n            CodeMirror.Pos(i, offset + JS_FIELD_BEGIN.length),\n          );\n          continue;\n        }\n\n        self.replaceRange(\n          baseString + commentString + padding,\n          CodeMirror.Pos(i, 0),\n          CodeMirror.Pos(i, offset),\n        );\n      }\n    } else {\n      for (let i = from.line; i < end; ++i) {\n        const line = self.getLine(i);\n        if (blankLines || nonWhitespace.test(line)) {\n          // Handle JS field lines starting with {{\n          if (line.startsWith(JS_FIELD_BEGIN)) {\n            self.replaceRange(\n              commentString + padding,\n              CodeMirror.Pos(i, JS_FIELD_BEGIN.length),\n            );\n            continue;\n          }\n\n          self.replaceRange(commentString + padding, CodeMirror.Pos(i, 0));\n        }\n      }\n    }\n  });\n}\n\nfunction performLineUncommenting(\n  // this is a fake parameter to specify type for this\n  // https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-0.html#specifying-the-type-of-this-for-functions\n  this: CodeMirror.Editor,\n  from: CodeMirror.Position,\n  to: CodeMirror.Position,\n  options = noOptions,\n) {\n  // eslint-disable-next-line @typescript-eslint/no-this-alias\n  const self = this;\n  const mode = self.getMode();\n  const end = getEndLineForLineUncomment(from, to, self);\n  const start = Math.min(from.line, end);\n\n  // Try finding line comments\n  const lineString = options.lineComment || mode.lineComment;\n  const lines: string[] = [];\n  const padding = options.padding || \" \";\n  let didCommentCode;\n  lineComment: {\n    if (!lineString) break lineComment;\n    for (let i = start; i <= end; ++i) {\n      const line = self.getLine(i);\n      const found = line.indexOf(lineString);\n\n      if (found == -1 && nonWhitespace.test(line)) break lineComment;\n      if (\n        found > -1 &&\n        // Handle JS fields with {{}}\n        !line.trim().includes(JS_FIELD_BEGIN) &&\n        nonWhitespace.test(line.slice(0, found))\n      )\n        break lineComment;\n      lines.push(line);\n    }\n    self.operation(function () {\n      for (let i = start; i <= end; ++i) {\n        const line = lines[i - start];\n        const pos = line.indexOf(lineString);\n        let endPos = pos + lineString.length;\n        if (pos < 0) continue;\n        if (line.slice(endPos, endPos + padding.length) == padding)\n          endPos += padding.length;\n        didCommentCode = true;\n        self.replaceRange(\n          \"\",\n          CodeMirror.Pos(i, pos),\n          CodeMirror.Pos(i, endPos),\n        );\n      }\n    });\n    if (didCommentCode) return true;\n  }\n\n  // Try block comments\n  const startString = options.blockCommentStart || mode.blockCommentStart;\n  const endString = options.blockCommentEnd || mode.blockCommentEnd;\n  if (!startString || !endString) return false;\n  const blockCommentLead = options.blockCommentLead || mode.blockCommentLead;\n  const startLine = self.getLine(start);\n  const open = startLine.indexOf(startString);\n  if (open == -1) return false;\n  const endLine = end === start ? startLine : self.getLine(end);\n  const close = endLine.indexOf(\n    endString,\n    end === start ? open + startString.length : 0,\n  );\n  const insideStart = CodeMirror.Pos(start, open + 1),\n    insideEnd = CodeMirror.Pos(end, close + 1);\n  if (\n    close === -1 ||\n    !/comment/.test(self.getTokenTypeAt(insideStart)) ||\n    !/comment/.test(self.getTokenTypeAt(insideEnd)) ||\n    self.getRange(insideStart, insideEnd, \"\\n\").indexOf(endString) > -1\n  )\n    return false;\n\n  // Avoid killing block comments completely outside the selection.\n  // Positions of the last startString before the start of the selection, and the first endString after it.\n  let lastStart = startLine.lastIndexOf(startString, from.ch);\n  let firstEnd =\n    lastStart === -1\n      ? -1\n      : startLine\n          .slice(0, from.ch)\n          .indexOf(endString, lastStart + startString.length);\n  if (\n    lastStart !== -1 &&\n    firstEnd !== -1 &&\n    firstEnd + endString.length != from.ch\n  )\n    return false;\n  // Positions of the first endString after the end of the selection, and the last startString before it.\n  firstEnd = endLine.indexOf(endString, to.ch);\n  const almostLastStart = endLine\n    .slice(to.ch)\n    .lastIndexOf(startString, firstEnd - to.ch);\n  lastStart =\n    firstEnd === -1 || almostLastStart === -1 ? -1 : to.ch + almostLastStart;\n  if (firstEnd !== -1 && lastStart != -1 && lastStart !== to.ch) return false;\n\n  self.operation(function () {\n    self.replaceRange(\n      \"\",\n      CodeMirror.Pos(\n        end,\n        close -\n          (padding && endLine.slice(close - padding.length, close) == padding\n            ? padding.length\n            : 0),\n      ),\n      CodeMirror.Pos(end, close + endString.length),\n    );\n    let openEnd = open + startString.length;\n    if (\n      padding &&\n      startLine.slice(openEnd, openEnd + padding.length) == padding\n    )\n      openEnd += padding.length;\n    self.replaceRange(\n      \"\",\n      CodeMirror.Pos(start, open),\n      CodeMirror.Pos(start, openEnd),\n    );\n    if (blockCommentLead) {\n      for (let i = start + 1; i <= end; ++i) {\n        const line = self.getLine(i);\n        const found = line.indexOf(blockCommentLead);\n        if (found == -1 || nonWhitespace.test(line.slice(0, found))) continue;\n        let foundEnd = found + blockCommentLead.length;\n        if (\n          padding &&\n          line.slice(foundEnd, foundEnd + padding.length) == padding\n        )\n          foundEnd += padding.length;\n        self.replaceRange(\n          \"\",\n          CodeMirror.Pos(i, found),\n          CodeMirror.Pos(i, foundEnd),\n        );\n      }\n    }\n  });\n  return true;\n}\n\n/** This function handles commenting which includes functions copied from comment add on with modifications */\nexport const handleCodeComment =\n  (lineCommentingString: string) => (cm: CodeMirror.Editor) => {\n    cm.lineComment = performLineCommenting;\n\n    cm.uncomment = performLineUncommenting;\n\n    // This is the actual command that does the comment toggling\n    cm.toggleComment({\n      commentBlankLines: true,\n      // Always provide the line comment, otherwise it'll not work for JS fields when\n      // the mode is set to text/plain (when whole text wrapped in {{}} is selected)\n      lineComment: lineCommentingString,\n      indent: true,\n    });\n  };\n","import styled from \"styled-components\";\n\nexport const reactJsonProps = {\n  name: null,\n  enableClipboard: false,\n  displayDataTypes: false,\n  displayArrayKey: true,\n  quotesOnKeys: false,\n  style: {\n    fontSize: \"10px\",\n  },\n  collapsed: 1,\n  indentWidth: 2,\n  collapseStringsAfterLength: 30,\n};\n\nexport const JsonWrapper = styled.div`\n  // all ellipsis font size\n  .node-ellipsis,\n  .function-collapsed span:nth-child(2),\n  .string-value span {\n    font-size: 10px !important;\n  }\n\n  // disable and hide first object collapser\n  .pretty-json-container\n    > .object-content:first-of-type\n    > .object-key-val:first-of-type\n    > span {\n    pointer-events: none !important;\n    .icon-container {\n      display: none !important;\n    }\n  }\n\n  .pretty-json-container {\n    font-family: ${(props) => props.theme.fonts.code};\n  }\n\n  // collapse icon color change and alignment\n  .icon-container {\n    width: 10px !important;\n    height: 8px !important;\n    svg {\n      color: var(--appsmith-color-black-600) !important;\n    }\n  }\n\n  // font-sizes and alignments\n  .pushed-content.object-container {\n    .object-content {\n      padding-left: 4px !important;\n      .variable-row {\n        padding-top: 0 !important;\n        padding-bottom: 0 !important;\n        border-left: 0 !important;\n        .variable-value div {\n          font-size: 10px !important;\n          padding-top: 0 !important;\n          padding-bottom: 0 !important;\n        }\n      }\n      .object-key-val {\n        padding-top: 0 !important;\n        padding-bottom: 0 !important;\n        padding-left: 0 !important;\n        border-left: 0 !important;\n      }\n    }\n  }\n\n  // disabling function collapse and neutral styling\n  .rjv-function-container {\n    pointer-events: none;\n    font-weight: normal !important;\n    > span:first-child:before {\n      // In prod build, for some reason react-json-viewer\n      // misses adding this opening braces for function\n      content: \"(\";\n    }\n    .function-collapsed {\n      font-weight: normal !important;\n      span:nth-child(1) {\n        display: none; // hiding extra braces\n      }\n      span:nth-child(2) {\n        color: #393939 !important;\n      }\n    }\n  }\n  div:has(.rjv-function-container) {\n    cursor: default !important;\n  }\n`;\n","export interface OccupiedSpace {\n  left: number;\n  right: number;\n  top: number;\n  bottom: number;\n  id: string;\n  parentId?: string;\n}\n\nexport interface WidgetSpace {\n  left: number;\n  right: number;\n  top: number;\n  bottom: number;\n  id: string;\n  type: string;\n  parentId?: string;\n  isDropTarget?: boolean;\n  fixedHeight?: number;\n}\n\nexport const zIndexLayers = {\n  PROPERTY_PANE: \"z-[3]\",\n  ENTITY_EXPLORER: \"z-[3]\",\n  RESIZER: \"z-[4]\",\n  PEEK_OVERLAY: \"z-[10]\", // to hover over the header\n};\n","import type { MouseEventHandler } from \"react\";\nimport AnalyticsUtil from \"@appsmith/utils/AnalyticsUtil\";\n\nexport const objectCollapseAnalytics: MouseEventHandler = (ev) => {\n  /*\n   * Analytics events to be logged whenever user clicks on\n   * react json viewer's controls to expand or collapse object/array\n   */\n  const targetNode = ev.target as HTMLElement;\n\n  if (\n    // collapse/expand icon click, object key click\n    targetNode.parentElement?.parentElement?.parentElement?.firstElementChild?.classList.contains(\n      \"icon-container\",\n    ) ||\n    // : click\n    targetNode.parentElement?.parentElement?.firstElementChild?.classList.contains(\n      \"icon-container\",\n    ) ||\n    // { click\n    targetNode.parentElement?.firstElementChild?.classList.contains(\n      \"icon-container\",\n    ) ||\n    // ellipsis click\n    targetNode.classList.contains(\"node-ellipsis\") ||\n    // collapse/expand icon - svg path click\n    targetNode.parentElement?.parentElement?.classList.contains(\n      \"collapsed-icon\",\n    ) ||\n    targetNode.parentElement?.parentElement?.classList.contains(\"expanded-icon\")\n  ) {\n    AnalyticsUtil.logEvent(\"PEEK_OVERLAY_COLLAPSE_EXPAND_CLICK\");\n  }\n};\n\nexport const textSelectAnalytics = () => {\n  AnalyticsUtil.logEvent(\"PEEK_OVERLAY_VALUE_COPIED\");\n};\n","import _ from \"lodash\";\n\nexport const isTernFunctionDef = (data: any) =>\n  typeof data === \"string\" && /^fn\\((?:[\\w,: \\(\\)->])*\\) -> [\\w]*$/.test(data);\n\nexport const createObjectPeekData = (\n  defs: any,\n  data: any,\n  peekData: any,\n  parentKey: string,\n) => {\n  Object.keys(defs).forEach((key: string) => {\n    if (key.startsWith(\"!\")) return;\n    const childKeyPathArray = [parentKey, key];\n    if (\n      isObject(defs[key]) &&\n      Object.keys(defs[key]).filter((k) => !k.startsWith(\"!\")).length > 0\n    ) {\n      peekData[key] = {};\n      const result = createObjectPeekData(\n        defs[key],\n        data[key],\n        peekData[key],\n        key,\n      );\n      _.set(peekData, childKeyPathArray, result.peekData);\n    } else {\n      peekData[key] = isTernFunctionDef(defs[key])\n        ? // eslint-disable-next-line @typescript-eslint/no-empty-function\n          function () {} // tern inference required here\n        : data[key];\n    }\n  });\n  return { peekData };\n};\n\nconst isObject = (data: any) =>\n  typeof data === \"object\" && !Array.isArray(data) && data !== null;\n","import { entityDefinitions } from \"@appsmith/utils/autocomplete/EntityDefinitions\";\nimport type { AppsmithEntity } from \"@appsmith/entities/DataTree/types\";\nimport type { DataTree } from \"entities/DataTree/dataTreeTypes\";\nimport { createObjectPeekData } from \"./Common\";\n\nexport const getAppsmithPeekData = (dataTree: DataTree) => {\n  const defs: any = entityDefinitions.APPSMITH(\n    dataTree.appsmith as AppsmithEntity,\n    {},\n  );\n  return createObjectPeekData(defs, dataTree.appsmith, {}, \"appsmith\");\n};\n","import { ENTITY_TYPE } from \"entities/DataTree/dataTreeFactory\";\nimport type {\n  ActionEntity,\n  WidgetEntity,\n} from \"@appsmith/entities/DataTree/types\";\nimport { getActionChildrenPeekData } from \"utils/FilterInternalProperties/Action\";\nimport { getAppsmithPeekData } from \"utils/FilterInternalProperties/Appsmith\";\nimport { getJsActionPeekData } from \"utils/FilterInternalProperties/JsAction\";\nimport { getWidgetChildrenPeekData } from \"utils/FilterInternalProperties/Widget\";\nimport type {\n  ConfigTree,\n  DataTree,\n  DataTreeEntity,\n} from \"entities/DataTree/dataTreeTypes\";\nimport type { JSCollectionDataState } from \"@appsmith/reducers/entityReducers/jsActionsReducer\";\n\nexport const getEntityPeekData: Record<\n  string,\n  (props: {\n    objectName: string;\n    dataTreeEntity: DataTreeEntity;\n    jsActions: JSCollectionDataState;\n    dataTree: DataTree;\n    configTree: ConfigTree;\n  }) => unknown\n> = {\n  [ENTITY_TYPE.ACTION]: ({ dataTree, objectName }) => {\n    return getActionChildrenPeekData(objectName, dataTree)?.peekData;\n  },\n  [ENTITY_TYPE.APPSMITH]: ({ dataTree }) => {\n    return getAppsmithPeekData(dataTree).peekData;\n  },\n  [ENTITY_TYPE.JSACTION]: ({ dataTree, dataTreeEntity, jsActions }) => {\n    const entity = dataTreeEntity as ActionEntity;\n    const jsAction = jsActions.find(\n      (jsAction) => jsAction.config.id === entity.actionId,\n    );\n    return jsAction\n      ? getJsActionPeekData(jsAction, dataTree)?.peekData\n      : entity;\n  },\n  [ENTITY_TYPE.WIDGET]: ({\n    configTree,\n    dataTree,\n    dataTreeEntity,\n    objectName,\n  }) => {\n    const entity = dataTreeEntity as WidgetEntity;\n    return getWidgetChildrenPeekData(\n      objectName,\n      entity.type,\n      dataTree,\n      configTree,\n    )?.peekData;\n  },\n};\n","import { entityDefinitions } from \"@appsmith/utils/autocomplete/EntityDefinitions\";\nimport type { ActionEntity } from \"@appsmith/entities/DataTree/types\";\nimport type { DataTree } from \"entities/DataTree/dataTreeTypes\";\n\nexport const getActionChildrenPeekData = (\n  actionName: string,\n  dataTree: DataTree,\n) => {\n  const dataTreeAction = dataTree[actionName] as ActionEntity;\n  if (dataTreeAction) {\n    const definitions = entityDefinitions.ACTION(dataTreeAction, {});\n    const peekData: Record<string, unknown> = {};\n    Object.keys(definitions).forEach((key) => {\n      if (key.indexOf(\"!\") === -1) {\n        if (key === \"data\" || key === \"isLoading\" || key === \"responseMeta\") {\n          peekData[key] = dataTreeAction[key];\n        } else if (key === \"run\" || key === \"clear\") {\n          // eslint-disable-next-line @typescript-eslint/no-empty-function\n          peekData[key] = function () {}; // tern inference required here\n        }\n      }\n    });\n\n    return { peekData };\n  }\n};\n","import type { JSActionEntity } from \"@appsmith/entities/DataTree/types\";\nimport type { DataTree } from \"entities/DataTree/dataTreeTypes\";\nimport type { JSCollectionData } from \"@appsmith/reducers/entityReducers/jsActionsReducer\";\n\nexport const getJsActionPeekData = (\n  jsAction: JSCollectionData,\n  dataTree: DataTree,\n) => {\n  const peekData: Record<string, unknown> = {};\n\n  const dataTreeAction = dataTree[jsAction.config.name] as JSActionEntity;\n\n  if (dataTreeAction) {\n    jsAction.config.actions.forEach((jsChild) => {\n      // eslint-disable-next-line @typescript-eslint/no-empty-function\n      peekData[jsChild.name] = function () {};\n\n      if (jsAction.data?.[jsChild.id] && jsChild.executeOnLoad) {\n        (peekData[jsChild.name] as any).data = jsAction.data[jsChild.id];\n      }\n    });\n\n    const variables = jsAction.config.variables || [];\n\n    variables.forEach((jsChild) => {\n      if (dataTreeAction) peekData[jsChild.name] = dataTreeAction[jsChild.name];\n    });\n\n    return { peekData };\n  }\n};\n","import type {\n  WidgetEntity,\n  WidgetEntityConfig,\n} from \"@appsmith/entities/DataTree/types\";\nimport type { ConfigTree, DataTree } from \"entities/DataTree/dataTreeTypes\";\nimport type { EntityDefinitionsOptions } from \"@appsmith/utils/autocomplete/EntityDefinitions\";\nimport { isFunction } from \"lodash\";\nimport type { Def } from \"tern\";\nimport WidgetFactory from \"WidgetProvider/factory\";\nimport { addSettersToDefinitions } from \"utils/autocomplete/defCreatorUtils\";\n\nexport const getWidgetChildrenPeekData = (\n  widgetName: string,\n  widgetType: string,\n  dataTree: DataTree,\n  configTree: ConfigTree,\n) => {\n  const peekData: Record<string, unknown> = {};\n  const dataTreeWidget: WidgetEntity = dataTree[widgetName] as WidgetEntity;\n  const widgetConfig = configTree[widgetName];\n\n  if (widgetType !== \"FORM_WIDGET\" && dataTreeWidget) {\n    const type: Exclude<\n      EntityDefinitionsOptions,\n      | \"CANVAS_WIDGET\"\n      | \"ICON_WIDGET\"\n      | \"SKELETON_WIDGET\"\n      | \"TABS_MIGRATOR_WIDGET\"\n    > = dataTreeWidget.type as any;\n    let config: any = WidgetFactory.getAutocompleteDefinitions(type);\n    if (config) {\n      if (isFunction(config)) config = config(dataTreeWidget);\n\n      // Need to add this in order to add the setters to the definitions which will appear in the peekOverlay\n      addSettersToDefinitions(\n        config as Def,\n        dataTreeWidget,\n        configTree[widgetName] as WidgetEntityConfig,\n      );\n\n      const widgetProps = Object.keys(config).filter(\n        (k) => k.indexOf(\"!\") === -1,\n      );\n\n      widgetProps.forEach((prop) => {\n        const data = dataTreeWidget[prop];\n\n        let setterNames: string[] = [];\n\n        if (widgetConfig.__setters) {\n          setterNames = Object.keys(widgetConfig.__setters);\n        }\n        if (setterNames.includes(prop)) {\n          // eslint-disable-next-line @typescript-eslint/no-empty-function\n          peekData[prop] = function () {}; // tern inference required here\n        } else {\n          peekData[prop] = data;\n        }\n      });\n    }\n  }\n  return { peekData };\n};\n","import type { MutableRefObject } from \"react\";\nimport { useState } from \"react\";\nimport React, { useEffect, useRef } from \"react\";\nimport ReactJson from \"react-json-view\";\nimport { JsonWrapper, reactJsonProps } from \"./JsonWrapper\";\nimport { componentWillAppendToBody } from \"react-append-to-body\";\nimport _, { debounce } from \"lodash\";\nimport { zIndexLayers } from \"constants/CanvasEditorConstants\";\nimport { objectCollapseAnalytics, textSelectAnalytics } from \"./Analytics\";\nimport { Divider } from \"design-system\";\nimport { useSelector } from \"react-redux\";\nimport { getConfigTree, getDataTree } from \"selectors/dataTreeSelectors\";\nimport { filterInternalProperties } from \"utils/FilterInternalProperties\";\nimport { getJSCollections } from \"@appsmith/selectors/entitiesSelector\";\n\nexport interface PeekOverlayStateProps {\n  objectName: string;\n  propertyPath: string[];\n  position: DOMRect;\n  textWidth: number;\n}\n\n/*\n * using `componentWillAppendToBody` to work with variable height for peek overlay\n * we need a container that doesn't apply `position: absolute` to itself with zero height (bp3-portal does this)\n * Because then, child elements cannot be positioned using `bottom` property\n * with `react-append-to-body`, the container won't have `position: absolute`\n * instead we're applying it to the child element `<div>` directly, hence we can position using `bottom` property.\n */\nexport const PeekOverlayPopUp = componentWillAppendToBody(\n  PeekOverlayPopUpContent,\n);\n\nexport const PEEK_OVERLAY_DELAY = 200;\n\nconst getPropertyData = (src: unknown, propertyPath: string[]) => {\n  return propertyPath.length > 0 ? _.get(src, propertyPath) : src;\n};\n\nconst getDataTypeHeader = (data: unknown) => {\n  const dataType = typeof data;\n  if (dataType === \"object\") {\n    if (Array.isArray(data)) return \"array\";\n    if (data === null) return \"null\";\n  }\n  return dataType;\n};\n\nexport function PeekOverlayPopUpContent(\n  props: PeekOverlayStateProps & {\n    hidePeekOverlay: () => void;\n  },\n) {\n  const CONTAINER_MAX_HEIGHT_PX = 252;\n  const dataWrapperRef: MutableRefObject<HTMLDivElement | null> = useRef(null);\n  const dataTree = useSelector(getDataTree);\n  const configTree = useSelector(getConfigTree);\n  const jsActions = useSelector(getJSCollections);\n\n  const filteredData = filterInternalProperties(\n    props.objectName,\n    dataTree[props.objectName],\n    jsActions,\n    dataTree,\n    configTree,\n  );\n\n  // Because getPropertyData can return a function\n  // And we don't want to execute it.\n  const [jsData] = useState(() =>\n    getPropertyData(filteredData, props.propertyPath),\n  );\n\n  const [dataType] = useState(getDataTypeHeader(jsData));\n\n  useEffect(() => {\n    const wheelCallback = () => {\n      props.hidePeekOverlay();\n    };\n\n    window.addEventListener(\"wheel\", wheelCallback);\n    return () => {\n      window.removeEventListener(\"wheel\", wheelCallback);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!dataWrapperRef.current) return;\n    dataWrapperRef.current.addEventListener(\"copy\", textSelectAnalytics);\n    return () =>\n      dataWrapperRef.current?.removeEventListener(\"copy\", textSelectAnalytics);\n  }, [dataWrapperRef, dataWrapperRef.current]);\n\n  const debouncedHide = debounce(\n    () => props.hidePeekOverlay(),\n    PEEK_OVERLAY_DELAY,\n  );\n\n  const getLeftPosition = (position: DOMRect) => {\n    let left = position.right - 300;\n    if (left < 0) left = 8;\n    return left;\n  };\n  return (\n    <div\n      className={`absolute ${zIndexLayers.PEEK_OVERLAY}`}\n      id=\"t--peek-overlay-container\"\n      onMouseEnter={() => debouncedHide.cancel()}\n      onMouseLeave={() => debouncedHide()}\n      onWheel={(ev) => ev.stopPropagation()}\n      style={{\n        minHeight: \"46px\",\n        maxHeight: `${CONTAINER_MAX_HEIGHT_PX}px`,\n        width: \"300px\",\n        backgroundColor: \"var(--ads-v2-color-bg)\",\n        boxShadow: \"0px 0px 10px #0000001A\", // color used from designs\n        borderRadius: \"var(--ads-v2-border-radius)\",\n        left: `${getLeftPosition(props.position)}px`,\n        ...(props.position.top >= CONTAINER_MAX_HEIGHT_PX\n          ? {\n              bottom: `calc(100vh - ${props.position.top}px)`,\n            }\n          : {\n              top: `${props.position.bottom}px`,\n            }),\n      }}\n    >\n      <div\n        className=\"first-letter:uppercase\"\n        style={{\n          height: \"24px\",\n          color: \"var(--appsmith-color-black-700)\",\n          padding: \"4px 0px 4px 12px\",\n          fontSize: \"10px\",\n        }}\n      >\n        {dataType}\n      </div>\n      <Divider style={{ display: \"block\" }} />\n      <div\n        id=\"t--peek-overlay-data\"\n        ref={dataWrapperRef}\n        style={{\n          minHeight: \"20px\",\n          padding: \"2px 0px 2px 12px\",\n          fontSize: \"10px\",\n        }}\n      >\n        {(dataType === \"object\" || dataType === \"array\") && jsData !== null && (\n          <JsonWrapper\n            onClick={objectCollapseAnalytics}\n            style={{\n              minHeight: \"20px\",\n              maxHeight: \"225px\",\n              overflowY: \"auto\",\n            }}\n          >\n            <ReactJson src={jsData} {...reactJsonProps} />\n          </JsonWrapper>\n        )}\n        {dataType === \"function\" && <div>{(jsData as any).toString()}</div>}\n        {dataType === \"boolean\" && <div>{(jsData as any).toString()}</div>}\n        {dataType === \"string\" && <div>{(jsData as any).toString()}</div>}\n        {dataType === \"number\" && <div>{(jsData as any).toString()}</div>}\n        {((dataType !== \"object\" &&\n          dataType !== \"function\" &&\n          dataType !== \"boolean\" &&\n          dataType !== \"string\" &&\n          dataType !== \"array\" &&\n          dataType !== \"number\") ||\n          jsData === null) && (\n          <div>\n            {(jsData as any)?.toString() ?? jsData ?? jsData === undefined\n              ? \"undefined\"\n              : \"null\"}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","import { getEntityPeekData } from \"@appsmith/utils/FilterInternalProperties/getEntityPeekData\";\nimport type {\n  ConfigTree,\n  DataTree,\n  DataTreeEntity,\n} from \"entities/DataTree/dataTreeTypes\";\nimport type { JSCollectionDataState } from \"@appsmith/reducers/entityReducers/jsActionsReducer\";\n\nexport const filterInternalProperties = (\n  objectName: string,\n  dataTreeEntity: DataTreeEntity,\n  jsActions: JSCollectionDataState,\n  dataTree: DataTree,\n  configTree: ConfigTree,\n) => {\n  const peekDataGetterMethod = getEntityPeekData[dataTreeEntity.ENTITY_TYPE];\n\n  if (!peekDataGetterMethod) return dataTreeEntity;\n\n  return peekDataGetterMethod({\n    configTree,\n    dataTree,\n    dataTreeEntity,\n    jsActions,\n    objectName,\n  });\n};\n","import type { CodeEditorExpected } from \"components/editorComponents/CodeEditor\";\nimport type {\n  FieldEntityInformation,\n  TEditorModes,\n} from \"components/editorComponents/CodeEditor/EditorConfig\";\nimport type { EntityNavigationData } from \"selectors/navigationSelectors\";\nimport React from \"react\";\nimport type CodeMirror from \"codemirror\";\n\nexport type AIEditorContext = Partial<{\n  functionName: string;\n  cursorLineNumber: number;\n  functionString: string;\n  cursorPosition: CodeMirror.Position;\n  cursorCoordinates: {\n    left: number;\n    top: number;\n    bottom: number;\n  };\n  mode: string;\n}>;\n\nexport interface TAIWrapperProps {\n  children?: React.ReactNode;\n  isOpen: boolean;\n  currentValue: string;\n  update?: (...args: any) => void;\n  triggerContext?: CodeEditorExpected;\n  enableAIAssistance: boolean;\n  dataTreePath?: string;\n  mode: TEditorModes;\n  entity: FieldEntityInformation;\n  entitiesForNavigation: EntityNavigationData;\n  editor: CodeMirror.Editor;\n  onOpenChanged: (isOpen: boolean) => void;\n}\n\nexport function AIWindow(props: TAIWrapperProps) {\n  const { children } = props;\n  //eslint-disable-next-line\n  return <>{children}</>;\n}\n","import type {\n  FieldEntityInformation,\n  TEditorModes,\n} from \"components/editorComponents/CodeEditor/EditorConfig\";\n\ninterface AskAIButtonProps {\n  mode: TEditorModes;\n  onClick: () => void;\n  entity: FieldEntityInformation;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function AskAIButton(props: AskAIButtonProps) {\n  return null;\n}\n","import React, { useRef } from \"react\";\nimport styled from \"styled-components\";\nimport type { EditorTheme } from \"./EditorConfig\";\n\nconst Wrapper = styled.span<{\n  visible: boolean;\n  bottomOffset: number;\n  customMessage: boolean;\n  editorTheme?: EditorTheme;\n}>`\n  padding: ${(props) => (props.customMessage ? 6 : 8)}px;\n  font-size: 12px;\n  color: var(--ads-v2-color-fg-muted);\n  box-shadow: var(--ads-v2-shadow-popovers);\n  border-radius: var(--ads-v2-border-radius);\n  background-color: var(--ads-v2-color-bg-muted);\n  position: absolute;\n  bottom: ${(props) => props.bottomOffset}px;\n  transform: translateY(100%);\n  width: 100%;\n  line-height: 13px;\n  visibility: ${(props) => (props.visible ? \"visible\" : \"hidden\")};\n  z-index: 3;\n`;\n\nfunction BindingPrompt(props: {\n  promptMessage?: React.ReactNode | string;\n  isOpen: boolean;\n  editorTheme?: EditorTheme;\n  showLightningMenu?: boolean;\n}): JSX.Element {\n  const promptRef = useRef<HTMLDivElement>(null);\n  const customMessage = !!props.promptMessage;\n  const bottomOffset = customMessage ? 6 : -2;\n\n  return (\n    <Wrapper\n      bottomOffset={bottomOffset}\n      className=\"t--no-binding-prompt\"\n      customMessage={customMessage}\n      editorTheme={props.editorTheme}\n      ref={promptRef}\n      visible={props.isOpen}\n    >\n      {props.promptMessage ? (\n        props.promptMessage\n      ) : (\n        <>\n          Type <span>{props.showLightningMenu === false ? \"{{\" : \"/\"}</span>{\" \"}\n          {props.showLightningMenu === false\n            ? \"to see a list of variables\"\n            : \"to access quick commands\"}\n        </>\n      )}\n    </Wrapper>\n  );\n}\n\nexport default BindingPrompt;\n","import BindingPrompt from \"components/editorComponents/CodeEditor/BindingPrompt\";\nimport type {\n  EditorTheme,\n  TEditorModes,\n} from \"components/editorComponents/CodeEditor/EditorConfig\";\nimport React from \"react\";\n\nexport function CodeEditorSignPosting(props: {\n  promptMessage?: React.ReactNode | string;\n  isOpen?: boolean;\n  editorTheme?: EditorTheme;\n  showLightningMenu?: boolean;\n  mode: TEditorModes;\n  forComp?: string;\n}): JSX.Element {\n  return (\n    <BindingPrompt\n      editorTheme={props.editorTheme}\n      isOpen={props.isOpen || false}\n      promptMessage={props.promptMessage}\n      showLightningMenu={props.showLightningMenu}\n    />\n  );\n}\n","// A utility that returns a single instance of ResizeObserver to be used across the application.\n// This is to avoid creating multiple instances of ResizeObserver which can cause performance issues.\n\nimport ResizeObserver from \"resize-observer-polyfill\";\n\ntype ResizeObserCallback = (\n  entry: ResizeObserverEntry,\n  observer: ResizeObserver,\n) => void;\n\nclass SingletonResizeObserver {\n  private callbacksMap = new Map<Element, ResizeObserCallback[]>();\n  private static instance: SingletonResizeObserver;\n\n  constructor() {\n    if (SingletonResizeObserver.instance) {\n      throw new Error(\"SingletonResizeObserver is a singleton class\");\n    }\n    SingletonResizeObserver.instance = this;\n  }\n\n  private resizeObserver = new ResizeObserver((entries, observer) => {\n    entries.forEach((entry) => {\n      const callbacks = this.callbacksMap.get(entry.target) ?? [];\n      callbacks.forEach((callback) => callback(entry, observer));\n    });\n  });\n\n  /**\n   *\n   * @param target The element to observe\n   * @param callbacks The array of callbacks to be called when the element resizes\n   */\n  observe(target: Element, callbacks: ResizeObserCallback[]) {\n    this.resizeObserver.observe(target);\n    const _callbacks = this.callbacksMap.get(target) ?? [];\n    _callbacks.push(...callbacks);\n    this.callbacksMap.set(target, _callbacks);\n  }\n\n  /**\n   *\n   * @param target The element to unobserve\n   * @param callbacks The array of callbacks to be removed\n   */\n  unobserve(target: Element, callbacks: ResizeObserCallback[]) {\n    const _callbacks = this.callbacksMap.get(target) ?? [];\n    for (const item of callbacks) {\n      const index = _callbacks.indexOf(item);\n      if (index >= 0) {\n        _callbacks.splice(index, 1);\n      }\n    }\n    if (_callbacks.length === 0) {\n      this.resizeObserver.unobserve(target);\n      this.callbacksMap.delete(target);\n    }\n  }\n}\n\nconst resizeObserver = new SingletonResizeObserver();\n\nexport default resizeObserver;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport type { AppState } from \"@appsmith/reducers\";\nimport type {\n  Annotation,\n  EditorConfiguration,\n  UpdateLintingCallback,\n} from \"codemirror\";\nimport CodeMirror from \"codemirror\";\nimport \"codemirror/lib/codemirror.css\";\nimport \"codemirror/theme/duotone-dark.css\";\nimport \"codemirror/theme/duotone-light.css\";\nimport \"codemirror/addon/hint/show-hint\";\nimport \"codemirror/addon/edit/matchbrackets\";\nimport \"codemirror/addon/display/placeholder\";\nimport \"codemirror/addon/edit/closebrackets\";\nimport \"codemirror/addon/display/autorefresh\";\nimport \"codemirror/addon/mode/multiplex\";\nimport \"codemirror/addon/tern/tern.css\";\nimport \"codemirror/addon/lint/lint\";\nimport \"codemirror/addon/lint/lint.css\";\nimport \"codemirror/addon/comment/comment\";\nimport \"codemirror/mode/sql/sql.js\";\nimport \"codemirror/addon/hint/show-hint\";\nimport \"codemirror/addon/hint/show-hint.css\";\nimport \"codemirror/addon/hint/sql-hint\";\nimport \"codemirror/mode/css/css\";\nimport \"codemirror/mode/javascript/javascript\";\nimport \"codemirror/mode/htmlmixed/htmlmixed\";\nimport { getDataTreeForAutocomplete } from \"selectors/dataTreeSelectors\";\nimport EvaluatedValuePopup from \"components/editorComponents/CodeEditor/EvaluatedValuePopup\";\nimport type { WrappedFieldInputProps } from \"redux-form\";\nimport _, { debounce, isEqual, isNumber } from \"lodash\";\nimport scrollIntoView from \"scroll-into-view-if-needed\";\n\nimport { ENTITY_TYPE } from \"entities/DataTree/dataTreeFactory\";\nimport type { EvaluationSubstitutionType } from \"@appsmith/entities/DataTree/types\";\nimport type { DataTree } from \"entities/DataTree/dataTreeTypes\";\nimport { Skin } from \"constants/DefaultTheme\";\nimport AnalyticsUtil from \"@appsmith/utils/AnalyticsUtil\";\nimport \"components/editorComponents/CodeEditor/sql/customMimes\";\nimport \"components/editorComponents/CodeEditor/modes\";\nimport type {\n  CodeEditorBorder,\n  EditorConfig,\n  FieldEntityInformation,\n  Hinter,\n  HintHelper,\n  MarkHelper,\n} from \"components/editorComponents/CodeEditor/EditorConfig\";\nimport {\n  EditorModes,\n  EditorSize,\n  EditorTheme,\n  EditorThemes,\n  isCloseKey,\n  isModifierKey,\n  TabBehaviour,\n} from \"components/editorComponents/CodeEditor/EditorConfig\";\nimport {\n  DynamicAutocompleteInputWrapper,\n  EditorWrapper,\n  IconContainer,\n  PEEK_STYLE_PERSIST_CLASS,\n} from \"components/editorComponents/CodeEditor/styledComponents\";\nimport {\n  entityMarker,\n  NAVIGATE_TO_ATTRIBUTE,\n} from \"components/editorComponents/CodeEditor/MarkHelpers/entityMarker\";\nimport {\n  bindingHintHelper,\n  sqlHint,\n} from \"components/editorComponents/CodeEditor/hintHelpers\";\n\nimport { showBindingPrompt } from \"./BindingPromptHelper\";\nimport { Button } from \"design-system\";\nimport \"codemirror/addon/fold/brace-fold\";\nimport \"codemirror/addon/fold/foldgutter\";\nimport \"codemirror/addon/fold/foldgutter.css\";\nimport * as Sentry from \"@sentry/react\";\nimport type { EvaluationError, LintError } from \"utils/DynamicBindingUtils\";\nimport { getEvalErrorPath, isDynamicValue } from \"utils/DynamicBindingUtils\";\nimport {\n  addEventToHighlightedElement,\n  getInputValue,\n  removeEventFromHighlightedElement,\n  removeNewLineCharsIfRequired,\n  shouldShowSlashCommandMenu,\n} from \"./codeEditorUtils\";\nimport { slashCommandHintHelper } from \"./commandsHelper\";\nimport { getEntityNameAndPropertyPath } from \"@appsmith/workers/Evaluation/evaluationUtils\";\nimport { getPluginIdToPlugin } from \"sagas/selectors\";\nimport type { ExpectedValueExample } from \"utils/validation/common\";\nimport { getRecentEntityIds } from \"selectors/globalSearchSelectors\";\nimport type { AutocompleteDataType } from \"utils/autocomplete/AutocompleteDataType\";\nimport type { Placement } from \"@blueprintjs/popover2\";\nimport { getLintAnnotations, getLintTooltipDirection } from \"./lintHelpers\";\nimport { executeCommandAction } from \"actions/apiPaneActions\";\nimport { startingEntityUpdate } from \"actions/editorActions\";\nimport type { SlashCommandPayload } from \"entities/Action\";\nimport type { Indices } from \"constants/Layers\";\nimport { replayHighlightClass } from \"globalStyles/portals\";\nimport {\n  CURSOR_CLASS_NAME,\n  LINT_TOOLTIP_CLASS,\n  LINT_TOOLTIP_JUSTIFIED_LEFT_CLASS,\n  LintTooltipDirection,\n} from \"./constants\";\nimport {\n  autoIndentCode,\n  getAutoIndentShortcutKey,\n} from \"./utils/autoIndentUtils\";\nimport { getMoveCursorLeftKey } from \"./utils/cursorLeftMovement\";\nimport { interactionAnalyticsEvent } from \"utils/AppsmithUtils\";\nimport type { AdditionalDynamicDataTree } from \"utils/autocomplete/customTreeTypeDefCreator\";\nimport {\n  getCodeEditorLastCursorPosition,\n  getIsInputFieldFocused,\n} from \"selectors/editorContextSelectors\";\nimport type { CodeEditorFocusState } from \"actions/editorContextActions\";\nimport { setEditorFieldFocusAction } from \"actions/editorContextActions\";\nimport { updateCustomDef } from \"utils/autocomplete/customDefUtils\";\nimport { shouldFocusOnPropertyControl } from \"utils/editorContextUtils\";\nimport { getEntityLintErrors } from \"selectors/lintingSelectors\";\nimport { getCodeCommentKeyMap, handleCodeComment } from \"./utils/codeComment\";\nimport type { EntityNavigationData } from \"selectors/navigationSelectors\";\nimport { getEntitiesForNavigation } from \"selectors/navigationSelectors\";\nimport history, { NavigationMethod } from \"utils/history\";\nimport { CursorPositionOrigin } from \"@appsmith/reducers/uiReducers/editorContextReducer\";\nimport type { PeekOverlayStateProps } from \"./PeekOverlayPopup/PeekOverlayPopup\";\nimport {\n  PeekOverlayPopUp,\n  PEEK_OVERLAY_DELAY,\n} from \"./PeekOverlayPopup/PeekOverlayPopup\";\nimport ConfigTreeActions from \"utils/configTree\";\nimport {\n  getSaveAndAutoIndentKey,\n  saveAndAutoIndentCode,\n} from \"./utils/saveAndAutoIndent\";\nimport { getAssetUrl } from \"@appsmith/utils/airgapHelpers\";\nimport { selectFeatureFlags } from \"@appsmith/selectors/featureFlagsSelectors\";\nimport { AIWindow } from \"@appsmith/components/editorComponents/GPT\";\nimport { AskAIButton } from \"@appsmith/components/editorComponents/GPT/AskAIButton\";\nimport classNames from \"classnames\";\nimport { isAIEnabled } from \"@appsmith/components/editorComponents/GPT/trigger\";\nimport {\n  getAllDatasourceTableKeys,\n  selectInstalledLibraries,\n} from \"@appsmith/selectors/entitiesSelector\";\nimport { debug } from \"loglevel\";\nimport { PeekOverlayExpressionIdentifier, SourceType } from \"@shared/ast\";\nimport type { MultiplexingModeConfig } from \"components/editorComponents/CodeEditor/modes\";\nimport { MULTIPLEXING_MODE_CONFIGS } from \"components/editorComponents/CodeEditor/modes\";\nimport { getDeleteLineShortcut } from \"./utils/deleteLine\";\nimport { CodeEditorSignPosting } from \"@appsmith/components/editorComponents/CodeEditorSignPosting\";\nimport { getFocusablePropertyPaneField } from \"selectors/propertyPaneSelectors\";\nimport resizeObserver from \"utils/resizeObserver\";\nimport { EMPTY_BINDING } from \"../ActionCreator/constants\";\nimport {\n  resetActiveEditorField,\n  setActiveEditorField,\n} from \"actions/activeFieldActions\";\nimport CodeMirrorTernService from \"utils/autocomplete/CodemirrorTernService\";\nimport { getEachEntityInformation } from \"@appsmith/utils/autocomplete/EntityDefinitions\";\n\ntype ReduxStateProps = ReturnType<typeof mapStateToProps>;\ntype ReduxDispatchProps = ReturnType<typeof mapDispatchToProps>;\n\nexport interface CodeEditorExpected {\n  type: string;\n  example: ExpectedValueExample;\n  autocompleteDataType: AutocompleteDataType;\n  openExampleTextByDefault?: boolean;\n}\n\nexport interface EditorStyleProps {\n  placeholder?: string;\n  leftIcon?: React.ReactNode;\n  rightIcon?: React.ReactNode;\n  height?: string | number;\n  showLineNumbers?: boolean;\n  className?: string;\n  leftImage?: string;\n  disabled?: boolean;\n  link?: string;\n  showLightningMenu?: boolean;\n  dataTreePath?: string;\n  focusElementName?: string;\n  evaluatedValue?: any;\n  expected?: CodeEditorExpected;\n  borderLess?: boolean;\n  border?: CodeEditorBorder;\n  hoverInteraction?: boolean;\n  fill?: boolean;\n  useValidationMessage?: boolean;\n  evaluationSubstitutionType?: EvaluationSubstitutionType;\n  popperPlacement?: Placement;\n  popperZIndex?: Indices;\n  blockCompletions?: FieldEntityInformation[\"blockCompletions\"];\n}\n/**\n *  line => Line to which the gutter is added\n *\n * element => HTML Element that gets added to line\n *\n * isFocusedAction => function called when focused\n */\nexport interface GutterConfig {\n  line: number;\n  element: HTMLElement;\n  isFocusedAction: () => void;\n}\n\nexport interface CodeEditorGutter {\n  getGutterConfig:\n    | ((editorValue: string, cursorLineNumber: number) => GutterConfig | null)\n    | null;\n  gutterId: string;\n}\n\nexport type EditorProps = EditorStyleProps &\n  EditorConfig & {\n    input: Partial<WrappedFieldInputProps>;\n  } & {\n    additionalDynamicData?: AdditionalDynamicDataTree;\n    promptMessage?: React.ReactNode | string;\n    hideEvaluatedValue?: boolean;\n    errors?: any;\n    isInvalid?: boolean;\n    isEditorHidden?: boolean;\n    codeEditorVisibleOverflow?: boolean; // flag for determining the input overflow type for the code editor\n    showCustomToolTipForHighlightedText?: boolean;\n    highlightedTextClassName?: string;\n    handleMouseEnter?: (event: MouseEvent) => void;\n    handleMouseLeave?: () => void;\n    AIAssisted?: boolean;\n    isReadOnly?: boolean;\n    isRawView?: boolean;\n    isJSObject?: boolean;\n    jsObjectName?: string;\n    ignoreSlashCommand?: boolean;\n    ignoreBinding?: boolean;\n    ignoreAutoComplete?: boolean;\n    maxHeight?: string | number;\n\n    // Custom gutter\n    customGutter?: CodeEditorGutter;\n    positionCursorInsideBinding?: boolean;\n\n    // On focus and blur event handler\n    onEditorBlur?: () => void;\n    onEditorFocus?: () => void;\n    lineCommentString?: string;\n    evaluatedPopUpLabel?: string;\n    removeHoverAndFocusStyle?: boolean;\n\n    customErrors?: LintError[];\n  };\n\ninterface Props extends ReduxStateProps, EditorProps, ReduxDispatchProps {}\n\ninterface State {\n  isFocused: boolean;\n  isOpened: boolean;\n  autoCompleteVisible: boolean;\n  hinterOpen: boolean;\n  // Flag for determining whether the entity change has been started or not so that even if the initial and final value remains the same, the status should be changed to not loading\n  changeStarted: boolean;\n  ctrlPressed: boolean;\n  peekOverlayProps:\n    | (PeekOverlayStateProps & {\n        tokenElement: Element;\n      })\n    | undefined;\n  isDynamic: boolean;\n  showAIWindow: boolean;\n  ternToolTipActive: boolean;\n}\n\nconst getEditorIdentifier = (props: EditorProps): string => {\n  return props.dataTreePath || props.focusElementName || \"\";\n};\n\nclass CodeEditor extends Component<Props, State> {\n  static defaultProps = {\n    marking: [entityMarker],\n    lineCommentString: \"//\",\n    hinting: [bindingHintHelper, slashCommandHintHelper, sqlHint.hinter],\n  };\n  // this is the higlighted element for any highlighted text in the codemirror\n  highlightedUrlElement: HTMLElement | undefined;\n  // this is the outer element encompassing the editor\n  codeEditorTarget = React.createRef<HTMLDivElement>();\n  editor!: CodeMirror.Editor;\n  hinters: Hinter[] = [];\n  annotations: Annotation[] = [];\n  updateLintingCallback: UpdateLintingCallback | undefined;\n  private peekOverlayExpressionIdentifier: PeekOverlayExpressionIdentifier;\n  private editorWrapperRef = React.createRef<HTMLDivElement>();\n  currentLineNumber: number | null = null;\n  AIEnabled = false;\n  private multiplexConfig?: MultiplexingModeConfig;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      isDynamic: false,\n      isFocused: false,\n      isOpened: false,\n      autoCompleteVisible: false,\n      hinterOpen: false,\n      changeStarted: false,\n      ctrlPressed: false,\n      peekOverlayProps: undefined,\n      showAIWindow: false,\n      ternToolTipActive: false,\n    };\n    this.updatePropertyValue = this.updatePropertyValue.bind(this);\n    this.focusEditor = this.focusEditor.bind(this);\n    this.peekOverlayExpressionIdentifier = new PeekOverlayExpressionIdentifier(\n      props.isJSObject\n        ? {\n            sourceType: SourceType.module,\n            thisExpressionReplacement: props.jsObjectName,\n          }\n        : {\n            sourceType: SourceType.script,\n          },\n      props.input.value,\n    );\n    this.multiplexConfig = MULTIPLEXING_MODE_CONFIGS[this.props.mode];\n    /**\n     * Decides if AI is enabled by looking at repo, feature flags, props and environment\n     */\n    this.AIEnabled =\n      isAIEnabled(this.props.featureFlags, this.props.mode) &&\n      Boolean(this.props.AIAssisted);\n  }\n\n  componentDidMount(): void {\n    if (this.codeEditorTarget.current) {\n      const options: EditorConfiguration = {\n        autoRefresh: true,\n        mode: this.props.mode,\n        theme: EditorThemes[this.props.theme],\n        viewportMargin: 10,\n        tabSize: 2,\n        autoCloseBrackets: true,\n        indentWithTabs: this.props.tabBehaviour === TabBehaviour.INDENT,\n        lineWrapping: true,\n        lineNumbers: this.props.showLineNumbers,\n        addModeClass: true,\n        matchBrackets: false,\n        scrollbarStyle:\n          this.props.size === EditorSize.COMPACT ||\n          this.props.size === EditorSize.COMPACT_RETAIN_FORMATTING\n            ? \"null\"\n            : \"native\",\n        placeholder: this.props.placeholder,\n        lint: {\n          getAnnotations: (_: string, callback: UpdateLintingCallback) => {\n            this.updateLintingCallback = callback;\n          },\n          async: true,\n          lintOnChange: false,\n        },\n        tabindex: -1,\n        // Used to disable multiple cursors on the editor\n        // when command/ctrl click is done\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        configureMouse: () => {\n          return {\n            addNew: false,\n          };\n        },\n      };\n\n      const gutters = new Set<string>();\n\n      if (!this.props.input.onChange || this.props.disabled) {\n        options.readOnly = true;\n        options.scrollbarStyle = \"null\";\n      }\n\n      options.extraKeys = {\n        [getMoveCursorLeftKey()]: \"goLineStartSmart\",\n        [getCodeCommentKeyMap()]: handleCodeComment(\n          // We've provided the default props value for lineCommentString\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          this.props.lineCommentString!,\n        ),\n        [getSaveAndAutoIndentKey()]: (editor) => {\n          saveAndAutoIndentCode(editor);\n          AnalyticsUtil.logEvent(\"PRETTIFY_AND_SAVE_KEYBOARD_SHORTCUT\");\n        },\n        [getDeleteLineShortcut()]: () => {\n          return;\n        },\n      };\n\n      if (this.props.tabBehaviour === TabBehaviour.INPUT) {\n        options.extraKeys[\"Tab\"] = false;\n      }\n\n      if (this.props.customGutter) {\n        gutters.add(this.props.customGutter.gutterId);\n      }\n\n      if (!this.props.isReadOnly) {\n        const autoIndentKey = getAutoIndentShortcutKey();\n        options.extraKeys[autoIndentKey] = (editor) => {\n          autoIndentCode(editor);\n          AnalyticsUtil.logEvent(\"PRETTIFY_CODE_KEYBOARD_SHORTCUT\");\n        };\n      }\n\n      if (this.props.folding) {\n        options.foldGutter = true;\n        gutters.add(\"CodeMirror-linenumbers\");\n        gutters.add(\"CodeMirror-foldgutter\");\n        // @ts-expect-error: Types are not available\n        options.foldOptions = {\n          widget: () => {\n            return \"\\u002E\\u002E\\u002E\";\n          },\n        };\n      }\n      options.gutters = Array.from(gutters);\n\n      // Set value of the editor\n      const inputValue = getInputValue(this.props.input.value) || \"\";\n      options.value = removeNewLineCharsIfRequired(inputValue, this.props.size);\n\n      // @ts-expect-error: Types are not available\n      options.finishInit = function (\n        this: CodeEditor,\n        editor: CodeMirror.Editor,\n      ) {\n        // If you need to do something with the editor right after it’s been created,\n        // put that code here.\n        //\n        // This helps with performance: finishInit() is called inside\n        // CodeMirror’s `operation()` (https://codemirror.net/doc/manual.html#operation\n        // which means CodeMirror recalculates itself only one time, once all CodeMirror\n        // changes here are completed\n        //\n        editor.on(\"beforeChange\", this.handleBeforeChange);\n        editor.on(\"change\", this.startChange);\n        editor.on(\"keydown\", this.handleAutocompleteKeydown);\n        editor.on(\"focus\", this.handleEditorFocus);\n        editor.on(\"cursorActivity\", this.handleCursorMovement);\n        editor.on(\"cursorActivity\", this.debouncedArgHints);\n        editor.on(\"blur\", this.handleEditorBlur);\n        editor.on(\"mousedown\", this.handleClick);\n        editor.on(\"scrollCursorIntoView\", this.handleScrollCursorIntoView);\n        CodeMirror.on(\n          editor.getWrapperElement(),\n          \"mousemove\",\n          this.debounceHandleMouseOver,\n        );\n\n        if (this.props.height) {\n          editor.setSize(\"100%\", this.props.height);\n        } else {\n          editor.setSize(\"100%\", \"100%\");\n        }\n\n        CodeEditor.updateMarkings(\n          editor,\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          this.props.marking!, // ! since defaultProps are set\n          this.props.entitiesForNavigation,\n        );\n\n        this.hinters = CodeEditor.startAutocomplete(\n          editor,\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          this.props.hinting!, // ! since defaultProps are set\n          this.props.entitiesForNavigation, // send navigation here\n        );\n\n        this.lintCode(editor);\n\n        setTimeout(() => {\n          if (this.props.editorIsFocused && shouldFocusOnPropertyControl()) {\n            editor.focus();\n          }\n        }, 200);\n      }.bind(this);\n      sqlHint.setDatasourceTableKeys(this.props.datasourceTableKeys);\n\n      // Finally create the Codemirror editor\n      this.editor = CodeMirror(this.codeEditorTarget.current, options);\n      // DO NOT ADD CODE BELOW. If you need to do something with the editor right after it’s created,\n      // put that code into `options.finishInit()`.\n    }\n    window.addEventListener(\"keydown\", this.handleKeydown);\n    window.addEventListener(\"keyup\", this.handleKeyUp);\n\n    if (this.codeEditorTarget.current) {\n      // refresh editor on resize which prevents issue #23796\n      resizeObserver.observe(this.codeEditorTarget.current, [\n        this.debounceEditorRefresh,\n      ]);\n    }\n    if (\n      this.props.positionCursorInsideBinding &&\n      this.props.input.value === EMPTY_BINDING\n    ) {\n      this.editor.focus();\n      this.editor.setCursor({\n        ch: 2,\n        line: 0,\n      });\n    }\n  }\n\n  shouldComponentUpdate(nextProps: Props, nextState: State) {\n    if (this.props.dynamicData !== nextProps.dynamicData) {\n      // check if isFocused as the other components that are not focused don't need a rerender (perf)\n      // check if errors have changed as they will come from outside and we want to update if they have changed\n      // check if isJSObject.. TODO answer why?\n      let areErrorsEqual = true;\n      if (this.props.dataTreePath) {\n        const errors = this.getErrors(\n          this.props.dynamicData,\n          this.props.dataTreePath,\n        );\n        const newErrors = this.getErrors(\n          nextProps.dynamicData,\n          this.props.dataTreePath,\n        );\n        if (errors && newErrors) {\n          areErrorsEqual = isEqual(errors, newErrors);\n        }\n      }\n      return nextState.isFocused || !!nextProps.isJSObject || !areErrorsEqual;\n    }\n\n    return true;\n  }\n\n  //Debounce editor refresh request as container resizing triggers many change events.\n  debounceEditorRefresh = _.debounce(async () => {\n    this.editor.refresh();\n  }, 100);\n\n  debouncedArgHints = _.debounce(() => {\n    this.setState({\n      ternToolTipActive: CodeMirrorTernService.updateArgHints(this.editor),\n    });\n  }, 200);\n\n  componentDidUpdate(prevProps: Props): void {\n    const identifierHasChanged =\n      getEditorIdentifier(this.props) !== getEditorIdentifier(prevProps);\n\n    const entityInformation = this.getEntityInformation();\n    const isWidgetType = entityInformation.entityType === ENTITY_TYPE.WIDGET;\n\n    const hasFocusedValueChanged =\n      getEditorIdentifier(this.props) !== this.props.focusedProperty;\n\n    if (hasFocusedValueChanged && isWidgetType) {\n      if (this.state.showAIWindow) {\n        this.setState({ showAIWindow: false });\n      }\n    }\n\n    if (identifierHasChanged) {\n      if (this.state.showAIWindow) {\n        this.setState({ showAIWindow: false });\n      }\n\n      if (shouldFocusOnPropertyControl()) {\n        setTimeout(() => {\n          if (this.props.editorIsFocused) {\n            this.editor.focus();\n          }\n        }, 200);\n      }\n    } else if (this.props.editorLastCursorPosition) {\n      // This is for when we want to change cursor positions\n      // for e.g navigating to a line from the debugger\n      if (\n        !isEqual(\n          this.props.editorLastCursorPosition,\n          prevProps.editorLastCursorPosition,\n        ) &&\n        this.props.editorLastCursorPosition.origin ===\n          CursorPositionOrigin.Navigation\n      ) {\n        setTimeout(() => {\n          if (this.props.editorIsFocused) {\n            this.editor.focus();\n          }\n        }, 200);\n      }\n    }\n\n    this.editor.operation(() => {\n      const editorValue = this.editor.getValue();\n      // Safe update of value of the editor when value updated outside the editor\n      const inputValue = getInputValue(this.props.input.value);\n      const previousInputValue = getInputValue(prevProps.input.value);\n\n      if (_.isString(inputValue)) {\n        /* We want to check if the input value and the editor value is out of sync.\n         * We always want to make sure editor is the correct value since the source if the input value\n         * But the editor updates the input value on change.\n         * To solve this:\n         * We check if the values are different,\n         * and we check if they are different because the input value has changed\n         * and not because the editor value has changed\n         * */\n        if (inputValue !== editorValue) {\n          // If it is focused update it only if the identifier has changed\n          // if not focused, can be updated\n          if (this.state.isFocused) {\n            if (identifierHasChanged) {\n              this.setEditorInput(inputValue);\n            }\n          } else {\n            this.setEditorInput(inputValue);\n          }\n        } else if (prevProps.isEditorHidden && !this.props.isEditorHidden) {\n          // Even if Editor is updated with new value, it cannot update without layour calcs.\n          //So, if it is hidden it does not reflect in UI, this code is to refresh editor if it was just made visible.\n          this.editor.refresh();\n        }\n      } else if (previousInputValue !== inputValue) {\n        // handles case when inputValue changes from a truthy to a falsy value\n        this.setEditorInput(\"\");\n      }\n\n      if (\n        this.props.entitiesForNavigation !== prevProps.entitiesForNavigation ||\n        this.props.marking !== prevProps.marking\n      ) {\n        CodeEditor.updateMarkings(\n          this.editor,\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          this.props.marking!, // ! since defaultProps are set\n          this.props.entitiesForNavigation,\n        );\n      }\n      if (\n        prevProps.lintErrors !== this.props.lintErrors ||\n        prevProps.customErrors !== this.props.customErrors\n      ) {\n        this.lintCode(this.editor);\n      } else {\n        if (!!this.updateLintingCallback) {\n          this.updateLintingCallback(this.editor, this.annotations);\n        }\n      }\n      if (this.props.datasourceTableKeys !== prevProps.datasourceTableKeys) {\n        sqlHint.setDatasourceTableKeys(this.props.datasourceTableKeys);\n      }\n    });\n\n    if (prevProps.height !== this.props.height) {\n      this.editor.setSize(\"100%\", this.props.height);\n    }\n  }\n\n  setEditorInput = (value: string) => {\n    this.editor.setValue(value);\n    // when input gets updated on focus out clear undo/redo from codeMirror History\n    this.editor.clearHistory();\n  };\n\n  showPeekOverlay = (\n    expression: string,\n    paths: string[],\n    tokenElement: Element,\n  ) => {\n    const tokenElementPosition = tokenElement.getBoundingClientRect();\n    if (this.state.peekOverlayProps) {\n      if (tokenElement === this.state.peekOverlayProps.tokenElement) return;\n      this.hidePeekOverlay();\n    }\n    tokenElement.classList.add(PEEK_STYLE_PERSIST_CLASS);\n    this.setState({\n      peekOverlayProps: {\n        objectName: paths[0],\n        propertyPath: paths.slice(1),\n        position: tokenElementPosition,\n        tokenElement,\n        textWidth: tokenElementPosition.width,\n      },\n    });\n\n    if (this.state.ternToolTipActive) {\n      CodeMirrorTernService.closeArgHints();\n    }\n    AnalyticsUtil.logEvent(\"PEEK_OVERLAY_OPENED\", {\n      property: expression,\n    });\n  };\n\n  hidePeekOverlay = () => {\n    if (this.state.peekOverlayProps) {\n      this.state.peekOverlayProps.tokenElement.classList.remove(\n        PEEK_STYLE_PERSIST_CLASS,\n      );\n      this.setState({\n        peekOverlayProps: undefined,\n      });\n    }\n    if (this.state.ternToolTipActive) {\n      this.setState({\n        ternToolTipActive: CodeMirrorTernService.updateArgHints(this.editor),\n      });\n    }\n  };\n\n  debounceHandleMouseOver = debounce(\n    (ev) => this.handleMouseOver(ev),\n    PEEK_OVERLAY_DELAY,\n  );\n\n  handleScrollCursorIntoView = (cm: CodeMirror.Editor, event: Event) => {\n    event.preventDefault();\n\n    const delayedWork = () => {\n      if (!this.state.isFocused) return;\n\n      const [cursorElement] = cm\n        .getScrollerElement()\n        .getElementsByClassName(CURSOR_CLASS_NAME);\n\n      if (cursorElement) {\n        scrollIntoView(cursorElement, {\n          block: \"nearest\",\n        });\n      }\n    };\n\n    // We need to delay this because CodeMirror can fire scrollCursorIntoView as a view is being blurred\n    // and another is being focused. The blurred editor still has the focused state when this event fires.\n    // We don't want to scroll the blurred editor into view, only the focused editor.\n    setTimeout(delayedWork, 0);\n  };\n\n  isPeekableElement = (element: Element) => {\n    if (\n      !element.classList.contains(\"cm-m-javascript\") ||\n      element.classList.contains(\"binding-brackets\")\n    )\n      return false;\n    if (\n      // global variables and functions\n      // JsObject1, storeValue()\n      element.classList.contains(\"cm-variable\") ||\n      // properties and function calls\n      // JsObject.myFun(), Api1.data\n      element.classList.contains(\"cm-property\") ||\n      // array indices - [0]\n      element.classList.contains(\"cm-number\") ||\n      // string accessor - [\"x\"]\n      element.classList.contains(\"cm-string\")\n    ) {\n      return true;\n    } else if (element.classList.contains(\"cm-keyword\")) {\n      // this keyword for jsObjects\n      if (this.props.isJSObject && element.innerHTML === \"this\") {\n        return true;\n      }\n    }\n  };\n\n  getBindingSnippetAtPos = (\n    multiPlexConfig: MultiplexingModeConfig,\n    pos: number,\n  ) => {\n    return multiPlexConfig.innerModes.map((innerMode) => {\n      const doc = this.editor.getValue();\n      const openPos =\n        doc.lastIndexOf(innerMode.open, pos) + innerMode.open.length;\n      const closePos = doc.indexOf(innerMode.close, pos);\n      return {\n        value: doc.slice(openPos, closePos),\n        offset: openPos,\n      };\n    });\n  };\n\n  updateScriptForPeekOverlay = (chIndex: number) => {\n    if (\n      !this.peekOverlayExpressionIdentifier.hasParsedScript() ||\n      this.multiplexConfig\n    ) {\n      if (this.multiplexConfig) {\n        const bindingSnippetsByInnerMode = this.getBindingSnippetAtPos(\n          this.multiplexConfig,\n          chIndex,\n        );\n        for (const snippet of bindingSnippetsByInnerMode) {\n          if (snippet.value) {\n            this.peekOverlayExpressionIdentifier.updateScript(snippet.value);\n            chIndex -= snippet.offset;\n            break;\n          }\n        }\n      } else {\n        this.peekOverlayExpressionIdentifier.updateScript(\n          this.editor.getValue(),\n        );\n      }\n    }\n    return chIndex;\n  };\n\n  isPathLibrary = (paths: string[]) => {\n    return !!this.props.installedLibraries.find((installedLib) =>\n      installedLib.accessor.find((accessor) => accessor === paths[0]),\n    );\n  };\n\n  handleMouseOver = (event: MouseEvent) => {\n    const tokenElement = event.target;\n    const rect = (tokenElement as Element).getBoundingClientRect();\n    if (\n      !(rect.height === 0 && rect.width === 0) &&\n      tokenElement instanceof Element &&\n      this.isPeekableElement(tokenElement)\n    ) {\n      const tokenPos = this.editor.coordsChar({\n        left: event.clientX,\n        top: event.clientY,\n      });\n      const chIndex = this.updateScriptForPeekOverlay(\n        this.editor.indexFromPos(tokenPos),\n      );\n\n      this.peekOverlayExpressionIdentifier\n        .extractExpressionAtPosition(chIndex)\n        .then((lineExpression: string) => {\n          const paths = _.toPath(lineExpression);\n          if (\n            !this.isPathLibrary(paths) &&\n            paths[0] in this.props.dynamicData\n          ) {\n            this.showPeekOverlay(lineExpression, paths, tokenElement);\n          } else {\n            this.hidePeekOverlay();\n          }\n        })\n        .catch((e) => {\n          this.hidePeekOverlay();\n          debug(e);\n        });\n    } else {\n      this.hidePeekOverlay();\n    }\n  };\n\n  handleMouseMove = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    this.handleCustomGutter(this.editor.lineAtHeight(e.clientY, \"window\"));\n    // this code only runs when we want custom tool tip for any highlighted text inside codemirror instance\n    if (\n      this.props.showCustomToolTipForHighlightedText &&\n      this.props.highlightedTextClassName\n    ) {\n      addEventToHighlightedElement(\n        this.highlightedUrlElement,\n        this.props.highlightedTextClassName,\n        [\n          {\n            eventType: \"mouseenter\",\n            eventHandlerFn: this.props.handleMouseEnter,\n          },\n          {\n            eventType: \"mouseleave\",\n            eventHandlerFn: this.props.handleMouseLeave,\n          },\n        ],\n      );\n    }\n  };\n\n  componentWillUnmount() {\n    if (this.codeEditorTarget.current) {\n      resizeObserver.unobserve(this.codeEditorTarget.current, [\n        this.debounceEditorRefresh,\n      ]);\n    }\n\n    // if the highlighted element exists, remove the event listeners to prevent memory leaks\n    if (this.highlightedUrlElement) {\n      removeEventFromHighlightedElement(this.highlightedUrlElement, [\n        {\n          eventType: \"mouseenter\",\n          eventHandlerFn: this.props.handleMouseEnter,\n        },\n        {\n          eventType: \"mouseleave\",\n          eventHandlerFn: this.props.handleMouseLeave,\n        },\n      ]);\n    }\n\n    window.removeEventListener(\"keydown\", this.handleKeydown);\n    window.removeEventListener(\"keyup\", this.handleKeyUp);\n\n    // return if component unmounts before editor is created\n    if (!this.editor) return;\n\n    this.editor.off(\"beforeChange\", this.handleBeforeChange);\n    this.editor.off(\"change\", this.startChange);\n    this.editor.off(\"keydown\", this.handleAutocompleteKeydown);\n    this.editor.off(\"focus\", this.handleEditorFocus);\n    this.editor.off(\"cursorActivity\", this.handleCursorMovement);\n    this.editor.off(\"cursorActivity\", this.debouncedArgHints);\n    this.editor.off(\"blur\", this.handleEditorBlur);\n    this.editor.off(\"scrollCursorIntoView\", this.handleScrollCursorIntoView);\n    CodeMirror.off(\n      this.editor.getWrapperElement(),\n      \"mousemove\",\n      this.debounceHandleMouseOver,\n    );\n    // @ts-expect-error: Types are not available\n    this.editor.closeHint();\n\n    CodeMirrorTernService.closeArgHints();\n  }\n\n  private handleKeydown = (e: KeyboardEvent) => {\n    switch (e.key) {\n      case \"Enter\":\n      case \" \":\n        if (document.activeElement === this.codeEditorTarget.current) {\n          this.editor.focus();\n          this.codeEditorTarget.current?.dispatchEvent(\n            interactionAnalyticsEvent({ key: e.key }),\n          );\n          e.preventDefault();\n        }\n        break;\n      case \"Escape\":\n        /*\n         * We only want focus to go out for code editors in JS pane with binding prompts\n         * This is so the esc closes the binding prompt.\n         * but this is not needed in the JS Object editor, since there are no prompts there\n         * So we check for the following so the JS editor does not have this behaviour -\n         * isFocused : editor is focused\n         * hinterOpen : autocomplete hinter is closed\n         * this.isBindingPromptOpen : binding prompt (type / for commands) is closed\n         */\n        if (\n          this.state.isFocused &&\n          !this.state.hinterOpen &&\n          this.isBindingPromptOpen()\n        ) {\n          this.codeEditorTarget.current?.focus();\n          this.codeEditorTarget.current?.dispatchEvent(\n            interactionAnalyticsEvent({ key: e.key }),\n          );\n        }\n        break;\n      case \"Tab\":\n        if (document.activeElement === this.codeEditorTarget.current) {\n          this.codeEditorTarget.current?.dispatchEvent(\n            interactionAnalyticsEvent({\n              key: `${e.shiftKey ? \"Shift+\" : \"\"}${e.key}`,\n            }),\n          );\n        }\n        break;\n      case \"Control\":\n      case \"Meta\":\n        this.setState({\n          ctrlPressed: true,\n        });\n    }\n  };\n\n  private handleKeyUp = (e: KeyboardEvent) => {\n    switch (e.key) {\n      case \"Control\":\n      case \"Meta\":\n        this.setState({\n          ctrlPressed: false,\n        });\n    }\n  };\n\n  static startAutocomplete(\n    editor: CodeMirror.Editor,\n    hinting: Array<HintHelper>,\n    entitiesForNavigation: EntityNavigationData,\n  ) {\n    return hinting.map((helper) => {\n      return helper(editor, entitiesForNavigation);\n    });\n  }\n\n  handleClick = (cm: CodeMirror.Editor, event: MouseEvent) => {\n    if (\n      event.target instanceof Element &&\n      event.target.hasAttribute(NAVIGATE_TO_ATTRIBUTE)\n    ) {\n      if (event.ctrlKey || event.metaKey) {\n        const navigationAttribute = event.target.attributes.getNamedItem(\n          NAVIGATE_TO_ATTRIBUTE,\n        );\n\n        if (!navigationAttribute) return;\n\n        if (\n          document.activeElement &&\n          document.activeElement instanceof HTMLElement\n        ) {\n          document.activeElement.blur();\n        }\n\n        this.setState({\n          isFocused: false,\n        });\n\n        const { entitiesForNavigation } = this.props;\n        const [documentName, ...navigationTargets] =\n          navigationAttribute.value.split(\".\");\n\n        if (documentName in entitiesForNavigation) {\n          let navigationData = entitiesForNavigation[documentName];\n\n          for (const navigationTarget of navigationTargets) {\n            if (navigationTarget in navigationData.children) {\n              navigationData = navigationData.children[navigationTarget];\n            }\n          }\n\n          if (navigationData.url) {\n            if (navigationData.type === ENTITY_TYPE.ACTION) {\n              AnalyticsUtil.logEvent(\"EDIT_ACTION_CLICK\", {\n                actionId: navigationData?.id,\n                datasourceId: navigationData?.datasourceId,\n                pluginName: navigationData?.pluginName,\n                actionType: navigationData?.actionType,\n                isMock: !!navigationData?.isMock,\n                from: NavigationMethod.CommandClick,\n              });\n            }\n\n            history.push(navigationData.url, {\n              invokedBy: NavigationMethod.CommandClick,\n            });\n\n            this.hidePeekOverlay();\n\n            setTimeout(() => {\n              cm.scrollIntoView(cm.getCursor());\n            }, 0);\n          }\n        }\n      }\n    }\n  };\n\n  handleCustomGutter = (lineNumber: number | null, isFocused = false) => {\n    const { customGutter } = this.props;\n    const editor = this.editor;\n    if (!customGutter || !editor) return;\n    editor.clearGutter(customGutter.gutterId);\n\n    if (lineNumber && customGutter.getGutterConfig) {\n      const gutterConfig = customGutter.getGutterConfig(\n        editor.getValue(),\n        lineNumber,\n      );\n      if (!gutterConfig) return;\n      editor.setGutterMarker(\n        gutterConfig.line,\n        customGutter.gutterId,\n        gutterConfig.element,\n      );\n      isFocused && gutterConfig.isFocusedAction();\n    }\n  };\n\n  handleCursorMovement = (cm: CodeMirror.Editor) => {\n    const line = cm.getCursor().line;\n    this.handleCustomGutter(line, true);\n    // ignore if disabled\n    if (!this.props.input.onChange || this.props.disabled) {\n      return;\n    }\n    const mode = cm.getModeAt(cm.getCursor());\n    if (\n      mode &&\n      [\n        EditorModes.JAVASCRIPT,\n        EditorModes.JSON,\n        EditorModes.GRAPHQL,\n        EditorModes.GRAPHQL_WITH_BINDING,\n      ].includes(mode.name)\n    ) {\n      cm.setOption(\"matchBrackets\", true);\n    } else {\n      cm.setOption(\"matchBrackets\", false);\n    }\n    if (!this.props.borderLess) return;\n    if (this.currentLineNumber !== null) {\n      cm.removeLineClass(\n        this.currentLineNumber,\n        \"background\",\n        \"CodeMirror-activeline-background\",\n      );\n    }\n    cm.addLineClass(line, \"background\", \"CodeMirror-activeline-background\");\n    this.currentLineNumber = line;\n  };\n\n  handleEditorFocus = (cm: CodeMirror.Editor) => {\n    this.props.setActiveField(this.props.dataTreePath || \"\");\n    this.setState({ isFocused: true });\n    const { sticky } = cm.getCursor();\n    const isUserFocus = sticky !== null;\n    if (this.props.editorLastCursorPosition) {\n      if (\n        !isUserFocus ||\n        this.props.editorLastCursorPosition.origin ===\n          CursorPositionOrigin.Navigation\n      ) {\n        cm.setCursor(this.props.editorLastCursorPosition, undefined, {\n          scroll: true,\n        });\n      }\n    }\n\n    if (!cm.state.completionActive) {\n      updateCustomDef(this.props.additionalDynamicData);\n\n      const entityInformation = this.getEntityInformation();\n      const { blockCompletions } = this.props;\n      this.hinters\n        .filter((hinter) => hinter.fireOnFocus)\n        .forEach(\n          (hinter) =>\n            hinter.showHint &&\n            hinter.showHint(cm, entityInformation, {\n              blockCompletions,\n              datasources: this.props.datasources.list,\n              pluginIdToPlugin: this.props.pluginIdToPlugin,\n              recentEntities: this.props.recentEntities,\n              featureFlags: this.props.featureFlags,\n              enableAIAssistance: this.AIEnabled,\n              focusEditor: this.focusEditor,\n              executeCommand: this.props.executeCommand,\n              isJsEditor: this.props.mode === EditorModes.JAVASCRIPT,\n            }),\n        );\n    }\n\n    const value = this.editor?.getValue() || \"\";\n    if (isDynamicValue(value)) {\n      if (!this.state.isDynamic) {\n        this.setState({\n          isDynamic: true,\n        });\n      }\n    } else {\n      if (this.state.isDynamic) {\n        this.setState({\n          isDynamic: false,\n        });\n      }\n    }\n\n    if (this.props.onEditorFocus) {\n      this.props.onEditorFocus();\n    }\n  };\n\n  handleEditorBlur = (cm: CodeMirror.Editor, event: FocusEvent) => {\n    if (event && event.relatedTarget instanceof Element) {\n      if (event.relatedTarget.classList.contains(\"ai-trigger\")) {\n        return;\n      }\n    }\n    this.props.resetActiveField();\n    this.handleChange();\n    this.setState({ isFocused: false });\n    this.editor.setOption(\"matchBrackets\", false);\n    this.handleCustomGutter(null);\n    const cursor = this.editor.getCursor();\n    this.props.setCodeEditorLastFocus({\n      key: getEditorIdentifier(this.props),\n      cursorPosition: {\n        ch: cursor.ch,\n        line: cursor.line,\n      },\n    });\n    if (this.currentLineNumber !== null) {\n      cm.removeLineClass(\n        this.currentLineNumber,\n        \"background\",\n        \"CodeMirror-activeline-background\",\n      );\n      this.currentLineNumber = null;\n    }\n    if (this.props.onEditorBlur) {\n      this.props.onEditorBlur();\n    }\n  };\n\n  handleBeforeChange = (\n    cm: CodeMirror.Editor,\n    change: CodeMirror.EditorChangeCancellable,\n  ) => {\n    if (change.origin === \"paste\") {\n      // Remove all non ASCII quotes since they are invalid in Javascript\n      const formattedText = change.text.map((line) => {\n        let formattedLine = line.replace(/[‘’]/g, \"'\");\n        formattedLine = formattedLine.replace(/[“”]/g, '\"');\n        return formattedLine;\n      });\n      if (change.update) {\n        change.update(undefined, undefined, formattedText);\n      }\n    }\n  };\n\n  handleLintTooltip = () => {\n    const { lintErrors } = this.props;\n\n    if (lintErrors.length === 0) return;\n    const lintTooltipList = document.getElementsByClassName(LINT_TOOLTIP_CLASS);\n    if (!lintTooltipList) return;\n    for (const tooltip of lintTooltipList) {\n      if (\n        tooltip &&\n        getLintTooltipDirection(tooltip) === LintTooltipDirection.left\n      ) {\n        tooltip.classList.add(LINT_TOOLTIP_JUSTIFIED_LEFT_CLASS);\n      }\n    }\n  };\n\n  handleChange = (\n    instance?: CodeMirror.Editor,\n    changeObj?: CodeMirror.EditorChangeLinkedList,\n  ) => {\n    const value = this.editor?.getValue() || \"\";\n    const inputValue = this.props.input.value || \"\";\n    if (\n      this.props.input.onChange &&\n      ((value !== inputValue && this.state.isFocused) ||\n        this.state.changeStarted)\n    ) {\n      this.setState({\n        changeStarted: false,\n      });\n      this.props.input.onChange(value);\n    }\n\n    // if the value is dynamic and the editor is not in dynamic state\n    if (isDynamicValue(value)) {\n      if (!this.state.isDynamic) {\n        this.setState({\n          isDynamic: true,\n        });\n      }\n    } else {\n      // if previously dynamic, set the editor dynamic state to false\n      if (this.state.isDynamic) {\n        this.setState({\n          isDynamic: false,\n        });\n      }\n    }\n\n    if (this.editor && changeObj) {\n      CodeEditor.updateMarkings(\n        this.editor,\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        this.props.marking!, // ! since defaultProps are set\n        this.props.entitiesForNavigation,\n        changeObj.from,\n        changeObj.to,\n      );\n    }\n\n    this.peekOverlayExpressionIdentifier.clearScript();\n\n    // This will always open autocomplete dialog for table and json widgets' data properties\n    if (!!instance) {\n      const { propertyPath, widgetType } = this.getEntityInformation();\n      if (shouldShowSlashCommandMenu(widgetType, propertyPath)) {\n        setTimeout(() => {\n          this.handleAutocompleteVisibility(instance);\n        }, 10);\n      }\n    }\n  };\n\n  handleDebouncedChange = _.debounce(this.handleChange, 600);\n\n  startChange = (\n    instance: CodeMirror.Editor,\n    changeObj: CodeMirror.EditorChangeLinkedList,\n  ) => {\n    /* This action updates the status of the savingEntity to true so that any\n      shortcut commands do not execute before updating the entity in the store */\n    const value = this.editor.getValue() || \"\";\n    const inputValue = this.props.input.value || \"\";\n    if (\n      this.props.input.onChange &&\n      value !== inputValue &&\n      this.state.isFocused &&\n      !this.state.changeStarted\n    ) {\n      this.setState({\n        changeStarted: true,\n      });\n      this.props.startingEntityUpdate();\n    }\n    this.hidePeekOverlay();\n    this.handleDebouncedChange(instance, changeObj);\n  };\n\n  getEntityInformation = (): FieldEntityInformation => {\n    const { dataTreePath, expected } = this.props;\n    const configTree = ConfigTreeActions.getConfigTree();\n    let entityInformation: FieldEntityInformation = {\n      expectedType: expected?.autocompleteDataType,\n      example: expected?.example,\n      mode: this.props.mode,\n      isTriggerPath: false,\n    };\n    if (!dataTreePath) return entityInformation;\n\n    const { entityName, propertyPath } =\n      getEntityNameAndPropertyPath(dataTreePath);\n    entityInformation.entityName = entityName;\n    entityInformation.propertyPath = propertyPath;\n\n    const entity = configTree[entityName];\n    if (!entity) return entityInformation;\n    if (!entity.ENTITY_TYPE) return entityInformation;\n    const entityType = entity.ENTITY_TYPE;\n    entityInformation.entityType = entityType;\n\n    entityInformation = getEachEntityInformation[entityType](\n      entity,\n      entityInformation,\n      propertyPath,\n    );\n    return entityInformation;\n  };\n\n  handleAutocompleteVisibility = (cm: CodeMirror.Editor) => {\n    if (!this.state.isFocused) return;\n    const entityInformation = this.getEntityInformation();\n    const { blockCompletions } = this.props;\n    let hinterOpen = false;\n    for (let i = 0; i < this.hinters.length; i++) {\n      hinterOpen = this.hinters[i].showHint(cm, entityInformation, {\n        blockCompletions,\n        datasources: this.props.datasources.list,\n        pluginIdToPlugin: this.props.pluginIdToPlugin,\n        recentEntities: this.props.recentEntities,\n        featureFlags: this.props.featureFlags,\n        enableAIAssistance: this.AIEnabled,\n        focusEditor: this.focusEditor,\n        executeCommand: this.props.executeCommand,\n        isJsEditor: this.props.mode === EditorModes.JAVASCRIPT,\n      });\n      if (hinterOpen) break;\n    }\n    this.setState({ hinterOpen });\n  };\n\n  handleAutocompleteKeydown = (cm: CodeMirror.Editor, event: KeyboardEvent) => {\n    const key = event.key;\n    // Since selection from AutoComplete list is also done using the Enter keydown event\n    // we need to return from here so that autocomplete selection works fine\n    if (key === \"Enter\" || this.props.ignoreAutoComplete) return;\n\n    // Check if the user is trying to comment out the line, in that case we should not show autocomplete\n    const isCtrlOrCmdPressed = event.metaKey || event.ctrlKey;\n\n    const isAltKeyPressed = event.altKey;\n\n    // If alt key is pressed, do not show autocomplete\n    // Windows and Linux use Alt + Enter to add a new line\n    // Alt key is used to enter non-english characters which are invalid entity names\n    // So we can safely disable autocomplete when alt key is pressed\n    if (isAltKeyPressed) return;\n\n    if (isModifierKey(key)) return;\n    const code = `${event.ctrlKey ? \"Ctrl+\" : \"\"}${event.code}`;\n    if (isCloseKey(code) || isCloseKey(key)) {\n      // @ts-expect-error: Types are not available\n      cm.closeHint();\n      return;\n    }\n    const cursor = cm.getCursor();\n    const line = cm.getLine(cursor.line);\n    const token = cm.getTokenAt(cursor);\n    let showAutocomplete = false;\n    const prevChar = line[cursor.ch - 1];\n\n    // If the token is a comment or string, do not show autocomplete\n    if (token?.type && [\"comment\", \"string\"].includes(token.type)) return;\n    if (isCtrlOrCmdPressed) {\n      // If cmd or ctrl is pressed only show autocomplete for space key\n      showAutocomplete = key === \" \";\n    } else if (key === \"/\" && !this.props.ignoreSlashCommand) {\n      showAutocomplete = true;\n    } else if (event.code === \"Backspace\") {\n      /* Check if the character before cursor is completable to show autocomplete which backspacing */\n      showAutocomplete = !!prevChar && /[a-zA-Z_0-9.]/.test(prevChar);\n    } else if (key === \"{\" && !this.props.ignoreBinding) {\n      /* Autocomplete for { should show up only when a user attempts to write {{}} and not a code block. */\n      showAutocomplete = prevChar === \"{\";\n    } else if (key === \"'\" || key === '\"') {\n      /* Autocomplete for [ should show up only when a user attempts to write {['']} for Object property suggestions. */\n      showAutocomplete = prevChar === \"[\";\n\n      if (!showAutocomplete) {\n        // @ts-expect-error: Types are not available\n        cm.closeHint();\n      }\n    } else if (key.length == 1) {\n      showAutocomplete = /[a-zA-Z_0-9.]/.test(key);\n      /* Autocomplete should be triggered only for characters that make up valid variable names */\n    }\n\n    // Allow keydown event to enter the text to the editor before firing autocomplete\n    // otherwise it'll not work for the first character\n    setTimeout(() => {\n      showAutocomplete && this.handleAutocompleteVisibility(cm);\n    }, 10);\n  };\n\n  lintCode(editor: CodeMirror.Editor) {\n    const {\n      additionalDynamicData: contextData,\n      dataTreePath,\n      isJSObject,\n    } = this.props;\n\n    if (!dataTreePath || !this.updateLintingCallback || !editor) {\n      return;\n    }\n    const lintErrors = this.props.lintErrors;\n\n    if (this.props.customErrors?.length) {\n      lintErrors.push(...this.props.customErrors);\n    }\n\n    this.annotations = getLintAnnotations(editor.getValue(), lintErrors, {\n      isJSObject,\n      contextData,\n    });\n\n    this.updateLintingCallback(editor, this.annotations);\n  }\n\n  static updateMarkings = (\n    editor: CodeMirror.Editor,\n    marking: Array<MarkHelper>,\n    entityNavigationData: EntityNavigationData,\n    from?: CodeMirror.Position,\n    to?: CodeMirror.Position,\n  ) => {\n    marking.forEach((helper) => helper(editor, entityNavigationData, from, to));\n  };\n\n  focusEditor(focusOnline?: number, chOffset = 0) {\n    const lineToFocus = isNumber(focusOnline)\n      ? focusOnline\n      : this.editor.lineCount() - 1;\n    const focusedLineContent = this.editor.getLine(lineToFocus);\n\n    this.editor.setCursor({\n      line: lineToFocus,\n      ch: focusedLineContent.length - chOffset,\n    });\n\n    this.setState({ isFocused: true }, () => {\n      this.handleAutocompleteVisibility(this.editor);\n    });\n  }\n\n  updatePropertyValue(value: string, focusOnline?: number, chOffset = 0) {\n    this.editor.focus();\n    if (value) {\n      this.editor.setValue(value);\n    }\n\n    this.focusEditor(focusOnline, chOffset);\n  }\n\n  getErrors(dynamicData: DataTree, dataTreePath: string) {\n    return _.get(\n      dynamicData,\n      getEvalErrorPath(dataTreePath),\n      [],\n    ) as EvaluationError[];\n  }\n\n  getPropertyValidation = (\n    dataTreePath?: string,\n    isTriggerPath?: boolean,\n  ): {\n    evalErrors: EvaluationError[];\n    pathEvaluatedValue: unknown;\n  } => {\n    if (!dataTreePath || !!isTriggerPath) {\n      return {\n        evalErrors: [],\n        pathEvaluatedValue: undefined,\n      };\n    }\n\n    const evalErrors = this.getErrors(this.props.dynamicData, dataTreePath);\n\n    const pathEvaluatedValue = _.get(this.props.dynamicData, dataTreePath);\n\n    return {\n      evalErrors,\n      pathEvaluatedValue,\n    };\n  };\n\n  // show features like evaluatedvaluepopup or binding prompts\n  showFeatures = () => {\n    return (\n      this.state.isFocused &&\n      !this.props.hideEvaluatedValue &&\n      (\"evaluatedValue\" in this.props ||\n        (\"dataTreePath\" in this.props && !!this.props.dataTreePath))\n    );\n  };\n\n  isBindingPromptOpen = () => {\n    const completionActive = _.get(this.editor, \"state.completionActive\");\n\n    return (\n      showBindingPrompt(\n        this.showFeatures(),\n        this.props.input.value,\n        this.state.hinterOpen,\n      ) && !completionActive\n    );\n  };\n\n  updateValueWithAIResponse = (value: string) => {\n    if (typeof value !== \"string\") return;\n    this.props.input?.onChange?.(value);\n    this.editor.setValue(value);\n  };\n\n  render() {\n    const {\n      border,\n      borderLess,\n      className,\n      codeEditorVisibleOverflow,\n      dataTreePath,\n      disabled,\n      evaluatedPopUpLabel,\n      evaluatedValue,\n      evaluationSubstitutionType,\n      expected,\n      fill,\n      height,\n      hideEvaluatedValue,\n      hoverInteraction,\n      maxHeight,\n      showLightningMenu,\n      size,\n      theme,\n      useValidationMessage,\n    } = this.props;\n\n    const entityInformation = this.getEntityInformation();\n\n    const { evalErrors, pathEvaluatedValue } = this.getPropertyValidation(\n      dataTreePath,\n      entityInformation?.isTriggerPath,\n    );\n\n    let errors = evalErrors,\n      isInvalid = evalErrors.length > 0,\n      evaluated = evaluatedValue;\n\n    if (dataTreePath) {\n      evaluated =\n        pathEvaluatedValue !== undefined ? pathEvaluatedValue : evaluated;\n    }\n\n    const showSlashCommandButton =\n      showLightningMenu !== false &&\n      !this.state.isFocused &&\n      !this.state.showAIWindow;\n    /* Evaluation results for snippet arguments. The props below can be used to set the validation errors when computed from parent component */\n    if (this.props.errors) {\n      errors = this.props.errors;\n    }\n    if (this.props.isInvalid !== undefined) {\n      isInvalid = Boolean(this.props.isInvalid);\n    }\n\n    const showEvaluatedValue =\n      this.showFeatures() &&\n      (this.state.isDynamic || isInvalid) &&\n      !this.state.showAIWindow &&\n      !this.state.peekOverlayProps &&\n      !this.editor.state.completionActive &&\n      !this.state.ternToolTipActive;\n\n    return (\n      <DynamicAutocompleteInputWrapper\n        className=\"t--code-editor-wrapper codeWrapper\"\n        isActive={(this.state.isFocused && !isInvalid) || this.state.isOpened}\n        isError={isInvalid}\n        isNotHover={this.state.isFocused || this.state.isOpened}\n        skin={this.props.theme === EditorTheme.DARK ? Skin.DARK : Skin.LIGHT}\n      >\n        <div className=\"flex absolute gap-1 top-[6px] right-[6px] z-4 justify-center\">\n          <Button\n            className={classNames(\n              \"commands-button invisible\",\n              !showSlashCommandButton && \"!hidden\",\n            )}\n            kind=\"tertiary\"\n            onClick={() => {\n              const newValue =\n                typeof this.props.input.value === \"string\"\n                  ? this.props.input.value + \"/\"\n                  : \"/\";\n              this.updatePropertyValue(newValue);\n            }}\n            size=\"sm\"\n            tabIndex={-1}\n          >\n            /\n          </Button>\n        </div>\n\n        <div className=\"absolute bottom-[6px] right-[6px] z-4\">\n          <AskAIButton\n            entity={entityInformation}\n            mode={this.props.mode}\n            onClick={() => {\n              this.setState({ showAIWindow: true });\n            }}\n          />\n        </div>\n\n        <EvaluatedValuePopup\n          dataTreePath={this.props.dataTreePath}\n          editorRef={this.codeEditorTarget}\n          entity={entityInformation}\n          errors={errors}\n          evaluatedPopUpLabel={evaluatedPopUpLabel}\n          evaluatedValue={evaluated}\n          evaluationSubstitutionType={evaluationSubstitutionType}\n          expected={expected}\n          hasError={isInvalid}\n          hideEvaluatedValue={hideEvaluatedValue}\n          isOpen={showEvaluatedValue}\n          popperPlacement={this.props.popperPlacement}\n          popperZIndex={this.props.popperZIndex}\n          theme={theme || EditorTheme.LIGHT}\n          useValidationMessage={useValidationMessage}\n        >\n          <AIWindow\n            currentValue={this.props.input.value}\n            dataTreePath={dataTreePath}\n            editor={this.editor}\n            enableAIAssistance={this.AIEnabled}\n            entitiesForNavigation={this.props.entitiesForNavigation}\n            entity={entityInformation}\n            isOpen={this.state.showAIWindow}\n            mode={this.props.mode}\n            onOpenChanged={(showAIWindow: boolean) => {\n              this.setState({ showAIWindow });\n            }}\n            triggerContext={this.props.expected}\n            update={this.updateValueWithAIResponse}\n          >\n            <EditorWrapper\n              AIEnabled\n              border={border}\n              borderLess={borderLess}\n              className={`${className} ${replayHighlightClass} ${\n                isInvalid ? \"t--codemirror-has-error\" : \"\"\n              } w-full`}\n              codeEditorVisibleOverflow={codeEditorVisibleOverflow}\n              ctrlPressed={this.state.ctrlPressed}\n              disabled={disabled}\n              editorTheme={this.props.theme}\n              fillUp={fill}\n              hasError={isInvalid}\n              height={height}\n              hoverInteraction={hoverInteraction}\n              isFocused={this.state.isFocused}\n              isNotHover={this.state.isFocused || this.state.isOpened}\n              isRawView={this.props.isRawView}\n              isReadOnly={this.props.isReadOnly}\n              maxHeight={maxHeight}\n              mode={this.props.mode}\n              onMouseMove={this.handleLintTooltip}\n              onMouseOver={this.handleMouseMove}\n              ref={this.editorWrapperRef}\n              removeHoverAndFocusStyle={this.props?.removeHoverAndFocusStyle}\n              size={size}\n            >\n              {this.state.peekOverlayProps && (\n                <PeekOverlayPopUp\n                  hidePeekOverlay={() => this.hidePeekOverlay()}\n                  {...this.state.peekOverlayProps}\n                />\n              )}\n              {this.props.leftIcon && (\n                <IconContainer>{this.props.leftIcon}</IconContainer>\n              )}\n\n              {this.props.leftImage && (\n                <img\n                  alt=\"img\"\n                  className=\"leftImageStyles\"\n                  src={getAssetUrl(this.props.leftImage)}\n                />\n              )}\n              <div\n                className=\"CodeEditorTarget\"\n                data-testid=\"code-editor-target\"\n                ref={this.codeEditorTarget}\n                tabIndex={0}\n              >\n                <CodeEditorSignPosting\n                  editorTheme={this.props.theme}\n                  forComp=\"editor\"\n                  isOpen={this.isBindingPromptOpen()}\n                  mode={this.props.mode}\n                  promptMessage={this.props.promptMessage}\n                  showLightningMenu={this.props.showLightningMenu}\n                />\n              </div>\n\n              {this.props.link && (\n                <a\n                  className=\"linkStyles\"\n                  href={this.props.link}\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\"\n                >\n                  API documentation\n                </a>\n              )}\n              {this.props.rightIcon && (\n                <IconContainer>{this.props.rightIcon}</IconContainer>\n              )}\n            </EditorWrapper>\n          </AIWindow>\n        </EvaluatedValuePopup>\n      </DynamicAutocompleteInputWrapper>\n    );\n  }\n}\n\nconst mapStateToProps = (state: AppState, props: EditorProps) => ({\n  dynamicData: getDataTreeForAutocomplete(state),\n  datasources: state.entities.datasources,\n  pluginIdToPlugin: getPluginIdToPlugin(state),\n  recentEntities: getRecentEntityIds(state),\n  lintErrors: getEntityLintErrors(state, props.dataTreePath),\n  editorIsFocused: getIsInputFieldFocused(state, getEditorIdentifier(props)),\n  editorLastCursorPosition: getCodeEditorLastCursorPosition(\n    state,\n    getEditorIdentifier(props),\n  ),\n  entitiesForNavigation: getEntitiesForNavigation(\n    state,\n    props.dataTreePath?.split(\".\")[0],\n  ),\n  featureFlags: selectFeatureFlags(state),\n  datasourceTableKeys: getAllDatasourceTableKeys(state, props.dataTreePath),\n  installedLibraries: selectInstalledLibraries(state),\n  focusedProperty: getFocusablePropertyPaneField(state),\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  executeCommand: (payload: SlashCommandPayload) =>\n    dispatch(executeCommandAction(payload)),\n  startingEntityUpdate: () => dispatch(startingEntityUpdate()),\n  setCodeEditorLastFocus: (payload: CodeEditorFocusState) =>\n    dispatch(setEditorFieldFocusAction(payload)),\n  setActiveField: (path: string) => dispatch(setActiveEditorField(path)),\n  resetActiveField: () => dispatch(resetActiveEditorField()),\n});\n\nexport default Sentry.withProfiler(\n  connect(mapStateToProps, mapDispatchToProps)(CodeEditor),\n);\n","import { isString } from \"lodash\";\nimport { isDynamicValue } from \"utils/DynamicBindingUtils\";\n\nexport const showBindingPrompt = (\n  showEvaluatedValue: boolean,\n  inputValue: any,\n  isHinterOpen: boolean,\n): boolean => {\n  const isDynamicInputValue = inputValue && isDynamicValue(inputValue);\n  const lastCharacterOfSlash =\n    inputValue && isString(inputValue) && inputValue.slice(-1);\n\n  return (\n    showEvaluatedValue &&\n    (!isString(inputValue) ||\n      (!inputValue && !isHinterOpen) ||\n      (!isDynamicInputValue && lastCharacterOfSlash !== \"/\"))\n  );\n};\n","import { getPlatformOS } from \"utils/helpers\";\nimport { KEYBOARD_SHORTCUTS_BY_PLATFORM } from \"./keyboardShortcutConstants\";\n\nexport const getMoveCursorLeftKey = () => {\n  const platformOS = getPlatformOS() || \"default\";\n  return KEYBOARD_SHORTCUTS_BY_PLATFORM[platformOS].cursorLeftMovement;\n};\n","import { getPlatformOS } from \"utils/helpers\";\nimport type CodeMirror from \"codemirror\";\nimport { autoIndentCode } from \"./autoIndentUtils\";\nimport { KEYBOARD_SHORTCUTS_BY_PLATFORM } from \"./keyboardShortcutConstants\";\n\nexport const getSaveAndAutoIndentKey = () => {\n  const platformOS = getPlatformOS() || \"default\";\n  return KEYBOARD_SHORTCUTS_BY_PLATFORM[platformOS].saveAndAutoIndent;\n};\n\nexport const saveAndAutoIndentCode = (editor: CodeMirror.Editor) => {\n  autoIndentCode(editor);\n  // We need to use a setTimeout here to postpone the refresh() to after CodeMirror/Browser has updated the layout according to the new content\n  setTimeout(() => editor.refresh(), 0);\n};\n","import { getPlatformOS } from \"utils/helpers\";\nimport { KEYBOARD_SHORTCUTS_BY_PLATFORM } from \"./keyboardShortcutConstants\";\n\nexport const getDeleteLineShortcut = () => {\n  const platformOS = getPlatformOS() || \"default\";\n  return KEYBOARD_SHORTCUTS_BY_PLATFORM[platformOS].deleteLine;\n};\n"],"names":["spaceSeparatedStringToObject","str","_step","result","words","split","_iterator","_createForOfIteratorHelper","s","n","done","value","err","e","f","defaultSQLConfig","CodeMirror","arangoKeywordsMap","keywords","arangoConfig","_merge","getSqlMimeFromMode","EditorModes","snowflakeKeywordsMap","snowflakeConfig","redisKeywordsMap","redisConfig","BINDING_OPEN","BINDING_CLOSE","MULTIPLEXING_MODE_CONFIGS","_objectSpread","_defineProperty","outerMode","innerModes","open","close","name","json","Object","values","sqlModesConfig","filter","config","isMultiplex","reduce","prev","current","mode","mime","undefined","javascript","graphql","css","htmlmixed","keys","forEach","key","multiplexConfig","concat","_toConsumableArray","map","innerMode","delimStyle","PEEK_STYLE_PERSIST_CLASS","EditorWrapper","styled","_templateObject","_taggedTemplateLiteral","props","size","EditorSize","isFocused","maxHeight","height","disabled","hasError","editorTheme","EditorTheme","theme","colors","textOnDarkBG","textDefault","removeHoverAndFocusStyle","fonts","code","isReadOnly","border","borderLess","CodeEditorColors","bindingTextDark","bindingText","NAVIGATION_CLASSNAME","ctrlPressed","spaces","className","codeEditorVisibleOverflow","isRawView","IconContainer","_templateObject2","DynamicAutocompleteInputWrapper","_templateObject3","isNotHover","skin","Skin","Colors","getIndexOfRegex","regex","start","arguments","length","pos","slice","search","getKeyPositionInString","indices","index","startIndex","RegExp","replace","buildBoundaryRegex","push","getAllWordOccurrences","positions","includes","_last2","substrLines","ch","_last","line","getFirstNonEmptyPosition","lines","lineNumber","findIndex","_isEmpty","CODE_EDITOR_START_POSITION","filterInvalidLintErrors","errors","contextData","error","IDENTIFIER_NOT_DEFINED_LINT_ERROR_CODE","variables","hasUndefinedIdentifierInContextData","getLintTooltipDirection","tooltip","getBoundingClientRect","right","window","innerWidth","document","documentElement","clientWidth","LintTooltipDirection","CustomDef","_classCallCheck","_createClass","customData","customDataDef","data","extraDefsToDefine","def","keyName","entity","generateTypeDef","customTreeTypeDefCreator","equal","lastCustomDataDef","performance","now","CodemirrorTernService","debug","toFixed","updateCustomDef","update","emptyLint","getEntityLintErrors","state","path","_get","linting","JS_FIELD_BEGIN","nonWhitespace","noOptions","firstNonWhitespace","found","performLineCommenting","from","to","options","self","this","getMode","firstLine","getLine","test","getTokenTypeAt","commentString","lineComment","end","cm","Math","min","lastLine","getEndLineForLineComment","padding","blankLines","commentBlankLines","operation","indent","i","baseString","editorMode","isSqlMode","offset","startsWith","replaceRange","blockCommentStart","fullLines","blockComment","performLineUncommenting","didCommentCode","getEndLineForLineUncomment","lineString","indexOf","trim","endPos","startString","endString","blockCommentEnd","blockCommentLead","startLine","endLine","insideStart","insideEnd","getRange","lastStart","lastIndexOf","firstEnd","almostLastStart","openEnd","foundEnd","reactJsonProps","enableClipboard","displayDataTypes","displayArrayKey","quotesOnKeys","style","fontSize","collapsed","indentWidth","collapseStringsAfterLength","JsonWrapper","zIndexLayers","objectCollapseAnalytics","ev","_targetNode$parentEle","_targetNode$parentEle2","_targetNode$parentEle3","_targetNode$parentEle4","_targetNode$parentEle5","_targetNode$parentEle6","_targetNode$parentEle7","_targetNode$parentEle8","_targetNode$parentEle9","_targetNode$parentEle10","_targetNode$parentEle11","_targetNode$parentEle12","_targetNode$parentEle13","targetNode","target","parentElement","firstElementChild","classList","contains","AnalyticsUtil","textSelectAnalytics","createObjectPeekData","defs","peekData","parentKey","childKeyPathArray","isObject","k","_set","isTernFunctionDef","Array","isArray","getAppsmithPeekData","dataTree","entityDefinitions","appsmith","getEntityPeekData","ENTITY_TYPE","_ref","_getActionChildrenPee","actionName","dataTreeAction","definitions","getActionChildrenPeekData","objectName","_ref2","_ref3","_getJsActionPeekData","dataTreeEntity","jsActions","jsAction","find","id","actionId","actions","jsChild","_jsAction$data","executeOnLoad","getJsActionPeekData","_ref4","_getWidgetChildrenPee","configTree","widgetName","widgetType","dataTreeWidget","widgetConfig","type","WidgetFactory","_isFunction","addSettersToDefinitions","prop","setterNames","__setters","getWidgetChildrenPeekData","PeekOverlayPopUp","componentWillAppendToBody","_toString","dataWrapperRef","useRef","useSelector","getDataTree","getConfigTree","getJSCollections","filteredData","peekDataGetterMethod","filterInternalProperties","_useState","useState","getPropertyData","propertyPath","jsData","_slicedToArray","_useState3","getDataTypeHeader","dataType","useEffect","wheelCallback","hidePeekOverlay","addEventListener","removeEventListener","_dataWrapperRef$curre","debouncedHide","_debounce","PEEK_OVERLAY_DELAY","_jsxs","onMouseEnter","cancel","onMouseLeave","onWheel","stopPropagation","minHeight","width","backgroundColor","boxShadow","borderRadius","left","position","getLeftPosition","top","bottom","children","_jsx","color","Divider","display","ref","onClick","overflowY","ReactJson","src","toString","AIWindow","_Fragment","AskAIButton","Wrapper","customMessage","bottomOffset","visible","promptRef","promptMessage","isOpen","showLightningMenu","CodeEditorSignPosting","BindingPrompt","SingletonResizeObserver","_this","callbacksMap","Map","resizeObserver","ResizeObserver","entries","observer","entry","_this$callbacksMap$ge","get","callback","instance","Error","callbacks","_this$callbacksMap$ge2","observe","_callbacks","apply","set","_this$callbacksMap$ge3","item","splice","unobserve","delete","getEditorIdentifier","dataTreePath","focusElementName","CodeEditor","_Component","highlightedUrlElement","codeEditorTarget","React","editor","hinters","annotations","updateLintingCallback","peekOverlayExpressionIdentifier","editorWrapperRef","currentLineNumber","AIEnabled","debounceEditorRefresh","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","next","refresh","stop","debouncedArgHints","setState","ternToolTipActive","CodeMirrorTernService","setEditorInput","setValue","clearHistory","showPeekOverlay","expression","paths","tokenElement","tokenElementPosition","peekOverlayProps","add","textWidth","property","remove","debounceHandleMouseOver","handleMouseOver","handleScrollCursorIntoView","event","preventDefault","setTimeout","_cm$getScrollerElemen","getScrollerElement","getElementsByClassName","CURSOR_CLASS_NAME","cursorElement","scrollIntoView","block","isPeekableElement","element","isJSObject","innerHTML","getBindingSnippetAtPos","multiPlexConfig","doc","getValue","openPos","closePos","updateScriptForPeekOverlay","chIndex","hasParsedScript","bindingSnippetsByInnerMode","snippet","updateScript","isPathLibrary","installedLibraries","installedLib","accessor","rect","Element","tokenPos","coordsChar","clientX","clientY","indexFromPos","extractExpressionAtPosition","then","lineExpression","_toPath","dynamicData","catch","handleMouseMove","handleCustomGutter","lineAtHeight","showCustomToolTipForHighlightedText","highlightedTextClassName","addEventToHighlightedElement","eventType","eventHandlerFn","handleMouseEnter","handleMouseLeave","handleKeydown","_this$codeEditorTarge","activeElement","focus","dispatchEvent","interactionAnalyticsEvent","_this$codeEditorTarge2","_this$codeEditorTarge3","hinterOpen","isBindingPromptOpen","_this$codeEditorTarge4","shiftKey","handleKeyUp","handleClick","hasAttribute","NAVIGATE_TO_ATTRIBUTE","ctrlKey","metaKey","navigationAttribute","attributes","getNamedItem","HTMLElement","blur","entitiesForNavigation","_navigationAttribute$","_navigationAttribute$2","_toArray","documentName","navigationTargets","_step2","navigationData","_iterator2","navigationTarget","url","_navigationData","_navigationData2","_navigationData3","_navigationData4","_navigationData5","datasourceId","pluginName","actionType","isMock","NavigationMethod","history","invokedBy","getCursor","customGutter","clearGutter","gutterId","getGutterConfig","gutterConfig","setGutterMarker","isFocusedAction","handleCursorMovement","input","onChange","getModeAt","setOption","removeLineClass","addLineClass","handleEditorFocus","_this$editor","setActiveField","isUserFocus","sticky","editorLastCursorPosition","origin","CursorPositionOrigin","setCursor","scroll","completionActive","additionalDynamicData","entityInformation","getEntityInformation","blockCompletions","hinter","fireOnFocus","showHint","datasources","list","pluginIdToPlugin","recentEntities","featureFlags","enableAIAssistance","focusEditor","executeCommand","isJsEditor","isDynamicValue","isDynamic","onEditorFocus","handleEditorBlur","relatedTarget","resetActiveField","handleChange","cursor","setCodeEditorLastFocus","cursorPosition","onEditorBlur","handleBeforeChange","change","formattedText","text","formattedLine","handleLintTooltip","lintErrors","lintTooltipList","LINT_TOOLTIP_CLASS","_step3","_iterator3","LINT_TOOLTIP_JUSTIFIED_LEFT_CLASS","changeObj","_this$editor2","inputValue","changeStarted","updateMarkings","marking","clearScript","_this$getEntityInform","shouldShowSlashCommandMenu","handleAutocompleteVisibility","handleDebouncedChange","startChange","startingEntityUpdate","_this$props","expected","ConfigTreeActions","expectedType","autocompleteDataType","example","isTriggerPath","_getEntityNameAndProp","getEntityNameAndPropertyPath","entityName","entityType","getEachEntityInformation","handleAutocompleteKeydown","ignoreAutoComplete","isCtrlOrCmdPressed","altKey","isModifierKey","isCloseKey","closeHint","token","getTokenAt","showAutocomplete","prevChar","ignoreSlashCommand","ignoreBinding","getPropertyValidation","evalErrors","pathEvaluatedValue","getErrors","showFeatures","hideEvaluatedValue","showEvaluatedValue","isHinterOpen","isDynamicInputValue","lastCharacterOfSlash","_isString","showBindingPrompt","updateValueWithAIResponse","_this$props$input","_this$props$input$onC","call","isOpened","autoCompleteVisible","showAIWindow","updatePropertyValue","bind","_assertThisInitialized","PeekOverlayExpressionIdentifier","sourceType","SourceType","thisExpressionReplacement","jsObjectName","isAIEnabled","Boolean","AIAssisted","_inherits","lineCommentingString","_this2","autoRefresh","EditorThemes","viewportMargin","tabSize","autoCloseBrackets","indentWithTabs","tabBehaviour","TabBehaviour","lineWrapping","lineNumbers","showLineNumbers","addModeClass","matchBrackets","scrollbarStyle","placeholder","lint","getAnnotations","_","async","lintOnChange","tabindex","configureMouse","addNew","gutters","Set","readOnly","extraKeys","platformOS","getPlatformOS","KEYBOARD_SHORTCUTS_BY_PLATFORM","cursorLeftMovement","getMoveCursorLeftKey","codeComment","getCodeCommentKeyMap","lineCommentString","uncomment","toggleComment","saveAndAutoIndent","getSaveAndAutoIndentKey","autoIndentCode","saveAndAutoIndentCode","deleteLine","getDeleteLineShortcut","autoIndentKey","getAutoIndentShortcutKey","folding","foldGutter","foldOptions","widget","getInputValue","removeNewLineCharsIfRequired","finishInit","_this3","on","getWrapperElement","setSize","startAutocomplete","hinting","lintCode","editorIsFocused","shouldFocusOnPropertyControl","sqlHint","datasourceTableKeys","positionCursorInsideBinding","EMPTY_BINDING","nextProps","nextState","areErrorsEqual","newErrors","_isEqual","prevProps","_this4","identifierHasChanged","isWidgetType","focusedProperty","editorValue","previousInputValue","isEditorHidden","customErrors","removeEventFromHighlightedElement","off","_this$props$customErr","_this$props2","errorMessage","originalBinding","severity","INVALID_JSOBJECT_START_STATEMENT_ERROR_CODE","message","INVALID_JSOBJECT_START_STATEMENT","Severity","variableLength","variable","String","bindingPositions","VALID_JS_OBJECT_BINDING_POSITION","_isNumber","_lineContent$slice$ma","bindingLocation","currentLine","lineContent","currentCh","CUSTOM_LINT_ERRORS","match","getLintAnnotations","focusOnline","_this5","chOffset","lineToFocus","lineCount","focusedLineContent","getEvalErrorPath","_this$props4","_this6","_this$props3","evaluatedPopUpLabel","evaluatedValue","evaluationSubstitutionType","fill","hoverInteraction","useValidationMessage","_this$getPropertyVali","isInvalid","evaluated","showSlashCommandButton","isActive","isError","Button","classNames","kind","newValue","tabIndex","EvaluatedValuePopup","editorRef","popperPlacement","popperZIndex","currentValue","onOpenChanged","triggerContext","replayHighlightClass","fillUp","onMouseMove","onMouseOver","leftIcon","leftImage","alt","getAssetUrl","forComp","link","href","rel","rightIcon","helper","Component","defaultProps","entityMarker","bindingHintHelper","slashCommandHintHelper","entityNavigationData","Sentry","connect","_props$dataTreePath","getDataTreeForAutocomplete","entities","getPluginIdToPlugin","getRecentEntityIds","getIsInputFieldFocused","getCodeEditorLastCursorPosition","getEntitiesForNavigation","selectFeatureFlags","getAllDatasourceTableKeys","selectInstalledLibraries","getFocusablePropertyPaneField","dispatch","payload","executeCommandAction","setEditorFieldFocusAction","setActiveEditorField","resetActiveEditorField"],"sourceRoot":""}