{"version":3,"file":"static/js/editor.a2ff8e40.chunk.js","mappings":"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","sources":["pages/Editor/gitSync/components/BranchListHotkeys.tsx","pages/Editor/gitSync/components/BranchListItemContainer.tsx","pages/Editor/gitSync/components/RemoteBranchListItem.tsx","pages/Editor/gitSync/components/DefaultTag.tsx","pages/Editor/gitSync/components/BranchMoreMenu.tsx","pages/Editor/gitSync/components/BranchListItem.tsx","pages/Editor/gitSync/components/BranchList.tsx","pages/Editor/gitSync/components/RemoteBranchList.tsx","pages/Editor/gitSync/components/LocalBranchList.tsx","pages/Editor/gitSync/QuickGitActions/BranchButton.tsx","pages/Editor/gitSync/QuickGitActions/AutocommitStatusbar.tsx","pages/Editor/gitSync/QuickGitActions/index.tsx","components/editorComponents/Debugger/DebuggerTabs.tsx","components/editorComponents/Debugger/index.tsx","components/BottomBar/components.ts","components/BottomBar/index.tsx","pages/Editor/commons/EditorWrapperContainer.tsx","pages/Editor/IDE/Sidebar/SidebarButton.tsx","pages/Editor/IDE/Sidebar/SidebarComponent.tsx","pages/Editor/IDE/Sidebar/index.tsx","pages/Editor/IDE/LeftPane/PaneHeader.tsx","pages/Editor/commons/EditorSettingsPaneContainer.tsx","pages/Editor/IDE/LeftPane/AppSettings.tsx","pages/Editor/IDE/LeftPane/CreateDatasourcePopover.tsx","pages/Editor/IDE/LeftPane/DataSidePane.tsx","pages/Editor/Explorer/Libraries/Installer.tsx","pages/Editor/IDE/LeftPane/AddLibraryPopover.tsx","utils/hooks/useClipboard.tsx","pages/Editor/Explorer/Libraries/index.tsx","pages/Editor/IDE/LeftPane/LibrarySidePane.tsx","pages/Editor/IDE/EditorPane/Query/index.tsx","pages/Editor/Explorer/Widgets/WidgetContextMenu.tsx","pages/Editor/Explorer/Widgets/WidgetEntity.tsx","pages/Editor/IDE/EditorPane/UI/List.tsx","pages/Editor/widgetSidebar/SeeMoreButton.tsx","pages/Editor/widgetSidebar/UIEntityTagGroup.tsx","pages/Editor/widgetSidebar/UIEntitySidebar.tsx","pages/Editor/widgetSidebar/hooks.ts","pages/Editor/IDE/EditorPane/UI/Add.tsx","pages/Editor/IDE/EditorPane/UI/index.tsx","pages/Editor/IDE/EditorPane/JS/index.tsx","pages/Editor/IDE/EditorPane/components/SegmentedHeader.tsx","IDE/Components/FileTab.tsx","pages/Editor/IDE/EditorTabs/FileTabs.tsx","pages/Editor/IDE/EditorTabs/Container.tsx","pages/Editor/IDE/EditorTabs/AddButton.tsx","pages/Editor/IDE/EditorPane/components/Announcement.tsx","pages/Editor/IDE/EditorTabs/List.tsx","pages/Editor/IDE/EditorTabs/ScreenModeToggle.tsx","pages/Editor/IDE/EditorTabs/AddTab.tsx","pages/Editor/IDE/EditorTabs/index.tsx","ce/pages/Editor/IDE/EditorPane/constants.ts","pages/Editor/IDE/EditorPane/EditorPaneSegments.tsx","pages/Editor/IDE/EditorPane/GlobalAdd.tsx","components/editorComponents/HighlightedCode/themes.ts","components/editorComponents/HighlightedCode/index.tsx","pages/Editor/Explorer/Entity/EntityProperty.tsx","ce/pages/Editor/Explorer/Entity/getEntityProperties.ts","pages/Editor/Explorer/Entity/EntityProperties.tsx","pages/Editor/IDE/EditorPane/index.tsx","pages/Editor/IDE/LeftPane/index.tsx","pages/Editor/WidgetsEditor/WidgetEditorContainer.tsx","ce/pages/Editor/IDE/MainPane/useMissingModuleNotification.tsx","ee/pages/Editor/IDE/MainPane/useMissingModuleNotification.tsx","pages/Editor/FirstTimeUserOnboarding/AnonymousDataPopup.tsx","pages/Editor/WidgetsEditor/WidgetEditorHeader.tsx","pages/Editor/WidgetsEditor/components/NavigationPreview.tsx","pages/Editor/WidgetsEditor/components/WidgetEditorNavigation.tsx","selectors/crudInfoModalSelectors.ts","constants/ImagesURL.ts","pages/Editor/GeneratePage/components/CrudInfoModal.tsx","pages/Editor/WidgetsEditor/components/WidgetEditorContentWrapper.tsx","utils/hooks/useAllowEditorDragToSelect.ts","pages/Editor/WidgetsEditor/components/NavigationAdjustedPageViewer.tsx","pages/Editor/CanvasLayoutConversion/SnapShotBannerCTA.tsx","utils/hooks/useWidgetFocus/index.tsx","pages/Editor/WidgetsEditor/components/CodeModeTooltip.tsx","pages/Editor/Canvas.tsx","layoutSystems/common/mainContainerResizer/MainContainerResizer.tsx","pages/Editor/WidgetsEditor/components/MainContainerWrapper.tsx","layoutSystems/common/mainContainerResizer/useMainContainerResizer.ts","pages/Editor/WidgetsEditor/components/LayoutSystemBasedPageViewer.tsx","pages/Editor/CanvasLayoutConversion/hooks/useShowSnapShotBanner.ts","pages/Editor/WidgetsEditor/WidgetEditorContent.tsx","pages/Editor/WidgetsEditor/index.tsx","pages/common/NotFound.tsx","pages/Editor/SaaSEditor/DatasourceCard.tsx","pages/Editor/SaaSEditor/ListView.tsx","pages/Editor/DataSourceEditor/DatasourceBlankState.tsx","pages/Editor/GeneratePage/components/PageContent.tsx","pages/Editor/GeneratePage/index.tsx","pages/Editor/JSEditor/JSAddState.tsx","pages/Editor/QueryEditor/QueriesAddState.tsx","ce/pages/Editor/IDE/MainPane/useRoutes.ts","ee/pages/Editor/IDE/MainPane/useRoutes.ts","pages/Editor/IDE/MainPane/index.tsx","pages/Editor/IDE/RightPane/components/CreateNewQueryModal.tsx","pages/Editor/WidgetsEditor/components/PropertyPaneWrapper.tsx","pages/Editor/IDE/RightPane/index.tsx","pages/Editor/IDE/ProtectedCallout.tsx","pages/Editor/IDE/index.tsx","pages/Editor/GlobalHotKeys/GlobalHotKeys.tsx","pages/Editor/GlobalHotKeys/index.tsx","pages/Editor/GlobalHotKeys/useMouseLocation.tsx","pages/Editor/gitSync/DisconnectGitModal.tsx","pages/Editor/gitSync/ImportSuccessModal.tsx","pages/Templates/TemplatesModal/Components/TemplateDetailedViewHeader.tsx","pages/Templates/TemplatesModal/PageSelection.tsx","pages/Templates/TemplatesModal/TemplateDetailedView.tsx","pages/Templates/TemplatesModal/Header.tsx","pages/Templates/TemplatesModal/index.tsx","pages/Editor/FirstTimeUserOnboarding/Overlay.tsx","pages/Editor/gitSync/DisableAutocommitModal.tsx","pages/Editor/gitSync/GitSettingsModal/TabGeneral/GitUserSettings.tsx","pages/Editor/gitSync/GitSettingsModal/TabGeneral/DangerZone.tsx","pages/Editor/gitSync/GitSettingsModal/TabGeneral/index.tsx","pages/Editor/gitSync/GitSettingsModal/TabBranch/hooks.ts","pages/Editor/gitSync/GitSettingsModal/TabBranch/GitDefaultBranch.tsx","pages/Editor/gitSync/GitSettingsModal/TabBranch/GitProtectedBranches.tsx","pages/Editor/gitSync/GitSettingsModal/TabBranch/index.tsx","ce/components/gitComponents/GitSettingsCDTab/UnlicensedGitCD.tsx","ee/components/gitComponents/GitSettingsCDTab/UnlicensedGitCD.tsx","ce/components/gitComponents/GitSettingsCDTab/index.tsx","ee/components/gitComponents/GitSettingsCDTab/index.tsx","pages/Editor/gitSync/GitSettingsModal/index.tsx","ce/components/gitComponents/ReconfigureCDKeyModal.tsx","ee/components/gitComponents/ReconfigureCDKeyModal.tsx","ce/components/gitComponents/DisableCDModal.tsx","ee/components/gitComponents/DisableCDModal.tsx","components/editorComponents/PartialImportExport/PartialExportModal/StyledSheet.ts","components/editorComponents/PartialImportExport/PartialExportModal/EntityCheckboxSelector.tsx","components/editorComponents/PartialImportExport/PartialExportModal/JSObjectsNQueriesExport.tsx","components/editorComponents/PartialImportExport/PartialExportModal/WidgetsExport.tsx","components/editorComponents/PartialImportExport/PartialExportModal/index.tsx","components/editorComponents/PartialImportExport/PartialImportModal/index.tsx","pages/Editor/index.tsx"],"sourcesContent":["import React from \"react\";\nimport { Hotkey, Hotkeys, HotkeysTarget } from \"@blueprintjs/core\";\n\ninterface Props {\n  handleUpKey: () => void;\n  handleDownKey: () => void;\n  handleSubmitKey: () => void;\n  handleEscKey: () => void;\n  children: React.ReactNode;\n}\n\n@HotkeysTarget\nclass GlobalSearchHotKeys extends React.Component<Props> {\n  get hotKeysConfig() {\n    return [\n      {\n        combo: \"up\",\n        onKeyDown: () => {\n          this.props.handleUpKey();\n        },\n        allowInInput: true,\n        group: \"Branches\",\n        label: \"Move up the list\",\n      },\n      {\n        combo: \"down\",\n        onKeyDown: this.props.handleDownKey,\n        allowInInput: true,\n        group: \"Branches\",\n        label: \"Move down the list\",\n      },\n      {\n        combo: \"return\",\n        onKeyDown: this.props.handleSubmitKey,\n        allowInInput: true,\n        group: \"Branches\",\n        label: \"Submit\",\n      },\n      {\n        combo: \"ESC\",\n        onKeyDown: this.props.handleEscKey,\n        allowInInput: true,\n        group: \"Branches\",\n        label: \"ESC\",\n      },\n    ];\n  }\n\n  renderHotkeys() {\n    return (\n      <Hotkeys>\n        {this.hotKeysConfig.map(\n          ({ allowInInput, combo, group, label, onKeyDown }, index) => (\n            <Hotkey\n              allowInInput={allowInInput}\n              combo={combo}\n              global={false}\n              group={group}\n              key={index}\n              label={label}\n              onKeyDown={onKeyDown}\n            />\n          ),\n        )}\n      </Hotkeys>\n    );\n  }\n\n  render() {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          flex: 1,\n          flexDirection: \"column\",\n          minHeight: 0,\n          overflow: \"auto\",\n        }}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nexport default GlobalSearchHotKeys;\n","import styled from \"styled-components\";\n\nexport const BranchListItemContainer = styled.div<{\n  selected?: boolean;\n  active?: boolean;\n  isDefault?: boolean;\n}>`\n  padding: ${(props) => `${props.theme.spaces[4]}px`};\n  margin: ${(props) => `${props.theme.spaces[1]}px 0`};\n  color: var(--ads-v2-color-fg-emphasis);\n  cursor: pointer;\n  width: 100%;\n  height: 36px;\n  border-radius: var(--ads-v2-border-radius);\n  background-color: ${(props) =>\n    props.selected || props.active ? \"var(--ads-v2-color-bg-muted)\" : \"\"};\n  ${(props) =>\n    !props.active &&\n    `&:hover {\nbackground-color: var(--ads-v2-color-bg-subtle);\n}`}\n\n  display: flex;\n  align-items: center;\n\n  .branch-list-item-text {\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    display: flex;\n    align-items: center;\n    gap: 4px;\n    flex: 1;\n  }\n`;\n","import React from \"react\";\nimport { Spinner, Tooltip } from \"design-system\";\nimport { isEllipsisActive } from \"utils/helpers\";\nimport { Text, TextType } from \"design-system-old\";\nimport { BranchListItemContainer } from \"./BranchListItemContainer\";\nimport { useSelector } from \"react-redux\";\nimport { getBranchSwitchingDetails } from \"selectors/gitSyncSelectors\";\nimport styled from \"styled-components\";\n\nconst OptionsContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  height: 100%;\n`;\n\nexport function RemoteBranchListItem({ branch, className, onClick }: any) {\n  const textRef = React.useRef<HTMLSpanElement>(null);\n  const { isSwitchingBranch, switchingToBranch } = useSelector(\n    getBranchSwitchingDetails,\n  );\n  return (\n    <BranchListItemContainer\n      active={false}\n      className={className}\n      data-testid=\"t--branch-list-item\"\n      isDefault={false}\n      onClick={onClick}\n      ref={null}\n      selected={false}\n    >\n      <Tooltip\n        content={branch}\n        isDisabled={!isEllipsisActive(document.getElementById(branch))}\n        placement=\"top\"\n      >\n        <Text\n          id={branch}\n          ref={textRef}\n          style={{\n            width: \"100%\",\n            whiteSpace: \"nowrap\",\n            overflow: \"hidden\",\n            textOverflow: \"ellipsis\",\n          }}\n          type={TextType.P1}\n        >\n          {branch}\n        </Text>\n      </Tooltip>\n      <OptionsContainer>\n        {switchingToBranch === branch && isSwitchingBranch && (\n          <Spinner size=\"md\" />\n        )}\n      </OptionsContainer>\n    </BranchListItemContainer>\n  );\n}\n","import React from \"react\";\nimport { Tag } from \"design-system\";\n\nexport default function DefaultTag() {\n  return (\n    <Tag data-testid=\"t--default-tag\" isClosable={false} size=\"sm\">\n      Default\n    </Tag>\n  );\n}\n","import React from \"react\";\nimport AnalyticsUtil from \"@appsmith/utils/AnalyticsUtil\";\nimport { deleteBranchInit } from \"actions/gitSyncActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  createMessage,\n  DELETE,\n  DELETE_BRANCH_WARNING_CHECKED_OUT,\n  DELETE_BRANCH_WARNING_DEFAULT,\n} from \"@appsmith/constants/messages\";\nimport type { Dispatch } from \"redux\";\nimport type { GitApplicationMetadata } from \"@appsmith/api/ApplicationApi\";\nimport { getCurrentAppGitMetaData } from \"@appsmith/selectors/applicationSelectors\";\nimport {\n  Button,\n  Menu,\n  MenuContent,\n  MenuItem,\n  MenuTrigger,\n  toast,\n} from \"design-system\";\n\ninterface Props {\n  branchName: string;\n  open: boolean;\n  setOpen: (open: boolean) => void;\n}\n\nfunction DeleteButton(\n  branchToDelete: string,\n  gitMetaData: GitApplicationMetadata,\n  dispatch: Dispatch<any>,\n) {\n  const currentBranch = gitMetaData?.branchName || \"\";\n  const defaultBranchName = gitMetaData?.defaultBranchName || \"master\";\n\n  function saneDelete() {\n    if (defaultBranchName === branchToDelete) {\n      toast.show(createMessage(DELETE_BRANCH_WARNING_DEFAULT, branchToDelete), {\n        kind: \"error\",\n      });\n    } else if (currentBranch === branchToDelete) {\n      toast.show(\n        createMessage(DELETE_BRANCH_WARNING_CHECKED_OUT, branchToDelete),\n        {\n          kind: \"error\",\n        },\n      );\n    } else {\n      dispatch(deleteBranchInit({ branchToDelete: branchToDelete }));\n    }\n  }\n\n  return (\n    <MenuItem\n      className=\"git-branch-more-menu-item danger t--branch-more-menu-delete error-menuitem\"\n      data-testid=\"t--branch-more-menu-delete\"\n      key={\"delete-branch-button\"}\n      onClick={(e) => {\n        e.stopPropagation();\n        saneDelete();\n      }}\n      startIcon=\"delete\"\n    >\n      {createMessage(DELETE)}\n    </MenuItem>\n  );\n}\n\nexport default function BranchMoreMenu({ branchName, open, setOpen }: Props) {\n  const dispatch = useDispatch();\n\n  const buttons = [\n    DeleteButton(branchName, useSelector(getCurrentAppGitMetaData), dispatch),\n  ];\n\n  const handleMenuClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Menu data-testid=\"t--git-branch-more-menu\" modal open={open}>\n      <MenuTrigger>\n        <Button\n          className=\"git-branch-more-menu\"\n          isIconButton\n          kind=\"tertiary\"\n          onClick={(e) => {\n            e.stopPropagation();\n            setOpen(true);\n            AnalyticsUtil.logEvent(\"GS_BRANCH_MORE_MENU_OPEN\", {\n              source: \"GS_OPEN_BRANCH_LIST_POPUP\",\n            });\n          }}\n          size=\"sm\"\n          startIcon=\"comment-context-menu\"\n        />\n      </MenuTrigger>\n      <MenuContent\n        align=\"end\"\n        onEscapeKeyDown={handleMenuClose}\n        onPointerDownOutside={handleMenuClose}\n      >\n        {buttons}\n      </MenuContent>\n    </Menu>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport scrollIntoView from \"scroll-into-view-if-needed\";\nimport { BranchListItemContainer } from \"./BranchListItemContainer\";\nimport DefaultTag from \"./DefaultTag\";\nimport { useHover } from \"../hooks\";\nimport BranchMoreMenu from \"./BranchMoreMenu\";\nimport { Tooltip, Text, Spinner } from \"design-system\";\nimport { isEllipsisActive } from \"utils/helpers\";\nimport { useSelector } from \"react-redux\";\nimport { getBranchSwitchingDetails } from \"selectors/gitSyncSelectors\";\nimport styled from \"styled-components\";\nimport { importRemixIcon } from \"design-system-old\";\n\nconst ProtectedIcon = importRemixIcon(\n  async () => import(\"remixicon-react/ShieldKeyholeLineIcon\"),\n);\n\nconst OptionsContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  height: 100%;\n`;\n\nexport function BranchListItem({\n  active,\n  branch,\n  className,\n  isDefault,\n  isProtected,\n  onClick,\n  selected,\n  shouldScrollIntoView,\n}: any) {\n  const itemRef = React.useRef<HTMLDivElement>(null);\n  const [hover] = useHover(itemRef);\n  const textRef = React.useRef<HTMLSpanElement>(null);\n  const [isMoreMenuOpen, setIsMoreMenuOpen] = React.useState(false);\n  const { isSwitchingBranch, switchingToBranch } = useSelector(\n    getBranchSwitchingDetails,\n  );\n  useEffect(() => {\n    if (itemRef.current && shouldScrollIntoView) {\n      scrollIntoView(itemRef.current, {\n        scrollMode: \"if-needed\",\n        block: \"nearest\",\n        inline: \"nearest\",\n      });\n    }\n  }, [shouldScrollIntoView]);\n\n  return (\n    <BranchListItemContainer\n      active={active}\n      className={className}\n      data-testid=\"t--branch-list-item\"\n      isDefault={isDefault}\n      onClick={onClick}\n      ref={itemRef}\n      selected={selected}\n    >\n      {isProtected && (\n        <ProtectedIcon\n          style={{ marginRight: 8, width: 14, height: 14, marginTop: 1 }}\n        />\n      )}\n      <Tooltip\n        content={branch}\n        isDisabled={!isEllipsisActive(document.getElementById(branch))}\n        placement=\"top\"\n      >\n        <span className=\"branch-list-item-text\" ref={textRef}>\n          <Text\n            id={branch}\n            kind={\"body-m\"}\n            style={{\n              width: \"100%\",\n              whiteSpace: \"nowrap\",\n              overflow: \"hidden\",\n              textOverflow: \"ellipsis\",\n            }}\n          >\n            {branch}\n          </Text>\n          {isDefault && <DefaultTag />}\n        </span>\n      </Tooltip>\n      <OptionsContainer>\n        {switchingToBranch === branch && isSwitchingBranch && (\n          <Spinner size=\"md\" />\n        )}\n        {(hover || isMoreMenuOpen) && (\n          <BranchMoreMenu\n            branchName={branch}\n            open={isMoreMenuOpen}\n            setOpen={setIsMoreMenuOpen}\n          />\n        )}\n      </OptionsContainer>\n    </BranchListItemContainer>\n  );\n}\n","import React, { useEffect, useMemo, useState } from \"react\";\nimport { getTypographyByKey } from \"design-system-old\";\nimport styled, { useTheme } from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport {\n  createNewBranchInit,\n  fetchBranchesInit,\n  fetchGitProtectedBranchesInit,\n  switchGitBranchInit,\n} from \"actions/gitSyncActions\";\nimport {\n  getCurrentGitBranch,\n  getDefaultGitBranchName,\n  getFetchingBranches,\n  getGitBranches,\n  getGitBranchNames,\n  getIsGetProtectedBranchesLoading,\n  getProtectedBranchesSelector,\n} from \"selectors/gitSyncSelectors\";\n\nimport Skeleton from \"components/utils/Skeleton\";\n\nimport scrollIntoView from \"scroll-into-view-if-needed\";\n\nimport BranchListHotkeys from \"./BranchListHotkeys\";\nimport {\n  createMessage,\n  FIND_OR_CREATE_A_BRANCH,\n  SWITCH_BRANCHES,\n  SYNC_BRANCHES,\n} from \"@appsmith/constants/messages\";\nimport {\n  Icon,\n  Spinner,\n  Tooltip,\n  Button,\n  SearchInput,\n  Text,\n} from \"design-system\";\nimport { get } from \"lodash\";\nimport {\n  isLocalBranch,\n  isRemoteBranch,\n  removeSpecialChars,\n} from \"pages/Editor/gitSync/utils\";\nimport AnalyticsUtil from \"@appsmith/utils/AnalyticsUtil\";\nimport { useActiveHoverIndex, useFilteredBranches } from \"../hooks\";\nimport { BranchListItemContainer } from \"./BranchListItemContainer\";\nimport { RemoteBranchList } from \"./RemoteBranchList\";\nimport { LocalBranchList } from \"./LocalBranchList\";\nimport type { Theme } from \"constants/DefaultTheme\";\nimport { Space } from \"./StyledComponents\";\n\nconst ListContainer = styled.div`\n  flex: 1;\n  overflow: auto;\n  width: calc(300px + 5px);\n  margin-right: -5px;\n  position: relative;\n`;\n\nconst BranchDropdownContainer = styled.div`\n  height: 45vh;\n  display: flex;\n  flex-direction: column;\n\n  padding: ${(props) => props.theme.spaces[5]}px;\n  min-height: 0;\n`;\n\n// used for skeletons\nconst textInputHeight = 38;\nconst textHeight = 18;\n\nconst CreateNewBranchContainer = styled.div`\n  display: -webkit-box;\n  -webkit-line-clamp: 3;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n  margin-right: 4px;\n\n  & div {\n    margin-left: ${(props) => props.theme.spaces[4]}px;\n    display: block;\n    word-break: break-all;\n  }\n\n  & .large-text {\n    ${getTypographyByKey(\"p1\")};\n    color: var(--ads-v2-color-fg);\n  }\n\n  & .small-text {\n    ${getTypographyByKey(\"p3\")};\n    color: var(--ads-v2-color-fg-muted);\n  }\n`;\n\nconst SpinnerContainer = styled.div<{ isCreatingNewBranch: boolean }>`\n  align-self: center;\n  width: 12px;\n  visibility: ${(props) => (props.isCreatingNewBranch ? \"visible\" : \"hidden\")};\n`;\n\nfunction CreateNewBranch({\n  branch,\n  className,\n  currentBranch,\n  hovered,\n  isCreatingNewBranch,\n  onClick,\n  shouldScrollIntoView,\n}: any) {\n  useEffect(() => {\n    if (itemRef.current && shouldScrollIntoView)\n      scrollIntoView(itemRef.current, {\n        scrollMode: \"if-needed\",\n        block: \"nearest\",\n        inline: \"nearest\",\n      });\n  }, [shouldScrollIntoView]);\n  const itemRef = React.useRef<HTMLDivElement>(null);\n  const theme = useTheme() as Theme;\n\n  return (\n    <div\n      onClick={onClick}\n      style={{\n        alignItems: \"flex-start\",\n        cursor: isCreatingNewBranch ? \"not-allowed\" : \"pointer\",\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        background: hovered ? \"var(--ads-v2-color-bg-muted)\" : \"unset\",\n        padding: get(theme, \"spaces[5]\"),\n        borderRadius: \"var(--ads-v2-border-radius)\",\n      }}\n    >\n      <div className=\"flex\">\n        <Icon\n          color={get(theme, \"colors.gitSyncModal.closeIcon\")}\n          name=\"git-branch\"\n          size=\"lg\"\n        />\n        <CreateNewBranchContainer className={className} ref={itemRef}>\n          <div className=\"large-text\">{`Create branch: ${branch} `}</div>\n          <div className=\"small-text\">{`from '${currentBranch}'`}</div>\n        </CreateNewBranchContainer>\n      </div>\n\n      <SpinnerContainer isCreatingNewBranch={isCreatingNewBranch}>\n        <Spinner data-testid={\"t--branch-creating-spinner\"} size=\"sm\" />\n      </SpinnerContainer>\n    </div>\n  );\n}\n\nexport function LoadingRow() {\n  return (\n    <BranchListItemContainer>\n      <div style={{ height: textHeight, width: \"100%\" }}>\n        <Skeleton />\n      </div>\n    </BranchListItemContainer>\n  );\n}\n\nexport function BranchesLoading() {\n  return (\n    <>\n      <LoadingRow />\n      <LoadingRow />\n      <LoadingRow />\n    </>\n  );\n}\n\nexport function Header({\n  closePopup,\n  fetchBranches,\n}: {\n  closePopup: () => void;\n  fetchBranches: () => void;\n}) {\n  const title = createMessage(SWITCH_BRANCHES);\n  const theme = useTheme() as Theme;\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"space-between\",\n      }}\n    >\n      <div style={{ display: \"flex\", alignItems: \"center\" }}>\n        <Text color={\"var(--ads-v2-color-fg-emphasis-plus)\"} kind=\"heading-s\">\n          {title}\n        </Text>\n        <span\n          style={{\n            display: \"inline-block\",\n            marginLeft: get(theme, \"spaces[1]\"),\n          }}\n        >\n          <Tooltip content={createMessage(SYNC_BRANCHES)} placement=\"top\">\n            <Button\n              className=\"t--sync-branches\"\n              color={get(theme, \"colors.gitSyncModal.closeIcon\")}\n              isIconButton\n              kind=\"tertiary\"\n              onClick={fetchBranches}\n              size=\"md\"\n              startIcon=\"refresh\"\n            />\n          </Tooltip>\n        </span>\n      </div>\n      <Button\n        className=\"t--close-branch-list\"\n        color={get(theme, \"colors.gitSyncModal.closeIcon\")}\n        isIconButton\n        kind=\"tertiary\"\n        onClick={closePopup}\n        size=\"md\"\n        startIcon=\"close-modal\"\n      />\n    </div>\n  );\n}\n\nexport default function BranchList(props: {\n  setIsPopupOpen?: (flag: boolean) => void;\n}) {\n  const dispatch = useDispatch();\n  const pruneAndFetchBranches = () => {\n    AnalyticsUtil.logEvent(\"GS_SYNC_BRANCHES\", {\n      source: \"BRANCH_LIST_POPUP_FROM_BOTTOM_BAR\",\n    });\n    dispatch(fetchBranchesInit({ pruneBranches: true }));\n    dispatch(fetchGitProtectedBranchesInit());\n  };\n\n  const branches = useSelector(getGitBranches);\n  const branchNames = useSelector(getGitBranchNames);\n  const currentBranch = useSelector(getCurrentGitBranch);\n  const fetchingBranches = useSelector(getFetchingBranches);\n  const defaultBranch = useSelector(getDefaultGitBranchName);\n  const protectedBranches = useSelector(getProtectedBranchesSelector);\n  const isGetProtectedBranchesLoading = useSelector(\n    getIsGetProtectedBranchesLoading,\n  );\n  const [searchText, changeSearchTextInState] = useState(\"\");\n  const changeSearchText = (text: string) => {\n    changeSearchTextInState(removeSpecialChars(text));\n  };\n\n  const isCreateNewBranchInputValid = useMemo(\n    () =>\n      !!(\n        searchText &&\n        branchNames &&\n        !branchNames.find((branch: string) => branch === searchText)\n      ),\n    [searchText, branchNames],\n  );\n\n  const filteredBranches = useFilteredBranches(branches, searchText);\n\n  const localBranches = filteredBranches.filter((b: string) =>\n    isLocalBranch(b),\n  );\n  const remoteBranches = filteredBranches.filter((b: string) =>\n    isRemoteBranch(b),\n  );\n  const { activeHoverIndex, setActiveHoverIndex } = useActiveHoverIndex(\n    currentBranch,\n    filteredBranches,\n    isCreateNewBranchInputValid,\n  );\n\n  const [isCreatingNewBranch, setIsCreatingNewBranch] = useState(false);\n\n  const handleCreateNewBranch = () => {\n    if (isCreatingNewBranch) return;\n    AnalyticsUtil.logEvent(\"GS_CREATE_NEW_BRANCH\", {\n      source: \"BRANCH_LIST_POPUP_FROM_BOTTOM_BAR\",\n    });\n    const branch = searchText;\n    setIsCreatingNewBranch(true);\n    dispatch(\n      createNewBranchInit({\n        branch,\n        onErrorCallback: () => {\n          setIsCreatingNewBranch(false);\n        },\n        onSuccessCallback: () => {\n          setIsCreatingNewBranch(false);\n          if (typeof props.setIsPopupOpen === \"function\")\n            props.setIsPopupOpen(false);\n        },\n      }),\n    );\n  };\n\n  const switchBranch = (branch: string): void => {\n    AnalyticsUtil.logEvent(\"GS_SWITCH_BRANCH\", {\n      source: \"BRANCH_LIST_POPUP_FROM_BOTTOM_BAR\",\n    });\n    dispatch(switchGitBranchInit(branch));\n  };\n\n  const handleUpKey = () => setActiveHoverIndex(activeHoverIndex - 1);\n\n  const handleDownKey = () => setActiveHoverIndex(activeHoverIndex + 1);\n\n  const handleSubmitKey = () => {\n    if (isCreateNewBranchInputValid) {\n      handleCreateNewBranch();\n    } else {\n      switchBranch(filteredBranches[activeHoverIndex]);\n    }\n  };\n\n  const handleEscKey = () => {\n    if (typeof props.setIsPopupOpen === \"function\") props.setIsPopupOpen(false);\n  };\n\n  const remoteBranchList = RemoteBranchList(remoteBranches, switchBranch);\n  const localBranchList = LocalBranchList(\n    localBranches,\n    currentBranch,\n    isCreateNewBranchInputValid,\n    activeHoverIndex,\n    defaultBranch,\n    switchBranch,\n    protectedBranches,\n  );\n\n  const loading = fetchingBranches || isGetProtectedBranchesLoading;\n\n  return (\n    <BranchListHotkeys\n      handleDownKey={handleDownKey}\n      handleEscKey={handleEscKey}\n      handleSubmitKey={handleSubmitKey}\n      handleUpKey={handleUpKey}\n    >\n      <BranchDropdownContainer>\n        <Header\n          closePopup={() => {\n            if (typeof props.setIsPopupOpen === \"function\") {\n              props.setIsPopupOpen(false);\n            }\n          }}\n          fetchBranches={pruneAndFetchBranches}\n        />\n        <Space size={3} />\n        <div style={{ width: 300 }}>\n          {loading && (\n            <div style={{ width: \"100%\", height: textInputHeight }}>\n              <Skeleton />\n            </div>\n          )}\n          {!loading && (\n            <SearchInput\n              autoFocus\n              className=\"branch-search t--branch-search-input\"\n              fill\n              onChange={changeSearchText}\n              placeholder={createMessage(FIND_OR_CREATE_A_BRANCH)}\n              value={searchText}\n            />\n          )}\n        </div>\n        <Space size={3} />\n\n        {loading && <BranchesLoading />}\n        {!loading && (\n          <ListContainer>\n            <Space size={5} />\n            {isCreateNewBranchInputValid && (\n              <CreateNewBranch\n                branch={searchText}\n                className=\"t--create-new-branch-button\"\n                currentBranch={currentBranch}\n                hovered={activeHoverIndex === 0}\n                isCreatingNewBranch={isCreatingNewBranch}\n                onClick={handleCreateNewBranch}\n                shouldScrollIntoView={activeHoverIndex === 0}\n              />\n            )}\n            {localBranchList}\n            <Space size={5} />\n            {remoteBranchList}\n          </ListContainer>\n        )}\n      </BranchDropdownContainer>\n    </BranchListHotkeys>\n  );\n}\n","import { RemoteBranchListItem } from \"./RemoteBranchListItem\";\nimport React from \"react\";\nimport { createMessage, REMOTE_BRANCHES } from \"@appsmith/constants/messages\";\nimport { Text } from \"design-system\";\n\n/**\n * RemoteBranchList: returns a list of remote branches\n * @param remoteBranches {string[]} array of remote branch names\n * @param switchBranch {(branch: string) => void} dispatches ReduxActionTypes.SWITCH_GIT_BRANCH_INIT\n */\nexport function RemoteBranchList(\n  remoteBranches: string[],\n  switchBranch: (branch: string) => void,\n) {\n  return (\n    <div data-testid=\"t--git-remote-branch-list-container\">\n      {remoteBranches?.length > 0 && (\n        <Text\n          color=\"var(--ads-v2-color-fg-muted)\"\n          data-testid=\"t--branch-list-header-local\"\n          kind=\"heading-s\"\n          style={{ fontWeight: 600 }}\n        >\n          {createMessage(REMOTE_BRANCHES)}\n        </Text>\n      )}\n      {remoteBranches.map((branch: string) => (\n        <RemoteBranchListItem\n          branch={branch}\n          key={branch}\n          onClick={() => switchBranch(branch)}\n        />\n      ))}\n    </div>\n  );\n}\n","import { BranchListItem } from \"./BranchListItem\";\nimport { getIsActiveItem } from \"../utils\";\nimport React from \"react\";\nimport { createMessage, LOCAL_BRANCHES } from \"@appsmith/constants/messages\";\nimport { Text } from \"design-system\";\n\n/**\n * LocalBranchList: returns a list of local branches\n * @param localBranches {string[]} branches that don't start with origin/\n * @param currentBranch {string | undefined} current checked out branch in backend\n * @param isCreateNewBranchInputValid {boolean}\n * @param activeHoverIndex {number} used to figure out which list item is being selected\n * @param defaultBranch {string | undefined} this is used to put DEFAULT tag on \"master\" branch, which is the default branch name in the backend\n * @param switchBranch {(branch: string) => never} dispatches ReduxActionTypes.SWITCH_GIT_BRANCH_INIT\n */\nexport function LocalBranchList(\n  localBranches: string[],\n  currentBranch: string | undefined,\n  isCreateNewBranchInputValid: boolean,\n  activeHoverIndex: number,\n  defaultBranch: string | undefined,\n  switchBranch: (branch: string) => void,\n  protectedBranches: string[] = [],\n) {\n  return (\n    <div data-testid=\"t--git-local-branch-list-container\">\n      {localBranches?.length > 0 && (\n        <Text\n          color=\"var(--ads-v2-color-fg-muted)\"\n          data-testid=\"t--branch-list-header-local\"\n          kind=\"heading-s\"\n          style={{ fontWeight: 600 }}\n        >\n          {createMessage(LOCAL_BRANCHES)}\n        </Text>\n      )}\n      {localBranches.map((branch: string, index: number) => {\n        const isActive = getIsActiveItem(\n          isCreateNewBranchInputValid,\n          activeHoverIndex,\n          index,\n        );\n        return (\n          <BranchListItem\n            active={currentBranch === branch}\n            branch={branch}\n            isDefault={branch === defaultBranch}\n            isProtected={protectedBranches.includes(branch)}\n            key={branch}\n            onClick={() => switchBranch(branch)}\n            selected={isActive}\n            shouldScrollIntoView={isActive}\n          />\n        );\n      })}\n    </div>\n  );\n}\n","import React, { useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { Popover2 } from \"@blueprintjs/popover2\";\nimport \"@blueprintjs/popover2/lib/css/blueprint-popover2.css\";\n\nimport { getCurrentAppGitMetaData } from \"@appsmith/selectors/applicationSelectors\";\nimport BranchList from \"../components/BranchList\";\nimport {\n  getGitStatus,\n  getIsPollingAutocommit,\n  getIsTriggeringAutocommit,\n  protectedModeSelector,\n  showBranchPopupSelector,\n} from \"selectors/gitSyncSelectors\";\nimport AnalyticsUtil from \"@appsmith/utils/AnalyticsUtil\";\nimport { Button, Icon, Tooltip } from \"design-system\";\nimport { isEllipsisActive } from \"utils/helpers\";\nimport { importRemixIcon } from \"design-system-old\";\nimport { setShowBranchPopupAction } from \"actions/gitSyncActions\";\n\nconst ProtectedIcon = importRemixIcon(\n  async () => import(\"remixicon-react/ShieldKeyholeLineIcon\"),\n);\n\nconst ButtonContainer = styled(Button)`\n  display: flex;\n  align-items: center;\n  margin: 0 ${(props) => props.theme.spaces[4]}px;\n  max-width: 122px;\n  min-width: unset !important;\n\n  :active {\n    border: 1px solid var(--ads-v2-color-border-muted);\n  }\n`;\n\nfunction BranchButton() {\n  const dispatch = useDispatch();\n  const gitMetaData = useSelector(getCurrentAppGitMetaData);\n  const isProtectedMode = useSelector(protectedModeSelector);\n  const currentBranch = gitMetaData?.branchName;\n  const labelTarget = useRef<HTMLSpanElement>(null);\n  const status = useSelector(getGitStatus);\n  const isOpen = useSelector(showBranchPopupSelector);\n  const triggeringAutocommit = useSelector(getIsTriggeringAutocommit);\n  const pollingAutocommit = useSelector(getIsPollingAutocommit);\n  const isBranchChangeDisabled = triggeringAutocommit || pollingAutocommit;\n\n  const setIsOpen = (isOpen: boolean) => {\n    dispatch(setShowBranchPopupAction(isOpen));\n  };\n\n  return (\n    <Popover2\n      content={<BranchList setIsPopupOpen={setIsOpen} />}\n      data-testid={\"t--git-branch-button-popover\"}\n      disabled={isBranchChangeDisabled}\n      hasBackdrop\n      isOpen={isOpen}\n      minimal\n      modifiers={{ offset: { enabled: true, options: { offset: [7, 10] } } }}\n      onInteraction={(nextState: boolean) => {\n        setIsOpen(nextState);\n        if (nextState) {\n          AnalyticsUtil.logEvent(\"GS_OPEN_BRANCH_LIST_POPUP\", {\n            source: \"BOTTOM_BAR_ACTIVE_BRANCH_NAME\",\n          });\n        }\n      }}\n      placement=\"top-start\"\n    >\n      <Tooltip\n        content={currentBranch || \"\"}\n        isDisabled={!isEllipsisActive(labelTarget.current)}\n        placement=\"topLeft\"\n      >\n        <ButtonContainer\n          className=\"t--branch-button\"\n          data-testid={\"t--branch-button-currentBranch\"}\n          isDisabled={isBranchChangeDisabled}\n          kind=\"secondary\"\n        >\n          {isProtectedMode ? (\n            <ProtectedIcon\n              style={{ height: 14, width: 14, marginRight: 4, marginTop: 1 }}\n            />\n          ) : (\n            <Icon name={\"git-branch\"} style={{ marginRight: 4 }} />\n          )}\n          <span\n            ref={labelTarget}\n            style={{\n              maxWidth: \"82px\",\n              whiteSpace: \"nowrap\",\n              overflow: \"hidden\",\n              textOverflow: \"ellipsis\",\n            }}\n          >\n            {currentBranch}\n          </span>\n          {!status?.isClean && !isProtectedMode && \"*\"}\n        </ButtonContainer>\n      </Tooltip>\n    </Popover2>\n  );\n}\n\nexport default BranchButton;\n","import React, { useEffect, useState } from \"react\";\nimport { Statusbar } from \"design-system-old\";\nimport styled from \"styled-components\";\nimport {\n  AUTOCOMMIT_IN_PROGRESS_MESSAGE,\n  createMessage,\n} from \"@appsmith/constants/messages\";\n\ninterface AutocommitStatusbarProps {\n  completed: boolean;\n  onHide?: () => void;\n}\n\nconst StatusbarWrapper = styled.div`\n  > div {\n    display: flex;\n    height: initial;\n    align-items: center;\n  }\n\n  > div > div {\n    margin-top: 0px;\n    width: 150px;\n    margin-right: 12px;\n  }\n\n  > div > p {\n    margin-top: 0;\n  }\n`;\n\nexport default function AutocommitStatusbar({\n  completed,\n  onHide,\n}: AutocommitStatusbarProps) {\n  const period = 4;\n  const [percentage, setPercentage] = useState(0);\n  useEffect(() => {\n    if (completed) {\n      setPercentage(100);\n      if (onHide) {\n        const timeout = setTimeout(() => {\n          onHide && onHide();\n        }, 1000);\n        return () => clearTimeout(timeout);\n      }\n    } else {\n      if (percentage < 90) {\n        const interval = setInterval(\n          () => {\n            setPercentage((percentage) => percentage + 10);\n          },\n          (period * 1000) / 9,\n        );\n        return () => clearInterval(interval);\n      }\n    }\n  });\n  return (\n    <StatusbarWrapper>\n      <Statusbar\n        active={false}\n        message={createMessage(AUTOCOMMIT_IN_PROGRESS_MESSAGE)}\n        percentage={percentage}\n        showOnlyMessage\n      />\n    </StatusbarWrapper>\n  );\n}\n","import React, { useMemo } from \"react\";\nimport styled from \"styled-components\";\n\nimport BranchButton from \"./BranchButton\";\n\nimport {\n  CANNOT_PULL_WITH_LOCAL_UNCOMMITTED_CHANGES,\n  COMING_SOON,\n  COMMIT_CHANGES,\n  CONFLICTS_FOUND,\n  CONNECT_GIT_BETA,\n  CONTACT_ADMIN_FOR_GIT,\n  createMessage,\n  DISCARD_AND_PULL_SUCCESS,\n  GIT_SETTINGS,\n  MERGE,\n  NO_COMMITS_TO_PULL,\n  NOT_LIVE_FOR_YOU_YET,\n  PULL_CHANGES,\n} from \"@appsmith/constants/messages\";\n\nimport { Colors } from \"constants/Colors\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  discardChanges,\n  gitPullInit,\n  setGitSettingsModalOpenAction,\n  setIsGitSyncModalOpen,\n} from \"actions/gitSyncActions\";\nimport { GitSyncModalTab } from \"entities/GitSync\";\nimport {\n  getCountOfChangesToCommit,\n  getGitMetadataSelector,\n  getGitStatus,\n  getIsDiscardInProgress,\n  getIsFetchingGitStatus,\n  getIsGitConnected,\n  getIsPollingAutocommit,\n  getPullFailed,\n  protectedModeSelector,\n} from \"selectors/gitSyncSelectors\";\nimport SpinnerLoader from \"pages/common/SpinnerLoader\";\nimport { getTypographyByKey } from \"design-system-old\";\nimport { Button, Icon, Tooltip } from \"design-system\";\nimport AnalyticsUtil from \"@appsmith/utils/AnalyticsUtil\";\nimport { useFeatureFlag } from \"utils/hooks/useFeatureFlag\";\nimport { FEATURE_FLAG } from \"@appsmith/entities/FeatureFlag\";\nimport AutocommitStatusbar from \"./AutocommitStatusbar\";\nimport { useHasConnectToGitPermission } from \"../hooks/gitPermissionHooks\";\nimport { GitSettingsTab } from \"reducers/uiReducers/gitSyncReducer\";\n\ninterface QuickActionButtonProps {\n  className?: string;\n  count?: number;\n  disabled?: boolean;\n  icon: string;\n  loading?: boolean;\n  onClick: () => void;\n  tooltipText: string;\n}\n\nconst SpinnerContainer = styled.div`\n  padding: 0 10px;\n`;\n\nconst QuickActionButtonContainer = styled.button<{ disabled?: boolean }>`\n  margin: 0 ${(props) => props.theme.spaces[1]}px;\n  display: block;\n  position: relative;\n  overflow: visible;\n  cursor: ${(p) => (p.disabled ? \"not-allowed\" : \"pointer\")};\n  opacity: ${(p) => (p.disabled ? 0.6 : 1)};\n\n  .count {\n    position: absolute;\n    height: ${(props) => props.theme.spaces[7]}px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: ${Colors.WHITE};\n    background-color: var(--ads-v2-color-bg-brand-secondary-emphasis-plus);\n    top: ${(props) => -1 * props.theme.spaces[3]}px;\n    left: ${(props) => props.theme.spaces[10]}px;\n    border-radius: ${(props) => props.theme.spaces[3]}px;\n    ${getTypographyByKey(\"p3\")};\n    z-index: 1;\n    padding: ${(props) => props.theme.spaces[1]}px\n      ${(props) => props.theme.spaces[2]}px;\n  }\n`;\n\nexport const capitalizeFirstLetter = (string = \" \") => {\n  return string.charAt(0).toUpperCase() + string.toLowerCase().slice(1);\n};\n\nfunction QuickActionButton({\n  className = \"\",\n  count = 0,\n  disabled = false,\n  icon,\n  loading,\n  onClick,\n  tooltipText,\n}: QuickActionButtonProps) {\n  const content = capitalizeFirstLetter(tooltipText);\n  return (\n    <QuickActionButtonContainer\n      className={className}\n      disabled={disabled}\n      onClick={onClick}\n    >\n      {loading ? (\n        <SpinnerContainer className=\"t--loader-quick-git-action\">\n          <SpinnerLoader size=\"md\" />\n        </SpinnerContainer>\n      ) : (\n        <Tooltip content={content}>\n          <div>\n            <Button\n              isDisabled={disabled}\n              isIconButton\n              kind=\"tertiary\"\n              size=\"md\"\n              startIcon={icon}\n            />\n            {count > 0 && <span className=\"count\">{count}</span>}\n          </div>\n        </Tooltip>\n      )}\n    </QuickActionButtonContainer>\n  );\n}\n\nconst getPullBtnStatus = (\n  gitStatus: any,\n  pullFailed: boolean,\n  isProtected: boolean,\n) => {\n  const { behindCount, isClean } = gitStatus || {};\n  let message = createMessage(NO_COMMITS_TO_PULL);\n  let disabled = behindCount === 0;\n  if (!isClean && !isProtected) {\n    disabled = true;\n    message = createMessage(CANNOT_PULL_WITH_LOCAL_UNCOMMITTED_CHANGES);\n  } else if (!isClean && isProtected && behindCount > 0) {\n    disabled = false;\n    message = createMessage(PULL_CHANGES);\n  } else if (pullFailed) {\n    message = createMessage(CONFLICTS_FOUND);\n  } else if (behindCount > 0) {\n    message = createMessage(PULL_CHANGES);\n  }\n\n  return {\n    disabled,\n    message,\n  };\n};\n\nconst getQuickActionButtons = ({\n  changesToCommit,\n  commit,\n  gitStatus,\n  isFetchingGitStatus,\n  isProtectedMode,\n  merge,\n  pull,\n  pullDisabled,\n  pullTooltipMessage,\n  settings,\n  showPullLoadingState,\n}: {\n  changesToCommit: number;\n  commit: () => void;\n  settings: () => void;\n  pull: () => void;\n  merge: () => void;\n  gitStatus: any;\n  isFetchingGitStatus: boolean;\n  pullDisabled: boolean;\n  pullTooltipMessage: string;\n  showPullLoadingState: boolean;\n  isProtectedMode: boolean;\n}) => {\n  return [\n    {\n      className: \"t--bottom-bar-commit\",\n      disabled: !isFetchingGitStatus && isProtectedMode,\n      count: isProtectedMode ? undefined : changesToCommit,\n      icon: \"plus\",\n      loading: isFetchingGitStatus,\n      onClick: () => !isFetchingGitStatus && !isProtectedMode && commit(),\n      tooltipText: createMessage(COMMIT_CHANGES),\n    },\n    {\n      className: \"t--bottom-bar-pull\",\n      count: gitStatus?.behindCount,\n      icon: \"down-arrow-2\",\n      onClick: () => !showPullLoadingState && !pullDisabled && pull(),\n      tooltipText: pullTooltipMessage,\n      disabled: !showPullLoadingState && pullDisabled,\n      loading: showPullLoadingState,\n    },\n    {\n      className: \"t--bottom-bar-merge\",\n      disabled: isProtectedMode,\n      icon: \"fork\",\n      onClick: merge,\n      tooltipText: createMessage(MERGE),\n    },\n    {\n      className: \"t--bottom-git-settings\",\n      icon: \"settings-2-line\",\n      onClick: settings,\n      tooltipText: createMessage(GIT_SETTINGS),\n    },\n  ];\n};\n\nconst Container = styled.div`\n  height: 100%;\n  display: flex;\n  align-items: center;\n`;\n\nconst StyledIcon = styled(Icon)`\n  cursor: default;\n  margin-right: ${(props) => props.theme.spaces[3]}px;\n`;\n\nconst OuterContainer = styled.div`\n  padding: 4px 16px;\n  height: 100%;\n`;\n\nconst CenterDiv = styled.div`\n  text-align: center;\n`;\n\nfunction ConnectGitPlaceholder() {\n  const dispatch = useDispatch();\n  const isConnectToGitPermitted = useHasConnectToGitPermission();\n\n  const isTooltipEnabled = !isConnectToGitPermitted;\n  const tooltipContent = useMemo(() => {\n    if (!isConnectToGitPermitted) {\n      return <CenterDiv>{createMessage(CONTACT_ADMIN_FOR_GIT)}</CenterDiv>;\n    }\n    return (\n      <>\n        <div>{createMessage(NOT_LIVE_FOR_YOU_YET)}</div>\n        <div>{createMessage(COMING_SOON)}</div>\n      </>\n    );\n  }, [isConnectToGitPermitted]);\n\n  return (\n    <OuterContainer>\n      <Tooltip content={tooltipContent} isDisabled={!isTooltipEnabled}>\n        <Container style={{ marginLeft: 0, cursor: \"pointer\" }}>\n          <StyledIcon\n            color=\"var(--ads-v2-color-fg-muted)\"\n            name=\"git-commit\"\n            size=\"lg\"\n          />\n          <Button\n            className=\"t--connect-git-bottom-bar\"\n            isDisabled={!isConnectToGitPermitted}\n            kind=\"secondary\"\n            onClick={() => {\n              AnalyticsUtil.logEvent(\"GS_CONNECT_GIT_CLICK\", {\n                source: \"BOTTOM_BAR_GIT_CONNECT_BUTTON\",\n              });\n\n              dispatch(\n                setIsGitSyncModalOpen({\n                  isOpen: true,\n                  tab: GitSyncModalTab.GIT_CONNECTION,\n                }),\n              );\n            }}\n            size=\"sm\"\n          >\n            {createMessage(CONNECT_GIT_BETA)}\n          </Button>\n        </Container>\n      </Tooltip>\n    </OuterContainer>\n  );\n}\n\nexport default function QuickGitActions() {\n  const isGitConnected = useSelector(getIsGitConnected);\n  const dispatch = useDispatch();\n  const gitStatus = useSelector(getGitStatus);\n  const pullFailed = useSelector(getPullFailed);\n  const isProtectedMode = useSelector(protectedModeSelector);\n\n  const { disabled: pullDisabled, message: pullTooltipMessage } =\n    getPullBtnStatus(gitStatus, !!pullFailed, isProtectedMode);\n\n  const isPullInProgress = useSelector(getIsDiscardInProgress);\n  const isFetchingGitStatus = useSelector(getIsFetchingGitStatus);\n  const showPullLoadingState = isPullInProgress || isFetchingGitStatus;\n  const changesToCommit = useSelector(getCountOfChangesToCommit);\n\n  const isAutocommitFeatureEnabled = useFeatureFlag(\n    FEATURE_FLAG.release_git_autocommit_feature_enabled,\n  );\n  const gitMetadata = useSelector(getGitMetadataSelector);\n  const isPollingAutocommit = useSelector(getIsPollingAutocommit);\n  const isAutocommitEnabled = gitMetadata?.autoCommitConfig?.enabled;\n\n  const quickActionButtons = getQuickActionButtons({\n    commit: () => {\n      dispatch(\n        setIsGitSyncModalOpen({\n          isOpen: true,\n          tab: GitSyncModalTab.DEPLOY,\n        }),\n      );\n      AnalyticsUtil.logEvent(\"GS_DEPLOY_GIT_MODAL_TRIGGERED\", {\n        source: \"BOTTOM_BAR_GIT_COMMIT_BUTTON\",\n      });\n    },\n    settings: () => {\n      dispatch(\n        setGitSettingsModalOpenAction({\n          open: true,\n          tab: GitSettingsTab.GENERAL,\n        }),\n      );\n      AnalyticsUtil.logEvent(\"GS_SETTING_CLICK\", {\n        source: \"BOTTOM_BAR_GIT_SETTING_BUTTON\",\n      });\n    },\n    pull: () => {\n      AnalyticsUtil.logEvent(\"GS_PULL_GIT_CLICK\", {\n        source: \"BOTTOM_BAR_GIT_PULL_BUTTON\",\n      });\n      if (isProtectedMode) {\n        dispatch(\n          discardChanges({\n            successToastMessage: createMessage(DISCARD_AND_PULL_SUCCESS),\n          }),\n        );\n      } else {\n        dispatch(gitPullInit({ triggeredFromBottomBar: true }));\n      }\n    },\n    merge: () => {\n      AnalyticsUtil.logEvent(\"GS_MERGE_GIT_MODAL_TRIGGERED\", {\n        source: \"BOTTOM_BAR_GIT_MERGE_BUTTON\",\n      });\n      dispatch(\n        setIsGitSyncModalOpen({\n          isOpen: true,\n          tab: GitSyncModalTab.MERGE,\n          isDeploying: true,\n        }),\n      );\n    },\n    gitStatus,\n    isFetchingGitStatus,\n    pullDisabled,\n    pullTooltipMessage,\n    showPullLoadingState,\n    changesToCommit,\n    isProtectedMode,\n  });\n  return isGitConnected ? (\n    <Container>\n      <BranchButton />\n      {isAutocommitFeatureEnabled &&\n      isAutocommitEnabled &&\n      isPollingAutocommit ? (\n        <AutocommitStatusbar completed={!isPollingAutocommit} />\n      ) : (\n        quickActionButtons.map((button) => (\n          <QuickActionButton key={button.tooltipText} {...button} />\n        ))\n      )}\n    </Container>\n  ) : (\n    <ConnectGitPlaceholder />\n  );\n}\n","import React, { useCallback } from \"react\";\nimport DebuggerLogs from \"./DebuggerLogs\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  setDebuggerSelectedTab,\n  setResponsePaneHeight,\n  showDebugger,\n} from \"actions/debuggerActions\";\nimport {\n  getDebuggerSelectedTab,\n  getErrorCount,\n  getResponsePaneHeight,\n} from \"selectors/debuggerSelectors\";\nimport AnalyticsUtil from \"@appsmith/utils/AnalyticsUtil\";\nimport Errors from \"./Errors\";\nimport EntityDeps from \"./EntityDependecies\";\nimport {\n  createMessage,\n  DEBUGGER_ERRORS,\n  DEBUGGER_LOGS,\n  INSPECT_ENTITY,\n} from \"@appsmith/constants/messages\";\nimport { DEBUGGER_TAB_KEYS } from \"./helpers\";\nimport EntityBottomTabs from \"../EntityBottomTabs\";\nimport { ActionExecutionResizerHeight } from \"pages/Editor/APIEditor/constants\";\nimport { IDEBottomView, ViewHideBehaviour, ViewDisplayMode } from \"IDE\";\n\nfunction DebuggerTabs() {\n  const dispatch = useDispatch();\n  const selectedTab = useSelector(getDebuggerSelectedTab);\n  // fetch the error count from the store.\n  const errorCount = useSelector(getErrorCount);\n  // get the height of the response pane.\n  const responsePaneHeight = useSelector(getResponsePaneHeight);\n  // set the height of the response pane.\n  const updateResponsePaneHeight = useCallback((height: number) => {\n    dispatch(setResponsePaneHeight(height));\n  }, []);\n  const setSelectedTab = (tabKey: string) => {\n    if (tabKey === DEBUGGER_TAB_KEYS.ERROR_TAB) {\n      AnalyticsUtil.logEvent(\"OPEN_DEBUGGER\", {\n        source: \"WIDGET_EDITOR\",\n      });\n    }\n    dispatch(setDebuggerSelectedTab(tabKey));\n  };\n  const onClose = () => dispatch(showDebugger(false));\n\n  const DEBUGGER_TABS = [\n    {\n      key: DEBUGGER_TAB_KEYS.ERROR_TAB,\n      title: createMessage(DEBUGGER_ERRORS),\n      count: errorCount,\n      panelComponent: <Errors hasShortCut />,\n    },\n    {\n      key: DEBUGGER_TAB_KEYS.LOGS_TAB,\n      title: createMessage(DEBUGGER_LOGS),\n      panelComponent: <DebuggerLogs hasShortCut />,\n    },\n    {\n      key: DEBUGGER_TAB_KEYS.INSPECT_TAB,\n      title: createMessage(INSPECT_ENTITY),\n      panelComponent: <EntityDeps />,\n    },\n  ];\n\n  // Do not render if response, header or schema tab is selected in the bottom bar.\n  const shouldRender = !(\n    selectedTab === DEBUGGER_TAB_KEYS.RESPONSE_TAB ||\n    selectedTab === DEBUGGER_TAB_KEYS.HEADER_TAB ||\n    selectedTab === DEBUGGER_TAB_KEYS.SCHEMA_TAB\n  );\n\n  return (\n    <IDEBottomView\n      behaviour={ViewHideBehaviour.CLOSE}\n      className=\"t--debugger-tabs-container\"\n      displayMode={ViewDisplayMode.OVERLAY}\n      height={responsePaneHeight}\n      hidden={!shouldRender}\n      onHideClick={onClose}\n      setHeight={updateResponsePaneHeight}\n    >\n      <EntityBottomTabs\n        expandedHeight={`${ActionExecutionResizerHeight}px`}\n        onSelect={setSelectedTab}\n        selectedTabKey={selectedTab}\n        tabs={DEBUGGER_TABS}\n      />\n    </IDEBottomView>\n  );\n}\n\nexport default DebuggerTabs;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport DebuggerTabs from \"./DebuggerTabs\";\nimport { setErrorCount } from \"actions/debuggerActions\";\nimport { getMessageCount, showDebuggerFlag } from \"selectors/debuggerSelectors\";\nimport { Button, Tooltip } from \"design-system\";\nimport useDebuggerTriggerClick from \"./hooks/useDebuggerTriggerClick\";\n\nfunction Debugger() {\n  // Debugger render flag\n  const showDebugger = useSelector(showDebuggerFlag);\n\n  return showDebugger ? <DebuggerTabs /> : null;\n}\n\nexport function DebuggerTrigger() {\n  const dispatch = useDispatch();\n  const messageCounters = useSelector(getMessageCount);\n\n  useEffect(() => {\n    dispatch(setErrorCount(messageCounters.errors));\n  });\n\n  const onClick = useDebuggerTriggerClick();\n\n  //tooltip will always show error count as we are opening error tab on click of debugger.\n  const tooltipContent =\n    messageCounters.errors !== 0\n      ? `View details for ${messageCounters.errors} ${\n          messageCounters.errors > 1 ? \"errors\" : \"error\"\n        }`\n      : `No errors`;\n\n  return (\n    <Tooltip content={tooltipContent}>\n      <Button\n        className=\"t--debugger-count\"\n        kind={messageCounters.errors > 0 ? \"error\" : \"tertiary\"}\n        onClick={onClick}\n        size=\"md\"\n        startIcon={\n          messageCounters.errors ? \"close-circle\" : \"close-circle-line\"\n        }\n      >\n        {messageCounters.errors > 99 ? \"99+\" : messageCounters.errors}\n      </Button>\n    </Tooltip>\n  );\n}\n\nexport default Debugger;\n","import styled from \"styled-components\";\nimport { Layers } from \"constants/Layers\";\n\nexport const Container = styled.div`\n  width: 100%;\n  height: ${(props) => props.theme.bottomBarHeight};\n  display: flex;\n  position: fixed;\n  justify-content: space-between;\n  background-color: ${(props) => props.theme.colors.editorBottomBar.background};\n  z-index: ${Layers.bottomBar};\n  border-top: solid 1px var(--ads-v2-color-border);\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n","import React from \"react\";\nimport QuickGitActions from \"pages/Editor/gitSync/QuickGitActions\";\nimport { DebuggerTrigger } from \"components/editorComponents/Debugger\";\nimport HelpButton from \"pages/Editor/HelpButton\";\nimport ManualUpgrades from \"./ManualUpgrades\";\nimport { Button } from \"design-system\";\nimport SwitchEnvironment from \"@appsmith/components/SwitchEnvironment\";\nimport { Container, Wrapper } from \"./components\";\nimport { useSelector } from \"react-redux\";\nimport { getCurrentApplicationId } from \"selectors/editorSelectors\";\nimport { useDispatch } from \"react-redux\";\nimport { softRefreshActions } from \"actions/pluginActionActions\";\nimport { START_SWITCH_ENVIRONMENT } from \"@appsmith/constants/messages\";\n\nexport default function BottomBar({ viewMode }: { viewMode: boolean }) {\n  const appId = useSelector(getCurrentApplicationId) || \"\";\n  const dispatch = useDispatch();\n\n  const onChangeEnv = () => {\n    dispatch(softRefreshActions());\n  };\n\n  return (\n    <Container>\n      <Wrapper>\n        {!viewMode && (\n          <SwitchEnvironment\n            editorId={appId}\n            onChangeEnv={onChangeEnv}\n            startSwitchEnvMessage={START_SWITCH_ENVIRONMENT}\n            viewMode={viewMode}\n          />\n        )}\n        {!viewMode && <QuickGitActions />}\n      </Wrapper>\n      {!viewMode && (\n        <Wrapper>\n          <ManualUpgrades showTooltip>\n            <Button\n              className=\"t--upgrade\"\n              isIconButton\n              kind=\"tertiary\"\n              size=\"md\"\n              startIcon=\"upgrade\"\n            />\n          </ManualUpgrades>\n          <DebuggerTrigger />\n          <HelpButton />\n        </Wrapper>\n      )}\n    </Container>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport classNames from \"classnames\";\nimport { useSelector } from \"react-redux\";\nimport { combinedPreviewModeSelector } from \"../../../selectors/editorSelectors\";\nimport { protectedModeSelector } from \"selectors/gitSyncSelectors\";\n\ninterface EditorWrapperContainerProps {\n  children: React.ReactNode;\n}\n\nconst Wrapper = styled.div<{\n  isProtectedMode: boolean;\n}>`\n  display: flex;\n  height: calc(\n    100vh - ${(props) => props.theme.smallHeaderHeight} -\n      ${(props) => props.theme.bottomBarHeight} -\n      ${(props) => (props.isProtectedMode ? \"70px\" : \"0px\")}\n  );\n  background-color: ${(props) => props.theme.appBackground};\n`;\n\nfunction EditorWrapperContainer({ children }: EditorWrapperContainerProps) {\n  const isCombinedPreviewMode = useSelector(combinedPreviewModeSelector);\n  const isProtectedMode = useSelector(protectedModeSelector);\n  return (\n    <Wrapper\n      className={classNames({\n        [`relative w-full overflow-x-hidden`]: true,\n        \"select-none\": !isCombinedPreviewMode,\n      })}\n      isProtectedMode={isProtectedMode}\n    >\n      {children}\n    </Wrapper>\n  );\n}\n\nexport default EditorWrapperContainer;\n","import React from \"react\";\nimport { Icon, Text, Tooltip } from \"design-system\";\nimport styled from \"styled-components\";\nimport { SidebarTopButtonTitles } from \"@appsmith/entities/IDE/constants\";\n\nexport interface SidebarButtonProps {\n  title?: string;\n  selected: boolean;\n  icon: string;\n  onClick: () => void;\n  tooltip?: string;\n  conditionIcon?: string;\n}\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  width: 50px;\n  text-align: center;\n  align-items: center;\n  padding: 8px 0;\n`;\n\nconst IconContainer = styled.div<{ selected: boolean }>`\n  padding: 2px;\n  background-color: ${(props) =>\n    props.selected ? \"var(--colors-raw-orange-100, #fbe6dc)\" : \"white\"};\n  border-radius: 3px;\n  width: 32px;\n  height: 32px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  position: relative;\n  &:hover {\n    background: ${(props) =>\n      props.selected\n        ? \"var(--colors-raw-orange-100, #fbe6dc)\"\n        : \"var(--ads-v2-color-bg-subtle, #f1f5f9);\"};\n  }\n`;\n\nconst ConditionIcon = styled(Icon)`\n  position: absolute;\n  bottom: 3px;\n  right: -1px;\n  &.t--sidebar-${SidebarTopButtonTitles.DATA}-condition-icon {\n    color: #ffe283;\n  }\n`;\n\nfunction SidebarButton(props: SidebarButtonProps) {\n  return (\n    <Container>\n      {props.title === SidebarTopButtonTitles.DATA}\n      <Tooltip\n        content={props.tooltip}\n        isDisabled={!!props.title && !props.tooltip}\n        placement={\"right\"}\n      >\n        <IconContainer\n          className={`t--sidebar-${props.title || props.tooltip}`}\n          data-selected={props.selected}\n          onClick={props.onClick}\n          selected={props.selected}\n        >\n          <Icon name={props.icon} size=\"lg\" />\n          {props.conditionIcon && (\n            <ConditionIcon\n              className={`t--sidebar-${props.title}-condition-icon`}\n              name={props.conditionIcon}\n              size=\"md\"\n            />\n          )}\n        </IconContainer>\n      </Tooltip>\n      {props.title ? <Text kind=\"body-s\">{props.title}</Text> : null}\n    </Container>\n  );\n}\n\nexport default SidebarButton;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport SidebarButton from \"./SidebarButton\";\nimport type { SidebarButton as SidebarButtonType } from \"@appsmith/entities/IDE/constants\";\nimport { SideButtonType } from \"@appsmith/entities/IDE/constants\";\nimport { useSelector } from \"react-redux\";\nimport { getDatasources } from \"@appsmith/selectors/entitiesSelector\";\n\nconst Container = styled.div`\n  width: 50px;\n  border-right: 1px solid var(--ads-v2-color-border);\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  background-color: var(--ads-v2-color-bg);\n  position: relative;\n`;\n\ninterface SidebarComponentProps {\n  topButtons: SidebarButtonType[];\n  bottomButtons: SidebarButtonType[];\n  appState: string;\n  onClick: (suffix: string) => void;\n}\n\nfunction SidebarComponent(props: SidebarComponentProps) {\n  const { appState, bottomButtons, onClick, topButtons } = props;\n  const datasources = useSelector(getDatasources);\n  const getConditionalIconAndTooltip = (\n    type?: SideButtonType,\n    conditionTooltip?: string,\n  ) => {\n    switch (type) {\n      case SideButtonType.DATSOURCE:\n        if (datasources.length === 0)\n          return {\n            conditionIcon: \"warning\",\n            tooltip: conditionTooltip,\n          };\n        return {};\n      default:\n        return {};\n    }\n  };\n\n  return (\n    <Container className=\"t--sidebar\" id=\"t--app-sidebar\">\n      <div>\n        {topButtons.map((b) => (\n          <SidebarButton\n            icon={b.icon}\n            key={b.state}\n            onClick={() => {\n              if (appState !== b.state) {\n                onClick(b.urlSuffix);\n              }\n            }}\n            selected={appState === b.state}\n            title={b.title}\n            {...getConditionalIconAndTooltip(\n              b.conditionType,\n              b.conditionTooltip,\n            )}\n          />\n        ))}\n      </div>\n      <div>\n        {bottomButtons.map((b) => (\n          <SidebarButton\n            icon={b.icon}\n            key={b.state}\n            onClick={() => {\n              if (appState !== b.state) {\n                onClick(b.urlSuffix);\n              }\n            }}\n            selected={appState === b.state}\n            tooltip={b.title}\n          />\n        ))}\n      </div>\n    </Container>\n  );\n}\n\nexport default SidebarComponent;\n","import React, { useCallback, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { builderURL } from \"@appsmith/RouteBuilder\";\nimport { getCurrentPageId } from \"selectors/editorSelectors\";\nimport history, { NavigationMethod } from \"utils/history\";\nimport { useCurrentAppState } from \"../hooks\";\nimport { getCurrentWorkspaceId } from \"@appsmith/selectors/selectedWorkspaceSelectors\";\nimport { fetchWorkspace } from \"@appsmith/actions/workspaceActions\";\nimport SidebarComponent from \"./SidebarComponent\";\nimport { BottomButtons, TopButtons } from \"@appsmith/entities/IDE/constants\";\n\nfunction Sidebar() {\n  const dispatch = useDispatch();\n  const appState = useCurrentAppState();\n  const pageId = useSelector(getCurrentPageId);\n\n  const currentWorkspaceId = useSelector(getCurrentWorkspaceId);\n\n  useEffect(() => {\n    dispatch(fetchWorkspace(currentWorkspaceId));\n  }, [currentWorkspaceId]);\n\n  const onClick = useCallback(\n    (suffix) => {\n      history.push(\n        builderURL({\n          pageId,\n          suffix,\n        }),\n        {\n          invokedBy: NavigationMethod.AppSidebar,\n        },\n      );\n    },\n    [pageId],\n  );\n\n  return (\n    <SidebarComponent\n      appState={appState}\n      bottomButtons={BottomButtons}\n      onClick={onClick}\n      topButtons={TopButtons}\n    />\n  );\n}\n\nexport default Sidebar;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Text } from \"design-system\";\n\ninterface Props {\n  title: string;\n  rightIcon?: React.ReactNode;\n  className?: string;\n}\n\nconst Container = styled.div`\n  background: var(--ads-v2-color-gray-50);\n  padding: var(--ads-v2-spaces-3) var(--ads-v2-spaces-4);\n  padding-right: var(--ads-v2-spaces-2);\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  height: 40px;\n  span {\n    line-height: 20px;\n  }\n`;\n\nfunction PaneHeader(props: Props) {\n  return (\n    <Container className={props.className}>\n      <Text kind=\"heading-xs\">{props.title}</Text>\n      {props.rightIcon ? props.rightIcon : null}\n    </Container>\n  );\n}\n\nexport default PaneHeader;\n","import { APP_SETTINGS_PANE_WIDTH } from \"constants/AppConstants\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport PaneHeader from \"../IDE/LeftPane/PaneHeader\";\n\ntype EditorSettingsPaneContainerProps = React.PropsWithChildren<{\n  title: string;\n}>;\n\nconst SettingsPageWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: ${APP_SETTINGS_PANE_WIDTH}px;\n  &:nth-child(2) {\n    height: 100%;\n  }\n`;\n\nconst EditorSettingsPaneContainer = ({\n  children,\n  title,\n}: EditorSettingsPaneContainerProps) => {\n  return (\n    <div className=\"h-full flex\">\n      <SettingsPageWrapper>\n        <PaneHeader title={title} />\n        {children}\n      </SettingsPageWrapper>\n    </div>\n  );\n};\n\nexport default EditorSettingsPaneContainer;\n","import React from \"react\";\nimport AppSettingsPane from \"../../AppSettingsPane/AppSettings\";\nimport EditorSettingsPaneContainer from \"pages/Editor/commons/EditorSettingsPaneContainer\";\nconst SettingsPane = () => {\n  return (\n    <EditorSettingsPaneContainer title=\"App Settings\">\n      <AppSettingsPane />\n    </EditorSettingsPaneContainer>\n  );\n};\n\nexport default SettingsPane;\n","import { Button, Popover, PopoverTrigger } from \"design-system\";\nimport React from \"react\";\nimport history from \"utils/history\";\nimport { builderURL } from \"@appsmith/RouteBuilder\";\nimport { useSelector } from \"react-redux\";\nimport type { AppState } from \"@appsmith/reducers\";\nimport { getCurrentAppWorkspace } from \"@appsmith/selectors/selectedWorkspaceSelectors\";\nimport { useFeatureFlag } from \"utils/hooks/useFeatureFlag\";\nimport { FEATURE_FLAG } from \"@appsmith/entities/FeatureFlag\";\nimport { getHasCreateDatasourcePermission } from \"@appsmith/utils/BusinessFeatures/permissionPageHelpers\";\n\nconst CreateDatasourcePopover = () => {\n  const userWorkspacePermissions = useSelector(\n    (state: AppState) => getCurrentAppWorkspace(state).userPermissions ?? [],\n  );\n\n  const isFeatureEnabled = useFeatureFlag(FEATURE_FLAG.license_gac_enabled);\n\n  const canCreateDatasource = getHasCreateDatasourcePermission(\n    isFeatureEnabled,\n    userWorkspacePermissions,\n  );\n  if (!canCreateDatasource) {\n    return null;\n  }\n  return (\n    <Popover open={false}>\n      <PopoverTrigger>\n        <Button\n          className={\"t--add-datasource-button\"}\n          isIconButton\n          kind=\"tertiary\"\n          onClick={() =>\n            history.push(\n              builderURL({\n                suffix: \"datasources/NEW\",\n              }),\n            )\n          }\n          size=\"sm\"\n          startIcon=\"add-line\"\n        />\n      </PopoverTrigger>\n    </Popover>\n  );\n};\n\nexport default CreateDatasourcePopover;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Flex, List, Text } from \"design-system\";\nimport { useSelector } from \"react-redux\";\nimport {\n  getCurrentPageId,\n  getDatasourceUsageCountForApp,\n  getDatasources,\n  getDatasourcesGroupedByPluginCategory,\n  getPlugins,\n} from \"@appsmith/selectors/entitiesSelector\";\nimport history from \"utils/history\";\nimport {\n  datasourcesEditorIdURL,\n  integrationEditorURL,\n} from \"@appsmith/RouteBuilder\";\nimport { getSelectedDatasourceId } from \"@appsmith/navigation/FocusSelectors\";\nimport { get, keyBy } from \"lodash\";\nimport CreateDatasourcePopover from \"./CreateDatasourcePopover\";\nimport { useLocation } from \"react-router\";\nimport {\n  createMessage,\n  DATA_PANE_TITLE,\n  DATASOURCE_LIST_BLANK_DESCRIPTION,\n} from \"@appsmith/constants/messages\";\nimport PaneHeader from \"./PaneHeader\";\nimport { useEditorType } from \"@appsmith/hooks\";\nimport { INTEGRATION_TABS } from \"../../../../constants/routes\";\nimport type { AppState } from \"@appsmith/reducers\";\nimport { getCurrentAppWorkspace } from \"@appsmith/selectors/selectedWorkspaceSelectors\";\nimport { useFeatureFlag } from \"utils/hooks/useFeatureFlag\";\nimport { FEATURE_FLAG } from \"@appsmith/entities/FeatureFlag\";\nimport { getHasCreateDatasourcePermission } from \"@appsmith/utils/BusinessFeatures/permissionPageHelpers\";\nimport { EmptyState } from \"../EditorPane/components/EmptyState\";\nimport { getAssetUrl } from \"@appsmith/utils/airgapHelpers\";\n\nconst PaneContainer = styled.div`\n  width: 300px;\n`;\n\nconst PaneBody = styled.div`\n  padding: var(--ads-v2-spaces-3) 0;\n  height: calc(100vh - 120px);\n  overflow-y: scroll;\n`;\n\nconst DatasourceIcon = styled.img`\n  height: 16px;\n  width: 16px;\n  align-self: flex-start;\n`;\n\nconst StyledList = styled(List)`\n  gap: 0;\n`;\n\ninterface DataSidePaneProps {\n  dsUsageSelector?: (...args: any[]) => Record<string, string>;\n}\n\nconst DataSidePane = (props: DataSidePaneProps) => {\n  const { dsUsageSelector = getDatasourceUsageCountForApp } = props;\n  const editorType = useEditorType(history.location.pathname);\n  const pageId = useSelector(getCurrentPageId) as string;\n  const [currentSelectedDatasource, setCurrentSelectedDatasource] = useState<\n    string | undefined\n  >(\"\");\n  const datasources = useSelector(getDatasources);\n  const groupedDatasources = useSelector(getDatasourcesGroupedByPluginCategory);\n  const plugins = useSelector(getPlugins);\n  const groupedPlugins = keyBy(plugins, \"id\");\n  const dsUsageMap = useSelector((state) => dsUsageSelector(state, editorType));\n  const goToDatasource = useCallback((id: string) => {\n    history.push(datasourcesEditorIdURL({ datasourceId: id }));\n  }, []);\n\n  const location = useLocation();\n  useEffect(() => {\n    setCurrentSelectedDatasource(getSelectedDatasourceId(location.pathname));\n  }, [location]);\n\n  const userWorkspacePermissions = useSelector(\n    (state: AppState) => getCurrentAppWorkspace(state).userPermissions ?? [],\n  );\n\n  const isFeatureEnabled = useFeatureFlag(FEATURE_FLAG.license_gac_enabled);\n\n  const canCreateDatasource = getHasCreateDatasourcePermission(\n    isFeatureEnabled,\n    userWorkspacePermissions,\n  );\n\n  const addButtonClickHandler = () =>\n    history.push(\n      integrationEditorURL({\n        pageId: pageId,\n        selectedTab: INTEGRATION_TABS.NEW,\n      }),\n    );\n\n  return (\n    <PaneContainer>\n      <PaneHeader\n        rightIcon={\n          canCreateDatasource && datasources.length !== 0 ? (\n            <CreateDatasourcePopover />\n          ) : undefined\n        }\n        title={createMessage(DATA_PANE_TITLE)}\n      />\n      <PaneBody>\n        {datasources.length === 0 ? (\n          <EmptyState\n            buttonClassName={\"t--add-datasource-button-blank-screen\"}\n            buttonText={\"Bring your data\"}\n            description={createMessage(DATASOURCE_LIST_BLANK_DESCRIPTION)}\n            icon={\"datasource-v3\"}\n            onClick={canCreateDatasource ? addButtonClickHandler : undefined}\n          />\n        ) : null}\n        <Flex\n          flexDirection={\"column\"}\n          gap=\"spaces-4\"\n          overflowY=\"auto\"\n          px=\"spaces-3\"\n        >\n          {Object.entries(groupedDatasources).map(([key, value]) => (\n            <Flex flexDirection={\"column\"} key={key}>\n              <Flex px=\"spaces-3\" py=\"spaces-1\">\n                <Text\n                  className=\"overflow-hidden overflow-ellipsis whitespace-nowrap\"\n                  kind=\"body-s\"\n                >\n                  {key}\n                </Text>\n              </Flex>\n              <StyledList\n                items={value.map((data) => ({\n                  className: \"t--datasource\",\n                  title: data.name,\n                  onClick: () => goToDatasource(data.id),\n                  description: get(dsUsageMap, data.id, \"\"),\n                  descriptionType: \"block\",\n                  isSelected: currentSelectedDatasource === data.id,\n                  startIcon: (\n                    <DatasourceIcon\n                      src={getAssetUrl(\n                        groupedPlugins[data.pluginId].iconLocation,\n                      )}\n                    />\n                  ),\n                }))}\n              />\n            </Flex>\n          ))}\n        </Flex>\n      </PaneBody>\n    </PaneContainer>\n  );\n};\n\nexport default DataSidePane;\n","import React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport styled from \"styled-components\";\nimport {\n  Button,\n  Icon,\n  toast,\n  Text,\n  Input,\n  Link,\n  Spinner,\n  Divider,\n  Avatar,\n  Callout,\n  Tooltip,\n} from \"design-system\";\nimport {\n  createMessage,\n  customJSLibraryMessages,\n} from \"@appsmith/constants/messages\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  selectInstallationStatus,\n  selectInstalledLibraries,\n  selectIsLibraryInstalled,\n  selectQueuedLibraries,\n  selectStatusForURL,\n} from \"@appsmith/selectors/entitiesSelector\";\nimport { InstallState } from \"reducers/uiReducers/libraryReducer\";\nimport recommendedLibraries from \"pages/Editor/Explorer/Libraries/recommendedLibraries\";\nimport type { AppState } from \"@appsmith/reducers\";\nimport { installLibraryInit } from \"actions/JSLibraryActions\";\nimport classNames from \"classnames\";\nimport type { JSLibrary } from \"workers/common/JSLibrary\";\nimport AnalyticsUtil from \"@appsmith/utils/AnalyticsUtil\";\nimport { EntityClassNames } from \"pages/Editor/Explorer/Entity\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  overflow-y: scroll;\n  max-height: calc(var(--popover-max-height) - 69px);\n\n  .search-body {\n    display: flex;\n    padding-right: 4px;\n    padding-left: 2px;\n    flex-direction: column;\n    .search-area {\n      margin-bottom: 16px;\n      .left-icon {\n        margin-left: 14px;\n        .cs-icon {\n          margin-right: 0;\n        }\n      }\n      .bp3-form-group {\n        margin: 0;\n        .remixicon-icon {\n          cursor: initial;\n        }\n      }\n      display: flex;\n      flex-direction: column;\n      .search-bar {\n        margin-bottom: 8px;\n      }\n    }\n    .search-CTA {\n      margin-bottom: 16px;\n      display: flex;\n      flex-direction: column;\n      a {\n        display: inline-block;\n        > span {\n          font-size: inherit;\n        }\n      }\n    }\n    .search-results {\n      .library-card {\n        gap: 8px;\n        padding: 8px 0;\n        display: flex;\n        flex-direction: column;\n        gap: 0.5rem;\n        border-bottom: 1px solid var(--ads-v2-color-border);\n        .description {\n          overflow: hidden;\n          text-overflow: ellipsis;\n          display: -webkit-box;\n          -webkit-line-clamp: 2;\n          font-size: 12px;\n          line-clamp: 2;\n          font-weight: 400;\n          -webkit-box-orient: vertical;\n        }\n        img {\n          cursor: initial;\n        }\n      }\n      .library-card.no-border {\n        border-bottom: none;\n      }\n    }\n    .divider {\n      margin: 0 0 16px 0;\n    }\n    .library-name {\n      /* font-family: var(--font-family); */\n      color: var(--ads-v2-color-fg-emphasis-plus);\n      font-size: var(--ads-v2-font-size-6);\n      font-weight: var(--ads-v2-h4-font-weight);\n      letter-spacing: var(--ads-v2-h4-letter-spacing);\n    }\n  }\n`;\n\nconst InstallationProgressWrapper = styled.div<{ addBorder: boolean }>`\n  border-top: ${(props) =>\n    props.addBorder ? `1px solid var(--appsmith-color-black-300)` : \"none\"};\n  display: flex;\n  flex-direction: column;\n  background: var(--ads-v2-color-bg-muted);\n  text-overflow: ellipsis;\n  padding: 8px 8px 12px;\n  border-radius: var(--ads-v2-border-radius);\n  .install-url {\n    text-overflow: ellipsis;\n    display: -webkit-box;\n    -webkit-line-clamp: 2;\n    line-clamp: 2;\n    -webkit-box-orient: vertical;\n    overflow: hidden;\n    word-break: break-all;\n  }\n  .error-card.show {\n    display: flex;\n  }\n  .error-card {\n    display: none;\n    padding: 10px;\n    flex-direction: row;\n    background: #ffe9e9;\n    .unsupported {\n      line-height: 17px;\n      .header {\n        font-size: 13px;\n        font-weight: 600;\n        color: #393939;\n      }\n      .body {\n        font-size: 12px;\n        font-weight: 400;\n      }\n    }\n  }\n`;\n\nfunction isValidJSFileURL(url: string) {\n  const JS_FILE_REGEX =\n    /(?:https?):\\/\\/(\\w+:?\\w*)?(\\S+)(:\\d+)?(\\/|\\/([\\w#!:.?+=&%!\\-\\/]))?/;\n  return JS_FILE_REGEX.test(url);\n}\n\nfunction StatusIcon(props: {\n  status: InstallState;\n  isInstalled?: boolean;\n  action?: any;\n}) {\n  const { action, isInstalled = false, status } = props;\n  const actionProps = useMemo(\n    () => (action ? { onClick: action } : {}),\n    [action],\n  );\n  if (status === InstallState.Success || isInstalled)\n    return (\n      <Tooltip content=\"Successfully installed\" trigger=\"hover\">\n        <Icon\n          className=\"installed\"\n          color=\"var(--ads-v2-color-fg-success)\"\n          name=\"oval-check-fill\"\n          size=\"md\"\n        />\n      </Tooltip>\n    );\n  if (status === InstallState.Failed)\n    return (\n      <Tooltip content=\"Download failed, please try again.\" trigger=\"hover\">\n        <Icon className=\"failed\" name=\"warning-line\" size=\"md\" />\n      </Tooltip>\n    );\n  if (status === InstallState.Queued) return <Spinner className=\"queued\" />;\n  return (\n    <Tooltip content=\"Install\" trigger=\"hover\">\n      <Button\n        className=\"t--download\"\n        isIconButton\n        kind=\"tertiary\"\n        {...actionProps}\n        size=\"sm\"\n        startIcon=\"download\"\n      />\n    </Tooltip>\n  );\n}\n\nfunction ProgressTracker({\n  isFirst,\n  isLast,\n  status,\n  url,\n}: {\n  isFirst: boolean;\n  isLast: boolean;\n  status: InstallState;\n  url: string;\n}) {\n  return (\n    <InstallationProgressWrapper\n      addBorder={!isFirst}\n      className={classNames({\n        \"mb-2\": isLast,\n        hidden: status !== InstallState.Failed,\n      })}\n    >\n      <div className=\"flex flex-col gap-3\">\n        <div className=\"flex justify-between items-center gap-2 fw-500 text-sm\">\n          <div className=\"install-url text-sm font-medium\">{url}</div>\n          <div className=\"shrink-0\">\n            <StatusIcon status={status} />\n          </div>\n        </div>\n        {status === InstallState.Failed && (\n          <Callout\n            kind=\"error\"\n            links={[\n              {\n                children: createMessage(customJSLibraryMessages.REPORT_ISSUE),\n                to: EXT_LINK.reportIssue,\n                target: \"_blank\",\n              },\n              {\n                children: createMessage(customJSLibraryMessages.LEARN_MORE),\n                to: EXT_LINK.learnMore,\n                target: \"_blank\",\n              },\n            ]}\n          >\n            <Banner />\n          </Callout>\n        )}\n      </div>\n    </InstallationProgressWrapper>\n  );\n}\n\nfunction InstallationProgress() {\n  const installStatusMap = useSelector(selectInstallationStatus);\n  const urls = Object.keys(installStatusMap).filter(\n    (url) => !recommendedLibraries.find((lib) => lib.url === url),\n  );\n  if (urls.length === 0) return null;\n  return (\n    <div>\n      {urls.reverse().map((url, idx) => (\n        <ProgressTracker\n          isFirst={idx === 0}\n          isLast={idx === urls.length - 1}\n          key={`${url}_${idx}`}\n          status={installStatusMap[url]}\n          url={url}\n        />\n      ))}\n    </div>\n  );\n}\n\nconst EXT_LINK = {\n  learnMore:\n    \"https://docs.appsmith.com/core-concepts/writing-code/ext-libraries\",\n  reportIssue: \"https://github.com/appsmithorg/appsmith/issues/19037\",\n  jsDelivr: \"https://www.jsdelivr.com/\",\n};\n\nexport function Installer() {\n  const [URL, setURL] = useState(\"\");\n  const [isValid, setIsValid] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const dispatch = useDispatch();\n  const installedLibraries = useSelector(selectInstalledLibraries);\n  const queuedLibraries = useSelector(selectQueuedLibraries);\n  const installerRef = useRef<HTMLDivElement>(null);\n\n  const updateURL = useCallback((value: string) => {\n    setURL(value);\n    setErrorMessage(validate(value).message);\n  }, []);\n\n  const validate = useCallback((text) => {\n    const isValid = !text || isValidJSFileURL(text);\n    setIsValid(isValid);\n    return {\n      isValid,\n      message: isValid ? \"\" : \"Please enter a valid URL\",\n    };\n  }, []);\n\n  useEffect(() => {\n    URL &&\n      AnalyticsUtil.logEvent(\"EDIT_LIBRARY_URL\", { url: URL, valid: isValid });\n  }, [URL, isValid]);\n\n  const installLibrary = useCallback(\n    (lib?: Partial<JSLibrary>) => {\n      const url = lib?.url || URL;\n      const isQueued = queuedLibraries.find((libURL) => libURL === url);\n      if (isQueued) return;\n\n      const libInstalled = installedLibraries.find((lib) => lib.url === url);\n      if (libInstalled) {\n        toast.show(\n          createMessage(\n            customJSLibraryMessages.INSTALLED_ALREADY,\n            libInstalled.accessor[0] || \"\",\n          ),\n          {\n            kind: \"info\",\n          },\n        );\n        return;\n      }\n      dispatch(\n        installLibraryInit({\n          url,\n          name: lib?.name,\n          version: lib?.version,\n        }),\n      );\n    },\n    [URL, installedLibraries, queuedLibraries],\n  );\n\n  return (\n    <Wrapper\n      className={`${EntityClassNames.CONTEXT_MENU_CONTENT}`}\n      ref={installerRef}\n    >\n      <div className=\"search-body overflow-y-scroll\">\n        <div className=\"search-area t--library-container\">\n          <div className=\"flex flex-row gap-2 justify-between items-end\">\n            <div className=\"w-full h-[83px]\">\n              <Input\n                data-testid=\"library-url\"\n                errorMessage={errorMessage}\n                isValid={isValid}\n                label={\"Library URL\"}\n                labelPosition=\"top\"\n                onChange={updateURL}\n                placeholder=\"https://cdn.jsdelivr.net/npm/example@1.1.1/example.min.js\"\n                size=\"md\"\n                startIcon=\"link-2\"\n                type=\"text\"\n              />\n            </div>\n            <Button\n              className=\"mb-[22px]\"\n              data-testid=\"install-library-btn\"\n              isDisabled={!(URL && isValid)}\n              isLoading={queuedLibraries.length > 0}\n              onClick={() => installLibrary()}\n              size=\"md\"\n              startIcon=\"download\"\n            >\n              Install\n            </Button>\n          </div>\n        </div>\n        <div className=\"search-CTA mb-3 text-xs\">\n          <span>\n            Explore libraries on{\" \"}\n            <Link kind=\"primary\" target=\"_blank\" to={EXT_LINK.jsDelivr}>\n              jsDelivr\n            </Link>\n            {\". \"}\n            {createMessage(customJSLibraryMessages.LEARN_MORE_DESC)}{\" \"}\n            <Link kind=\"primary\" target=\"_blank\" to={EXT_LINK.learnMore}>\n              here\n            </Link>\n            {\".\"}\n          </span>\n        </div>\n        <Divider className=\"divider\" />\n        <InstallationProgress />\n        <div className=\"pb-2 sticky top-0 z-2 bg-white\">\n          <Text kind=\"heading-xs\">\n            {createMessage(customJSLibraryMessages.REC_LIBRARY)}\n          </Text>\n        </div>\n        <div className=\"search-results\">\n          {recommendedLibraries.map((lib, idx) => (\n            <LibraryCard\n              isLastCard={idx === recommendedLibraries.length - 1}\n              key={`${idx}_${lib.name}`}\n              lib={lib}\n              onClick={() => installLibrary(lib)}\n            />\n          ))}\n        </div>\n      </div>\n    </Wrapper>\n  );\n}\n\nfunction LibraryCard({\n  isLastCard,\n  lib,\n  onClick,\n}: {\n  lib: (typeof recommendedLibraries)[0];\n  onClick: (url: string) => void;\n  isLastCard: boolean;\n}) {\n  const status = useSelector(selectStatusForURL(lib.url));\n  const isInstalled = useSelector((state: AppState) =>\n    selectIsLibraryInstalled(state, lib.url),\n  );\n  return (\n    <div\n      className={classNames({\n        [`library-card t--${lib.name}`]: true,\n        \"no-border\": isLastCard,\n      })}\n    >\n      <div className=\"flex flex-row justify-between items-center\">\n        <div className=\"flex flex-row gap-1 items-center\">\n          <Link\n            className=\"library-name\"\n            endIcon=\"share-box-line\"\n            kind=\"secondary\"\n            target=\"_blank\"\n            to={lib.docsURL}\n          >\n            {lib.name}\n          </Link>\n        </div>\n        <div className=\"mr-2\">\n          <StatusIcon\n            action={onClick}\n            isInstalled={isInstalled}\n            status={status}\n          />\n        </div>\n      </div>\n      <div className=\"flex flex-row description\">{lib.description}</div>\n      <div className=\"flex flex-row items-center gap-1\">\n        <Avatar image={lib.icon} label={lib.author} size=\"sm\" />\n        <Text kind=\"action-s\">{lib.author}</Text>\n      </div>\n    </div>\n  );\n}\n\nexport const Banner = () => {\n  return (\n    <div className=\"flex flex-col unsupported gap-1\">\n      <div className=\"header\">\n        {createMessage(customJSLibraryMessages.UNSUPPORTED_LIB)}\n      </div>\n      <div className=\"body\">\n        {createMessage(customJSLibraryMessages.UNSUPPORTED_LIB_DESC)}\n      </div>\n    </div>\n  );\n};\n","import {\n  Button,\n  Popover,\n  PopoverBody,\n  PopoverContent,\n  PopoverHeader,\n  PopoverTrigger,\n} from \"design-system\";\nimport React, { useCallback, useState } from \"react\";\nimport {\n  createMessage,\n  customJSLibraryMessages,\n} from \"@appsmith/constants/messages\";\nimport { Installer } from \"../../Explorer/Libraries/Installer\";\nimport { clearInstalls } from \"actions/JSLibraryActions\";\nimport { useDispatch } from \"react-redux\";\n\nconst AddLibraryPopover = () => {\n  const [open, setOpen] = useState(false);\n  const dispatch = useDispatch();\n  const onOpenChange = useCallback(\n    (open) => {\n      dispatch(clearInstalls());\n      setOpen(open);\n    },\n    [open],\n  );\n  return (\n    <Popover onOpenChange={onOpenChange} open={open}>\n      <PopoverTrigger>\n        <Button\n          className=\"t--install-library-button\"\n          isIconButton\n          kind=\"tertiary\"\n          onClick={() => setOpen(true)}\n          size=\"sm\"\n          startIcon=\"add-line\"\n        />\n      </PopoverTrigger>\n      <PopoverContent\n        align=\"start\"\n        className=\"z-[25]\"\n        side=\"left\"\n        sideOffset={16}\n        size=\"md\"\n      >\n        <PopoverHeader className=\"sticky top-0\" isClosable>\n          {createMessage(customJSLibraryMessages.ADD_JS_LIBRARY)}\n        </PopoverHeader>\n        <PopoverBody className={\"!overflow-y-clip\"}>\n          <Installer />\n        </PopoverBody>\n      </PopoverContent>\n    </Popover>\n  );\n};\n\nexport default AddLibraryPopover;\n","import type { MutableRefObject } from \"react\";\n\nconst writeToClipboard = async (\n  text: string,\n  el: HTMLElement,\n  ref: MutableRefObject<HTMLElement | null>,\n) => {\n  if (\"clipboard\" in navigator) {\n    try {\n      await navigator.clipboard.writeText(text);\n      el.childNodes[0].textContent = \"Copied to clipboard!\";\n      el.classList.add(\"success\");\n      ref.current && ref.current.append(el);\n    } catch (e) {\n      el.childNodes[0].textContent = \"Failed!\";\n      el.classList.add(\"error\");\n      ref.current && ref.current.append(el);\n    }\n    setTimeout(() => {\n      ref.current?.removeChild(el);\n    }, 1000);\n  }\n};\n\n/* How it works:\n    This hook takes a ref object as a paramter.\n    \n    Success in copying:\n    It appends a div with the class .clipboard-message.success with text \"Binding Copied!\"\n    to the element which the passed ref refers\n\n    Error in copying:\n    It appends a div with the class .clipboard-message.error with text \"Failed!\"\n    to the element which the passed ref refers\n\n    The component which implements the hook needs to add the appropriate styles\n    to the clipboard success and error message div\n\n    Messages get removed in 2 seconds. Not customizable at the moment.\n\n    TODO(abhinav): Enhance this hook to make it more customizable.\n*/\nconst useClipboard = (ref: MutableRefObject<HTMLElement | null>) => {\n  const write = (text: string) => {\n    const el = document.createElement(\"div\");\n    const content = document.createTextNode(\"\");\n    el.classList.add(\"clipboard-message\");\n    el.appendChild(content);\n    writeToClipboard(text, el, ref);\n  };\n  return write;\n};\n\nexport default useClipboard;\n","import type { MutableRefObject } from \"react\";\nimport React, { useCallback, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport {\n  Button,\n  Icon,\n  Popover,\n  PopoverBody,\n  PopoverContent,\n  PopoverHeader,\n  PopoverTrigger,\n  Spinner,\n  toast,\n  Tooltip,\n} from \"design-system\";\nimport Entity, { AddButtonWrapper, EntityClassNames } from \"../Entity\";\nimport {\n  createMessage,\n  customJSLibraryMessages,\n} from \"@appsmith/constants/messages\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  selectInstallationStatus,\n  selectIsInstallerOpen,\n  selectLibrariesForExplorer,\n} from \"@appsmith/selectors/entitiesSelector\";\nimport { InstallState } from \"reducers/uiReducers/libraryReducer\";\nimport { Collapse } from \"@blueprintjs/core\";\nimport useClipboard from \"utils/hooks/useClipboard\";\nimport {\n  clearInstalls,\n  toggleInstaller,\n  uninstallLibraryInit,\n} from \"actions/JSLibraryActions\";\nimport EntityAddButton from \"../Entity/AddButton\";\nimport type { JSLibrary } from \"workers/common/JSLibrary\";\nimport {\n  getCurrentPageId,\n  getPagePermissions,\n} from \"selectors/editorSelectors\";\nimport recommendedLibraries from \"./recommendedLibraries\";\nimport { useTransition, animated } from \"react-spring\";\nimport { isAirgapped } from \"@appsmith/utils/airgapHelpers\";\nimport { Installer } from \"./Installer\";\nimport { useFeatureFlag } from \"utils/hooks/useFeatureFlag\";\nimport { FEATURE_FLAG } from \"@appsmith/entities/FeatureFlag\";\nimport { getHasCreateActionPermission } from \"@appsmith/utils/BusinessFeatures/permissionPageHelpers\";\n\nconst docsURLMap = recommendedLibraries.reduce(\n  (acc, lib) => {\n    acc[lib.url] = lib.docsURL;\n    return acc;\n  },\n  {} as Record<string, string>,\n);\n\nconst Library = styled.li`\n  list-style: none;\n  flex-direction: column;\n  color: var(--ads-v2-color-fg);\n  font-weight: 400;\n  display: flex;\n  justify-content: space-between;\n  cursor: pointer;\n  position: relative;\n  line-height: 17px;\n  padding-left: 8px;\n\n  > div:first-child {\n    height: 36px;\n  }\n\n  &:hover {\n    background: var(--ads-v2-color-bg-subtle);\n\n    & .t--open-new-tab {\n      display: block;\n    }\n\n    & .delete,\n    .open-link {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    }\n  }\n\n  .loading {\n    display: none;\n    width: 30px;\n    height: 36px;\n    background: transparent;\n    flex-shrink: 0;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n\n  & .t--open-new-tab {\n    position: absolute;\n    right: 8px;\n    display: none;\n  }\n\n  .delete,\n  .open-link {\n    display: none;\n    width: 30px;\n    height: 36px;\n    margin-left: 4px;\n    /* background: transparent; */\n    flex-shrink: 0;\n  }\n\n  & .t--package-version {\n    display: block;\n    font-size: 12px;\n    height: 16px;\n  }\n  .open-collapse {\n    transform: rotate(90deg);\n  }\n\n  .content {\n    font-size: 12px;\n    font-weight: 400;\n    padding: 4px 8px;\n    color: var(--ads-v2-color-fg);\n    display: flex;\n    align-items: center;\n    gap: 4px;\n    width: 100%;\n    overflow: hidden;\n    .accessor {\n      padding-left: 8px;\n      flex-grow: 1;\n      outline: 1px solid var(--ads-v2-color-border) !important;\n      font-size: 12px;\n      font-family: monospace;\n      background: white;\n      display: flex;\n      height: 25px;\n      width: calc(100% - 80px);\n      justify-content: space-between;\n      align-items: center;\n      color: var(--ads-v2-color-fg-emphasis);\n      border-radius: var(--ads-v2-border-radius);\n      > div {\n        height: 100%;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        background: transparent;\n        width: 25px;\n        &:hover {\n          background: var(--ads-v2-color-bg-muted);\n          > svg > path {\n            fill: var(--ads-v2-color-fg);\n          }\n        }\n      }\n    }\n  }\n`;\nconst Name = styled.div`\n  display: flex;\n  align-items: center;\n  line-height: 17px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  word-break: break-all;\n`;\nconst Version = styled.div<{ version?: string }>`\n  flex-shrink: 0;\n  display: ${(props) => (props.version ? \"block\" : \"none\")};\n  margin: ${(props) => (props.version ? \"0 8px\" : \"0\")};\n`;\n\nconst PrimaryCTA = function ({ lib }: { lib: JSLibrary }) {\n  const installationStatus = useSelector(selectInstallationStatus);\n  const dispatch = useDispatch();\n\n  const url = lib.url as string;\n\n  const uninstallLibrary = useCallback(\n    (e) => {\n      e.stopPropagation();\n      dispatch(uninstallLibraryInit(lib));\n    },\n    [lib],\n  );\n\n  if (installationStatus[url] === InstallState.Queued)\n    return (\n      <div className=\"loading\">\n        <Spinner size=\"md\" />\n      </div>\n    );\n\n  if (url) {\n    //Default libraries will not have url\n    return (\n      <Button\n        className=\"delete uninstall-library t--uninstall-library\"\n        isIconButton\n        kind=\"error\"\n        onClick={uninstallLibrary}\n        size=\"sm\"\n        startIcon=\"delete-bin-line\"\n      />\n    );\n  }\n\n  return null;\n};\n\nexport function LibraryEntity({ lib }: { lib: JSLibrary }) {\n  const openDocs = useCallback(\n    (url?: string) => (e: React.MouseEvent) => {\n      e?.stopPropagation();\n      url && window.open(url, \"_blank\");\n    },\n    [],\n  );\n  const propertyRef: MutableRefObject<HTMLDivElement | null> = useRef(null);\n  const write = useClipboard(propertyRef);\n\n  const copyToClipboard = useCallback(() => {\n    write(lib.accessor[lib.accessor.length - 1]);\n    toast.show(\"Copied to clipboard\", {\n      kind: \"success\",\n    });\n  }, [lib.accessor]);\n\n  const [isOpen, open] = React.useState(false);\n  const docsURL = docsURLMap[lib.url || \"\"] || lib.docsURL;\n  return (\n    <Library className={`t--installed-library-${lib.name}`}>\n      <div\n        className=\"flex flex-row items-center h-full\"\n        onClick={() => open(!isOpen)}\n      >\n        <Icon\n          className={isOpen ? \"open-collapse\" : \"\"}\n          name=\"right-arrow-2\"\n          size={\"md\"}\n        />\n        <div className=\"flex items-center flex-1 overflow-hidden flex-start\">\n          <Name>{lib.name}</Name>\n          {docsURL && (\n            <div className=\"share\">\n              <Button\n                className=\"open-link\"\n                isIconButton\n                kind=\"tertiary\"\n                onClick={openDocs(docsURL)}\n                size=\"sm\"\n                startIcon=\"share-box-line\"\n              />\n            </div>\n          )}\n        </div>\n        <Version className=\"t--package-version\" version={lib.version}>\n          {lib.version}\n        </Version>\n        <PrimaryCTA lib={lib} />\n      </div>\n      <Collapse className=\"text-xs\" isOpen={isOpen}>\n        <div className=\"pr-2 content\">\n          Available as{\" \"}\n          <div className=\"accessor\">\n            {lib.accessor[lib.accessor.length - 1]}{\" \"}\n            <Button\n              // className=\"open-link\"\n              isIconButton\n              kind=\"tertiary\"\n              onClick={copyToClipboard}\n              size=\"sm\"\n              startIcon=\"copy-control\"\n            />\n          </div>\n        </div>\n      </Collapse>\n    </Library>\n  );\n}\n\nfunction JSDependencies() {\n  const pageId = useSelector(getCurrentPageId) || \"\";\n  const libraries = useSelector(selectLibrariesForExplorer);\n  const transitions = useTransition(libraries, {\n    keys: (lib) => lib.name,\n    from: { opacity: 0 },\n    enter: { opacity: 1 },\n    leave: { opacity: 1 },\n  });\n  const dependencyList = transitions((style, lib) => (\n    <animated.div style={style}>\n      <LibraryEntity lib={lib} />\n    </animated.div>\n  ));\n  const isOpen = useSelector(selectIsInstallerOpen);\n  const dispatch = useDispatch();\n\n  const pagePermissions = useSelector(getPagePermissions);\n\n  const isFeatureEnabled = useFeatureFlag(FEATURE_FLAG.license_gac_enabled);\n\n  const canCreateActions = getHasCreateActionPermission(\n    isFeatureEnabled,\n    pagePermissions,\n  );\n\n  const isAirgappedInstance = isAirgapped();\n\n  const openInstaller = useCallback(() => {\n    dispatch(toggleInstaller(true));\n  }, []);\n\n  return (\n    <Entity\n      className={\"group libraries\"}\n      customAddButton={\n        <Popover\n          onOpenChange={() => {\n            dispatch(clearInstalls());\n            dispatch(toggleInstaller(false));\n          }}\n          open={isOpen}\n        >\n          <Tooltip\n            content={createMessage(customJSLibraryMessages.ADD_JS_LIBRARY)}\n            isDisabled={isOpen}\n            placement=\"right\"\n            {...(isOpen ? { visible: false } : {})}\n          >\n            <PopoverTrigger>\n              <AddButtonWrapper>\n                <EntityAddButton\n                  className={`${\n                    EntityClassNames.ADD_BUTTON\n                  } group libraries h-100 ${isOpen ? \"selected\" : \"\"}`}\n                  onClick={openInstaller}\n                />\n              </AddButtonWrapper>\n            </PopoverTrigger>\n          </Tooltip>\n          <PopoverContent\n            align=\"start\"\n            className=\"z-[25]\"\n            side=\"left\"\n            size=\"md\"\n          >\n            <PopoverHeader className=\"sticky top-0\" isClosable>\n              {createMessage(customJSLibraryMessages.ADD_JS_LIBRARY)}\n            </PopoverHeader>\n            <PopoverBody className={\"!overflow-y-clip\"}>\n              <Installer />\n            </PopoverBody>\n          </PopoverContent>\n        </Popover>\n      }\n      entityId={pageId + \"_library_section\"}\n      icon={null}\n      isDefaultExpanded={isOpen}\n      isSticky\n      name=\"Libraries\"\n      showAddButton={canCreateActions && !isAirgappedInstance}\n      step={0}\n    >\n      {dependencyList}\n    </Entity>\n  );\n}\n\nexport default React.memo(JSDependencies);\n","import React from \"react\";\nimport AddLibraryPopover from \"./AddLibraryPopover\";\nimport PaneHeader from \"./PaneHeader\";\nimport { useSelector } from \"react-redux\";\nimport { selectLibrariesForExplorer } from \"@appsmith/selectors/entitiesSelector\";\nimport { animated, useTransition } from \"react-spring\";\nimport { LibraryEntity } from \"pages/Editor/Explorer/Libraries\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 250px;\n`;\n\nconst LibrarySidePane = () => {\n  const libraries = useSelector(selectLibrariesForExplorer);\n  const transitions = useTransition(libraries, {\n    keys: (lib) => lib.name,\n    from: { opacity: 0 },\n    enter: { opacity: 1 },\n    leave: { opacity: 1 },\n  });\n  return (\n    <Container>\n      <PaneHeader\n        rightIcon={<AddLibraryPopover />}\n        title=\"Installed Libraries\"\n      />\n      {transitions((style, lib) => (\n        <animated.div style={style}>\n          <LibraryEntity lib={lib} />\n        </animated.div>\n      ))}\n    </Container>\n  );\n};\n\nexport default LibrarySidePane;\n","import React from \"react\";\nimport { Flex } from \"design-system\";\nimport styled from \"styled-components\";\nimport { Switch, useRouteMatch } from \"react-router\";\nimport { SentryRoute } from \"@appsmith/AppRouter\";\nimport { useQuerySegmentRoutes } from \"@appsmith/pages/Editor/IDE/EditorPane/Query/hooks\";\n\nconst QueriesContainer = styled(Flex)`\n  & .t--entity-item {\n    grid-template-columns: 0 auto 1fr auto auto auto auto auto;\n    height: 32px;\n\n    & .t--entity-name {\n      padding-left: var(--ads-v2-spaces-3);\n    }\n  }\n`;\n\nconst QueriesSegment = () => {\n  const { path } = useRouteMatch();\n  const routes = useQuerySegmentRoutes(path);\n  return (\n    <QueriesContainer\n      className=\"ide-editor-left-pane__content-queries\"\n      flexDirection=\"column\"\n      height=\"100%\"\n      overflow=\"hidden\"\n    >\n      <Switch>\n        {routes.map((route) => (\n          <SentryRoute\n            component={route.component}\n            exact={route.exact}\n            key={route.key}\n            path={route.path}\n          />\n        ))}\n      </Switch>\n    </QueriesContainer>\n  );\n};\n\nexport default QueriesSegment;\n","import React, { useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { initExplorerEntityNameEdit } from \"actions/explorerActions\";\nimport type { AppState } from \"@appsmith/reducers\";\nimport {\n  ReduxActionTypes,\n  WidgetReduxActionTypes,\n} from \"@appsmith/constants/ReduxActionConstants\";\nimport WidgetFactory from \"WidgetProvider/factory\";\nimport { ENTITY_TYPE } from \"entities/DataTree/dataTreeFactory\";\nimport type { TreeDropdownOption } from \"pages/Editor/Explorer/ContextMenu\";\nimport ContextMenu from \"pages/Editor/Explorer/ContextMenu\";\nconst WidgetTypes = WidgetFactory.widgetTypes;\n\nexport function WidgetContextMenu(props: {\n  widgetId: string;\n  pageId: string;\n  className?: string;\n  canManagePages?: boolean;\n}) {\n  const { widgetId } = props;\n  const parentId = useSelector((state: AppState) => {\n    return state.ui.pageWidgets[props.pageId].dsl[props.widgetId].parentId;\n  });\n  const widget = useSelector((state: AppState) => {\n    return state.ui.pageWidgets[props.pageId].dsl[props.widgetId];\n  });\n\n  const parentWidget: any = useSelector((state: AppState) => {\n    if (parentId) return state.ui.pageWidgets[props.pageId].dsl[parentId];\n    return {};\n  });\n  const dispatch = useDispatch();\n  const dispatchDelete = useCallback(() => {\n    // If the widget is a tab we are updating the `tabs` of the property of the widget\n    // This is similar to deleting a tab from the property pane\n    if (widget.tabName && parentWidget.type === WidgetTypes.TABS_WIDGET) {\n      const tabsObj = { ...parentWidget.tabsObj };\n      const filteredTabs = Object.values(tabsObj);\n      if (widget.parentId && !!filteredTabs.length) {\n        dispatch({\n          type: ReduxActionTypes.WIDGET_DELETE_TAB_CHILD,\n          payload: { ...tabsObj[widget.tabId] },\n        });\n      }\n      return;\n    }\n\n    dispatch({\n      type: WidgetReduxActionTypes.WIDGET_DELETE,\n      payload: {\n        widgetId,\n        parentId,\n      },\n    });\n  }, [dispatch, widgetId, parentId, widget, parentWidget]);\n\n  const showBinding = useCallback((widgetId, widgetName) => {\n    dispatch({\n      type: ReduxActionTypes.SET_ENTITY_INFO,\n      payload: {\n        entityId: widgetId,\n        entityName: widgetName,\n        entityType: ENTITY_TYPE.WIDGET,\n        show: true,\n      },\n    });\n  }, []);\n\n  const editWidgetName = useCallback(() => {\n    dispatch(initExplorerEntityNameEdit(widgetId));\n  }, [dispatch, widgetId]);\n\n  const optionTree: TreeDropdownOption[] = [\n    {\n      value: \"showBinding\",\n      onSelect: () => showBinding(props.widgetId, widget.widgetName),\n      label: \"Show bindings\",\n    },\n  ];\n\n  if (props.canManagePages) {\n    const option: TreeDropdownOption = {\n      value: \"rename\",\n      onSelect: editWidgetName,\n      label: \"Edit name\",\n    };\n    optionTree.push(option);\n  }\n\n  if (widget.isDeletable !== false && props.canManagePages) {\n    const option: TreeDropdownOption = {\n      value: \"delete\",\n      onSelect: dispatchDelete,\n      label: \"Delete\",\n      intent: \"danger\",\n      confirmDelete: true,\n    };\n\n    optionTree.push(option);\n  }\n\n  return optionTree.length > 0 ? (\n    <ContextMenu\n      className={props.className}\n      optionTree={optionTree as TreeDropdownOption[]}\n    />\n  ) : null;\n}\n\nWidgetContextMenu.displayName = \"WidgetContextMenu\";\n\nexport default WidgetContextMenu;\n","import React, { memo, useCallback, useMemo } from \"react\";\nimport WidgetFactory from \"../../../../WidgetProvider/factory\";\nimport Entity, { EntityClassNames } from \"../Entity\";\nimport type { WidgetProps } from \"widgets/BaseWidget\";\nimport type { WidgetType } from \"constants/WidgetConstants\";\nimport { useSelector } from \"react-redux\";\nimport WidgetContextMenu from \"./WidgetContextMenu\";\nimport { updateWidgetName } from \"actions/propertyPaneActions\";\nimport type { CanvasStructure } from \"reducers/uiReducers/pageCanvasStructureReducer\";\nimport { getLastSelectedWidget, getSelectedWidgets } from \"selectors/ui\";\nimport { useNavigateToWidget } from \"./useNavigateToWidget\";\nimport WidgetIcon from \"./WidgetIcon\";\nimport AnalyticsUtil from \"@appsmith/utils/AnalyticsUtil\";\nimport { builderURL } from \"@appsmith/RouteBuilder\";\nimport { useLocation } from \"react-router\";\nimport { getPagePermissions } from \"selectors/editorSelectors\";\nimport { NavigationMethod } from \"utils/history\";\nimport { getEntityExplorerWidgetsToExpand } from \"selectors/widgetSelectors\";\nimport { useFeatureFlag } from \"utils/hooks/useFeatureFlag\";\nimport { FEATURE_FLAG } from \"@appsmith/entities/FeatureFlag\";\nimport { getHasManagePagePermission } from \"@appsmith/utils/BusinessFeatures/permissionPageHelpers\";\n\nexport type WidgetTree = WidgetProps & { children?: WidgetTree[] };\n\nconst UNREGISTERED_WIDGETS: WidgetType[] = [\"ICON_WIDGET\"];\n\nconst useWidget = (\n  widgetId: string,\n  widgetType: WidgetType,\n  pageId: string,\n) => {\n  const selectedWidgets = useSelector(getSelectedWidgets);\n  const lastSelectedWidget = useSelector(getLastSelectedWidget);\n  const isWidgetSelected = selectedWidgets.includes(widgetId);\n  const multipleWidgetsSelected = selectedWidgets.length > 1;\n\n  const { navigateToWidget } = useNavigateToWidget();\n\n  const boundNavigateToWidget = useCallback(\n    (e: any) => {\n      const isMultiSelect = e.metaKey || e.ctrlKey;\n      const isShiftSelect = e.shiftKey;\n      navigateToWidget(\n        widgetId,\n        widgetType,\n        pageId,\n        NavigationMethod.EntityExplorer,\n        isWidgetSelected,\n        isMultiSelect,\n        isShiftSelect,\n      );\n    },\n    [widgetId, widgetType, pageId, isWidgetSelected, navigateToWidget],\n  );\n\n  return {\n    navigateToWidget: boundNavigateToWidget,\n    isWidgetSelected,\n    multipleWidgetsSelected,\n    lastSelectedWidget,\n  };\n};\n\nexport interface WidgetEntityProps {\n  widgetId: string;\n  widgetName: string;\n  widgetType: WidgetType;\n  step: number;\n  pageId: string;\n  childWidgets?: CanvasStructure[];\n  parentModalId?: string;\n  searchKeyword?: string;\n  isDefaultExpanded?: boolean;\n  widgetsInStep: string[];\n}\n\nexport const WidgetEntity = memo((props: WidgetEntityProps) => {\n  const widgetsToExpand = useSelector(getEntityExplorerWidgetsToExpand);\n  // If the widget icon is a React component, then we get it from the Widget methods.\n  const { IconCmp } = WidgetFactory.getWidgetMethods(props.widgetType);\n  const icon = IconCmp ? <IconCmp /> : <WidgetIcon type={props.widgetType} />;\n  const location = useLocation();\n\n  const forceExpand = widgetsToExpand.includes(props.widgetId);\n\n  const pagePermissions = useSelector(getPagePermissions);\n\n  const isFeatureEnabled = useFeatureFlag(FEATURE_FLAG.license_gac_enabled);\n\n  const canManagePages = getHasManagePagePermission(\n    isFeatureEnabled,\n    pagePermissions,\n  );\n\n  const {\n    isWidgetSelected,\n    lastSelectedWidget,\n    multipleWidgetsSelected,\n    navigateToWidget,\n  } = useWidget(props.widgetId, props.widgetType, props.pageId);\n\n  const { parentModalId, widgetId, widgetType } = props;\n  /**\n   * While navigating to a widget we need to show a modal if the widget is nested within it\n   * Since the immediate parent for the widget would be a canvas instead of the modal,\n   * so we track the immediate modal parent for the widget\n   */\n  const parentModalIdForChildren = useMemo(() => {\n    return widgetType === \"MODAL_WIDGET\" ? widgetId : parentModalId;\n  }, [widgetType, widgetId, parentModalId]);\n\n  const switchWidget = useCallback(\n    (e) => {\n      AnalyticsUtil.logEvent(\"ENTITY_EXPLORER_CLICK\", {\n        type: \"WIDGETS\",\n        fromUrl: location.pathname,\n        toUrl: `${builderURL({\n          pageId: props.pageId,\n          hash: widgetId,\n        })}`,\n        name: props.widgetName,\n      });\n      navigateToWidget(e);\n    },\n    [location.pathname, props.pageId, widgetId, props.widgetName],\n  );\n\n  if (UNREGISTERED_WIDGETS.indexOf(props.widgetType) > -1) return null;\n\n  const contextMenu = (\n    <WidgetContextMenu\n      canManagePages={canManagePages}\n      className={EntityClassNames.CONTEXT_MENU}\n      pageId={props.pageId}\n      widgetId={props.widgetId}\n    />\n  );\n\n  const showContextMenu = !multipleWidgetsSelected;\n  const widgetsInStep = props?.childWidgets\n    ? props?.childWidgets?.map((child) => child.widgetId)\n    : [];\n\n  return (\n    <Entity\n      action={switchWidget}\n      active={isWidgetSelected}\n      canEditEntityName={canManagePages}\n      className=\"widget\"\n      contextMenu={showContextMenu && contextMenu}\n      entityId={props.widgetId}\n      forceExpand={forceExpand}\n      highlight={lastSelectedWidget === props.widgetId}\n      icon={icon}\n      isDefaultExpanded={\n        (!!props.searchKeyword && !!props.childWidgets) ||\n        !!props.isDefaultExpanded\n      }\n      name={props.widgetName}\n      searchKeyword={props.searchKeyword}\n      showAddButton={canManagePages}\n      step={props.step}\n      updateEntityName={updateWidgetName}\n    >\n      {props.childWidgets &&\n        props.childWidgets.length > 0 &&\n        props.childWidgets.map((child) => (\n          <WidgetEntity\n            childWidgets={child.children}\n            key={child.widgetId}\n            pageId={props.pageId}\n            parentModalId={parentModalIdForChildren}\n            searchKeyword={props.searchKeyword}\n            step={props.step + 1}\n            widgetId={child.widgetId}\n            widgetName={child.widgetName}\n            widgetType={child.type}\n            widgetsInStep={widgetsInStep}\n          />\n        ))}\n    </Entity>\n  );\n});\n\nWidgetEntity.displayName = \"WidgetEntity\";\n\nexport default WidgetEntity;\n","import React, { useCallback, useEffect, useMemo } from \"react\";\nimport { Button, Flex } from \"design-system\";\nimport WidgetEntity from \"pages/Editor/Explorer/Widgets/WidgetEntity\";\nimport { useSelector } from \"react-redux\";\n\nimport {\n  getCurrentPageId,\n  selectWidgetsForCurrentPage,\n} from \"@appsmith/selectors/entitiesSelector\";\nimport { getPagePermissions } from \"selectors/editorSelectors\";\nimport { useFeatureFlag } from \"utils/hooks/useFeatureFlag\";\nimport { FEATURE_FLAG } from \"@appsmith/entities/FeatureFlag\";\nimport { getHasManagePagePermission } from \"@appsmith/utils/BusinessFeatures/permissionPageHelpers\";\nimport { createMessage, EDITOR_PANE_TEXTS } from \"@appsmith/constants/messages\";\nimport { EmptyState } from \"../components/EmptyState\";\nimport history from \"utils/history\";\nimport { builderURL } from \"@appsmith/RouteBuilder\";\nimport styled from \"styled-components\";\n\nconst ListContainer = styled(Flex)`\n  & .t--entity-item {\n    height: 32px;\n    & .t--entity-name {\n      padding-left: var(--ads-v2-spaces-3);\n    }\n  }\n`;\n\nconst ListWidgets = (props: {\n  setFocusSearchInput: (focusSearchInput: boolean) => void;\n}) => {\n  const pageId = useSelector(getCurrentPageId) as string;\n  const widgets = useSelector(selectWidgetsForCurrentPage);\n  const pagePermissions = useSelector(getPagePermissions);\n  const isFeatureEnabled = useFeatureFlag(FEATURE_FLAG.license_gac_enabled);\n\n  const canManagePages = getHasManagePagePermission(\n    isFeatureEnabled,\n    pagePermissions,\n  );\n\n  const widgetsInStep = useMemo(() => {\n    return widgets?.children?.map((child) => child.widgetId) || [];\n  }, [widgets?.children]);\n\n  const addButtonClickHandler = useCallback(() => {\n    props.setFocusSearchInput(true);\n    history.push(builderURL({}));\n  }, []);\n\n  const widgetsExist =\n    widgets && widgets.children && widgets.children.length > 0;\n\n  useEffect(() => {\n    props.setFocusSearchInput(false);\n  }, []);\n\n  return (\n    <ListContainer\n      flexDirection=\"column\"\n      gap=\"spaces-3\"\n      overflow=\"hidden\"\n      py=\"spaces-3\"\n    >\n      {!widgetsExist ? (\n        /* If no widgets exist, show the blank state */\n        <EmptyState\n          buttonClassName=\"t--add-item\"\n          buttonText={createMessage(EDITOR_PANE_TEXTS.widget_add_button)}\n          description={createMessage(\n            EDITOR_PANE_TEXTS.widget_blank_state_description,\n          )}\n          icon={\"widgets-v3\"}\n          onClick={canManagePages ? addButtonClickHandler : undefined}\n        />\n      ) : canManagePages ? (\n        /* We show the List Add button when side by side is not enabled  */\n        <Flex flexDirection=\"column\" px=\"spaces-3\">\n          <Button\n            className=\"t--add-item\"\n            kind={\"secondary\"}\n            onClick={addButtonClickHandler}\n            size={\"sm\"}\n            startIcon={\"add-line\"}\n          >\n            {createMessage(EDITOR_PANE_TEXTS.widget_add_button)}\n          </Button>\n        </Flex>\n      ) : null}\n      {widgetsExist ? (\n        <Flex\n          data-testid=\"t--ide-list\"\n          flex=\"1\"\n          flexDirection={\"column\"}\n          overflowY=\"auto\"\n          px=\"spaces-3\"\n        >\n          {widgets?.children?.map((child) => (\n            <WidgetEntity\n              childWidgets={child.children}\n              key={child.widgetId}\n              pageId={pageId}\n              searchKeyword=\"\"\n              step={1}\n              widgetId={child.widgetId}\n              widgetName={child.widgetName}\n              widgetType={child.type}\n              widgetsInStep={widgetsInStep}\n            />\n          ))}\n        </Flex>\n      ) : null}\n    </ListContainer>\n  );\n};\n\nexport default ListWidgets;\n","import { Button } from \"design-system\";\nimport React from \"react\";\n\ninterface Props {\n  showSeeLess: boolean;\n  hidden: boolean;\n  toggleSeeMore: () => void;\n}\n\nconst SeeMoreButton = (props: Props) => {\n  const SEE_MORE_LESS_TEXT = !props.showSeeLess ? \"See more\" : \"See less\";\n  const SEE_MORE_ARROW = !props.showSeeLess ? \"down-arrow-2\" : \"arrow-up-line\";\n\n  return (\n    <Button\n      className=\"mt-4\"\n      data-testid=\"t--explorer-ui-entity-tag-see-more\"\n      hidden={props.hidden}\n      kind=\"tertiary\"\n      onClick={() => props.toggleSeeMore()}\n      size=\"md\"\n      startIcon={SEE_MORE_ARROW}\n    >\n      {SEE_MORE_LESS_TEXT}\n    </Button>\n  );\n};\n\nexport default SeeMoreButton;\n","import type { WidgetTags } from \"constants/WidgetConstants\";\nimport {\n  SUGGESTED_WIDGETS_ORDER,\n  WIDGET_TAGS,\n  initialEntityCountForExplorerTag,\n} from \"constants/WidgetConstants\";\nimport {\n  Collapsible,\n  CollapsibleContent,\n  CollapsibleHeader,\n  Spinner,\n  Text,\n} from \"design-system\";\nimport { sortBy } from \"lodash\";\nimport React from \"react\";\nimport type { WidgetCardProps } from \"widgets/BaseWidget\";\nimport SeeMoreButton from \"./SeeMoreButton\";\nimport styled from \"styled-components\";\nimport { EDITOR_PANE_TEXTS, createMessage } from \"@appsmith/constants/messages\";\nimport WidgetCard from \"./WidgetCard\";\n\nconst LoadingWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 8px 0px;\n`;\n\nconst LoadingContainer = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 30px 0px;\n`;\n\ninterface Props {\n  tag: string;\n  cards: WidgetCardProps[];\n  isLoading: boolean;\n}\n\nconst UIEntityTagGroup = (props: Props) => {\n  const [showFullItems, setShowFullItems] = React.useState(false);\n  const toggleShowFullItems = () => {\n    setShowFullItems(!showFullItems);\n  };\n  const noOfItemsToRender = showFullItems\n    ? props.cards.length\n    : initialEntityCountForExplorerTag[props.tag as WidgetTags] ||\n      props.cards.length;\n\n  if (props.isLoading) {\n    return (\n      <LoadingWrapper key={props.tag}>\n        <CollapsibleHeader arrowPosition=\"start\">\n          <Text\n            className=\"select-none\"\n            color=\"var(--ads-v2-color-gray-600)\"\n            kind=\"heading-xs\"\n          >\n            {props.tag}\n          </Text>\n        </CollapsibleHeader>\n        <LoadingContainer>\n          <Spinner size=\"md\" />\n          <Text\n            className=\"select-none\"\n            color=\"var(--ads-v2-color-gray-600)\"\n            kind=\"body-m\"\n          >\n            {createMessage(EDITOR_PANE_TEXTS.loading_building_blocks)}\n          </Text>\n        </LoadingContainer>\n      </LoadingWrapper>\n    );\n  }\n\n  return (\n    <Collapsible\n      className={`pb-2 widget-tag-collapisble widget-tag-collapisble-${props.tag\n        .toLowerCase()\n        .replace(/ /g, \"-\")}`}\n      isOpen\n      key={props.tag}\n    >\n      <CollapsibleHeader arrowPosition=\"start\">\n        <Text\n          className=\"select-none\"\n          color=\"var(--ads-v2-color-gray-600)\"\n          kind=\"heading-xs\"\n        >\n          {props.tag}\n        </Text>\n      </CollapsibleHeader>\n      <CollapsibleContent>\n        <div\n          className=\"grid items-stretch grid-cols-3 gap-x-1 gap-y-1 justify-items-stretch\"\n          data-testid=\"ui-entity-tag-group\"\n        >\n          {props.tag === WIDGET_TAGS.SUGGESTED_WIDGETS\n            ? sortBy(\n                props.cards,\n                (widget) => SUGGESTED_WIDGETS_ORDER[widget.type],\n              ).map((card, index) => (\n                <WidgetCard details={card} key={`${card.key}${index}`} />\n              ))\n            : props.cards\n                .slice(0, noOfItemsToRender)\n                .map((card, index) => (\n                  <WidgetCard details={card} key={`${card.key}${index}`} />\n                ))}\n        </div>\n        <SeeMoreButton\n          hidden={noOfItemsToRender >= props.cards.length && !showFullItems}\n          showSeeLess={showFullItems}\n          toggleSeeMore={toggleShowFullItems}\n        />\n      </CollapsibleContent>\n    </Collapsible>\n  );\n};\n\nexport default UIEntityTagGroup;\n","import {\n  UI_ELEMENT_PANEL_SEARCH_TEXT,\n  WIDGET_PANEL_EMPTY_MESSAGE,\n  createMessage,\n} from \"@appsmith/constants/messages\";\nimport { FEATURE_FLAG } from \"@appsmith/entities/FeatureFlag\";\nimport AnalyticsUtil from \"@appsmith/utils/AnalyticsUtil\";\nimport { ENTITY_EXPLORER_SEARCH_ID } from \"constants/Explorer\";\nimport type {\n  WidgetCardsGroupedByTags,\n  WidgetTags,\n} from \"constants/WidgetConstants\";\nimport { WIDGET_TAGS } from \"constants/WidgetConstants\";\nimport { Flex, SearchInput, Text } from \"design-system\";\nimport Fuse from \"fuse.js\";\nimport { debounce } from \"lodash\";\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport { useFeatureFlag } from \"utils/hooks/useFeatureFlag\";\nimport { groupWidgetCardsByTags } from \"../utils\";\nimport UIEntityTagGroup from \"./UIEntityTagGroup\";\nimport { useUIExplorerItems } from \"./hooks\";\n\nfunction UIEntitySidebar({\n  focusSearchInput,\n  isActive,\n}: {\n  isActive: boolean;\n  focusSearchInput?: boolean;\n}) {\n  const { cards, entityLoading, groupedCards } = useUIExplorerItems();\n  const [filteredCards, setFilteredCards] =\n    useState<WidgetCardsGroupedByTags>(groupedCards);\n  const searchInputRef = useRef<HTMLInputElement | null>(null);\n  const [isSearching, setIsSearching] = useState(false);\n  const [areSearchResultsEmpty, setAreSearchResultsEmpty] = useState(false);\n  const isDragDropBuildingBlocksEnabled = useFeatureFlag(\n    FEATURE_FLAG.release_drag_drop_building_blocks_enabled,\n  );\n  const hideSuggestedWidgets = useMemo(\n    () =>\n      (isSearching && !areSearchResultsEmpty) ||\n      isDragDropBuildingBlocksEnabled,\n    [isSearching, areSearchResultsEmpty, isDragDropBuildingBlocksEnabled],\n  );\n\n  const searchWildcards = useMemo(\n    () =>\n      cards\n        .filter((card) => card.isSearchWildcard)\n        .map((card) => ({ ...card, tags: [WIDGET_TAGS.SUGGESTED_WIDGETS] })),\n    [cards],\n  );\n\n  const fuse = useMemo(\n    () =>\n      new Fuse(cards, {\n        keys: [\n          { name: \"displayName\", weight: 0.8 },\n          { name: \"searchTags\", weight: 0.1 },\n          { name: \"tags\", weight: 0.1 },\n        ],\n        threshold: 0.2,\n        distance: 100,\n      }),\n    [cards],\n  );\n\n  const sendWidgetSearchAnalytics = debounce((value: string) => {\n    if (value !== \"\") {\n      AnalyticsUtil.logEvent(\"WIDGET_SEARCH\", { value });\n    }\n  }, 1000);\n\n  const filterCards = (keyword: string) => {\n    setIsSearching(true);\n    sendWidgetSearchAnalytics(keyword);\n\n    if (keyword.trim().length > 0) {\n      const searchResult = fuse.search(keyword);\n\n      setFilteredCards(\n        groupWidgetCardsByTags(\n          searchResult.length > 0 ? searchResult : searchWildcards,\n        ),\n      );\n      setAreSearchResultsEmpty(searchResult.length === 0);\n    } else {\n      setFilteredCards(groupedCards);\n      setIsSearching(false);\n      setAreSearchResultsEmpty(false);\n    }\n  };\n\n  const search = debounce((value: string) => {\n    filterCards(value.toLowerCase());\n  }, 300);\n\n  // update widgets list after building blocks have been fetched async\n  useEffect(() => {\n    setFilteredCards(groupedCards);\n  }, [entityLoading[WIDGET_TAGS.BUILDING_BLOCKS]]);\n\n  useEffect(() => {\n    if (focusSearchInput) searchInputRef.current?.focus();\n  }, [focusSearchInput]);\n\n  return (\n    <div\n      className={`flex flex-col t--widget-sidebar overflow-hidden ${\n        isActive ? \"\" : \"hidden\"\n      }`}\n    >\n      <div className=\"sticky top-0 px-3 mt-0.5\">\n        <SearchInput\n          autoComplete=\"off\"\n          id={ENTITY_EXPLORER_SEARCH_ID}\n          onChange={search}\n          placeholder={createMessage(UI_ELEMENT_PANEL_SEARCH_TEXT)}\n          ref={searchInputRef}\n          type=\"text\"\n        />\n      </div>\n      <Flex\n        className=\"flex-grow px-3 overflow-y-scroll flex-col\"\n        data-testid=\"t--widget-sidebar-scrollable-wrapper\"\n        pt=\"spaces-2\"\n      >\n        {areSearchResultsEmpty && (\n          <Text\n            color=\"#6A7585\"\n            kind=\"body-m\"\n            renderAs=\"p\"\n            style={{ marginBottom: \"15px\" }}\n          >\n            {createMessage(WIDGET_PANEL_EMPTY_MESSAGE)} `\n            {searchInputRef.current?.value}`\n          </Text>\n        )}\n        <div>\n          {Object.keys(filteredCards).map((tag) => {\n            const cardsForThisTag = filteredCards[tag as WidgetTags];\n\n            if (!cardsForThisTag?.length && !entityLoading[tag as WidgetTags]) {\n              return null;\n            }\n\n            if (tag === WIDGET_TAGS.SUGGESTED_WIDGETS && hideSuggestedWidgets) {\n              return null;\n            }\n\n            return (\n              <UIEntityTagGroup\n                cards={cardsForThisTag}\n                isLoading={!!entityLoading[tag as WidgetTags]}\n                key={tag}\n                tag={tag}\n              />\n            );\n          })}\n        </div>\n      </Flex>\n    </div>\n  );\n}\n\nUIEntitySidebar.displayName = \"UIEntitySidebar\";\n\nexport default UIEntitySidebar;\n","import { FEATURE_FLAG } from \"@appsmith/entities/FeatureFlag\";\nimport { getAllTemplates } from \"actions/templateActions\";\nimport type { WidgetTags } from \"constants/WidgetConstants\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getWidgetCards } from \"selectors/editorSelectors\";\nimport {\n  getBuildingBlockExplorerCards,\n  templatesCountSelector,\n} from \"selectors/templatesSelectors\";\nimport { useFeatureFlag } from \"utils/hooks/useFeatureFlag\";\nimport { groupWidgetCardsByTags } from \"../utils\";\nimport { isFixedLayoutSelector } from \"selectors/layoutSystemSelectors\";\n\n/**\n * Custom hook for managing UI explorer items including widgets and building blocks.\n * @returns Object containing cards, grouped cards and entity loading states.\n */\nexport const useUIExplorerItems = () => {\n  const releaseDragDropBuildingBlocks = useFeatureFlag(\n    FEATURE_FLAG.release_drag_drop_building_blocks_enabled,\n  );\n  const isFixedLayout = useSelector(isFixedLayoutSelector);\n  const dispatch = useDispatch();\n  // check if entities have loaded\n  const isBuildingBlocksLoaded = useSelector(templatesCountSelector) > 0;\n\n  const [entityLoading, setEntityLoading] = useState<\n    Partial<Record<WidgetTags, boolean>>\n  >({\n    \"Building Blocks\": releaseDragDropBuildingBlocks\n      ? !isBuildingBlocksLoaded\n      : false,\n  });\n  const widgetCards = useSelector(getWidgetCards);\n  const buildingBlockCards = useSelector(getBuildingBlockExplorerCards);\n\n  // handle loading async entities\n  useEffect(() => {\n    if (\n      !isBuildingBlocksLoaded &&\n      releaseDragDropBuildingBlocks &&\n      isFixedLayout\n    ) {\n      dispatch(getAllTemplates());\n    } else {\n      setEntityLoading((prev) => ({ ...prev, \"Building Blocks\": false }));\n    }\n  }, [isBuildingBlocksLoaded, releaseDragDropBuildingBlocks, isFixedLayout]);\n\n  const cards = useMemo(\n    () => [\n      ...widgetCards,\n      ...(isFixedLayout && releaseDragDropBuildingBlocks\n        ? buildingBlockCards\n        : []),\n    ],\n    [\n      widgetCards,\n      buildingBlockCards,\n      releaseDragDropBuildingBlocks,\n      isFixedLayout,\n    ],\n  );\n\n  const groupedCards = useMemo(() => groupWidgetCardsByTags(cards), [cards]);\n\n  return {\n    groupedCards,\n    cards,\n    entityLoading,\n  };\n};\n","import React, { useCallback } from \"react\";\nimport { Button, Flex, Text } from \"design-system\";\nimport { useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\n\nimport history from \"utils/history\";\nimport { getCurrentPageId } from \"@appsmith/selectors/entitiesSelector\";\nimport UIEntitySidebar from \"pages/Editor/widgetSidebar/UIEntitySidebar\";\nimport { widgetListURL } from \"@appsmith/RouteBuilder\";\nimport { EDITOR_PANE_TEXTS, createMessage } from \"@appsmith/constants/messages\";\n\nconst Container = styled(Flex)`\n  padding-right: var(--ads-v2-spaces-2);\n  background-color: var(--ads-v2-color-gray-50);\n`;\n\nconst AddWidgets = (props: { focusSearchInput?: boolean }) => {\n  const pageId = useSelector(getCurrentPageId) as string;\n\n  const closeButtonClickHandler = useCallback(() => {\n    history.push(widgetListURL({ pageId }));\n  }, [pageId]);\n\n  return (\n    <>\n      <Container\n        alignItems=\"center\"\n        borderBottom={\"1px solid var(--ads-v2-color-border)\"}\n        data-testid=\"t--ide-add-pane\"\n        justifyContent=\"space-between\"\n        px=\"spaces-4\"\n        py=\"spaces-2\"\n      >\n        <Text color=\"var(--ads-v2-color-fg)\" kind=\"heading-xs\">\n          {createMessage(EDITOR_PANE_TEXTS.widgets_create_tab_title)}\n        </Text>\n        <Button\n          aria-label=\"Close pane\"\n          data-testid=\"t--add-pane-close-icon\"\n          isIconButton\n          kind={\"tertiary\"}\n          onClick={closeButtonClickHandler}\n          size={\"sm\"}\n          startIcon={\"close-line\"}\n        />\n      </Container>\n      <Flex flexDirection=\"column\" gap=\"spaces-3\" overflowX=\"auto\">\n        <UIEntitySidebar focusSearchInput={props.focusSearchInput} isActive />\n      </Flex>\n    </>\n  );\n};\n\nexport default AddWidgets;\n","import React from \"react\";\nimport { Flex } from \"design-system\";\nimport { Switch, useRouteMatch } from \"react-router\";\n\nimport { SentryRoute } from \"@appsmith/AppRouter\";\nimport {\n  ADD_PATH,\n  BUILDER_CUSTOM_PATH,\n  BUILDER_PATH,\n  BUILDER_PATH_DEPRECATED,\n  WIDGETS_EDITOR_BASE_PATH,\n  WIDGETS_EDITOR_ID_PATH,\n} from \"constants/routes\";\nimport ListWidgets from \"./List\";\nimport AddWidgets from \"./Add\";\nimport { useSelector } from \"react-redux\";\nimport { getPagePermissions } from \"selectors/editorSelectors\";\nimport { useFeatureFlag } from \"utils/hooks/useFeatureFlag\";\nimport { FEATURE_FLAG } from \"@appsmith/entities/FeatureFlag\";\nimport { getHasManagePagePermission } from \"@appsmith/utils/BusinessFeatures/permissionPageHelpers\";\n\nconst UISegment = () => {\n  const { path } = useRouteMatch();\n  const [focusSearchInput, setFocusSearchInput] = React.useState(false);\n\n  const pagePermissions = useSelector(getPagePermissions);\n  const isFeatureEnabled = useFeatureFlag(FEATURE_FLAG.license_gac_enabled);\n\n  const canManagePages = getHasManagePagePermission(\n    isFeatureEnabled,\n    pagePermissions,\n  );\n\n  if (!canManagePages) {\n    return <ListWidgets setFocusSearchInput={setFocusSearchInput} />;\n  }\n\n  return (\n    <Flex\n      className=\"ide-editor-left-pane__content-widgets\"\n      flexDirection=\"column\"\n      gap=\"spaces-3\"\n      overflow=\"hidden\"\n    >\n      <Switch>\n        <SentryRoute\n          exact\n          path={[\n            BUILDER_PATH_DEPRECATED,\n            BUILDER_PATH,\n            BUILDER_CUSTOM_PATH,\n            `${path}${WIDGETS_EDITOR_ID_PATH}${ADD_PATH}`,\n          ]}\n        >\n          <AddWidgets focusSearchInput={focusSearchInput} />\n        </SentryRoute>\n        <SentryRoute\n          exact\n          path={[\n            `${path}${WIDGETS_EDITOR_BASE_PATH}`,\n            `${path}${WIDGETS_EDITOR_ID_PATH}`,\n          ]}\n        >\n          <ListWidgets setFocusSearchInput={setFocusSearchInput} />\n        </SentryRoute>\n      </Switch>\n    </Flex>\n  );\n};\n\nexport default UISegment;\n","import React from \"react\";\nimport { Switch, useRouteMatch } from \"react-router\";\nimport { SentryRoute } from \"@appsmith/AppRouter\";\nimport { useJSSegmentRoutes } from \"@appsmith/pages/Editor/IDE/EditorPane/JS/hooks\";\n\nconst JSSegment = () => {\n  const { path } = useRouteMatch();\n  const routes = useJSSegmentRoutes(path);\n  return (\n    <Switch>\n      {routes.map((route) => (\n        <SentryRoute\n          component={route.component}\n          exact={route.exact}\n          key={route.key}\n          path={route.path}\n        />\n      ))}\n    </Switch>\n  );\n};\n\nexport default JSSegment;\n","import React from \"react\";\nimport { Button, Flex, SegmentedControl } from \"design-system\";\nimport { createMessage, EDITOR_PANE_TEXTS } from \"@appsmith/constants/messages\";\nimport { EditorEntityTab } from \"@appsmith/entities/IDE/constants\";\nimport history from \"utils/history\";\nimport { globalAddURL } from \"@appsmith/RouteBuilder\";\nimport { useSelector } from \"react-redux\";\nimport { getCurrentPageId } from \"@appsmith/selectors/entitiesSelector\";\nimport { useCurrentEditorState, useSegmentNavigation } from \"../../hooks\";\nimport styled from \"styled-components\";\nimport { useFeatureFlag } from \"utils/hooks/useFeatureFlag\";\nimport { FEATURE_FLAG } from \"@appsmith/entities/FeatureFlag\";\n\nconst Container = styled(Flex)`\n  #editor-pane-segment-control {\n    max-width: 247px;\n  }\n\n  button {\n    flex-shrink: 0;\n    flex-basis: auto;\n  }\n`;\n\nconst SegmentedHeader = () => {\n  const isGlobalAddPaneEnabled = useFeatureFlag(\n    FEATURE_FLAG.release_global_add_pane_enabled,\n  );\n  const pageId = useSelector(getCurrentPageId);\n  const onAddButtonClick = () => {\n    history.push(globalAddURL({ pageId }));\n  };\n  const { segment } = useCurrentEditorState();\n  const { onSegmentChange } = useSegmentNavigation();\n\n  return (\n    <Container\n      alignItems=\"center\"\n      backgroundColor=\"var(--ads-v2-colors-control-track-default-bg)\"\n      className=\"ide-editor-left-pane__header\"\n      gap=\"spaces-2\"\n      justifyContent=\"space-between\"\n      padding=\"spaces-2\"\n    >\n      <SegmentedControl\n        id=\"editor-pane-segment-control\"\n        onChange={onSegmentChange}\n        options={[\n          {\n            label: createMessage(EDITOR_PANE_TEXTS.queries_tab),\n            value: EditorEntityTab.QUERIES,\n          },\n          {\n            label: createMessage(EDITOR_PANE_TEXTS.js_tab),\n            value: EditorEntityTab.JS,\n          },\n          {\n            label: createMessage(EDITOR_PANE_TEXTS.ui_tab),\n            value: EditorEntityTab.UI,\n          },\n        ]}\n        value={segment}\n      />\n      {isGlobalAddPaneEnabled ? (\n        <Button\n          className={\"t--add-editor-button\"}\n          isIconButton\n          kind=\"primary\"\n          onClick={onAddButtonClick}\n          size=\"sm\"\n          startIcon=\"add-line\"\n        />\n      ) : null}\n    </Container>\n  );\n};\n\nexport default SegmentedHeader;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport clsx from \"classnames\";\n\nimport { Flex, Icon } from \"design-system\";\nimport { sanitizeString } from \"utils/URLUtils\";\n\ninterface FileTabProps {\n  isActive: boolean;\n  title: string;\n  onClick: () => void;\n  onClose: (e: React.MouseEvent) => void;\n  icon?: React.ReactNode;\n}\n\nexport const StyledTab = styled(Flex)`\n  position: relative;\n  height: 100%;\n  font-size: 12px;\n  color: var(--ads-v2-colors-text-default);\n  cursor: pointer;\n  gap: var(--ads-v2-spaces-2);\n  border-top: 1px solid transparent;\n  border-top-left-radius: var(--ads-v2-border-radius);\n  border-top-right-radius: var(--ads-v2-border-radius);\n  align-items: center;\n  justify-content: center;\n  padding: var(--ads-v2-spaces-3);\n  border-left: 1px solid transparent;\n  border-right: 1px solid transparent;\n  border-top: 2px solid transparent;\n\n  &.active {\n    background: var(--ads-v2-colors-control-field-default-bg);\n    border-top-color: var(--ads-v2-color-bg-brand);\n    border-left-color: var(--ads-v2-color-border-muted);\n    border-right-color: var(--ads-v2-color-border-muted);\n  }\n\n  & > .tab-close {\n    position: relative;\n    right: -2px;\n    visibility: hidden;\n  }\n\n  &:hover > .tab-close {\n    visibility: visible;\n  }\n\n  &.active > .tab-close {\n    visibility: visible;\n  }\n`;\n\nexport const TabTextContainer = styled.span`\n  width: 100%;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n`;\n\nexport const TabIconContainer = styled.div`\n  height: 12px;\n  width: 12px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-shrink: 0;\n  img {\n    width: 12px;\n  }\n`;\n\nexport const FileTab = ({\n  icon,\n  isActive,\n  onClick,\n  onClose,\n  title,\n}: FileTabProps) => {\n  return (\n    <StyledTab\n      className={clsx(\"editor-tab\", isActive && \"active\")}\n      data-testid={`t--ide-tab-${sanitizeString(title)}`}\n      onClick={onClick}\n    >\n      {icon ? <TabIconContainer>{icon}</TabIconContainer> : null}\n      <TabTextContainer>{title}</TabTextContainer>\n      {/* not using button component because of the size not matching design */}\n      <Icon\n        className=\"tab-close rounded-[4px] hover:bg-[var(--ads-v2-colors-action-tertiary-surface-hover-bg)] cursor-pointer p-[2px]\"\n        data-testid=\"t--tab-close-btn\"\n        name=\"close-line\"\n        onClick={onClose}\n      />\n    </StyledTab>\n  );\n};\n","import React from \"react\";\n\nimport {\n  EditorEntityTabState,\n  type EntityItem,\n} from \"@appsmith/entities/IDE/constants\";\nimport { useCurrentEditorState } from \"../hooks\";\nimport { FileTab } from \"IDE/Components/FileTab\";\nimport type { FocusEntityInfo } from \"navigation/FocusEntity\";\n\ninterface Props {\n  tabs: EntityItem[];\n  navigateToTab: (tab: EntityItem) => void;\n  onClose: (actionId?: string) => void;\n  currentEntity: FocusEntityInfo;\n  isListActive?: boolean;\n}\n\nconst FileTabs = (props: Props) => {\n  const { currentEntity, isListActive, navigateToTab, onClose, tabs } = props;\n  const { segmentMode } = useCurrentEditorState();\n\n  const onCloseClick = (e: React.MouseEvent, id?: string) => {\n    e.stopPropagation();\n    onClose(id);\n  };\n\n  return (\n    <>\n      {tabs.map((tab: EntityItem) => (\n        <FileTab\n          icon={tab.icon}\n          isActive={\n            currentEntity.id === tab.key &&\n            segmentMode !== EditorEntityTabState.Add &&\n            !isListActive\n          }\n          key={tab.key}\n          onClick={() => navigateToTab(tab)}\n          onClose={(e) => onCloseClick(e, tab.key)}\n          title={tab.title}\n        />\n      ))}\n    </>\n  );\n};\n\nexport default FileTabs;\n","import type { ReactNode } from \"react\";\nimport React from \"react\";\nimport { Flex } from \"design-system\";\n\nconst Container = (props: { children: ReactNode }) => {\n  return (\n    <Flex\n      alignItems=\"center\"\n      backgroundColor=\"#FFFFFF\"\n      borderBottom=\"1px solid var(--ads-v2-color-border-muted)\"\n      gap=\"spaces-2\"\n      id=\"ide-tabs-container\"\n      maxHeight=\"32px\"\n      minHeight=\"32px\"\n      px=\"spaces-2\"\n      width=\"100%\"\n    >\n      {props.children}\n    </Flex>\n  );\n};\n\nexport default Container;\n","import React from \"react\";\nimport { Flex, Spinner, Button } from \"design-system\";\nimport { useCurrentEditorState, useIDETabClickHandlers } from \"../hooks\";\nimport { useIsJSAddLoading } from \"@appsmith/pages/Editor/IDE/EditorPane/JS/hooks\";\nimport { EditorEntityTabState } from \"@appsmith/entities/IDE/constants\";\n\nconst AddButton = () => {\n  const { addClickHandler } = useIDETabClickHandlers();\n  const isJSLoading = useIsJSAddLoading();\n  const { segmentMode } = useCurrentEditorState();\n\n  if (segmentMode === EditorEntityTabState.Add) {\n    return null;\n  }\n  if (isJSLoading) {\n    return (\n      <Flex px=\"spaces-2\">\n        <Spinner size=\"md\" />\n      </Flex>\n    );\n  }\n  return (\n    <Button\n      className=\"!min-w-[24px]\"\n      data-testid=\"t--ide-tabs-add-button\"\n      id=\"tabs-add-toggle\"\n      isIconButton\n      kind=\"tertiary\"\n      onClick={addClickHandler}\n      size=\"sm\"\n      startIcon=\"add-line\"\n    />\n  );\n};\n\nexport { AddButton };\n","import React, { useState } from \"react\";\nimport { AnnouncementModal, Button } from \"design-system\";\nimport localStorage, { LOCAL_STORAGE_KEYS } from \"utils/localStorage\";\nimport {\n  SPLITPANE_ANNOUNCEMENT,\n  createMessage,\n} from \"@appsmith/constants/messages\";\nimport { getAssetUrl } from \"@appsmith/utils/airgapHelpers\";\nimport { ASSETS_CDN_URL } from \"constants/ThirdPartyConstants\";\n\nconst Announcement = () => {\n  const localStorageFlag =\n    localStorage.getItem(LOCAL_STORAGE_KEYS.SPLITPANE_ANNOUNCEMENT) || \"true\";\n  const [show, setShow] = useState(JSON.parse(localStorageFlag));\n\n  const tryClickHandler = () => {\n    setShow(false);\n    localStorage.setItem(LOCAL_STORAGE_KEYS.SPLITPANE_ANNOUNCEMENT, \"false\");\n  };\n\n  const learnClickHandler = () => {\n    window.open(\n      \"https://community.appsmith.com/content/blog/discover-ide-20-building-more-efficient-ide\",\n      \"_blank\",\n    );\n  };\n\n  const modalFooter = () => (\n    <>\n      <Button\n        data-testid=\"t--ide-close-announcement\"\n        kind=\"primary\"\n        onClick={tryClickHandler}\n        size=\"md\"\n      >\n        Try it out\n      </Button>\n      <Button kind=\"tertiary\" onClick={learnClickHandler} size=\"md\">\n        Learn more\n      </Button>\n    </>\n  );\n\n  return (\n    <AnnouncementModal\n      banner={getAssetUrl(`${ASSETS_CDN_URL}/splitpane-banner.svg`)}\n      description={createMessage(SPLITPANE_ANNOUNCEMENT.DESCRIPTION)}\n      footer={modalFooter()}\n      isBeta\n      isOpen={show}\n      title={createMessage(SPLITPANE_ANNOUNCEMENT.TITLE)}\n    />\n  );\n};\n\nexport { Announcement };\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Flex } from \"design-system\";\n\nimport { useCurrentEditorState } from \"../hooks\";\nimport { EditorEntityTab } from \"@appsmith/entities/IDE/constants\";\nimport ListQuery from \"../EditorPane/Query/List\";\nimport ListJSObjects from \"../EditorPane/JS/List\";\n\nconst ListContainer = styled(Flex)`\n  & .t--entity-item {\n    grid-template-columns: 0 auto 1fr auto auto auto auto auto;\n    height: 32px;\n\n    & .t--entity-name {\n      padding-left: var(--ads-v2-spaces-3);\n    }\n  }\n`;\n\nexport const List = () => {\n  const { segment } = useCurrentEditorState();\n\n  return (\n    <ListContainer\n      bg=\"var(--ads-v2-color-bg)\"\n      className=\"absolute top-[78px]\"\n      h=\"calc(100% - 78px)\"\n      w=\"100%\"\n      zIndex=\"10\"\n    >\n      {segment === EditorEntityTab.QUERIES ? <ListQuery /> : <ListJSObjects />}\n    </ListContainer>\n  );\n};\n","import React, { useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Button, Tooltip } from \"design-system\";\n\nimport { getIDEViewMode } from \"selectors/ideSelectors\";\nimport { EditorViewMode } from \"@appsmith/entities/IDE/constants\";\nimport AnalyticsUtil from \"@appsmith/utils/AnalyticsUtil\";\nimport {\n  MAXIMIZE_BUTTON_TOOLTIP,\n  MINIMIZE_BUTTON_TOOLTIP,\n  createMessage,\n} from \"@appsmith/constants/messages\";\nimport { setIdeEditorViewMode } from \"actions/ideActions\";\n\nexport const ScreenModeToggle = () => {\n  const dispatch = useDispatch();\n  const ideViewMode = useSelector(getIDEViewMode);\n\n  const toggleEditorMode = useCallback(() => {\n    const newMode =\n      ideViewMode === EditorViewMode.SplitScreen\n        ? EditorViewMode.FullScreen\n        : EditorViewMode.SplitScreen;\n\n    AnalyticsUtil.logEvent(\"EDITOR_MODE_CHANGE\", {\n      to: newMode,\n    });\n    dispatch(setIdeEditorViewMode(newMode));\n  }, [ideViewMode, dispatch]);\n\n  return (\n    <Tooltip\n      content={\n        ideViewMode === EditorViewMode.SplitScreen\n          ? createMessage(MAXIMIZE_BUTTON_TOOLTIP)\n          : createMessage(MINIMIZE_BUTTON_TOOLTIP)\n      }\n    >\n      <Button\n        className=\"ml-auto !min-w-[24px]\"\n        data-testid={\n          ideViewMode === EditorViewMode.SplitScreen\n            ? \"t--ide-maximize\"\n            : \"t--ide-minimize\"\n        }\n        id={\n          ideViewMode === EditorViewMode.SplitScreen\n            ? \"editor-mode-maximize\"\n            : \"editor-mode-minimize\"\n        }\n        isIconButton\n        kind=\"tertiary\"\n        onClick={toggleEditorMode}\n        startIcon={\n          ideViewMode === EditorViewMode.SplitScreen\n            ? \"maximize-v3\"\n            : \"minimize-v3\"\n        }\n      />\n    </Tooltip>\n  );\n};\n","import React from \"react\";\n\nimport { FileTab } from \"IDE/Components/FileTab\";\nimport { useCurrentEditorState } from \"../hooks\";\nimport {\n  EditorEntityTab,\n  EditorEntityTabState,\n} from \"@appsmith/entities/IDE/constants\";\n\nconst AddTab = ({\n  isListActive,\n  newTabClickCallback,\n  onClose,\n}: {\n  newTabClickCallback: () => void;\n  onClose: (actionId?: string) => void;\n  isListActive: boolean;\n}) => {\n  const { segment, segmentMode } = useCurrentEditorState();\n\n  if (segmentMode !== EditorEntityTabState.Add) return null;\n\n  const onCloseClick = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    onClose();\n  };\n\n  return (\n    <FileTab\n      isActive={segmentMode === EditorEntityTabState.Add && !isListActive}\n      onClick={newTabClickCallback}\n      onClose={(e) => onCloseClick(e)}\n      title={`New ${segment === EditorEntityTab.JS ? \"JS\" : \"Query\"}`}\n    />\n  );\n};\n\nexport { AddTab };\n","import React, { useEffect, useState } from \"react\";\nimport { shallowEqual, useSelector } from \"react-redux\";\nimport { Flex, ScrollArea, ToggleButton } from \"design-system\";\nimport { getIDEViewMode, getIsSideBySideEnabled } from \"selectors/ideSelectors\";\nimport type { EntityItem } from \"@appsmith/entities/IDE/constants\";\nimport {\n  EditorEntityTab,\n  EditorEntityTabState,\n  EditorViewMode,\n} from \"@appsmith/entities/IDE/constants\";\nimport FileTabs from \"./FileTabs\";\nimport Container from \"./Container\";\nimport { useCurrentEditorState, useIDETabClickHandlers } from \"../hooks\";\nimport { TabSelectors } from \"./constants\";\nimport { AddButton } from \"./AddButton\";\nimport { Announcement } from \"../EditorPane/components/Announcement\";\nimport { useLocation } from \"react-router\";\nimport { identifyEntityFromPath } from \"navigation/FocusEntity\";\nimport { List } from \"./List\";\nimport { ScreenModeToggle } from \"./ScreenModeToggle\";\nimport { AddTab } from \"./AddTab\";\n\nconst EditorTabs = () => {\n  const [showListView, setShowListView] = useState(false);\n  const isSideBySideEnabled = useSelector(getIsSideBySideEnabled);\n  const ideViewMode = useSelector(getIDEViewMode);\n  const { segment, segmentMode } = useCurrentEditorState();\n  const { closeClickHandler, tabClickHandler } = useIDETabClickHandlers();\n  const tabsConfig = TabSelectors[segment];\n  const files = useSelector(tabsConfig.tabsSelector, shallowEqual);\n\n  const location = useLocation();\n  const currentEntity = identifyEntityFromPath(location.pathname);\n\n  // Turn off list view while changing segment, files\n  useEffect(() => {\n    setShowListView(false);\n  }, [currentEntity.id, currentEntity.entity, files, segmentMode]);\n\n  // Show list view if all tabs is closed\n  useEffect(() => {\n    if (files.length === 0 && segmentMode !== EditorEntityTabState.Add) {\n      setShowListView(true);\n    }\n  }, [files, segmentMode, currentEntity.entity]);\n\n  // scroll to the active tab\n  useEffect(() => {\n    const activetab = document.querySelector(\".editor-tab.active\");\n    if (activetab) {\n      activetab.scrollIntoView({\n        inline: \"nearest\",\n      });\n    }\n  }, [files, segmentMode]);\n\n  // show border if add button is sticky\n  useEffect(() => {\n    const ele = document.querySelector<HTMLElement>(\n      '[data-testid=\"t--editor-tabs\"] > [data-overlayscrollbars-viewport]',\n    );\n    if (ele && ele.scrollWidth > ele.clientWidth) {\n      ele.style.borderRight = \"1px solid var(--ads-v2-color-border)\";\n    } else if (ele) {\n      ele.style.borderRight = \"unset\";\n    }\n  }, [files]);\n\n  if (!isSideBySideEnabled) return null;\n  if (segment === EditorEntityTab.UI) return null;\n\n  const handleHamburgerClick = () => {\n    if (files.length === 0 && segmentMode !== EditorEntityTabState.Add) return;\n    setShowListView(!showListView);\n  };\n\n  const onTabClick = (tab: EntityItem) => {\n    setShowListView(false);\n    tabClickHandler(tab);\n  };\n\n  const newTabClickHandler = () => {\n    setShowListView(false);\n  };\n\n  return (\n    <>\n      <Container>\n        {ideViewMode === EditorViewMode.SplitScreen && (\n          <ToggleButton\n            icon=\"hamburger\"\n            isSelected={showListView}\n            onClick={handleHamburgerClick}\n            size=\"md\"\n          />\n        )}\n        <ScrollArea\n          className=\"h-[32px] top-[0.5px]\"\n          data-testid=\"t--editor-tabs\"\n          options={{\n            overflow: {\n              x: \"scroll\",\n              y: \"hidden\",\n            },\n          }}\n          size={\"sm\"}\n        >\n          <Flex className=\"items-center\" gap=\"spaces-2\" height=\"100%\">\n            <FileTabs\n              currentEntity={currentEntity}\n              isListActive={showListView}\n              navigateToTab={onTabClick}\n              onClose={closeClickHandler}\n              tabs={files}\n            />\n            <AddTab\n              isListActive={showListView}\n              newTabClickCallback={newTabClickHandler}\n              onClose={closeClickHandler}\n            />\n          </Flex>\n        </ScrollArea>\n\n        {files.length > 0 ? <AddButton /> : null}\n        {/* Switch screen mode button */}\n        <ScreenModeToggle />\n      </Container>\n\n      {/* Overflow list */}\n      {showListView && ideViewMode === EditorViewMode.SplitScreen && <List />}\n\n      {/* Announcement modal */}\n      {ideViewMode === EditorViewMode.SplitScreen && <Announcement />}\n    </>\n  );\n};\n\nexport default EditorTabs;\n","import {\n  API_EDITOR_BASE_PATH,\n  CURL_IMPORT_PAGE_PATH,\n  JS_COLLECTION_EDITOR_PATH,\n  QUERIES_EDITOR_BASE_PATH,\n  WIDGETS_EDITOR_BASE_PATH,\n} from \"@appsmith/constants/routes/appRoutes\";\nimport { SAAS_EDITOR_PATH } from \"pages/Editor/SaaSEditor/constants\";\n\nexport const querySegmentRoutes = [\n  CURL_IMPORT_PAGE_PATH,\n  API_EDITOR_BASE_PATH,\n  `${SAAS_EDITOR_PATH}/api`,\n  QUERIES_EDITOR_BASE_PATH,\n];\n\nexport const jsSegmentRoutes = [JS_COLLECTION_EDITOR_PATH];\n\nexport const widgetSegmentRoutes = [WIDGETS_EDITOR_BASE_PATH];\n","import React from \"react\";\nimport { Flex } from \"design-system\";\nimport { Switch, useRouteMatch } from \"react-router\";\nimport { SentryRoute } from \"@appsmith/AppRouter\";\nimport QueriesSegment from \"./Query\";\nimport WidgetsSegment from \"./UI\";\nimport JSSegment from \"./JS\";\nimport SegmentedHeader from \"./components/SegmentedHeader\";\nimport EditorTabs from \"../EditorTabs\";\nimport {\n  jsSegmentRoutes,\n  querySegmentRoutes,\n  widgetSegmentRoutes,\n} from \"@appsmith/pages/Editor/IDE/EditorPane/constants\";\nimport {\n  BUILDER_CUSTOM_PATH,\n  BUILDER_PATH,\n  BUILDER_PATH_DEPRECATED,\n} from \"@appsmith/constants/routes/appRoutes\";\nimport { useSelector } from \"react-redux\";\nimport { getIDEViewMode } from \"selectors/ideSelectors\";\nimport { EditorViewMode } from \"@appsmith/entities/IDE/constants\";\n\nconst EditorPaneSegments = () => {\n  const { path } = useRouteMatch();\n  const ideViewMode = useSelector(getIDEViewMode);\n\n  return (\n    <Flex\n      className=\"relative\"\n      flexDirection=\"column\"\n      height=\"100%\"\n      overflow=\"hidden\"\n    >\n      <SegmentedHeader />\n      {ideViewMode === EditorViewMode.SplitScreen ? <EditorTabs /> : null}\n      <Flex\n        className=\"ide-editor-left-pane__content\"\n        flexDirection=\"column\"\n        height=\"100%\"\n        overflow=\"hidden\"\n        width=\"100%\"\n      >\n        <Switch>\n          <SentryRoute\n            component={QueriesSegment}\n            path={querySegmentRoutes.map((route) => `${path}${route}`)}\n          />\n          <SentryRoute\n            component={JSSegment}\n            path={jsSegmentRoutes.map((route) => `${path}${route}`)}\n          />\n          <SentryRoute\n            component={WidgetsSegment}\n            path={[\n              BUILDER_PATH,\n              BUILDER_CUSTOM_PATH,\n              BUILDER_PATH_DEPRECATED,\n              ...widgetSegmentRoutes.map((route) => `${path}${route}`),\n            ]}\n          />\n        </Switch>\n      </Flex>\n    </Flex>\n  );\n};\n\nexport default EditorPaneSegments;\n","import UIEntitySidebar from \"pages/Editor/widgetSidebar/UIEntitySidebar\";\nimport React, { useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport { Button, Flex, Icon, Text } from \"design-system\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getCurrentPageId } from \"selectors/editorSelectors\";\nimport history from \"utils/history\";\nimport { queryAddURL } from \"@appsmith/RouteBuilder\";\nimport { createNewJSCollection } from \"actions/jsPaneActions\";\nimport PaneHeader from \"../LeftPane/PaneHeader\";\n\nconst CTABox = styled.div`\n  height: 62px;\n  width: 100%;\n  padding: var(--ads-v2-spaces-3);\n  border-radius: 4px;\n  gap: var(--ads-v2-spaces-3);\n  border: 1px solid var(--ads-v2-color-border);\n  display: flex;\n  align-items: flex-start;\n  flex-direction: column;\n  cursor: pointer;\n  &:hover {\n    background-color: var(--ads-v2-color-bg-subtle);\n  }\n`;\n\nconst CTAIcon = styled.div<{ bgColor: string; color: string }>`\n  .ads-v2-icon {\n    padding: var(--ads-v2-spaces-2);\n    background-color: ${(props) => props.bgColor};\n    border-radius: var(--ads-v2-spaces-1);\n  }\n  svg {\n    & path {\n      fill: ${(props) => props.color};\n    }\n  }\n`;\n\nconst CreateCTA = (props: {\n  title: string;\n  icon: {\n    name: string;\n    bgColor: string;\n    color: string;\n  };\n  onClick: () => void;\n}) => {\n  return (\n    <CTABox onClick={props.onClick}>\n      <CTAIcon bgColor={props.icon.bgColor} color={props.icon.color}>\n        <Icon name={props.icon.name} size=\"md\" />\n      </CTAIcon>\n      <Text kind=\"body-s\">{props.title}</Text>\n    </CTABox>\n  );\n};\n\nconst GlobalAdd = () => {\n  const pageId = useSelector(getCurrentPageId);\n  const dispatch = useDispatch();\n  const onCreateNewQuery = useCallback(() => {\n    history.push(queryAddURL({ pageId }));\n  }, [pageId]);\n  const onCreateJS = useCallback(() => {\n    dispatch(createNewJSCollection(pageId, \"ADD_PANE\"));\n  }, [pageId]);\n  return (\n    <Flex flexDirection={\"column\"}>\n      <PaneHeader\n        rightIcon={\n          <Button\n            className={\"t--close-add-editor-button\"}\n            isIconButton\n            kind=\"tertiary\"\n            onClick={() => history.goBack()}\n            size=\"sm\"\n            startIcon={\"close-line\"}\n          />\n        }\n        title=\"Add\"\n      />\n      <Flex\n        borderBottom={\"1px solid var(--ads-v2-color-border)\"}\n        flexDirection={\"column\"}\n        gap={\"spaces-3\"}\n        padding={\"spaces-3\"}\n      >\n        <Text kind=\"heading-xs\">Create new..</Text>\n        <Flex gap={\"spaces-3\"} justifyContent={\"flex-start\"}>\n          <CreateCTA\n            icon={{\n              name: \"queries-line\",\n              bgColor: \"#DBEAFE\",\n              color: \"#2D6BF4\",\n            }}\n            onClick={onCreateNewQuery}\n            title={\"Query/API\"}\n          />\n          <CreateCTA\n            icon={{\n              name: \"braces-line\",\n              bgColor: \"#FEF3C7\",\n              color: \"#B47A01\",\n            }}\n            onClick={onCreateJS}\n            title={\"JS Object\"}\n          />\n        </Flex>\n      </Flex>\n      <Flex\n        display={\"flex\"}\n        flexDirection={\"column\"}\n        height={\"calc(100vh - 340px)\"}\n      >\n        <Flex padding=\"spaces-3\">\n          <Text kind=\"heading-xs\">Drag & drop widgets</Text>\n        </Flex>\n        <UIEntitySidebar isActive />\n      </Flex>\n    </Flex>\n  );\n};\n\nexport default GlobalAdd;\n","import { Colors } from \"constants/Colors\";\nimport { css } from \"styled-components\";\n\nexport const LIGHT = css`\n  code[class*=\"language-\"],\n  pre[class*=\"language-\"] {\n    color: black;\n    background: none;\n    text-shadow: 0 1px white;\n    font-family: ${(props) => props.theme.fonts.code};\n    font-size: 1em;\n    text-align: left;\n    white-space: pre;\n    word-spacing: normal;\n    word-break: break-word;\n    word-wrap: normal;\n    line-height: 1.5;\n\n    -moz-tab-size: 4;\n    -o-tab-size: 4;\n    tab-size: 4;\n\n    -webkit-hyphens: none;\n    -moz-hyphens: none;\n    -ms-hyphens: none;\n    hyphens: none;\n  }\n\n  pre[class*=\"language-\"]::-moz-selection,\n  pre[class*=\"language-\"] ::-moz-selection,\n  code[class*=\"language-\"]::-moz-selection,\n  code[class*=\"language-\"] ::-moz-selection {\n    text-shadow: none;\n    background: #b3d4fc;\n  }\n\n  pre[class*=\"language-\"]::selection,\n  pre[class*=\"language-\"] ::selection,\n  code[class*=\"language-\"]::selection,\n  code[class*=\"language-\"] ::selection {\n    text-shadow: none;\n    background: #b3d4fc;\n  }\n\n  @media print {\n    code[class*=\"language-\"],\n    pre[class*=\"language-\"] {\n      text-shadow: none;\n    }\n  }\n\n  /* Code blocks */\n  pre[class*=\"language-\"] {\n    padding: 1em;\n    margin: 0.5em 0;\n    overflow: auto;\n  }\n\n  :not(pre) > code[class*=\"language-\"],\n  pre[class*=\"language-\"] {\n    background: #f5f2f0;\n  }\n\n  /* Inline code */\n  :not(pre) > code[class*=\"language-\"] {\n    padding: 0.1em;\n    border-radius: 0.3em;\n    white-space: normal;\n  }\n\n  .token.comment,\n  .token.prolog,\n  .token.doctype,\n  .token.cdata {\n    color: slategray;\n  }\n\n  .token.punctuation {\n    color: var(--ads-v2-color-fg);\n  }\n\n  .token.namespace {\n    opacity: 0.7;\n  }\n\n  .token.property,\n  .token.tag,\n  .token.boolean,\n  .token.number,\n  .token.constant,\n  .token.symbol,\n  .token.deleted {\n    color: #905;\n  }\n\n  .token.selector,\n  .token.attr-name,\n  .token.string,\n  .token.char,\n  .token.builtin,\n  .token.inserted {\n    color: #690;\n  }\n\n  .token.operator,\n  .token.entity,\n  .token.url,\n  .language-css .token.string,\n  .style .token.string {\n    color: #9a6e3a;\n    background: hsla(0, 0%, 100%, 0.5);\n  }\n\n  .token.atrule,\n  .token.attr-value,\n  .token.keyword {\n    color: #07a;\n  }\n\n  .token.function,\n  .token.class-name {\n    color: #dd4a68;\n  }\n\n  .token.regex,\n  .token.important,\n  .token.variable {\n    color: #e90;\n  }\n\n  .token.important,\n  .token.bold {\n    font-weight: bold;\n  }\n  .token.italic {\n    font-style: italic;\n  }\n\n  .token.entity {\n    cursor: help;\n  }\n`;\nexport const DARK = css`\n  code[class*=\"language-\"],\n  pre[class*=\"language-\"] {\n    color: ${Colors.CHARCOAL};\n    background: none;\n    font-family: ${(props) => props.theme.fonts.code};\n    font-size: 1em;\n    text-align: left;\n    text-shadow: 0 -0.1em 0.2em black;\n    white-space: pre;\n    word-spacing: normal;\n    word-break: normal;\n    word-wrap: normal;\n    line-height: 1.5;\n\n    -moz-tab-size: 4;\n    -o-tab-size: 4;\n    tab-size: 4;\n\n    -webkit-hyphens: none;\n    -moz-hyphens: none;\n    -ms-hyphens: none;\n    hyphens: none;\n  }\n\n  pre[class*=\"language-\"],\n  :not(pre) > code[class*=\"language-\"] {\n    background: hsl(0, 0%, 8%); /* #141414 */\n  }\n\n  /* Code blocks */\n  pre[class*=\"language-\"] {\n    border-radius: 0.5em;\n    border: 0.3em solid hsl(0, 0%, 33%); /* #282A2B */\n    box-shadow: 1px 1px 0.5em black inset;\n    margin: 0.5em 0;\n    overflow: auto;\n    padding: 1em;\n  }\n\n  pre[class*=\"language-\"]::-moz-selection {\n    /* Firefox */\n    background: hsl(200, 4%, 16%); /* #282A2B */\n  }\n\n  pre[class*=\"language-\"]::selection {\n    /* Safari */\n    background: hsl(200, 4%, 16%); /* #282A2B */\n  }\n\n  /* Text Selection colour */\n  pre[class*=\"language-\"]::-moz-selection,\n  pre[class*=\"language-\"] ::-moz-selection,\n  code[class*=\"language-\"]::-moz-selection,\n  code[class*=\"language-\"] ::-moz-selection {\n    text-shadow: none;\n    background: hsla(0, 0%, 93%, 0.15); /* #EDEDED */\n  }\n\n  pre[class*=\"language-\"]::selection,\n  pre[class*=\"language-\"] ::selection,\n  code[class*=\"language-\"]::selection,\n  code[class*=\"language-\"] ::selection {\n    text-shadow: none;\n    background: hsla(0, 0%, 93%, 0.15); /* #EDEDED */\n  }\n\n  /* Inline code */\n  :not(pre) > code[class*=\"language-\"] {\n    border-radius: 0.3em;\n    border: 0.13em solid hsl(0, 0%, 33%); /* #545454 */\n    box-shadow: 1px 1px 0.3em -0.1em black inset;\n    padding: 0.15em 0.2em 0.05em;\n    white-space: normal;\n  }\n\n  .token.comment,\n  .token.prolog,\n  .token.doctype,\n  .token.cdata {\n    color: hsl(0, 0%, 47%); /* #777777 */\n  }\n\n  .token.punctuation {\n    opacity: 0.7;\n  }\n\n  .token.namespace {\n    opacity: 0.7;\n  }\n\n  .token.tag,\n  .token.boolean,\n  .token.number,\n  .token.deleted {\n    color: hsl(14, 58%, 55%); /* #CF6A4C */\n  }\n\n  .token.keyword,\n  .token.property,\n  .token.selector,\n  .token.constant,\n  .token.symbol,\n  .token.builtin {\n    color: rgb(3, 179, 101);\n  }\n\n  .token.attr-name,\n  .token.attr-value,\n  .token.string,\n  .token.char,\n  .token.operator,\n  .token.entity,\n  .token.url,\n  .language-css .token.string,\n  .style .token.string,\n  .token.variable,\n  .token.inserted {\n    color: hsl(76, 21%, 52%); /* #8F9D6A */\n  }\n\n  .token.atrule {\n    color: hsl(218, 22%, 55%); /* #7587A6 */\n  }\n\n  .token.regex,\n  .token.important {\n    color: hsl(42, 75%, 65%); /* #E9C062 */\n  }\n\n  .token.important,\n  .token.bold {\n    font-weight: bold;\n  }\n  .token.italic {\n    font-style: italic;\n  }\n\n  .token.entity {\n    cursor: help;\n  }\n\n  pre[data-line] {\n    padding: 1em 0 1em 3em;\n    position: relative;\n  }\n\n  /* Markup */\n  .language-markup .token.tag,\n  .language-markup .token.attr-name,\n  .language-markup .token.punctuation {\n    color: hsl(33, 33%, 52%); /* #AC885B */\n  }\n\n  /* Make the tokens sit above the line highlight so the colours don't look faded. */\n  .token {\n    position: relative;\n    z-index: 1;\n  }\n\n  .line-highlight {\n    background: hsla(0, 0%, 33%, 0.25); /* #545454 */\n    background: linear-gradient(\n      to right,\n      hsla(0, 0%, 33%, 0.1) 70%,\n      hsla(0, 0%, 33%, 0)\n    ); /* #545454 */\n    border-bottom: 1px dashed hsl(0, 0%, 33%); /* #545454 */\n    border-top: 1px dashed hsl(0, 0%, 33%); /* #545454 */\n    left: 0;\n    line-height: inherit;\n    margin-top: 0.75em; /* Same as .prism’s padding-top */\n    padding: inherit 0;\n    pointer-events: none;\n    position: absolute;\n    right: 0;\n    white-space: pre;\n    z-index: 0;\n  }\n\n  .line-highlight:before,\n  .line-highlight[data-end]:after {\n    background-color: hsl(215, 15%, 59%); /* #8794A6 */\n    border-radius: 999px;\n    box-shadow: 0 1px white;\n    color: hsl(24, 20%, 95%); /* #F5F2F0 */\n    content: attr(data-start);\n    font: bold 65%/1.5 sans-serif;\n    left: 0.6em;\n    min-width: 1em;\n    padding: 0 0.5em;\n    position: absolute;\n    text-align: center;\n    text-shadow: none;\n    top: 0.4em;\n    vertical-align: 0.3em;\n  }\n\n  .line-highlight[data-end]:after {\n    bottom: 0.4em;\n    content: attr(data-end);\n    top: auto;\n  }\n`;\nexport default { LIGHT, DARK };\n","import type { MutableRefObject, Ref } from \"react\";\nimport React, { useRef, useEffect, forwardRef } from \"react\";\nimport styled from \"styled-components\";\nimport Prism from \"prismjs\";\nimport themes from \"./themes\";\nimport { Skin } from \"constants/DefaultTheme\";\n\n// TODO(abhinav): This is rudimentary. Enhance it.\nPrism.languages[\"appsmith-binding\"] = {\n  punctuation: {\n    pattern: /^{{|}}$/,\n  },\n  property: {\n    pattern: /(\\.\\w+)/,\n  },\n};\n\nconst StyledCode = styled.div<{ skin: Skin }>`\n  ${(props) => (props.skin === Skin.DARK ? themes.DARK : themes.LIGHT)};\n  padding: 0 0px;\n\n  code.language-appsmith-binding {\n    color: ${(props) => props.theme.colors.bindingText};\n  }\n  .token.punctuation {\n    color: hsl(222, 70%, 77%);\n  }\n  .token.property {\n    color: hsl(30, 77%, 40%);\n  }\n`;\n\n/* When adding an entry please make sure to include it in the craco.common.config.js as well */\nexport enum SYNTAX_HIGHLIGHTING_SUPPORTED_LANGUAGES {\n  JAVASCRIPT = \"language-javascript\",\n  APPSMITH = \"language-appsmith-binding\", // Please note that we're using the CSS class name required by prismjs.\n}\n\ninterface HighlightedCodeProps {\n  codeText: string;\n  language?: SYNTAX_HIGHLIGHTING_SUPPORTED_LANGUAGES;\n  skin: Skin;\n  multiline?: boolean;\n  onClick?: () => void;\n  className?: string;\n}\n/* eslint-disable react/display-name */\nexport const HighlightedCode = forwardRef(\n  (props: HighlightedCodeProps, ref: Ref<HTMLDivElement>) => {\n    const codeRef: MutableRefObject<HTMLElement | null> = useRef(null);\n\n    // Highlight when component renders with new props.\n    // Skin is irrelevant here, as it only uses css.\n    // Skinning is handled in StyledCode component.\n    useEffect(() => {\n      if (codeRef.current) {\n        // When this is run, the code text is tokenized\n        // into HTML on which the theme CSS is applied\n        Prism.highlightElement(codeRef.current);\n      }\n    }, [props.codeText, props.language, codeRef]);\n\n    // Set the default language to javascript if not provided.\n    const language =\n      props.language || SYNTAX_HIGHLIGHTING_SUPPORTED_LANGUAGES.JAVASCRIPT;\n\n    return (\n      <StyledCode\n        className={props.className}\n        onClick={props.onClick}\n        ref={ref}\n        skin={props.skin}\n      >\n        {!props.multiline && (\n          <code className={language} ref={codeRef}>\n            {props.codeText}\n          </code>\n        )}\n      </StyledCode>\n    );\n  },\n);\n\nexport default HighlightedCode;\n","import type { MutableRefObject } from \"react\";\nimport React, { memo, useCallback, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport HighlightedCode, {\n  SYNTAX_HIGHLIGHTING_SUPPORTED_LANGUAGES,\n} from \"components/editorComponents/HighlightedCode\";\nimport { Collapse } from \"@blueprintjs/core\";\nimport { CurrentValueViewer } from \"components/editorComponents/CodeEditor/EvaluatedValuePopup\";\nimport { EditorTheme } from \"components/editorComponents/CodeEditor/EditorConfig\";\nimport useClipboard from \"utils/hooks/useClipboard\";\nimport { Skin } from \"constants/DefaultTheme\";\nimport { EntityClassNames } from \".\";\nimport { Tooltip, Icon } from \"design-system\";\nimport { COPY_ELEMENT, createMessage } from \"@appsmith/constants/messages\";\nimport CollapseToggle from \"./CollapseToggle\";\nimport AnalyticsUtil from \"@appsmith/utils/AnalyticsUtil\";\nimport type { EntityProperty as EntityPropertyType } from \"@appsmith/pages/Editor/Explorer/Entity/getEntityProperties\";\n\nconst Wrapper = styled.div`\n  &&&& {\n    padding: ${(props) => props.theme.spaces[0]}px;\n\n    position: relative;\n    code {\n      border: none;\n      box-shadow: none;\n      padding: 5px 0em;\n      background: none;\n    }\n    & div.clipboard-message {\n      position: absolute;\n      left: 0;\n      height: 100%;\n      top: 0;\n      width: 100%;\n      font-size: 12px;\n      /* color: white; */\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      text-align: center;\n      z-index: 2;\n      border-radius: var(--ads-v2-border-radius);\n      &.success {\n        background: var(--ads-v2-color-bg-success);\n      }\n      &.error {\n        background: var(--ads-v2-color-bg-error);\n      }\n    }\n\n    & {\n      code.${SYNTAX_HIGHLIGHTING_SUPPORTED_LANGUAGES.APPSMITH} {\n        display: flex;\n        white-space: nowrap;\n        background: transparent;\n        font-size: 11px;\n        overflow-wrap: break-word;\n        text-shadow: none;\n        padding-left: ${(props) => props.theme.spaces[3]}px;\n        padding-right: 20px;\n        & span.token.property {\n          overflow: hidden;\n          white-space: nowrap;\n          text-overflow: ellipsis;\n        }\n      }\n    }\n\n    .type-text {\n      font-size: 12px;\n    }\n  }\n`;\n\nconst CopyBox = styled.div`\n  cursor: pointer;\n  position: relative;\n  padding: 0 8px;\n  .copy-icon {\n    /* margin-right: 5px; */\n    opacity: 0;\n  }\n  &:hover {\n    &:before {\n      content: \"\";\n      background: var(--ads-v2-color-bg-subtle);\n      opacity: 1;\n      position: absolute;\n      left: 0;\n      height: 100%;\n      top: 0;\n      width: 100%;\n      z-index: -1;\n      border-radius: var(--ads-v2-border-radius);\n    }\n    .copy-icon {\n      opacity: 1;\n    }\n  }\n`;\n\nconst StyledHighlightedCode = styled(HighlightedCode)`\n  padding-top: 4px;\n  padding-bottom: 4px;\n`;\n\nexport interface EntityPropertyProps extends EntityPropertyType {\n  index: number;\n}\n\nexport const EntityProperty = memo((props: EntityPropertyProps) => {\n  const propertyRef: MutableRefObject<HTMLDivElement | null> = useRef(null);\n  const write = useClipboard(propertyRef);\n\n  const [isOpen, setIsOpen] = React.useState(props.index === 0);\n\n  const codeText = `{{${props.entityName}.${props.propertyName}}}`;\n\n  const isString = typeof props.value === \"string\";\n\n  const copyBindingToClipboard = () => {\n    AnalyticsUtil.logEvent(\"BINDING_COPIED\", {\n      entityType: props.entityType,\n      codeText,\n    });\n    write(codeText);\n  };\n\n  const toggleChildren = useCallback(\n    (e) => {\n      e.stopPropagation();\n      setIsOpen(!isOpen);\n    },\n    [isOpen],\n  );\n\n  return (\n    <Wrapper className={`${EntityClassNames.PROPERTY}`}>\n      <CopyBox>\n        <div className=\"flex flex-grow items-center\">\n          <CollapseToggle\n            className={`${EntityClassNames.COLLAPSE_TOGGLE}`}\n            disabled={false}\n            isOpen={isOpen}\n            isVisible\n            onClick={toggleChildren}\n          />\n          <StyledHighlightedCode\n            className=\"binding flex-1\"\n            codeText={codeText}\n            language={SYNTAX_HIGHLIGHTING_SUPPORTED_LANGUAGES.APPSMITH}\n            onClick={copyBindingToClipboard}\n            ref={propertyRef}\n            skin={Skin.LIGHT}\n          />\n          <Tooltip content={createMessage(COPY_ELEMENT)} placement=\"right\">\n            <Icon\n              className=\"copy-icon\"\n              name=\"duplicate\"\n              onClick={copyBindingToClipboard}\n              size=\"md\"\n            />\n          </Tooltip>\n        </div>\n      </CopyBox>\n      <Collapse className=\"px-4\" isOpen={isOpen}>\n        {isString ? (\n          <span className=\"type-text\">{props.value}</span>\n        ) : (\n          <CurrentValueViewer\n            evaluatedValue={props.value}\n            hideLabel\n            theme={EditorTheme.LIGHT}\n          />\n        )}\n      </Collapse>\n    </Wrapper>\n  );\n});\n\nexport default EntityProperty;\n","import {\n  ENTITY_TYPE,\n  type JSActionEntity,\n} from \"@appsmith/entities/DataTree/types\";\nimport WidgetFactory from \"WidgetProvider/factory\";\nimport type {\n  DataTreeEntityObject,\n  JSActionEntityConfig,\n  WidgetEntity,\n} from \"@appsmith/entities/DataTree/types\";\nimport { isFunction } from \"lodash\";\nimport { entityDefinitions } from \"@appsmith/utils/autocomplete/EntityDefinitions\";\nimport ConfigTreeActions from \"utils/configTree\";\nimport store from \"store\";\nimport type { JSCollectionData } from \"@appsmith/reducers/entityReducers/jsActionsReducer\";\n\nexport interface EntityProperty {\n  propertyName: string;\n  entityName: string;\n  value: unknown;\n  entityType: string;\n}\n\nexport const getPropsForJSActionEntity = (\n  jsActionEntity: JSActionEntity,\n  entityName: string,\n) => {\n  const properties: Record<string, unknown> = {};\n\n  const configTree = ConfigTreeActions.getConfigTree();\n  const jsActionEntityConfig = configTree[entityName] as\n    | JSActionEntityConfig\n    | undefined;\n\n  const variableNames = jsActionEntityConfig?.variables;\n  if (variableNames && variableNames.length > 0) {\n    for (let i = 0; i < variableNames.length; i++) {\n      const variableName = variableNames[i];\n      properties[variableName] = jsActionEntity[variableName];\n    }\n  }\n\n  const jsActions = store.getState().entities.jsActions as JSCollectionData[];\n  const jsCollection = jsActions.find((js) => js.config.name === entityName);\n\n  const actions = jsCollection?.config.actions;\n  if (actions && actions.length > 0)\n    for (let i = 0; i < jsCollection.config.actions.length; i++) {\n      const action = jsCollection.config.actions[i];\n      properties[action.name + \"()\"] = \"Function\";\n      properties[action.name + \".data\"] = jsCollection?.data?.[action.id];\n    }\n\n  return properties;\n};\n\nconst getJSActionBindings = (\n  entity: DataTreeEntityObject,\n  entityProperties: EntityProperty[],\n  entityType: string,\n  entityName: string,\n) => {\n  const jsCollection = entity as JSActionEntity;\n  const properties = getPropsForJSActionEntity(jsCollection, entityName);\n  if (properties) {\n    entityProperties = Object.keys(properties).map((actionProperty: string) => {\n      const value = properties[actionProperty];\n      return {\n        propertyName: actionProperty,\n        entityName: entityName,\n        value: value,\n        entityType,\n      };\n    });\n  }\n  return entityProperties;\n};\n\nenum ActionEntityPublicProperties {\n  run = \"run\",\n  clear = \"clear\",\n  isLoading = \"isLoading\",\n  data = \"data\",\n}\n\nconst getActionBindings = (\n  entity: any,\n  entityProperties: EntityProperty[],\n  entityType: string,\n  entityName: string,\n) => {\n  const config = (entityDefinitions.ACTION as any)(entity as any);\n\n  entityProperties = Object.keys(config || {})\n    .filter((k) => k.indexOf(\"!\") === -1)\n    .map((actionProperty) => {\n      let value = entity[actionProperty];\n      if (\n        actionProperty === ActionEntityPublicProperties.run ||\n        actionProperty === ActionEntityPublicProperties.clear\n      ) {\n        value = \"Function\";\n        actionProperty = actionProperty + \"()\";\n      }\n      return {\n        propertyName: actionProperty,\n        entityName: entityName,\n        value,\n        entityType,\n      };\n    });\n\n  return entityProperties;\n};\n\nfunction getWidgetBindings(\n  entity: DataTreeEntityObject,\n  entityProperties: EntityProperty[],\n  entityType: string,\n) {\n  const widgetEntity = entity as WidgetEntity;\n  const type = widgetEntity.type;\n  let config = WidgetFactory.getAutocompleteDefinitions(type);\n  if (!config) return entityProperties;\n\n  if (isFunction(config)) config = config(widgetEntity);\n  const settersConfig = WidgetFactory.getWidgetSetterConfig(type)?.__setters;\n\n  entityProperties = Object.keys(config)\n    .filter((k) => k.indexOf(\"!\") === -1)\n    .filter((k) => settersConfig && !settersConfig[k])\n    .map((widgetProperty) => {\n      return {\n        propertyName: widgetProperty,\n        entityName: widgetEntity.widgetName,\n        value: widgetEntity[widgetProperty],\n        entityType,\n      };\n    });\n  return entityProperties;\n}\n\nexport function getEntityProperties({\n  entity,\n  entityName,\n  entityType,\n}: {\n  entityType: string;\n  entity: DataTreeEntityObject;\n  entityName: string;\n}) {\n  let entityProperties: EntityProperty[] = [];\n  if (entityType in getEntityPropertiesMap) {\n    entityProperties = getEntityPropertiesMap[entityType](\n      entity,\n      entityProperties,\n      entityType,\n      entityName,\n    );\n  }\n  return entityProperties;\n}\n\nexport const getEntityPropertiesMap: Record<\n  string,\n  (\n    entity: DataTreeEntityObject,\n    entityProperties: any,\n    entityType: string,\n    entityName: string,\n  ) => EntityProperty[]\n> = {\n  [ENTITY_TYPE.JSACTION]: getJSActionBindings,\n  [ENTITY_TYPE.ACTION]: getActionBindings,\n  [ENTITY_TYPE.WIDGET]: getWidgetBindings,\n};\n","import React, { useCallback, useEffect } from \"react\";\nimport EntityProperty from \"./EntityProperty\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport PerformanceTracker, {\n  PerformanceTransactionName,\n} from \"utils/PerformanceTracker\";\nimport * as Sentry from \"@sentry/react\";\nimport type { AppState } from \"@appsmith/reducers\";\nimport classNames from \"classnames\";\nimport styled from \"styled-components\";\nimport { ReduxActionTypes } from \"@appsmith/constants/ReduxActionConstants\";\nimport AnalyticsUtil from \"@appsmith/utils/AnalyticsUtil\";\nimport { EntityClassNames } from \".\";\nimport { Button } from \"design-system\";\nimport { getEntityProperties } from \"@appsmith/pages/Editor/Explorer/Entity/getEntityProperties\";\nimport store from \"store\";\nimport { ENTITY_TYPE } from \"entities/DataTree/dataTreeFactory\";\n\nconst BindingContainerMaxHeight = 300;\nconst EntityHeight = 36;\nconst BottomBarHeight = 34;\n\nconst EntityInfoContainer = styled.div`\n  min-width: 220px;\n  max-width: 400px;\n  max-height: ${BindingContainerMaxHeight}px;\n  overflow-y: hidden;\n  border-radius: var(--ads-v2-border-radius);\n  border: 1px solid var(--ads-v2-color-border-muted);\n  box-shadow: var(--ads-v2-shadow-popovers);\n`;\n\nconst selectEntityInfo = (state: AppState) => state.ui.explorer.entityInfo;\n\nexport function EntityProperties() {\n  const ref = React.createRef<HTMLDivElement>();\n  const dispatch = useDispatch();\n  const { entityId, entityName, entityType, show } =\n    useSelector(selectEntityInfo);\n  const entity = useSelector(\n    (state) => entityName && state.evaluations.tree[entityName],\n  );\n\n  const selectedWidgetId = useSelector(\n    (state: AppState) => state.ui.widgetDragResize.lastSelectedWidget,\n  );\n\n  PerformanceTracker.startTracking(\n    PerformanceTransactionName.ENTITY_EXPLORER_ENTITY,\n  );\n  useEffect(() => {\n    PerformanceTracker.stopTracking(\n      PerformanceTransactionName.ENTITY_EXPLORER_ENTITY,\n    );\n  });\n\n  useEffect(() => {\n    document.addEventListener(\"click\", handleOutsideClick);\n    return () => document.removeEventListener(\"click\", handleOutsideClick);\n  }, [show]);\n\n  useEffect(() => {\n    if (entityId) {\n      AnalyticsUtil.logEvent(\"SHOW_BINDINGS_TRIGGERED\", {\n        entityName,\n        entityType,\n      });\n    }\n  }, [entityId]);\n\n  useEffect(() => {\n    if (selectedWidgetId && show) {\n      const canvasWidgets = store.getState().entities.canvasWidgets;\n      const selectedWidget = canvasWidgets[selectedWidgetId];\n      if (selectedWidget)\n        dispatch({\n          type: ReduxActionTypes.SET_ENTITY_INFO,\n          payload: {\n            show: true,\n            entityId: selectedWidgetId,\n            entityType: ENTITY_TYPE.WIDGET,\n            entityName: selectedWidget.widgetName,\n          },\n        });\n      else\n        dispatch({\n          type: ReduxActionTypes.SET_ENTITY_INFO,\n          payload: { show: false },\n        });\n    }\n  }, [selectedWidgetId]);\n\n  const closeContainer = useCallback((e) => {\n    e.stopPropagation();\n    dispatch({\n      type: ReduxActionTypes.SET_ENTITY_INFO,\n      payload: { show: false },\n    });\n  }, []);\n\n  const handleOutsideClick = (e: MouseEvent) => {\n    e.stopPropagation();\n    const entityPropertiesContainer = document.getElementById(\n      \"entity-properties-container\",\n    ) as HTMLElement;\n    const paths = e.composedPath();\n    if (!paths?.includes(entityPropertiesContainer)) closeContainer(e);\n  };\n\n  useEffect(() => {\n    const element = document.getElementById(`entity-${entityId}`);\n    const rect = element?.getBoundingClientRect();\n    if (ref.current && rect) {\n      const top = rect?.top;\n      let bottom;\n      if (\n        top + BindingContainerMaxHeight >\n        window.innerHeight - BottomBarHeight\n      ) {\n        bottom = window.innerHeight - rect?.bottom - EntityHeight;\n      }\n      if (bottom) {\n        ref.current.style.bottom = bottom + \"px\";\n        ref.current.style.top = \"unset\";\n      } else {\n        ref.current.style.top = top - EntityHeight + \"px\";\n        ref.current.style.bottom = \"unset\";\n      }\n      ref.current.style.left = \"100%\";\n    }\n  }, [entityId]);\n\n  if (!entity || !entityName || !entityType) return null;\n\n  const entityProperties = getEntityProperties({\n    entity,\n    entityName,\n    entityType,\n  });\n\n  return (\n    <EntityInfoContainer\n      className={classNames({\n        \"absolute bp3-popover overflow-y-auto overflow-x-hidden bg-white pb-2 flex flex-col justify-center z-10 delay-150 transition-all\":\n          true,\n        [EntityClassNames.CONTEXT_MENU_CONTENT]: true,\n        \"-left-100\": !show,\n      })}\n      id=\"entity-properties-container\"\n      ref={ref}\n    >\n      <div className=\"h-auto overflow-y-auto overflow-x-hidden relative\">\n        <div className=\"sticky top-0 text-sm px-3 z-5 pt-2 pb-1 font-medium flex flex-row items-center justify-between w-[100%] bg-white\">\n          Bindings\n          <Button\n            className=\"t--entity-property-close\"\n            isIconButton\n            kind=\"tertiary\"\n            onClick={closeContainer}\n            size=\"sm\"\n            startIcon=\"close-control\"\n          />\n        </div>\n        {entityProperties.map((entityProperty, index) => (\n          <EntityProperty\n            key={entityProperty.propertyName}\n            {...entityProperty}\n            index={index}\n          />\n        ))}\n      </div>\n    </EntityInfoContainer>\n  );\n}\n\nexport default Sentry.withProfiler(EntityProperties);\n","import React from \"react\";\nimport { Flex } from \"design-system\";\nimport type { RouteComponentProps } from \"react-router\";\nimport { Switch } from \"react-router\";\n\nimport { SentryRoute } from \"@appsmith/AppRouter\";\nimport { ADD_PATH } from \"constants/routes\";\nimport EditorPaneSegments from \"./EditorPaneSegments\";\nimport GlobalAdd from \"./GlobalAdd\";\nimport { useEditorPaneWidth } from \"../hooks\";\nimport EntityProperties from \"pages/Editor/Explorer/Entity/EntityProperties\";\n\nconst EditorPane = ({ match: { path } }: RouteComponentProps) => {\n  const width = useEditorPaneWidth();\n\n  return (\n    <Flex\n      className=\"ide-editor-left-pane\"\n      flexDirection=\"column\"\n      gap=\"spacing-2\"\n      height=\"100%\"\n      overflow=\"hidden\"\n      width={width}\n    >\n      {/** Entity Properties component is needed to render\n        the Bindings popover in the context menu. Will be removed eventually **/}\n      <EntityProperties />\n\n      <Switch>\n        <SentryRoute component={GlobalAdd} exact path={`${path}${ADD_PATH}`} />\n        <SentryRoute component={EditorPaneSegments} />\n      </Switch>\n    </Flex>\n  );\n};\n\nexport default EditorPane;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Switch, useRouteMatch } from \"react-router\";\nimport { SentryRoute } from \"@appsmith/AppRouter\";\nimport {\n  APP_LIBRARIES_EDITOR_PATH,\n  APP_SETTINGS_EDITOR_PATH,\n  DATA_SOURCES_EDITOR_ID_PATH,\n  DATA_SOURCES_EDITOR_LIST_PATH,\n  INTEGRATION_EDITOR_PATH,\n  SAAS_GSHEET_EDITOR_ID_PATH,\n} from \"constants/routes\";\nimport AppSettingsPane from \"./AppSettings\";\nimport DataSidePane from \"./DataSidePane\";\nimport LibrarySidePane from \"./LibrarySidePane\";\nimport EditorPane from \"../EditorPane\";\n\nexport const LeftPaneContainer = styled.div<{ showRightBorder?: boolean }>`\n  height: 100%;\n  border-right: ${({ showRightBorder = true }) =>\n    showRightBorder ? \"1px solid var(--ads-v2-color-border)\" : \"none\"};\n  background: var(--ads-v2-color-bg);\n`;\n\nconst LeftPane = () => {\n  const { path } = useRouteMatch();\n  return (\n    <LeftPaneContainer>\n      <Switch>\n        <SentryRoute\n          component={DataSidePane}\n          exact\n          path={[\n            `${path}${DATA_SOURCES_EDITOR_LIST_PATH}`,\n            `${path}${DATA_SOURCES_EDITOR_ID_PATH}`,\n            `${path}${INTEGRATION_EDITOR_PATH}`,\n            `${path}${SAAS_GSHEET_EDITOR_ID_PATH}`,\n          ]}\n        />\n        <SentryRoute\n          component={LibrarySidePane}\n          exact\n          path={`${path}${APP_LIBRARIES_EDITOR_PATH}`}\n        />\n        <SentryRoute\n          component={AppSettingsPane}\n          exact\n          path={`${path}${APP_SETTINGS_EDITOR_PATH}`}\n        />\n        <SentryRoute component={EditorPane} />\n      </Switch>\n    </LeftPaneContainer>\n  );\n};\n\nexport default LeftPane;\n","import EditorContextProvider from \"components/editorComponents/EditorContextProvider\";\nimport type { ReactNode } from \"react\";\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport { useCurrentAppState } from \"pages/Editor/IDE/hooks\";\nimport { useSelector } from \"react-redux\";\nimport { getIsAppSettingsPaneWithNavigationTabOpen } from \"selectors/appSettingsPaneSelectors\";\nimport { EditorState } from \"@appsmith/entities/IDE/constants\";\nimport { RenderModes } from \"constants/WidgetConstants\";\n\n/**\n * WidgetEditorContainer\n * This component is used to provide proper layout for the widget editor components like header, content, and footer.\n */\nexport const WidgetEditorContainer = (props: { children: ReactNode }) => {\n  const isNavigationSelectedInSettings = useSelector(\n    getIsAppSettingsPaneWithNavigationTabOpen,\n  );\n  const appState = useCurrentAppState();\n  const isAppSettingsPaneWithNavigationTabOpen =\n    appState === EditorState.SETTINGS && isNavigationSelectedInSettings;\n  return (\n    <EditorContextProvider renderMode={RenderModes.CANVAS}>\n      <div className=\"relative flex flex-row h-full w-full overflow-hidden\">\n        <div\n          className={classNames({\n            \"relative flex flex-col w-full overflow-hidden\": true,\n            \"m-8 border border-gray-200\":\n              isAppSettingsPaneWithNavigationTabOpen,\n          })}\n        >\n          {props.children}\n        </div>\n      </div>\n    </EditorContextProvider>\n  );\n};\n","function useMissingModuleNotification(): React.ReactNode | null {\n  return null;\n}\n\nexport default useMissingModuleNotification;\n","export * from \"ce/pages/Editor/IDE/MainPane/useMissingModuleNotification\";\nimport { default as CE_useMissingModuleNotification } from \"ce/pages/Editor/IDE/MainPane/useMissingModuleNotification\";\nexport default CE_useMissingModuleNotification;\n","import React, { useEffect } from \"react\";\nimport { Callout } from \"design-system\";\nimport {\n  ADMIN_SETTINGS,\n  LEARN_MORE,\n  ONBOARDING_TELEMETRY_POPUP,\n  createMessage,\n} from \"@appsmith/constants/messages\";\nimport { ADMIN_SETTINGS_CATEGORY_DEFAULT_PATH } from \"constants/routes\";\nimport {\n  ANONYMOUS_DATA_POPOP_TIMEOUT,\n  TELEMETRY_DOCS_PAGE_URL,\n} from \"./constants\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getCurrentUser } from \"selectors/usersSelectors\";\nimport {\n  getFirstTimeUserOnboardingComplete,\n  getIsAnonymousDataPopupVisible,\n  getIsFirstTimeUserOnboardingEnabled,\n} from \"selectors/onboardingSelectors\";\nimport {\n  getFirstTimeUserOnboardingTelemetryCalloutIsAlreadyShown,\n  setFirstTimeUserOnboardingTelemetryCalloutVisibility,\n} from \"utils/storage\";\nimport { isAirgapped } from \"@appsmith/utils/airgapHelpers\";\nimport { deleteCanvasCardsState } from \"actions/editorActions\";\nimport styled from \"styled-components\";\nimport { showAnonymousDataPopup } from \"actions/onboardingActions\";\nimport AnalyticsUtil from \"@appsmith/utils/AnalyticsUtil\";\n\nconst Wrapper = styled.div`\n  margin: ${(props) =>\n    `${props.theme.spaces[7]}px ${props.theme.spaces[16]}px 0px ${props.theme.spaces[13]}px`};\n`;\n\nexport default function AnonymousDataPopup() {\n  const user = useSelector(getCurrentUser);\n  const isAdmin = user?.isSuperUser || false;\n  const isOnboardingCompleted = useSelector(getFirstTimeUserOnboardingComplete);\n  const isAnonymousDataPopupVisible = useSelector(\n    getIsAnonymousDataPopupVisible,\n  );\n  const isFirstTimeUserOnboardingEnabled = useSelector(\n    getIsFirstTimeUserOnboardingEnabled,\n  );\n  const dispatch = useDispatch();\n\n  const hideAnonymousDataPopup = () => {\n    dispatch(showAnonymousDataPopup(false));\n    setFirstTimeUserOnboardingTelemetryCalloutVisibility(true);\n  };\n\n  useEffect(() => {\n    if (isAnonymousDataPopupVisible) {\n      AnalyticsUtil.logEvent(\"DISPLAY_TELEMETRY_CALLOUT\");\n    }\n  }, [isAnonymousDataPopupVisible]);\n\n  const handleLinkClick = (link: string) => {\n    if (link === ADMIN_SETTINGS_CATEGORY_DEFAULT_PATH) {\n      AnalyticsUtil.logEvent(\"VISIT_ADMIN_SETTINGS_TELEMETRY_CALLOUT\");\n    } else if (link === TELEMETRY_DOCS_PAGE_URL) {\n      AnalyticsUtil.logEvent(\"LEARN_MORE_TELEMETRY_CALLOUT\");\n    }\n    window.open(link, \"_blank\");\n  };\n\n  const showShowAnonymousDataPopup = async () => {\n    const shouldPopupShow =\n      !isAirgapped() &&\n      isFirstTimeUserOnboardingEnabled &&\n      isAdmin &&\n      !isOnboardingCompleted;\n    if (shouldPopupShow) {\n      const isAnonymousDataPopupAlreadyOpen =\n        await getFirstTimeUserOnboardingTelemetryCalloutIsAlreadyShown();\n      //true if the modal was already shown else show the modal and set to already shown, also hide the modal after 10 secs\n      if (isAnonymousDataPopupAlreadyOpen) {\n        dispatch(showAnonymousDataPopup(false));\n      } else {\n        dispatch(deleteCanvasCardsState());\n        dispatch(showAnonymousDataPopup(true));\n        setTimeout(() => {\n          hideAnonymousDataPopup();\n        }, ANONYMOUS_DATA_POPOP_TIMEOUT);\n        await setFirstTimeUserOnboardingTelemetryCalloutVisibility(true);\n      }\n    } else {\n      dispatch(showAnonymousDataPopup(shouldPopupShow));\n    }\n  };\n\n  useEffect(() => {\n    showShowAnonymousDataPopup();\n  }, []);\n\n  if (!isAnonymousDataPopupVisible) return null;\n\n  return (\n    <Wrapper className=\"z-[1] self-center\">\n      <Callout\n        isClosable\n        kind=\"info\"\n        links={[\n          {\n            children: createMessage(ADMIN_SETTINGS),\n            onClick: () =>\n              handleLinkClick(ADMIN_SETTINGS_CATEGORY_DEFAULT_PATH),\n          },\n          {\n            children: createMessage(LEARN_MORE),\n            onClick: () => handleLinkClick(TELEMETRY_DOCS_PAGE_URL),\n          },\n        ]}\n        onClose={hideAnonymousDataPopup}\n      >\n        {createMessage(ONBOARDING_TELEMETRY_POPUP)}\n      </Callout>\n    </Wrapper>\n  );\n}\n","import useMissingModuleNotification from \"@appsmith/pages/Editor/IDE/MainPane/useMissingModuleNotification\";\nimport AnonymousDataPopup from \"pages/Editor/FirstTimeUserOnboarding/AnonymousDataPopup\";\nimport React from \"react\";\n\n/**\n * WidgetEditorHeader\n * This component provides the header for the widget editor.\n * It includes the\n * - empty canvas prompts (for new users, and when there are no widgets)\n * - anonymous data popup\n * - missing module notification\n */\nexport const WidgetEditorHeader = () => {\n  const missingModuleNotification = useMissingModuleNotification();\n  return (\n    <>\n      {missingModuleNotification}\n      <AnonymousDataPopup />\n    </>\n  );\n};\n","import type { LegacyRef } from \"react\";\nimport React, { forwardRef } from \"react\";\nimport classNames from \"classnames\";\nimport { useSelector } from \"react-redux\";\nimport { combinedPreviewModeSelector } from \"selectors/editorSelectors\";\nimport { Navigation } from \"pages/AppViewer/Navigation\";\nimport { useCurrentAppState } from \"pages/Editor/IDE/hooks\";\nimport { EditorState } from \"@appsmith/entities/IDE/constants\";\nimport { getIsAppSettingsPaneWithNavigationTabOpen } from \"selectors/appSettingsPaneSelectors\";\n\n/**\n * NavigationPreview\n *\n * This component is used to provide a preview of the navigation in the widget editor.\n * It is shown when the user is in the preview mode or the app settings pane with the navigation tab open.\n */\nconst NavigationPreview = forwardRef(\n  (props: unknown, ref: LegacyRef<HTMLDivElement> | undefined) => {\n    const isNavigationSelectedInSettings = useSelector(\n      getIsAppSettingsPaneWithNavigationTabOpen,\n    );\n    const appState = useCurrentAppState();\n    const isAppSettingsPaneWithNavigationTabOpen =\n      appState === EditorState.SETTINGS && isNavigationSelectedInSettings;\n    const isPreviewMode = useSelector(combinedPreviewModeSelector);\n\n    return (\n      <div\n        className={classNames({\n          \"absolute top-0 z-3 w-full transform bg-gray-50 ease-in t--navigation-preview\":\n            true,\n          \"translate-y-0 ease-in transition duration-400\":\n            isPreviewMode || isAppSettingsPaneWithNavigationTabOpen,\n          \"-translate-y-full duration-0\":\n            !isPreviewMode || !isAppSettingsPaneWithNavigationTabOpen,\n          \"select-none pointer-events-none\":\n            isAppSettingsPaneWithNavigationTabOpen,\n        })}\n        ref={ref}\n      >\n        <Navigation />\n      </div>\n    );\n  },\n);\n\nexport default NavigationPreview;\n","import React, { forwardRef, useEffect, useRef, useState } from \"react\";\nimport NavigationPreview from \"./NavigationPreview\";\nimport { EditorState } from \"@appsmith/entities/IDE/constants\";\nimport { useCurrentAppState } from \"pages/Editor/IDE/hooks\";\nimport {\n  getAppSettingsPaneContext,\n  getIsAppSettingsPaneWithNavigationTabOpen,\n} from \"selectors/appSettingsPaneSelectors\";\nimport { useSelector } from \"react-redux\";\nimport {\n  combinedPreviewModeSelector,\n  getCurrentApplication,\n} from \"selectors/editorSelectors\";\n\n/**\n * useNavigationPreviewHeight\n * This hook is used to get the height of the navigation preview and the ref to the navigation preview\n *\n * @returns navigationPreviewRef: Ref to the navigation preview\n * @returns navigationHeight: Height of the navigation preview\n */\nexport const useNavigationPreviewHeight = () => {\n  const [navigationHeight, setNavigationHeight] = useState(0);\n  const navigationPreviewRef = useRef(null);\n  const isPreviewMode = useSelector(combinedPreviewModeSelector);\n  const appSettingsPaneContext = useSelector(getAppSettingsPaneContext);\n  const currentApplicationDetails = useSelector(getCurrentApplication);\n  useEffect(() => {\n    if (navigationPreviewRef?.current) {\n      const { offsetHeight } = navigationPreviewRef.current;\n\n      setNavigationHeight(offsetHeight);\n    } else {\n      setNavigationHeight(0);\n    }\n  }, [\n    navigationPreviewRef,\n    isPreviewMode,\n    appSettingsPaneContext?.type,\n    currentApplicationDetails?.applicationDetail?.navigationSetting,\n  ]);\n  return {\n    navigationPreviewRef,\n    navigationHeight,\n  };\n};\n\ntype DivRef = React.Ref<HTMLDivElement>;\n/**\n * WidgetEditorNavigation\n *\n * This component is used to render the navigation preview in the widget editor.\n * It is shown when the user is in preview mode or when the navigation tab is selected in the app settings pane.\n */\nexport const WidgetEditorNavigation = forwardRef(\n  (props, navigationPreviewRef: DivRef) => {\n    const isPreviewMode = useSelector(combinedPreviewModeSelector);\n    const isNavigationSelectedInSettings = useSelector(\n      getIsAppSettingsPaneWithNavigationTabOpen,\n    );\n    const appState = useCurrentAppState();\n    const isAppSettingsPaneWithNavigationTabOpen =\n      appState === EditorState.SETTINGS && isNavigationSelectedInSettings;\n    const isPreviewingNavigation =\n      isPreviewMode || isAppSettingsPaneWithNavigationTabOpen;\n\n    return isPreviewingNavigation ? (\n      <NavigationPreview ref={navigationPreviewRef} />\n    ) : null;\n  },\n);\n","import type { AppState } from \"@appsmith/reducers\";\nimport { createSelector } from \"reselect\";\nimport type {\n  CrudInfoModalReduxState,\n  GenerateCRUDSuccessInfoData,\n} from \"reducers/uiReducers/crudInfoModalReducer\";\n\nexport interface CrudInfoModalData {\n  crudInfoModalOpen: boolean;\n  generateCRUDSuccessInfo: GenerateCRUDSuccessInfoData | null;\n}\n\nconst getCrudInfoModalState = (state: AppState): CrudInfoModalReduxState =>\n  state.ui.crudInfoModal;\n\nexport const getCrudInfoModalData = createSelector(\n  getCrudInfoModalState,\n  (crudInfoModal) => {\n    return {\n      crudInfoModalOpen: crudInfoModal.crudInfoModalOpen,\n      generateCRUDSuccessInfo: crudInfoModal.generateCRUDSuccessInfo,\n    };\n  },\n);\n","import { ASSETS_CDN_URL } from \"./ThirdPartyConstants\";\nimport { getAssetUrl } from \"@appsmith/utils/airgapHelpers\";\n\nexport const getInfoThumbnail = () =>\n  getAssetUrl(`${ASSETS_CDN_URL}/crud/crud_info_thumbnail.png`);\nexport const getInfoImage = (): string =>\n  getAssetUrl(`${ASSETS_CDN_URL}/crud/working-flow-chart.png`);\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { connect, useDispatch } from \"react-redux\";\nimport type { AppState } from \"@appsmith/reducers\";\nimport AnalyticsUtil from \"@appsmith/utils/AnalyticsUtil\";\nimport {\n  Button,\n  Text,\n  Modal,\n  ModalContent,\n  ModalBody,\n  ModalFooter,\n} from \"design-system\";\nimport { getCrudInfoModalData } from \"selectors/crudInfoModalSelectors\";\nimport { setCrudInfoModalData } from \"actions/crudInfoModalActions\";\n\nimport type { GenerateCRUDSuccessInfoData } from \"reducers/uiReducers/crudInfoModalReducer\";\nimport {\n  GEN_CRUD_INFO_DIALOG_SUBTITLE,\n  GEN_CRUD_SUCCESS_MESSAGE,\n  createMessage,\n} from \"@appsmith/constants/messages\";\nimport { getInfoImage, getInfoThumbnail } from \"constants/ImagesURL\";\nimport {\n  ProgressiveImage,\n  Container as ProgressiveImageContainer,\n} from \"design-system-old\";\nimport SuccessTick from \"pages/common/SuccessTick\";\nimport { getAssetUrl } from \"@appsmith/utils/airgapHelpers\";\n\ninterface Props {\n  crudInfoModalOpen: boolean;\n  generateCRUDSuccessInfo: GenerateCRUDSuccessInfoData | null;\n}\n\nconst Content = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  max-height: 700px;\n  min-height: 400px;\n\n  .info-subtitle {\n    text-align: center;\n  }\n`;\n\nconst ImageWrapper = styled.div`\n  padding: 40px 0px 10px;\n  display: flex;\n  flex: 1;\n  justify-content: center;\n  & ${ProgressiveImageContainer} {\n    width: 100%;\n    height: 284px;\n    width: 526px;\n  }\n  .progressive-image--thumb,\n  progressive-image--full {\n    object-fit: contain;\n  }\n\n  .progressive-image--thumb {\n    filter: blur(20px);\n    opacity: 0.3;\n    transition: visibility 0ms ease 100ms;\n  }\n`;\n\nconst SuccessContentWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n`;\n\nconst InfoContentHeadingText = styled.span`\n  color: var(--ads-v2-color-fg);\n`;\nconst SuccessText = styled(Text)`\n  color: var(--ads-v2-color-fg-emphasis);\n`;\nconst STEP = {\n  SHOW_SUCCESS_GIF: \"show_success_gif\",\n  SHOW_INFO: \"show_info\",\n};\n\nconst DELAY_TIME = 3000;\n\nfunction InfoContent({\n  successImageUrl,\n  successMessage,\n}: {\n  successMessage: string;\n  successImageUrl: string;\n}) {\n  return (\n    <Content>\n      {/* TODO: Replace this with ADS text */}\n      <InfoContentHeadingText\n        className=\"info-subtitle\"\n        dangerouslySetInnerHTML={{\n          __html: successMessage,\n        }}\n      />\n      <ImageWrapper>\n        <ProgressiveImage\n          alt=\"template information\"\n          imageSource={getAssetUrl(successImageUrl)}\n          thumbnailSource={getInfoThumbnail()}\n        />\n      </ImageWrapper>\n    </Content>\n  );\n}\n\nfunction GenCRUDSuccessModal(props: Props) {\n  const { crudInfoModalOpen, generateCRUDSuccessInfo } = props;\n\n  const dispatch = useDispatch();\n  const [step, setStep] = useState(STEP.SHOW_SUCCESS_GIF);\n\n  const onClose = () => {\n    AnalyticsUtil.logEvent(\"CLOSE_GEN_PAGE_INFO_MODAL\");\n    dispatch(setCrudInfoModalData({ open: false }));\n  };\n\n  const successMessage =\n    (generateCRUDSuccessInfo && generateCRUDSuccessInfo.successMessage) ||\n    createMessage(GEN_CRUD_INFO_DIALOG_SUBTITLE);\n\n  const successImageUrl =\n    (generateCRUDSuccessInfo && generateCRUDSuccessInfo.successImageUrl) ||\n    getInfoImage();\n\n  useEffect(() => {\n    const timerId = setTimeout(() => {\n      setStep(STEP.SHOW_INFO);\n    }, DELAY_TIME);\n    return () => {\n      if (timerId) clearTimeout(timerId);\n    };\n  }, [setStep]);\n\n  return (\n    <Modal onOpenChange={onClose} open={crudInfoModalOpen}>\n      <ModalContent style={{ width: \"640px\" }}>\n        <ModalBody>\n          <Wrapper>\n            {step === STEP.SHOW_SUCCESS_GIF ? (\n              <SuccessContentWrapper>\n                <SuccessTick height=\"80px\" width=\"80px\" />\n                <SuccessText kind=\"heading-m\">\n                  {\" \"}\n                  {createMessage(GEN_CRUD_SUCCESS_MESSAGE)}\n                </SuccessText>\n              </SuccessContentWrapper>\n            ) : null}\n            {step === STEP.SHOW_INFO ? (\n              <InfoContent\n                successImageUrl={successImageUrl}\n                successMessage={successMessage}\n              />\n            ) : null}\n          </Wrapper>\n        </ModalBody>\n        <ModalFooter>\n          <Button kind=\"primary\" onClick={onClose} size={\"md\"}>\n            Got it\n          </Button>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  );\n}\n\nconst mapStateToProps = (state: AppState) => ({\n  crudInfoModalOpen: getCrudInfoModalData(state).crudInfoModalOpen,\n  generateCRUDSuccessInfo: getCrudInfoModalData(state).generateCRUDSuccessInfo,\n});\n\nexport default connect(mapStateToProps)(GenCRUDSuccessModal);\n","import React, { type ReactNode, useCallback, useMemo } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  combinedPreviewModeSelector,\n  getIsAutoLayout,\n} from \"selectors/editorSelectors\";\nimport { setCanvasSelectionFromEditor } from \"actions/canvasSelectionActions\";\nimport { useAllowEditorDragToSelect } from \"utils/hooks/useAllowEditorDragToSelect\";\nimport { useAutoHeightUIState } from \"utils/hooks/autoHeightUIHooks\";\nimport { getSelectedAppTheme } from \"selectors/appThemingSelectors\";\n\nexport const WidgetEditorContentWrapper = (props: { children: ReactNode }) => {\n  const allowDragToSelect = useAllowEditorDragToSelect();\n  const { isAutoHeightWithLimitsChanging } = useAutoHeightUIState();\n  const dispatch = useDispatch();\n  const isCombinedPreviewMode = useSelector(combinedPreviewModeSelector);\n\n  const handleWrapperClick = useCallback(\n    (e) => {\n      // This is a hack for widget name component clicks on Canvas.\n      // For some reason the stopPropagation in the konva event listener isn't working\n      // Also, the nodeName is available only for the konva event, so standard type definition\n      // for onClick handlers don't work. Hence leaving the event type as any.\n      const isCanvasWrapperClicked = e.target?.nodeName === \"CANVAS\";\n      // Making sure that we don't deselect the widget\n      // after we are done dragging the limits in auto height with limits\n      if (\n        allowDragToSelect &&\n        !isAutoHeightWithLimitsChanging &&\n        !isCanvasWrapperClicked\n      ) {\n        dispatch(setCanvasSelectionFromEditor(false));\n      }\n    },\n    [allowDragToSelect, isAutoHeightWithLimitsChanging],\n  );\n\n  /**\n   *  drag event handler for selection drawing\n   */\n  const onDragStart = useCallback(\n    (e: React.DragEvent<HTMLDivElement>) => {\n      e.preventDefault();\n      e.stopPropagation();\n      if (allowDragToSelect) {\n        const startPoints = {\n          x: e.clientX,\n          y: e.clientY,\n        };\n        dispatch(setCanvasSelectionFromEditor(true, startPoints));\n      }\n    },\n    [allowDragToSelect],\n  );\n  const selectedTheme = useSelector(getSelectedAppTheme);\n  const fontFamily = `${selectedTheme.properties.fontFamily.appFont}, sans-serif`;\n  const isAutoLayout = useSelector(getIsAutoLayout);\n  const wrapperStyle = useMemo(\n    () => ({\n      fontFamily,\n      contain: isAutoLayout ? \"content\" : \"strict\",\n    }),\n    [fontFamily, isAutoLayout],\n  );\n  return (\n    <div\n      className=\"relative flex flex-row h-full w-full overflow-hidden\"\n      data-testid=\"t--widgets-editor\"\n      draggable={!isCombinedPreviewMode}\n      id=\"widgets-editor\"\n      onClick={handleWrapperClick}\n      onDragStart={onDragStart}\n      style={wrapperStyle}\n    >\n      {props.children}\n    </div>\n  );\n};\n","import type { AppState } from \"@appsmith/reducers\";\nimport {\n  snipingModeSelector,\n  combinedPreviewModeSelector,\n} from \"selectors/editorSelectors\";\nimport { useSelector } from \"react-redux\";\nimport { getIsAppSettingsPaneWithNavigationTabOpen } from \"selectors/appSettingsPaneSelectors\";\nimport { getLayoutSystemType } from \"selectors/layoutSystemSelectors\";\nimport { LayoutSystemTypes } from \"layoutSystems/types\";\nimport { getWidgetSelectionBlock } from \"../../selectors/ui\";\n\nexport const useAllowEditorDragToSelect = () => {\n  // This state tells us whether a `ResizableComponent` is resizing\n  const isResizing = useSelector(\n    (state: AppState) => state.ui.widgetDragResize.isResizing,\n  );\n  const layoutSystemType = useSelector(getLayoutSystemType);\n\n  const isFixedLayout = layoutSystemType === LayoutSystemTypes.FIXED;\n\n  // This state tells us whether a `DraggableComponent` is dragging\n  const isDragging = useSelector(\n    (state: AppState) => state.ui.widgetDragResize.isDragging,\n  );\n\n  // This state tells us if it is already dragging for selection\n  const isSelecting = useSelector(\n    (state: AppState) => state.ui.canvasSelection.isDraggingForSelection,\n  );\n\n  const isAutoCanvasResizing = useSelector(\n    (state: AppState) => state.ui.widgetDragResize.isAutoCanvasResizing,\n  );\n\n  // This state tells us to disable dragging,\n  // This is usually true when widgets themselves implement drag/drop\n  // This flag resolves conflicting drag/drop triggers.\n  const isDraggingDisabled: boolean = useSelector(\n    (state: AppState) => state.ui.widgetDragResize.isDraggingDisabled,\n  );\n\n  // True when any widget is dragging or resizing, including this one\n  const isResizingOrDragging = !!isResizing || !!isDragging || !!isSelecting;\n  const isSnipingMode = useSelector(snipingModeSelector);\n  const isPreviewMode = useSelector(combinedPreviewModeSelector);\n  const isAppSettingsPaneWithNavigationTabOpen = useSelector(\n    getIsAppSettingsPaneWithNavigationTabOpen,\n  );\n\n  const isWidgetSelectionBlocked = useSelector(getWidgetSelectionBlock);\n\n  return (\n    isFixedLayout &&\n    !isAutoCanvasResizing &&\n    !isResizingOrDragging &&\n    !isDraggingDisabled &&\n    !isSnipingMode &&\n    !isPreviewMode &&\n    !isAppSettingsPaneWithNavigationTabOpen &&\n    !isWidgetSelectionBlocked\n  );\n};\n","import type { ReactNode } from \"react\";\nimport React from \"react\";\nimport { EditorState } from \"@appsmith/entities/IDE/constants\";\nimport { useCurrentAppState } from \"pages/Editor/IDE/hooks\";\nimport { getIsAppSettingsPaneWithNavigationTabOpen } from \"selectors/appSettingsPaneSelectors\";\nimport { useSelector } from \"react-redux\";\nimport {\n  combinedPreviewModeSelector,\n  getCurrentApplication,\n} from \"selectors/editorSelectors\";\nimport { PageViewWrapper } from \"pages/AppViewer/AppPage.styled\";\nimport classNames from \"classnames\";\nimport { APP_MODE } from \"entities/App\";\nimport { getAppMode } from \"@appsmith/selectors/entitiesSelector\";\nimport {\n  getAppSidebarPinned,\n  getSidebarWidth,\n} from \"@appsmith/selectors/applicationSelectors\";\nimport { useIsMobileDevice } from \"utils/hooks/useDeviceDetect\";\nimport { CANVAS_VIEWPORT } from \"constants/componentClassNameConstants\";\nimport { NAVIGATION_SETTINGS } from \"constants/AppConstants\";\nimport { getIsAnvilLayout } from \"layoutSystems/anvil/integrations/selectors\";\n\n/**\n * NavigationAdjustedPageViewer\n *\n * This component is used to provide proper layout for the layout system based editor in different modes like preview, published, and settings.\n */\nexport const NavigationAdjustedPageViewer = (props: {\n  children: ReactNode;\n}) => {\n  const isPreview = useSelector(combinedPreviewModeSelector);\n  const currentApplicationDetails = useSelector(getCurrentApplication);\n  const isAppSidebarPinned = useSelector(getAppSidebarPinned);\n  const sidebarWidth = useSelector(getSidebarWidth);\n  const isNavigationSelectedInSettings = useSelector(\n    getIsAppSettingsPaneWithNavigationTabOpen,\n  );\n  const appState = useCurrentAppState();\n  const isAppSettingsPaneWithNavigationTabOpen =\n    appState === EditorState.SETTINGS && isNavigationSelectedInSettings;\n\n  const appMode = useSelector(getAppMode);\n  const isPublished = appMode === APP_MODE.PUBLISHED;\n  const isMobile = useIsMobileDevice();\n  const isPreviewingNavigation =\n    isPreview || isAppSettingsPaneWithNavigationTabOpen;\n  const isAnvilLayout = useSelector(getIsAnvilLayout);\n\n  return (\n    <PageViewWrapper\n      className={classNames({\n        \"relative flex flex-row w-full justify-center\": true,\n        \"select-none pointer-events-none\":\n          isAppSettingsPaneWithNavigationTabOpen,\n      })}\n      hasPinnedSidebar={\n        isPreviewingNavigation && !isMobile\n          ? currentApplicationDetails?.applicationDetail?.navigationSetting\n              ?.orientation === NAVIGATION_SETTINGS.ORIENTATION.SIDE &&\n            isAppSidebarPinned\n          : false\n      }\n      id={CANVAS_VIEWPORT}\n      isPreview={isPreview}\n      isPublished={isPublished}\n      sidebarWidth={isPreviewingNavigation ? sidebarWidth : 0}\n      style={\n        isAnvilLayout\n          ? {\n              //This is necessary in order to place WDS modal with position: fixed; relatively to the canvas.\n              transform: \"scale(1)\",\n            }\n          : {}\n      }\n    >\n      {props.children}\n    </PageViewWrapper>\n  );\n};\n","import * as Sentry from \"@sentry/react\";\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport type { AppState } from \"@appsmith/reducers\";\nimport { CONVERSION_STATES } from \"reducers/uiReducers/layoutConversionReducer\";\nimport { useSnapShotForm } from \"./hooks/useSnapShotForm\";\nimport { ConversionForm } from \"./ConversionForm\";\nimport {\n  createMessage,\n  DISCARD_SNAPSHOT_CTA,\n  DISCARD_SNAPSHOT_HEADER,\n  USE_SNAPSHOT_CTA,\n  USE_SNAPSHOT_HEADER,\n  SNAPSHOT_BANNER_MESSAGE,\n  SNAPSHOT_TIME_TILL_EXPIRATION_MESSAGE,\n} from \"@appsmith/constants/messages\";\nimport {\n  setConversionStart,\n  setConversionStop,\n} from \"actions/autoLayoutActions\";\nimport {\n  Modal,\n  ModalContent,\n  ModalHeader,\n  ModalBody,\n  Callout,\n  Text,\n} from \"design-system\";\nimport { getReadableSnapShotDetails } from \"../../../layoutSystems/autolayout/utils/AutoLayoutUtils\";\nimport { getSnapshotUpdatedTime } from \"selectors/autoLayoutSelectors\";\nimport styled from \"styled-components\";\n\nconst BannerWrapper = styled.div`\n  z-index: calc(var(--on-canvas-ui-z-index) + 1);\n`;\nexport function SnapShotBannerCTA() {\n  const [showModal, setShowModal] = useState(false);\n\n  const conversionState = useSelector(\n    (state: AppState) => state.ui.layoutConversion.conversionState,\n  );\n\n  const hideCloseButton =\n    conversionState === CONVERSION_STATES.COMPLETED_SUCCESS ||\n    conversionState === CONVERSION_STATES.RESTORING_SNAPSHOT_SPINNER;\n\n  const lastUpdatedTime = useSelector(getSnapshotUpdatedTime);\n  const readableSnapShotDetails = getReadableSnapShotDetails(lastUpdatedTime);\n\n  const formProps = useSnapShotForm();\n\n  const dispatch = useDispatch();\n\n  const modalHeader =\n    conversionState === CONVERSION_STATES.DISCARD_SNAPSHOT\n      ? createMessage(DISCARD_SNAPSHOT_HEADER)\n      : createMessage(USE_SNAPSHOT_HEADER);\n\n  const closeModal = () => {\n    setShowModal(false);\n    setTimeout(() => {\n      dispatch(setConversionStop());\n    }, 0);\n  };\n\n  const onOpenChange = (isOpen: boolean) => {\n    if (!isOpen) {\n      closeModal();\n    }\n  };\n\n  const openModal = (conversionState: CONVERSION_STATES) => {\n    dispatch(setConversionStart(conversionState));\n    setShowModal(true);\n  };\n\n  return (\n    <BannerWrapper className=\"absolute top-0 w-full\">\n      <Callout\n        kind=\"warning\"\n        links={[\n          {\n            children: createMessage(USE_SNAPSHOT_CTA),\n            onClick: () => {\n              openModal(CONVERSION_STATES.SNAPSHOT_START);\n            },\n          },\n          {\n            children: createMessage(DISCARD_SNAPSHOT_CTA),\n            onClick: () => {\n              openModal(CONVERSION_STATES.DISCARD_SNAPSHOT);\n            },\n          },\n        ]}\n      >\n        <div className=\"flex flex-col\">\n          <Text kind=\"heading-s\" renderAs=\"h4\">\n            {readableSnapShotDetails\n              ? createMessage(\n                  SNAPSHOT_TIME_TILL_EXPIRATION_MESSAGE,\n                  readableSnapShotDetails.timeTillExpiration,\n                )\n              : \"\"}\n          </Text>\n          <Text kind=\"body-m\" renderAs=\"p\">\n            {createMessage(SNAPSHOT_BANNER_MESSAGE)}\n          </Text>\n        </div>\n      </Callout>\n      <Modal onOpenChange={onOpenChange} open={showModal}>\n        <ModalContent\n          // Don't close Modal on escape key press\n          onEscapeKeyDown={(e) => e.preventDefault()}\n          // Don't close Modal when pressed outside\n          onInteractOutside={(e) => e.preventDefault()}\n          style={{ width: \"640px\" }}\n        >\n          <ModalHeader isCloseButtonVisible={!hideCloseButton}>\n            {modalHeader}\n          </ModalHeader>\n          <ModalBody>\n            <ConversionForm closeModal={closeModal} {...formProps} />\n          </ModalBody>\n        </ModalContent>\n      </Modal>\n    </BannerWrapper>\n  );\n}\n\nSnapShotBannerCTA.displayName = \"SnapShotBannerCTA\";\n\nexport default Sentry.withProfiler(SnapShotBannerCTA);\n","import useWidgetFocus from \"./useWidgetFocus\";\n\nexport default useWidgetFocus;\n","import { Tooltip } from \"design-system\";\nimport React, { useEffect, useState } from \"react\";\nimport { modText } from \"utils/helpers\";\nimport { useSelector } from \"react-redux\";\nimport { getWidgetSelectionBlock } from \"selectors/ui\";\nimport { retrieveCodeWidgetNavigationUsed } from \"utils/storage\";\nimport {\n  CANVAS_VIEW_MODE_TOOLTIP,\n  createMessage,\n} from \"@appsmith/constants/messages\";\nimport { useCurrentAppState } from \"pages/Editor/IDE/hooks\";\nimport { EditorState } from \"@appsmith/entities/IDE/constants\";\n\n/**\n * CodeModeTooltip\n *\n * This component is used to display a tooltip when the user hovers over a widget in code mode(when js pane and widgets editor are side by side).\n */\n\nconst CodeModeTooltip = (props: { children: React.ReactElement }) => {\n  const isWidgetSelectionBlock = useSelector(getWidgetSelectionBlock);\n  const editorState = useCurrentAppState();\n  const [shouldShow, setShouldShow] = useState<boolean>(false);\n  useEffect(() => {\n    retrieveCodeWidgetNavigationUsed()\n      .then((timesUsed) => {\n        if (timesUsed < 2) {\n          setShouldShow(true);\n        }\n      })\n      .catch(() => {\n        setShouldShow(true);\n      });\n  }, [isWidgetSelectionBlock]);\n  if (!isWidgetSelectionBlock) return props.children;\n  if (editorState !== EditorState.EDITOR) return props.children;\n  return (\n    <Tooltip\n      content={createMessage(CANVAS_VIEW_MODE_TOOLTIP, `${modText()}`)}\n      isDisabled={!shouldShow}\n      placement={\"bottom\"}\n      showArrow={false}\n      trigger={\"hover\"}\n    >\n      {props.children}\n    </Tooltip>\n  );\n};\n\nexport default CodeModeTooltip;\n","import log from \"loglevel\";\nimport React, { useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport * as Sentry from \"@sentry/react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport type { CanvasWidgetStructure } from \"WidgetProvider/constants\";\nimport useWidgetFocus from \"utils/hooks/useWidgetFocus\";\nimport { combinedPreviewModeSelector } from \"selectors/editorSelectors\";\nimport { getSelectedAppTheme } from \"selectors/appThemingSelectors\";\nimport { getViewportClassName } from \"layoutSystems/autolayout/utils/AutoLayoutUtils\";\nimport {\n  ThemeProvider as WDSThemeProvider,\n  useTheme,\n} from \"@design-system/theming\";\nimport { getIsAppSettingsPaneWithNavigationTabOpen } from \"selectors/appSettingsPaneSelectors\";\nimport { CANVAS_ART_BOARD } from \"constants/componentClassNameConstants\";\nimport { renderAppsmithCanvas } from \"layoutSystems/CanvasFactory\";\nimport type { WidgetProps } from \"widgets/BaseWidget\";\nimport { getAppThemeSettings } from \"@appsmith/selectors/applicationSelectors\";\nimport CodeModeTooltip from \"pages/Editor/WidgetsEditor/components/CodeModeTooltip\";\nimport { getIsAnvilLayout } from \"layoutSystems/anvil/integrations/selectors\";\nimport { focusWidget } from \"actions/widgetActions\";\n\ninterface CanvasProps {\n  widgetsStructure: CanvasWidgetStructure;\n  canvasWidth: number;\n  enableMainCanvasResizer?: boolean;\n}\n\nconst StyledWDSThemeProvider = styled(WDSThemeProvider)`\n  min-height: 100%;\n  display: flex;\n`;\n\nconst Wrapper = styled.section<{\n  background: string;\n  width: number;\n  $enableMainCanvasResizer: boolean;\n}>`\n  flex: 1;\n  background: ${({ background }) => background};\n  width: ${({ $enableMainCanvasResizer, width }) =>\n    $enableMainCanvasResizer ? `100%` : `${width}px`};\n`;\nconst Canvas = (props: CanvasProps) => {\n  const { canvasWidth } = props;\n  const isPreviewMode = useSelector(combinedPreviewModeSelector);\n  const isAppSettingsPaneWithNavigationTabOpen = useSelector(\n    getIsAppSettingsPaneWithNavigationTabOpen,\n  );\n  const selectedTheme = useSelector(getSelectedAppTheme);\n  const isAnvilLayout = useSelector(getIsAnvilLayout);\n\n  const themeSetting = useSelector(getAppThemeSettings);\n  const wdsThemeProps = {\n    borderRadius: themeSetting.borderRadius,\n    seedColor: themeSetting.accentColor,\n    colorMode: themeSetting.colorMode.toLowerCase(),\n    fontFamily: themeSetting.fontFamily,\n    userSizing: themeSetting.sizing,\n    userDensity: themeSetting.density,\n    iconStyle: themeSetting.iconStyle.toLowerCase(),\n  } as Parameters<typeof useTheme>[0];\n  // in case of non-WDS theme, we will pass an empty object to useTheme hook\n  // so that fixedLayout theme does not break because of calculations done in useTheme\n  const { theme } = useTheme(isAnvilLayout ? wdsThemeProps : {});\n\n  const dispatch = useDispatch();\n  const unfocusAllWidgets = useCallback(() => {\n    dispatch(focusWidget());\n  }, [dispatch]);\n\n  /**\n   * background for canvas\n   */\n  let backgroundForCanvas: string;\n\n  if (isPreviewMode || isAppSettingsPaneWithNavigationTabOpen) {\n    backgroundForCanvas = \"initial\";\n  } else {\n    backgroundForCanvas = selectedTheme.properties.colors.backgroundColor;\n  }\n\n  const focusRef = useWidgetFocus();\n\n  const marginHorizontalClass = props.enableMainCanvasResizer\n    ? `mx-0`\n    : `mx-auto`;\n  const paddingBottomClass = props.enableMainCanvasResizer ? \"\" : \"pb-52\";\n\n  const renderChildren = () => {\n    return (\n      <CodeModeTooltip>\n        <Wrapper\n          $enableMainCanvasResizer={!!props.enableMainCanvasResizer}\n          background={isAnvilLayout ? \"\" : backgroundForCanvas}\n          className={`relative t--canvas-artboard ${paddingBottomClass} transition-all duration-400  ${marginHorizontalClass} ${getViewportClassName(\n            canvasWidth,\n          )}`}\n          data-testid={\"t--canvas-artboard\"}\n          id={CANVAS_ART_BOARD}\n          onMouseLeave={unfocusAllWidgets}\n          ref={isAnvilLayout ? undefined : focusRef}\n          width={canvasWidth}\n        >\n          {props.widgetsStructure.widgetId &&\n            renderAppsmithCanvas(props.widgetsStructure as WidgetProps)}\n        </Wrapper>\n      </CodeModeTooltip>\n    );\n  };\n\n  try {\n    if (isAnvilLayout) {\n      return (\n        <StyledWDSThemeProvider theme={theme}>\n          {renderChildren()}\n        </StyledWDSThemeProvider>\n      );\n    }\n\n    return renderChildren();\n  } catch (error) {\n    log.error(\"Error rendering DSL\", error);\n    Sentry.captureException(error);\n    return null;\n  }\n};\n\nexport default Canvas;\n","import { layoutConfigurations } from \"constants/WidgetConstants\";\nimport React, { useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getCurrentApplicationLayout } from \"selectors/editorSelectors\";\nimport { setAutoCanvasResizing } from \"actions/autoLayoutActions\";\nimport styled from \"styled-components\";\nimport { AUTOLAYOUT_RESIZER_WIDTH_BUFFER } from \"utils/hooks/useDynamicAppLayout\";\nimport { importSvg } from \"design-system-old\";\nimport { CANVAS_VIEWPORT } from \"constants/componentClassNameConstants\";\n\nconst CanvasResizerIcon = importSvg(\n  async () => import(\"assets/icons/ads/app-icons/canvas-resizer.svg\"),\n);\n\nconst AutoLayoutCanvasResizer = styled.div`\n  position: relative;\n  z-index: var(--on-canvas-ui-zindex);\n  cursor: col-resize;\n  user-select: none;\n  -webkit-user-select: none;\n  width: 2px;\n  display: flex;\n  background: var(--ads-v2-color-border);\n  align-items: center;\n  justify-content: flex-start;\n  margin-left: 2px;\n  transition: width 300ms ease;\n  transition: background 300ms ease;\n  .canvas-resizer-icon {\n    border-left: 2px solid;\n    border-color: var(--ads-v2-color-border);\n    transition: border 300ms ease;\n    margin-left: 2px;\n    & > svg {\n      fill: var(--ads-v2-color-border);\n      transition: fill 300ms ease;\n    }\n  }\n  &:hover,\n  &:active {\n    transition: width 300ms ease;\n    background: #ff9b4e;\n    transition: background 300ms ease;\n    .canvas-resizer-icon {\n      border-color: #ff9b4e;\n      transition: border 300ms ease;\n      & > svg {\n        fill: #ff9b4e;\n        transition: fill 300ms ease;\n      }\n    }\n  }\n`;\n\n/**\n * OldName: CanvasResizer\n */\nexport function MainContainerResizer({\n  currentPageId,\n  enableMainCanvasResizer,\n  isPageInitiated,\n  isPreview,\n  navigationHeight,\n}: {\n  isPageInitiated: boolean;\n  isPreview: boolean;\n  currentPageId: string;\n  enableMainCanvasResizer: boolean;\n  navigationHeight?: number;\n}) {\n  const appLayout = useSelector(getCurrentApplicationLayout);\n  const ref = useRef<HTMLDivElement>(null);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const ele: HTMLElement | null = document.getElementById(CANVAS_VIEWPORT);\n\n    if (isPageInitiated && enableMainCanvasResizer) {\n      const fullWidthCSS = `calc(100% - ${AUTOLAYOUT_RESIZER_WIDTH_BUFFER}px)`;\n      const wrapperElement: any = document.getElementById(\"widgets-editor\");\n\n      let maxWidth =\n        wrapperElement.offsetWidth - AUTOLAYOUT_RESIZER_WIDTH_BUFFER;\n\n      if (ele && ele.offsetWidth >= maxWidth) {\n        ele.style.width = fullWidthCSS;\n      }\n\n      if (appLayout?.type === \"FLUID\") {\n        const smallestWidth = layoutConfigurations.MOBILE.minWidth;\n        // The current position of mouse\n        let x = 0;\n\n        // The dimension of the element\n        let w = 0;\n        let events: any = [];\n\n        // Handle the mousedown event\n        // that's triggered when user drags the resizer\n        const mouseDownHandler = function (e: any) {\n          if (!ele || e.buttons !== 1) return;\n          maxWidth =\n            wrapperElement.offsetWidth - AUTOLAYOUT_RESIZER_WIDTH_BUFFER;\n          // Get the current mouse position\n          x = e.clientX;\n\n          // Calculate the dimension of element\n          const styles = window.getComputedStyle(ele);\n          dispatch(setAutoCanvasResizing(true));\n          w = parseInt(styles.width, 10);\n          // h = parseInt(styles.height, 10);\n          const mouseMove = (e: any) => mouseMoveHandler(e);\n          events.push(mouseMove);\n          // Attach the listeners to `document`\n          document.addEventListener(\"mousemove\", mouseMove);\n          document.addEventListener(\"mouseup\", mouseUpHandler);\n        };\n\n        const mouseMoveHandler = function (e: any) {\n          if (!ele) return;\n          // How far the mouse has been moved\n          // const multiplier = rightHandle ? 2 : -2;\n          const multiplier = 2;\n          const dx = (e.clientX - x) * multiplier;\n          if (maxWidth >= w + dx && smallestWidth <= w + dx) {\n            // Adjust the dimension of element\n            ele.style.width = `${w + dx}px`;\n          }\n          if (maxWidth < w + dx) {\n            ele.style.width = fullWidthCSS;\n          }\n          if (smallestWidth > w + dx) {\n            ele.style.width = `${smallestWidth}px`;\n          }\n        };\n\n        const mouseUpHandler = function (e: any) {\n          // Remove the handlers of `mousemove` and `mouseup`\n          mouseMoveHandler(e);\n          dispatch(setAutoCanvasResizing(false));\n          document.removeEventListener(\"mousemove\", events[0] as any);\n          document.removeEventListener(\"mouseup\", mouseUpHandler);\n          events = [];\n        };\n        const rightResizer = ref.current;\n        const rightMove = (e: any) => mouseDownHandler(e);\n        rightResizer && rightResizer.addEventListener(\"mousedown\", rightMove);\n\n        return () => {\n          rightResizer &&\n            rightResizer.removeEventListener(\"mousedown\", rightMove);\n        };\n      }\n    } else {\n      ele?.style.removeProperty(\"width\");\n    }\n  }, [\n    appLayout,\n    isPreview,\n    currentPageId,\n    enableMainCanvasResizer,\n    isPageInitiated,\n  ]);\n  return enableMainCanvasResizer ? (\n    <AutoLayoutCanvasResizer\n      className=\"resizer-right\"\n      draggable\n      onDragStart={(e) => {\n        e.preventDefault();\n        e.stopPropagation();\n      }}\n      ref={ref}\n      style={{\n        top: isPreview ? navigationHeight : \"0\",\n        height: isPreview ? `calc(100% - ${navigationHeight})` : \"100%\",\n      }}\n    >\n      <div className=\"canvas-resizer-icon\">\n        <CanvasResizerIcon />\n      </div>\n    </AutoLayoutCanvasResizer>\n  ) : null;\n}\n","import type { ReactNode } from \"react\";\nimport React, { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport {\n  getIsFetchingPage,\n  getViewModePageList,\n  showCanvasTopSectionSelector,\n} from \"selectors/editorSelectors\";\nimport styled from \"styled-components\";\nimport { getCanvasClassName } from \"utils/generators\";\n\nimport { forceOpenWidgetPanel } from \"actions/widgetSidebarActions\";\nimport classNames from \"classnames\";\nimport Centered from \"components/designSystems/appsmith/CenteredWrapper\";\nimport { Spinner } from \"design-system\";\nimport equal from \"fast-deep-equal/es6\";\nimport { WidgetGlobaStyles } from \"globalStyles/WidgetGlobalStyles\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  getAppThemeIsChanging,\n  getSelectedAppTheme,\n} from \"selectors/appThemingSelectors\";\nimport { getCanvasWidgetsStructure } from \"@appsmith/selectors/entitiesSelector\";\nimport { useDynamicAppLayout } from \"utils/hooks/useDynamicAppLayout\";\nimport Canvas from \"pages/Editor/Canvas\";\nimport type { AppState } from \"@appsmith/reducers\";\nimport { getIsAnonymousDataPopupVisible } from \"selectors/onboardingSelectors\";\nimport { MainContainerResizer } from \"layoutSystems/common/mainContainerResizer/MainContainerResizer\";\nimport { useMainContainerResizer } from \"layoutSystems/common/mainContainerResizer/useMainContainerResizer\";\nimport { getIsAnvilLayout } from \"layoutSystems/anvil/integrations/selectors\";\n\ninterface MainCanvasWrapperProps {\n  isPreviewMode: boolean;\n  isProtectedMode: boolean;\n  shouldShowSnapShotBanner: boolean;\n  navigationHeight?: number;\n  isAppSettingsPaneWithNavigationTabOpen?: boolean;\n  currentPageId: string;\n  canvasWidth: number;\n}\n\nconst Wrapper = styled.section<{\n  $enableMainCanvasResizer: boolean;\n  background: string;\n  isPreviewingNavigation?: boolean;\n  isAppSettingsPaneWithNavigationTabOpen?: boolean;\n  navigationHeight?: number;\n}>`\n  width: 100%;\n  position: relative;\n  overflow-x: auto;\n  overflow-y: auto;\n  background: ${({ background }) => background};\n\n  ${({\n    isAppSettingsPaneWithNavigationTabOpen,\n    isPreviewingNavigation,\n    navigationHeight,\n  }) => {\n    let css = ``;\n\n    if (isPreviewingNavigation) {\n      css += `\n        margin-top: ${navigationHeight}px !important;\n      `;\n    }\n\n    if (isAppSettingsPaneWithNavigationTabOpen) {\n      /**\n       * We need to remove the scrollbar width to avoid small white space on the\n       * right of the canvas since we disable all interactions, including scroll,\n       * while the app settings pane with navigation tab is open\n       */\n      css += `\n        ::-webkit-scrollbar {\n          width: 0px;\n        }\n      `;\n    }\n\n    return css;\n  }}\n\n  &:before {\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    pointer-events: none;\n  }\n`;\n\n/**\n * OldName: CanvasContainer\n */\n/**\n * This Component encompasses/wraps the center section of the editor\n * That involves mainly the main container and main container resizer\n * @param props object that contains\n * @prop isProtectedMode, boolean to indicate protected mode\n * @prop isPreviewMode, boolean to indicate preview mode\n * @prop shouldShowSnapShotBanner, boolean to indicate if snapshot is shown\n * @prop navigationHeight, height of navigation header in pixels\n * @prop isAppSettingsPaneWithNavigationTabOpen, boolean to indicate if app setting navigation ta is open\n * @prop currentPageId, current page id in string\n * @returns\n */\nfunction MainContainerWrapper(props: MainCanvasWrapperProps) {\n  const { isAppSettingsPaneWithNavigationTabOpen, navigationHeight } = props;\n  const dispatch = useDispatch();\n  const {\n    currentPageId,\n    isPreviewMode,\n    isProtectedMode,\n    shouldShowSnapShotBanner,\n  } = props;\n\n  const isFetchingPage = useSelector(getIsFetchingPage);\n  const widgetsStructure = useSelector(getCanvasWidgetsStructure, equal);\n  const pages = useSelector(getViewModePageList);\n  const selectedTheme = useSelector(getSelectedAppTheme);\n  const shouldHaveTopMargin =\n    !(isPreviewMode || isProtectedMode) ||\n    !isAppSettingsPaneWithNavigationTabOpen ||\n    pages.length > 1;\n  const isAppThemeChanging = useSelector(getAppThemeIsChanging);\n  const showCanvasTopSection = useSelector(showCanvasTopSectionSelector);\n  const showAnonymousDataPopup = useSelector(getIsAnonymousDataPopupVisible);\n  const isLayoutingInitialized = useDynamicAppLayout();\n  const isPageInitializing = isFetchingPage || !isLayoutingInitialized;\n  const { canShowResizer, enableMainContainerResizer } =\n    useMainContainerResizer();\n  const isAnvilLayout = useSelector(getIsAnvilLayout);\n\n  useEffect(() => {\n    return () => {\n      dispatch(forceOpenWidgetPanel(false));\n    };\n  }, []);\n\n  const fontFamily = `${selectedTheme.properties.fontFamily.appFont}, sans-serif`;\n  const isAutoCanvasResizing = useSelector(\n    (state: AppState) => state.ui.widgetDragResize.isAutoCanvasResizing,\n  );\n\n  let node: ReactNode;\n  const pageLoading = (\n    <Centered>\n      <Spinner size=\"sm\" />\n    </Centered>\n  );\n\n  if (isPageInitializing) {\n    node = pageLoading;\n  }\n\n  if (!isPageInitializing && widgetsStructure) {\n    node = (\n      <Canvas\n        canvasWidth={props.canvasWidth}\n        enableMainCanvasResizer={enableMainContainerResizer}\n        widgetsStructure={widgetsStructure}\n      />\n    );\n  }\n\n  const isPreviewingNavigation =\n    isPreviewMode || isProtectedMode || isAppSettingsPaneWithNavigationTabOpen;\n\n  return (\n    <>\n      <Wrapper\n        $enableMainCanvasResizer={enableMainContainerResizer}\n        background={\n          isPreviewMode ||\n          isProtectedMode ||\n          isAppSettingsPaneWithNavigationTabOpen\n            ? isAnvilLayout\n              ? \"\"\n              : selectedTheme.properties.colors.backgroundColor\n            : \"initial\"\n        }\n        className={classNames({\n          [`${getCanvasClassName()} scrollbar-thin`]: true,\n          \"mt-0\": shouldShowSnapShotBanner || !shouldHaveTopMargin,\n          \"mt-4\":\n            !shouldShowSnapShotBanner &&\n            (showCanvasTopSection || showAnonymousDataPopup) &&\n            !isAnvilLayout,\n          \"mt-8\":\n            !shouldShowSnapShotBanner &&\n            shouldHaveTopMargin &&\n            !showCanvasTopSection &&\n            !isPreviewingNavigation &&\n            !showAnonymousDataPopup &&\n            !isAnvilLayout,\n          \"mt-24\": shouldShowSnapShotBanner,\n        })}\n        isAppSettingsPaneWithNavigationTabOpen={\n          isAppSettingsPaneWithNavigationTabOpen\n        }\n        isPreviewingNavigation={isPreviewingNavigation}\n        navigationHeight={navigationHeight}\n        style={{\n          height: isPreviewMode ? `calc(100% - ${navigationHeight})` : \"auto\",\n          fontFamily: fontFamily,\n          pointerEvents: isAutoCanvasResizing ? \"none\" : \"auto\",\n        }}\n      >\n        {!isAnvilLayout && (\n          <WidgetGlobaStyles\n            fontFamily={selectedTheme.properties.fontFamily.appFont}\n            primaryColor={selectedTheme.properties.colors.primaryColor}\n          />\n        )}\n        {isAppThemeChanging && (\n          <div className=\"fixed top-0 bottom-0 left-0 right-0 flex items-center justify-center bg-white/70 z-[2]\">\n            <Spinner size=\"md\" />\n          </div>\n        )}\n        {node}\n      </Wrapper>\n      <MainContainerResizer\n        currentPageId={currentPageId}\n        enableMainCanvasResizer={enableMainContainerResizer && canShowResizer}\n        isPageInitiated={!isPageInitializing && !!widgetsStructure}\n        isPreview={isPreviewMode || isProtectedMode}\n        navigationHeight={navigationHeight}\n      />\n    </>\n  );\n}\n\nexport default MainContainerWrapper;\n","import { useSelector } from \"react-redux\";\nimport { previewModeSelector } from \"selectors/editorSelectors\";\nimport {\n  LayoutSystemFeatures,\n  useLayoutSystemFeatures,\n} from \"../useLayoutSystemFeatures\";\nimport { getIsAnvilLayout } from \"layoutSystems/anvil/integrations/selectors\";\n\nexport const useMainContainerResizer = () => {\n  const checkLayoutSystemFeatures = useLayoutSystemFeatures();\n  const [enableMainContainerResizer] = checkLayoutSystemFeatures([\n    LayoutSystemFeatures.ENABLE_MAIN_CONTAINER_RESIZER,\n  ]);\n  const isAnvilLayout = useSelector(getIsAnvilLayout);\n  const isPreviewMode = useSelector(previewModeSelector);\n  const canShowResizer = isAnvilLayout ? isPreviewMode : true;\n  return { enableMainContainerResizer, canShowResizer };\n};\n","import SnapShotBannerCTA from \"pages/Editor/CanvasLayoutConversion/SnapShotBannerCTA\";\nimport React from \"react\";\nimport MainContainerWrapper from \"./MainContainerWrapper\";\nimport { AppSettingsTabs } from \"pages/Editor/AppSettingsPane/AppSettings\";\nimport { useSelector } from \"react-redux\";\nimport {\n  getCanvasWidth,\n  getCurrentPageId,\n  previewModeSelector,\n} from \"selectors/editorSelectors\";\nimport { protectedModeSelector } from \"selectors/gitSyncSelectors\";\nimport { getAppSettingsPaneContext } from \"selectors/appSettingsPaneSelectors\";\nimport { useShowSnapShotBanner } from \"pages/Editor/CanvasLayoutConversion/hooks/useShowSnapShotBanner\";\n\n/**\n * LayoutSystemBasedPageViewer\n *\n * This component is used to provide respective components based on the layout system features(ex: canvas overlay, snapshot banner).\n * It also provides the main container wrapper for the layout system based editor.\n */\nexport const LayoutSystemBasedPageViewer = ({\n  navigationHeight,\n}: {\n  navigationHeight: number;\n}) => {\n  const currentPageId = useSelector(getCurrentPageId);\n  const isPreviewMode = useSelector(previewModeSelector);\n  const isProtectedMode = useSelector(protectedModeSelector);\n  const appSettingsPaneContext = useSelector(getAppSettingsPaneContext);\n  const canvasWidth = useSelector(getCanvasWidth);\n  const shouldShowSnapShotBanner = useShowSnapShotBanner(\n    isPreviewMode || isProtectedMode,\n  );\n\n  return (\n    <>\n      {shouldShowSnapShotBanner && <SnapShotBannerCTA />}\n      <MainContainerWrapper\n        canvasWidth={canvasWidth}\n        currentPageId={currentPageId}\n        isAppSettingsPaneWithNavigationTabOpen={\n          AppSettingsTabs.Navigation === appSettingsPaneContext?.type\n        }\n        isPreviewMode={isPreviewMode}\n        isProtectedMode={isProtectedMode}\n        navigationHeight={navigationHeight}\n        shouldShowSnapShotBanner={shouldShowSnapShotBanner}\n      />\n    </>\n  );\n};\n","import { FEATURE_FLAG } from \"@appsmith/entities/FeatureFlag\";\nimport { EditorState } from \"@appsmith/entities/IDE/constants\";\nimport { getReadableSnapShotDetails } from \"layoutSystems/autolayout/utils/AutoLayoutUtils\";\nimport { useCurrentAppState } from \"pages/Editor/IDE/hooks\";\nimport { useSelector } from \"react-redux\";\nimport { getIsAppSettingsPaneWithNavigationTabOpen } from \"selectors/appSettingsPaneSelectors\";\nimport { getSnapshotUpdatedTime } from \"selectors/autoLayoutSelectors\";\nimport { useFeatureFlag } from \"utils/hooks/useFeatureFlag\";\n\n/**\n * This hook is used to determine whether to show the snapshot banner.\n * It checks if the conversion flow is enabled, if there is a last updated time for the snapshot,\n * if the app state is in the settings and a navigation tab is selected,\n * and if the user is previewing the navigation or in preview mode.\n *\n * @param {boolean} isPreviewMode - Indicates whether the user is in preview mode\n * @returns {boolean} - Indicates whether to show the snapshot banner\n */\nexport const useShowSnapShotBanner = (isPreviewMode: boolean) => {\n  const isConversionFlowEnabled = useFeatureFlag(\n    FEATURE_FLAG.release_layout_conversion_enabled,\n  );\n  const lastUpdatedTime = useSelector(getSnapshotUpdatedTime);\n  const readableSnapShotDetails = getReadableSnapShotDetails(lastUpdatedTime);\n  const isNavigationSelectedInSettings = useSelector(\n    getIsAppSettingsPaneWithNavigationTabOpen,\n  );\n\n  const appState = useCurrentAppState();\n  const isAppSettingsPaneWithNavigationTabOpen =\n    appState === EditorState.SETTINGS && isNavigationSelectedInSettings;\n\n  const isPreviewingNavigation =\n    isPreviewMode || isAppSettingsPaneWithNavigationTabOpen;\n\n  const shouldShowSnapShotBanner =\n    isConversionFlowEnabled &&\n    !!readableSnapShotDetails &&\n    !isPreviewingNavigation;\n  return shouldShowSnapShotBanner;\n};\n","import React from \"react\";\nimport {\n  WidgetEditorNavigation,\n  useNavigationPreviewHeight,\n} from \"./components/WidgetEditorNavigation\";\nimport CrudInfoModal from \"pages/Editor/GeneratePage/components/CrudInfoModal\";\nimport { WidgetEditorContentWrapper } from \"./components/WidgetEditorContentWrapper\";\nimport { NavigationAdjustedPageViewer } from \"./components/NavigationAdjustedPageViewer\";\nimport { LayoutSystemBasedPageViewer } from \"./components/LayoutSystemBasedPageViewer\";\n\n/**\n * WidgetEditorContent\n * This component orchestrates the rendering of the main content area of the widget editor,\n * which includes navigation, layout based canvas editor, and additional modals like crud generation.\n */\nexport const WidgetEditorContent = () => {\n  const { navigationHeight, navigationPreviewRef } =\n    useNavigationPreviewHeight();\n\n  return (\n    <WidgetEditorContentWrapper>\n      <WidgetEditorNavigation ref={navigationPreviewRef} />\n      <NavigationAdjustedPageViewer>\n        <LayoutSystemBasedPageViewer navigationHeight={navigationHeight} />\n      </NavigationAdjustedPageViewer>\n      <CrudInfoModal />\n    </WidgetEditorContentWrapper>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport WidgetEditorFooter from \"components/editorComponents/Debugger\";\nimport {\n  getCurrentPageId,\n  getCurrentPageName,\n} from \"selectors/editorSelectors\";\nimport AnalyticsUtil from \"@appsmith/utils/AnalyticsUtil\";\nimport PerformanceTracker, {\n  PerformanceTransactionName,\n} from \"utils/PerformanceTracker\";\nimport { getCurrentApplication } from \"@appsmith/selectors/applicationSelectors\";\nimport { WidgetEditorContainer } from \"./WidgetEditorContainer\";\nimport { WidgetEditorHeader } from \"./WidgetEditorHeader\";\nimport { WidgetEditorContent } from \"./WidgetEditorContent\";\n/**\n * WidgetsEditor\n * This is the main editor component that is used to edit widgets.\n * It includes the\n * - skeleton(wrapper)\n *  - header (empty canvas prompts, anonymous data popup, missing module notification)\n *  - content (navigation, layout based canvas editor, crud generation modal)\n *  - footer (debugger)\n */\nfunction WidgetsEditor() {\n  const currentPageId = useSelector(getCurrentPageId);\n  const currentPageName = useSelector(getCurrentPageName);\n  const currentApp = useSelector(getCurrentApplication);\n\n  useEffect(() => {\n    PerformanceTracker.stopTracking(PerformanceTransactionName.CLOSE_SIDE_PANE);\n  });\n\n  useEffect(() => {\n    if (currentPageName !== undefined && currentPageId !== undefined) {\n      // Logging page load event\n      AnalyticsUtil.logEvent(\"PAGE_LOAD\", {\n        pageName: currentPageName,\n        pageId: currentPageId,\n        appName: currentApp?.name,\n        mode: \"EDIT\",\n      });\n    }\n  }, [currentPageName, currentPageId]);\n\n  PerformanceTracker.stopTracking();\n  return (\n    <WidgetEditorContainer>\n      <WidgetEditorHeader />\n      <WidgetEditorContent />\n      <WidgetEditorFooter />\n    </WidgetEditorContainer>\n  );\n}\n\nexport default WidgetsEditor;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Button from \"components/editorComponents/Button\";\nimport IntegrationUnavailableImage from \"assets/images/404-image.png\";\n\nconst Wrapper = styled.div`\n  text-align: center;\n  margin-top: 5%;\n  .bold-text {\n    font-weight: ${(props) => props.theme.fontWeights[3]};\n    font-size: 24px;\n  }\n  .unavailable-img {\n    width: 35%;\n  }\n  .button-position {\n    margin: auto;\n  }\n`;\n\ninterface Props {\n  title: string;\n  subtitle?: string;\n  buttonText: string;\n  onBackButton: () => void;\n}\n\nfunction NotFound(props: Props) {\n  const { buttonText, onBackButton, subtitle, title } = props;\n\n  return (\n    <Wrapper>\n      <img\n        alt={title || \"Unavailable\"}\n        className=\"unavailable-img\"\n        src={IntegrationUnavailableImage}\n      />\n      <div>\n        <p className=\"bold-text\">{title}</p>\n        {subtitle && <p>{subtitle}</p>}\n        <Button\n          className=\"button-position\"\n          filled\n          icon=\"arrow-right\"\n          iconAlignment=\"right\"\n          intent=\"primary\"\n          onClick={() => onBackButton()}\n          size=\"small\"\n          text={buttonText}\n        />\n      </div>\n    </Wrapper>\n  );\n}\n\nexport default NotFound;\n","import type { Datasource } from \"entities/Datasource\";\nimport { isStoredDatasource } from \"entities/Action\";\nimport React from \"react\";\nimport { isEmpty } from \"lodash\";\nimport { useSelector } from \"react-redux\";\nimport { Colors } from \"constants/Colors\";\nimport { useParams } from \"react-router\";\n\nimport {\n  getCurrentActions,\n  getPluginImages,\n} from \"@appsmith/selectors/entitiesSelector\";\nimport styled from \"styled-components\";\nimport type { AppState } from \"@appsmith/reducers\";\nimport history from \"utils/history\";\n\nimport RenderDatasourceInformation from \"pages/Editor/DataSourceEditor/DatasourceSection\";\nimport { BaseButton } from \"components/designSystems/appsmith/BaseButton\";\nimport { saasEditorDatasourceIdURL } from \"@appsmith/RouteBuilder\";\nimport { getAssetUrl } from \"@appsmith/utils/airgapHelpers\";\nimport { Button } from \"design-system\";\n\nconst Wrapper = styled.div`\n  border: 2px solid #d6d6d6;\n  padding: 18px;\n  margin-top: 18px;\n`;\n\nconst ActionButton = styled(BaseButton)`\n  &&&& {\n    height: 36px;\n    max-width: 120px;\n    width: auto;\n  }\n\n  span > svg > path {\n    stroke: white;\n  }\n`;\n\nconst DatasourceImage = styled.img`\n  height: 24px;\n  width: auto;\n`;\n\nconst EditDatasourceButton = styled(Button)`\n  &&&& {\n    height: 36px;\n    max-width: 160px;\n    border: 1px solid var(--ads-v2-color-border);\n    width: auto;\n  }\n`;\n\nconst DatasourceName = styled.span`\n  margin-left: 10px;\n  font-size: 16px;\n  font-weight: 500;\n`;\n\nconst DatasourceCardHeader = styled.div`\n  justify-content: space-between;\n  display: flex;\n`;\n\nconst DatasourceNameWrapper = styled.div`\n  flex-direction: row;\n  align-items: center;\n  display: flex;\n`;\n\nconst Queries = styled.div`\n  color: ${Colors.DOVE_GRAY};\n  font-size: 14px;\n  display: inline-block;\n  margin-top: 11px;\n`;\n\nconst ButtonsWrapper = styled.div`\n  display: flex;\n  gap: 10px;\n`;\n\ninterface DatasourceCardProps {\n  datasource: Datasource;\n  onCreate: (datasource: Datasource) => void;\n}\n\n// TODO: This is largely a quick copy pasta and edit of QueryEditor/DatasourceCard.tsx\n// When we move Google Sheets over to regular oauth2 integrations, we will need to refactor this.\nfunction DatasourceCard(props: DatasourceCardProps) {\n  const pluginImages = useSelector(getPluginImages);\n  const params = useParams<{\n    pageId: string;\n    pluginPackageName: string;\n  }>();\n  const { datasource } = props;\n  const datasourceFormConfigs = useSelector(\n    (state: AppState) => state.entities.plugins.formConfigs,\n  );\n  const queryActions = useSelector(getCurrentActions);\n  const queriesWithThisDatasource = queryActions.filter(\n    (action) =>\n      isStoredDatasource(action.config.datasource) &&\n      action.config.datasource.id === datasource.id,\n  ).length;\n\n  const currentFormConfig: Array<any> =\n    datasourceFormConfigs[datasource?.pluginId ?? \"\"];\n  const QUERY = queriesWithThisDatasource > 1 ? \"APIs\" : \"API\";\n\n  const editDatasource = () => {\n    history.push(\n      saasEditorDatasourceIdURL({\n        ...params,\n        datasourceId: datasource.id,\n      }),\n    );\n  };\n\n  return (\n    <Wrapper>\n      <DatasourceCardHeader className=\"t--datasource-name\">\n        <div style={{ flex: 1 }}>\n          <DatasourceNameWrapper>\n            <DatasourceImage\n              alt=\"Datasource\"\n              className=\"dataSourceImage\"\n              src={getAssetUrl(pluginImages[datasource.pluginId])}\n            />\n            <DatasourceName>{datasource.name}</DatasourceName>\n          </DatasourceNameWrapper>\n          <Queries>\n            {queriesWithThisDatasource\n              ? `${queriesWithThisDatasource} ${QUERY} on this page`\n              : \"No API is using this datasource\"}\n          </Queries>\n        </div>\n        <ButtonsWrapper>\n          <EditDatasourceButton\n            className=\"t--edit-datasource\"\n            onClick={editDatasource}\n            startIcon={\"pencil-line\"}\n          >\n            Edit Datasource\n          </EditDatasourceButton>\n          <ActionButton\n            buttonStyle=\"PRIMARY\"\n            className=\"t--create-api\"\n            icon={\"plus\"}\n            onClick={() => props.onCreate(datasource)}\n            text=\"New API\"\n          />\n        </ButtonsWrapper>\n      </DatasourceCardHeader>\n      {!isEmpty(currentFormConfig) ? (\n        <RenderDatasourceInformation\n          config={currentFormConfig[0]}\n          datasource={datasource}\n          showOnlyCurrentEnv\n        />\n      ) : undefined}\n    </Wrapper>\n  );\n}\n\nexport default DatasourceCard;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport type { RouteComponentProps } from \"react-router\";\nimport type { Plugin } from \"api/PluginApi\";\nimport {\n  getDatasourcesByPluginId,\n  getPluginByPackageName,\n} from \"@appsmith/selectors/entitiesSelector\";\nimport NotFound from \"pages/common/NotFound\";\nimport type { AppState } from \"@appsmith/reducers\";\nimport { createDatasourceFromForm } from \"actions/datasourceActions\";\nimport type { SaaSAction } from \"entities/Action\";\nimport { createActionRequest } from \"actions/pluginActionActions\";\nimport type { Datasource } from \"entities/Datasource\";\nimport type { ActionDataState } from \"@appsmith/reducers/entityReducers/actionsReducer\";\n\n// Design\nimport CenteredWrapper from \"components/designSystems/appsmith/CenteredWrapper\";\nimport styled from \"styled-components\";\nimport { Spinner, Button } from \"@blueprintjs/core\";\nimport DatasourceCard from \"pages/Editor/SaaSEditor/DatasourceCard\";\nimport {\n  getCurrentApplicationId,\n  getIsEditorInitialized,\n  selectURLSlugs,\n} from \"selectors/editorSelectors\";\nimport { INTEGRATION_TABS } from \"constants/routes\";\nimport { integrationEditorURL } from \"@appsmith/RouteBuilder\";\n\nconst IntegrationHomePage = styled.div`\n  padding: 20px;\n  padding-top: 30px;\n  overflow: auto;\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n\n  .sectionHeader {\n    font-weight: ${(props) => props.theme.fontWeights[2]};\n    font-size: ${(props) => props.theme.fontSizes[4]}px;\n  }\n`;\n\nconst LoadingContainer = styled(CenteredWrapper)`\n  height: 50%;\n`;\n\nconst AddDatasource = styled(Button)`\n  padding: 23px;\n  border: 2px solid #d6d6d6;\n  justify-content: flex-start;\n  font-size: 16px;\n  font-weight: 500;\n`;\n\nconst Boundary = styled.hr`\n  border: 1px solid #d0d7dd;\n  margin-top: 16px;\n`;\n\ninterface StateProps {\n  plugin?: Plugin;\n  actions: ActionDataState;\n  datasources: Datasource[];\n  isCreating: boolean;\n  isEditorInitialized: boolean;\n  applicationId: string;\n  applicationSlug: string;\n  pageSlug: string;\n}\n\ninterface DispatchFunctions {\n  createDatasource: (data: any) => void;\n  createAction: (data: Partial<SaaSAction>) => void;\n}\n\ntype RouteProps = RouteComponentProps<{\n  pageId: string;\n  pluginPackageName: string;\n}>;\n\ntype Props = StateProps & DispatchFunctions & RouteProps;\nclass ListView extends React.Component<Props> {\n  handleCreateNewDatasource = (pluginId: string) => {\n    this.props.createDatasource({ pluginId });\n  };\n\n  handleCreateNewAPI = (datasource: Datasource) => {\n    const {\n      location,\n      match: {\n        params: { pageId },\n      },\n    } = this.props;\n    const params: string = location.search;\n    let pgId = new URLSearchParams(params).get(\"importTo\");\n    if (!pgId) {\n      pgId = pageId;\n    }\n    if (pgId) {\n      this.props.createAction({\n        pageId: pgId,\n        pluginId: datasource.pluginId,\n        datasource: {\n          id: datasource.id,\n        },\n      });\n    }\n  };\n\n  render() {\n    const { isCreating, isEditorInitialized, plugin } = this.props;\n    if (!plugin) {\n      return this.renderNotFound();\n    }\n    if (isCreating || !isEditorInitialized) {\n      return this.renderLoading();\n    }\n    return this.renderPage();\n  }\n\n  renderPage() {\n    const { datasources, plugin } = this.props;\n    if (!plugin) {\n      return this.renderNotFound();\n    }\n    return (\n      <IntegrationHomePage>\n        <p className=\"sectionHeader\">Select a datasource or create a new one</p>\n        <Boundary />\n\n        <AddDatasource\n          className=\"t--add-datasource\"\n          fill\n          icon={\"plus\"}\n          minimal\n          onClick={() => this.handleCreateNewDatasource(plugin.id)}\n          text=\"New datasource\"\n        />\n\n        {datasources.map((datasource) => {\n          return (\n            <DatasourceCard\n              datasource={datasource}\n              key={datasource.id}\n              onCreate={this.handleCreateNewAPI}\n            />\n          );\n        })}\n      </IntegrationHomePage>\n    );\n  }\n\n  renderLoading() {\n    return (\n      <LoadingContainer>\n        <Spinner size={30} />\n      </LoadingContainer>\n    );\n  }\n\n  renderNotFound() {\n    const {\n      history,\n      match: {\n        params: { pageId },\n      },\n    } = this.props;\n    return (\n      <IntegrationHomePage>\n        <NotFound\n          buttonText=\"Go back to Datasources\"\n          onBackButton={() =>\n            history.push(\n              integrationEditorURL({\n                pageId,\n                selectedTab: INTEGRATION_TABS.ACTIVE,\n              }),\n            )\n          }\n          title=\"Datasources/Queries Not found\"\n        />\n      </IntegrationHomePage>\n    );\n  }\n}\n\nconst mapStateToProps = (state: AppState, props: RouteProps): StateProps => {\n  const plugin = getPluginByPackageName(\n    state,\n    props.match.params.pluginPackageName,\n  );\n  let datasources: Datasource[] = [];\n  if (plugin) {\n    datasources = getDatasourcesByPluginId(state, plugin.id);\n  }\n  const { applicationSlug, pageSlug } = selectURLSlugs(state);\n  return {\n    plugin,\n    actions: state.entities.actions,\n    isCreating: state.ui.apiPane.isCreating,\n    isEditorInitialized: getIsEditorInitialized(state),\n    datasources: datasources,\n    applicationId: getCurrentApplicationId(state),\n    applicationSlug,\n    pageSlug,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any): DispatchFunctions => {\n  return {\n    createDatasource: (data: any) => dispatch(createDatasourceFromForm(data)),\n    createAction: (data: Partial<SaaSAction>) => {\n      dispatch(createActionRequest(data));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListView);\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { importSvg } from \"design-system-old\";\nimport { Text } from \"design-system\";\nimport {\n  createMessage,\n  DATASOURCE_BLANK_STATE_MESSAGE,\n} from \"@appsmith/constants/messages\";\n\nconst Container = styled.div`\n  height: 100%;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Content = styled.div`\n  width: 243px;\n  gap: 24px;\n  padding: 12px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n`;\n\nconst BlankStateIllustration = importSvg(\n  async () => import(\"assets/images/data-main-blank-state.svg\"),\n);\n\nconst DatasourceBlankState = () => {\n  return (\n    <Container className=\"t--data-blank-state\">\n      <Content>\n        <BlankStateIllustration />\n        <Text kind=\"body-s\">\n          {createMessage(DATASOURCE_BLANK_STATE_MESSAGE)}\n        </Text>\n      </Content>\n    </Container>\n  );\n};\n\nexport default DatasourceBlankState;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport GeneratePageForm from \"./GeneratePageForm/GeneratePageForm\";\n\nconst Container = styled.div`\n  display: flex;\n  padding: var(--ads-v2-spaces-7) 0;\n`;\n\nfunction PageContent() {\n  return (\n    <Container>\n      <GeneratePageForm />\n    </Container>\n  );\n}\n\nexport default PageContent;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PageContent from \"./components/PageContent\";\nimport { Text } from \"design-system\";\nimport { BackButton } from \"components/utils/helperComponents\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  overflow-y: auto;\n  height: 100%;\n  padding: var(--ads-v2-spaces-7);\n`;\n\nconst HeadingContainer = styled.div`\n  display: flex;\n  padding-top: var(--ads-v2-spaces-4);\n`;\n\nconst Header = styled.div`\n  width: 100%;\n\n  > a {\n    margin: 0;\n  }\n`;\n\nfunction GeneratePage() {\n  const isGenerateFormPage = window.location.pathname.includes(\"/form\");\n  const heading = isGenerateFormPage ? \"Quick page wizard\" : \"New page\";\n\n  return (\n    <Container>\n      {isGenerateFormPage ? (\n        <Header>\n          <BackButton />\n        </Header>\n      ) : null}\n\n      <HeadingContainer>\n        <Text kind=\"heading-l\">{heading}</Text>\n      </HeadingContainer>\n      {isGenerateFormPage ? (\n        <Text renderAs=\"p\">\n          Auto create a simple CRUD interface on top of your data\n        </Text>\n      ) : null}\n\n      <PageContent />\n    </Container>\n  );\n}\n\nexport default GeneratePage;\n","import React from \"react\";\nimport { Flex } from \"design-system\";\nimport AddJS from \"pages/Editor/IDE/EditorPane/JS/Add\";\n\nconst JSAddState = () => {\n  return (\n    <Flex height=\"100%\" justifyContent=\"center\">\n      <AddJS\n        containerProps={{\n          px: \"spaces-4\",\n          py: \"spaces-7\",\n        }}\n        innerContainerProps={{\n          minWidth: \"30vw\",\n        }}\n      />\n    </Flex>\n  );\n};\n\nexport { JSAddState };\n","import React from \"react\";\nimport { Flex } from \"design-system\";\nimport AddQuery from \"pages/Editor/IDE/EditorPane/Query/Add\";\n\nconst QueriesAddState = () => {\n  return (\n    <Flex height=\"100%\" justifyContent=\"center\">\n      <AddQuery\n        containerProps={{\n          px: \"spaces-4\",\n          py: \"spaces-7\",\n        }}\n        innerContainerProps={{\n          minWidth: \"30vw\",\n        }}\n      />\n    </Flex>\n  );\n};\n\nexport { QueriesAddState };\n","import WidgetsEditor from \"pages/Editor/WidgetsEditor\";\nimport {\n  ADD_PATH,\n  API_EDITOR_ID_ADD_PATH,\n  API_EDITOR_ID_PATH,\n  APP_LIBRARIES_EDITOR_PATH,\n  APP_SETTINGS_EDITOR_PATH,\n  BUILDER_CHECKLIST_PATH,\n  BUILDER_CUSTOM_PATH,\n  BUILDER_PATH,\n  BUILDER_PATH_DEPRECATED,\n  CURL_IMPORT_PAGE_PATH,\n  DATA_SOURCES_EDITOR_ID_PATH,\n  DATA_SOURCES_EDITOR_LIST_PATH,\n  GENERATE_TEMPLATE_FORM_PATH,\n  INTEGRATION_EDITOR_PATH,\n  JS_COLLECTION_EDITOR_PATH,\n  JS_COLLECTION_ID_PATH,\n  LIST_PATH,\n  QUERIES_EDITOR_BASE_PATH,\n  QUERIES_EDITOR_ID_ADD_PATH,\n  QUERIES_EDITOR_ID_PATH,\n  WIDGETS_EDITOR_BASE_PATH,\n  WIDGETS_EDITOR_ID_PATH,\n} from \"constants/routes\";\nimport CreateNewDatasourceTab from \"pages/Editor/IntegrationEditor/CreateNewDatasourceTab\";\nimport OnboardingChecklist from \"pages/Editor/FirstTimeUserOnboarding/Checklist\";\nimport ApiEditor from \"pages/Editor/APIEditor\";\nimport QueryEditor from \"pages/Editor/QueryEditor\";\nimport JSEditor from \"pages/Editor/JSEditor\";\nimport CurlImportEditor from \"pages/Editor/APIEditor/CurlImportEditor\";\nimport ListView from \"pages/Editor/SaaSEditor/ListView\";\nimport {\n  SAAS_EDITOR_API_ID_ADD_PATH,\n  SAAS_EDITOR_API_ID_PATH,\n  SAAS_EDITOR_DATASOURCE_ID_PATH,\n  SAAS_EDITOR_PATH,\n} from \"pages/Editor/SaaSEditor/constants\";\nimport DatasourceForm from \"pages/Editor/SaaSEditor/DatasourceForm\";\nimport DataSourceEditor from \"pages/Editor/DataSourceEditor\";\nimport DatasourceBlankState from \"pages/Editor/DataSourceEditor/DatasourceBlankState\";\nimport GeneratePage from \"pages/Editor/GeneratePage\";\nimport type { RouteProps } from \"react-router\";\nimport { JSBlankState } from \"pages/Editor/JSEditor/JSBlankState\";\nimport { QueriesBlankState } from \"pages/Editor/QueryEditor/QueriesBlankState\";\nimport { useSelector } from \"react-redux\";\nimport { getIDEViewMode, getIsSideBySideEnabled } from \"selectors/ideSelectors\";\nimport { EditorViewMode } from \"@appsmith/entities/IDE/constants\";\nimport { JSAddState } from \"pages/Editor/JSEditor/JSAddState\";\nimport { QueriesAddState } from \"pages/Editor/QueryEditor/QueriesAddState\";\n\nexport interface RouteReturnType extends RouteProps {\n  key: string;\n}\n\n/**\n * The hook is extended in EE, please be mindful when modifying the\n * signature; it might break the implementation in EE.\n */\n\nfunction useRoutes(path: string): RouteReturnType[] {\n  const isSideBySideEnabled = useSelector(getIsSideBySideEnabled);\n  const editorMode = useSelector(getIDEViewMode);\n\n  if (isSideBySideEnabled && editorMode === EditorViewMode.SplitScreen) {\n    return [\n      {\n        key: \"Canvas\",\n        component: WidgetsEditor,\n        exact: true,\n        path: [\n          BUILDER_PATH_DEPRECATED,\n          BUILDER_PATH,\n          BUILDER_CUSTOM_PATH,\n          `${BUILDER_PATH_DEPRECATED}${ADD_PATH}`,\n          `${BUILDER_PATH}${ADD_PATH}`,\n          `${BUILDER_CUSTOM_PATH}${ADD_PATH}`,\n          `${path}${ADD_PATH}`,\n          `${path}${WIDGETS_EDITOR_BASE_PATH}`,\n          `${path}${WIDGETS_EDITOR_ID_PATH}`,\n          `${path}${WIDGETS_EDITOR_ID_PATH}${ADD_PATH}`,\n          `${path}${API_EDITOR_ID_PATH}`,\n          `${path}${API_EDITOR_ID_PATH}${LIST_PATH}`,\n          `${path}${API_EDITOR_ID_ADD_PATH}`,\n          `${path}${QUERIES_EDITOR_BASE_PATH}`,\n          `${path}${QUERIES_EDITOR_BASE_PATH}${ADD_PATH}`,\n          `${path}${QUERIES_EDITOR_ID_PATH}`,\n          `${path}${QUERIES_EDITOR_ID_ADD_PATH}`,\n          `${path}${QUERIES_EDITOR_ID_PATH}${LIST_PATH}`,\n          `${path}${JS_COLLECTION_EDITOR_PATH}`,\n          `${path}${JS_COLLECTION_EDITOR_PATH}${ADD_PATH}`,\n          `${path}${JS_COLLECTION_ID_PATH}`,\n          `${path}${JS_COLLECTION_ID_PATH}${LIST_PATH}`,\n          `${path}${CURL_IMPORT_PAGE_PATH}`,\n          `${path}${CURL_IMPORT_PAGE_PATH}${ADD_PATH}`,\n          `${path}${SAAS_EDITOR_PATH}`,\n          `${path}${SAAS_EDITOR_API_ID_PATH}`,\n          `${path}${SAAS_EDITOR_API_ID_ADD_PATH}`,\n          `${path}${APP_LIBRARIES_EDITOR_PATH}`,\n          `${path}${APP_SETTINGS_EDITOR_PATH}`,\n        ],\n      },\n      {\n        key: \"Datasource Create and Active\",\n        component: CreateNewDatasourceTab,\n        exact: true,\n        path: `${path}${INTEGRATION_EDITOR_PATH}`,\n      },\n      {\n        key: \"OnboardingChecklist\",\n        component: OnboardingChecklist,\n        exact: true,\n        path: `${path}${BUILDER_CHECKLIST_PATH}`,\n      },\n      {\n        key: \"DatasourceEditor\",\n        component: DataSourceEditor,\n        exact: true,\n        path: `${path}${DATA_SOURCES_EDITOR_ID_PATH}`,\n      },\n      {\n        key: \"DatasourceBlankState\",\n        component: DatasourceBlankState,\n        exact: true,\n        path: `${path}${DATA_SOURCES_EDITOR_LIST_PATH}`,\n      },\n      {\n        key: \"SAASDatasourceEditor\",\n        component: DatasourceForm,\n        exact: true,\n        path: `${path}${SAAS_EDITOR_DATASOURCE_ID_PATH}`,\n      },\n      {\n        key: \"GeneratePage\",\n        component: GeneratePage,\n        exact: true,\n        path: `${path}${GENERATE_TEMPLATE_FORM_PATH}`,\n      },\n    ];\n  }\n\n  return [\n    {\n      key: \"Canvas\",\n      component: WidgetsEditor,\n      exact: true,\n      path: [\n        BUILDER_PATH_DEPRECATED,\n        BUILDER_PATH,\n        BUILDER_CUSTOM_PATH,\n        `${BUILDER_PATH_DEPRECATED}${ADD_PATH}`,\n        `${BUILDER_PATH}${ADD_PATH}`,\n        `${BUILDER_CUSTOM_PATH}${ADD_PATH}`,\n        `${path}${ADD_PATH}`,\n        `${path}${WIDGETS_EDITOR_BASE_PATH}`,\n        `${path}${WIDGETS_EDITOR_ID_PATH}`,\n        `${path}${WIDGETS_EDITOR_ID_PATH}${ADD_PATH}`,\n        `${path}${APP_LIBRARIES_EDITOR_PATH}`,\n        `${path}${APP_SETTINGS_EDITOR_PATH}`,\n      ],\n    },\n    {\n      key: \"Datasource Create and Active\",\n      component: CreateNewDatasourceTab,\n      exact: true,\n      path: `${path}${INTEGRATION_EDITOR_PATH}`,\n    },\n    {\n      key: \"OnboardingChecklist\",\n      component: OnboardingChecklist,\n      exact: true,\n      path: `${path}${BUILDER_CHECKLIST_PATH}`,\n    },\n    {\n      key: \"QueryEditorAdd\",\n      component: QueriesAddState,\n      exact: true,\n      path: [\n        `${path}${QUERIES_EDITOR_BASE_PATH}${ADD_PATH}`,\n        `${path}${QUERIES_EDITOR_ID_ADD_PATH}`,\n        `${path}${API_EDITOR_ID_ADD_PATH}`,\n        `${path}${CURL_IMPORT_PAGE_PATH}${ADD_PATH}`,\n        `${path}${SAAS_EDITOR_API_ID_ADD_PATH}`,\n      ],\n    },\n    {\n      key: \"ApiEditor\",\n      component: ApiEditor,\n      exact: true,\n      path: [`${path}${API_EDITOR_ID_PATH}`],\n    },\n    {\n      key: \"QueryEditorList\",\n      component: QueriesBlankState,\n      exact: true,\n      path: [`${path}${QUERIES_EDITOR_BASE_PATH}`],\n    },\n    {\n      key: \"QueryEditor\",\n      component: QueryEditor,\n      exact: true,\n      path: [`${path}${QUERIES_EDITOR_ID_PATH}`],\n    },\n    {\n      key: \"JSEditorAdd\",\n      component: JSAddState,\n      exact: true,\n      path: [\n        `${path}${JS_COLLECTION_EDITOR_PATH}${ADD_PATH}`,\n        `${path}${JS_COLLECTION_ID_PATH}${ADD_PATH}`,\n      ],\n    },\n    {\n      key: \"JSEditorList\",\n      component: JSBlankState,\n      exact: true,\n      path: [`${path}${JS_COLLECTION_EDITOR_PATH}`],\n    },\n    {\n      key: \"JSEditor File\",\n      component: JSEditor,\n      exact: true,\n      path: [`${path}${JS_COLLECTION_ID_PATH}`],\n    },\n    {\n      key: \"CurlImportEditor\",\n      component: CurlImportEditor,\n      exact: true,\n      path: [`${path}${CURL_IMPORT_PAGE_PATH}`],\n    },\n    {\n      key: \"SAASList\",\n      component: ListView,\n      exact: true,\n      path: `${path}${SAAS_EDITOR_PATH}`,\n    },\n    {\n      key: \"SAASDatasourceEditor\",\n      component: DatasourceForm,\n      exact: true,\n      path: `${path}${SAAS_EDITOR_DATASOURCE_ID_PATH}`,\n    },\n    {\n      key: \"SAASEditor\",\n      component: QueryEditor,\n      exact: true,\n      path: [`${path}${SAAS_EDITOR_API_ID_PATH}`],\n    },\n    {\n      key: \"DatasourceEditor\",\n      component: DataSourceEditor,\n      exact: true,\n      path: `${path}${DATA_SOURCES_EDITOR_ID_PATH}`,\n    },\n    {\n      key: \"DatasourceBlankState\",\n      component: DatasourceBlankState,\n      exact: true,\n      path: `${path}${DATA_SOURCES_EDITOR_LIST_PATH}`,\n    },\n    {\n      key: \"GeneratePage\",\n      component: GeneratePage,\n      exact: true,\n      path: `${path}${GENERATE_TEMPLATE_FORM_PATH}`,\n    },\n  ];\n}\n\nexport default useRoutes;\n","export * from \"ce/pages/Editor/IDE/MainPane/useRoutes\";\nimport { default as useCE_Routes } from \"ce/pages/Editor/IDE/MainPane/useRoutes\";\nexport default useCE_Routes;\n","import React from \"react\";\nimport { BUILDER_PATH } from \"constants/routes\";\nimport { Route, Switch, useRouteMatch } from \"react-router\";\nimport * as Sentry from \"@sentry/react\";\nimport useRoutes from \"@appsmith/pages/Editor/IDE/MainPane/useRoutes\";\nimport EditorTabs from \"pages/Editor/IDE/EditorTabs\";\nimport { useWidgetSelectionBlockListener } from \"pages/Editor/IDE/hooks\";\nimport { useSelector } from \"react-redux\";\nimport { getIDEViewMode } from \"selectors/ideSelectors\";\nimport { EditorViewMode } from \"@appsmith/entities/IDE/constants\";\n\nconst SentryRoute = Sentry.withSentryRouting(Route);\nexport const MainPane = (props: { id: string }) => {\n  const { path } = useRouteMatch();\n  const ideViewMode = useSelector(getIDEViewMode);\n  const routes = useRoutes(path);\n  useWidgetSelectionBlockListener();\n\n  return (\n    <div\n      className=\"relative flex flex-col flex-1 overflow-auto z-2\"\n      data-testid=\"t--ide-main-pane\"\n      id={props.id}\n    >\n      {ideViewMode === EditorViewMode.FullScreen ? <EditorTabs /> : null}\n      <Switch key={BUILDER_PATH}>\n        {routes.map((route) => (\n          <SentryRoute {...route} key={route.key} />\n        ))}\n      </Switch>\n    </div>\n  );\n};\n\nexport default MainPane;\n","import React, { useEffect } from \"react\";\nimport { Modal, ModalContent, ModalHeader, ModalBody } from \"design-system\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { CREATE_A_NEW_ITEM, createMessage } from \"@appsmith/constants/messages\";\nimport GroupedList from \"pages/Editor/IDE/EditorPane/components/GroupedList\";\nimport {\n  useAddQueryListItems,\n  useGroupedAddQueryOperations,\n} from \"@appsmith/pages/Editor/IDE/EditorPane/Query/hooks\";\nimport { getShowCreateNewModal } from \"selectors/ideSelectors\";\nimport { setShowQueryCreateNewModal } from \"actions/ideActions\";\n\nconst CreateNewQueryModal: React.FC = () => {\n  const dispatch = useDispatch();\n  const groupedActionOperations = useGroupedAddQueryOperations();\n  const { getListItems } = useAddQueryListItems();\n  const showCreateNewModal = useSelector(getShowCreateNewModal);\n\n  const onCloseHandler = (open: boolean) => {\n    if (!open) {\n      dispatch(setShowQueryCreateNewModal(false));\n    }\n  };\n\n  useEffect(() => {\n    // to avoid opening the pop up again when page navigates back to canvas\n    return () => {\n      onCloseHandler(false);\n    };\n  }, []);\n\n  return (\n    <Modal onOpenChange={onCloseHandler} open={showCreateNewModal}>\n      <ModalContent className=\"!w-[400px] action-creator-create-new-modal\">\n        <ModalHeader>{createMessage(CREATE_A_NEW_ITEM, \"query\")}</ModalHeader>\n        <ModalBody>\n          <GroupedList\n            groups={groupedActionOperations.map((group) => ({\n              groupTitle: group.title,\n              className: group.className,\n              items: getListItems(group.operations),\n            }))}\n          />\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  );\n};\n\nexport { CreateNewQueryModal };\n","import { setPropertyPaneWidthAction } from \"actions/propertyPaneActions\";\nimport PropertyPaneSidebar from \"components/editorComponents/PropertyPaneSidebar\";\nimport React, { useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getPropertyPaneWidth } from \"selectors/propertyPaneSelectors\";\nimport { CreateNewQueryModal } from \"pages/Editor/IDE/RightPane/components/CreateNewQueryModal\";\n\n/**\n * PropertyPaneWrapper\n *\n * This component is used to wrap the property pane sidebar and create new modal.\n * It is used to handle the width of the property pane sidebar.\n */\nfunction PropertyPaneWrapper() {\n  const dispatch = useDispatch();\n  const propertyPaneWidth = useSelector(getPropertyPaneWidth);\n\n  /**\n   * on property pane sidebar drag end\n   *\n   * @return void\n   */\n  const onRightSidebarDragEnd = useCallback(() => {\n    dispatch(setPropertyPaneWidthAction(propertyPaneWidth));\n  }, [propertyPaneWidth]);\n\n  /**\n   * on property pane sidebar width change\n   */\n  const onRightSidebarWidthChange = useCallback((newWidth) => {\n    dispatch(setPropertyPaneWidthAction(newWidth));\n  }, []);\n\n  return (\n    <>\n      <PropertyPaneSidebar\n        onDragEnd={onRightSidebarDragEnd}\n        onWidthChange={onRightSidebarWidthChange}\n        width={propertyPaneWidth}\n      />\n      <CreateNewQueryModal />\n    </>\n  );\n}\n\nexport default PropertyPaneWrapper;\n","import React from \"react\";\nimport PropertyPaneWrapper from \"pages/Editor/WidgetsEditor/components/PropertyPaneWrapper\";\nimport {\n  ADD_PATH,\n  BUILDER_CUSTOM_PATH,\n  BUILDER_PATH,\n  BUILDER_PATH_DEPRECATED,\n  WIDGETS_EDITOR_BASE_PATH,\n  WIDGETS_EDITOR_ID_PATH,\n} from \"constants/routes\";\nimport { useRouteMatch } from \"react-router\";\nimport { SentryRoute } from \"@appsmith/AppRouter\";\n\nconst RightPane = () => {\n  const { path } = useRouteMatch();\n  return (\n    <SentryRoute\n      component={PropertyPaneWrapper}\n      exact\n      path={[\n        BUILDER_PATH_DEPRECATED,\n        BUILDER_PATH,\n        BUILDER_CUSTOM_PATH,\n        `${path}${ADD_PATH}`,\n        `${path}${WIDGETS_EDITOR_BASE_PATH}`,\n        `${path}${WIDGETS_EDITOR_ID_PATH}`,\n        `${path}${WIDGETS_EDITOR_ID_PATH}${ADD_PATH}`,\n      ]}\n    />\n  );\n};\n\nexport default RightPane;\n","import React from \"react\";\nimport { Callout } from \"design-system\";\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  setShowBranchPopupAction,\n  updateGitProtectedBranchesInit,\n} from \"actions/gitSyncActions\";\nimport {\n  getCurrentGitBranch,\n  getIsUpdateProtectedBranchesLoading,\n  getProtectedBranchesSelector,\n} from \"selectors/gitSyncSelectors\";\nimport {\n  BRANCH_PROTECTION_CALLOUT_CREATE_BRANCH,\n  BRANCH_PROTECTION_CALLOUT_MSG,\n  BRANCH_PROTECTION_CALLOUT_UNPROTECT,\n  BRANCH_PROTECTION_CALLOUT_UNPROTECT_LOADING,\n  createMessage,\n} from \"@appsmith/constants/messages\";\n\nconst StyledCallout = styled(Callout)`\n  height: 70px;\n  overflow-y: hidden;\n`;\n\nfunction ProtectedCallout() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsUpdateProtectedBranchesLoading);\n  const currentBranch = useSelector(getCurrentGitBranch);\n  const protectedBranches = useSelector(getProtectedBranchesSelector);\n\n  const handleClickOnNewBranch = () => {\n    dispatch(setShowBranchPopupAction(true));\n  };\n\n  const handleClickOnUnprotect = () => {\n    const remainingBranches = protectedBranches.filter(\n      (protectedBranch) => protectedBranch !== currentBranch,\n    );\n    dispatch(\n      updateGitProtectedBranchesInit({\n        protectedBranches: remainingBranches,\n      }),\n    );\n  };\n\n  return (\n    // @ts-expect-error Key is valid but does not exist in CalloutProps\n    <StyledCallout\n      data-testid=\"t--git-protected-branch-callout\"\n      kind=\"info\"\n      links={[\n        {\n          key: \"create-branch\",\n          \"data-testid\": \"t--git-protected-create-branch-cta\",\n          children: createMessage(BRANCH_PROTECTION_CALLOUT_CREATE_BRANCH),\n          onClick: handleClickOnNewBranch,\n        },\n        {\n          key: \"unprotect\",\n          \"data-testid\": \"t--git-protected-unprotect-branch-cta\",\n          children: isLoading\n            ? createMessage(BRANCH_PROTECTION_CALLOUT_UNPROTECT_LOADING)\n            : createMessage(BRANCH_PROTECTION_CALLOUT_UNPROTECT),\n          onClick: handleClickOnUnprotect,\n          isDisabled: isLoading,\n        },\n      ]}\n    >\n      {createMessage(BRANCH_PROTECTION_CALLOUT_MSG)}\n    </StyledCallout>\n  );\n}\n\nexport default ProtectedCallout;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport BottomBar from \"components/BottomBar\";\nimport {\n  combinedPreviewModeSelector,\n  previewModeSelector,\n} from \"selectors/editorSelectors\";\nimport EditorWrapperContainer from \"../commons/EditorWrapperContainer\";\nimport Sidebar from \"pages/Editor/IDE/Sidebar\";\nimport LeftPane from \"./LeftPane\";\nimport MainPane from \"./MainPane\";\nimport RightPane from \"./RightPane\";\nimport classNames from \"classnames\";\nimport { tailwindLayers } from \"constants/Layers\";\nimport { protectedModeSelector } from \"selectors/gitSyncSelectors\";\nimport ProtectedCallout from \"./ProtectedCallout\";\n\n/**\n * OldName: MainContainer\n */\nfunction IDE() {\n  const isPreviewMode = useSelector(previewModeSelector);\n  const isCombinedPreviewMode = useSelector(combinedPreviewModeSelector);\n  const isProtectedMode = useSelector(protectedModeSelector);\n\n  return (\n    <>\n      {isProtectedMode && <ProtectedCallout />}\n      <EditorWrapperContainer>\n        <div\n          className={classNames({\n            [`transition-transform transform duration-400 flex ${tailwindLayers.entityExplorer}`]:\n              true,\n            relative: !isCombinedPreviewMode,\n            \"-translate-x-full fixed\": isCombinedPreviewMode,\n          })}\n        >\n          <Sidebar />\n          <LeftPane />\n        </div>\n        <MainPane id=\"app-body\" />\n        <div\n          className={classNames({\n            [`transition-transform transform duration-400 h-full ${tailwindLayers.propertyPane}`]:\n              true,\n            relative: !isCombinedPreviewMode,\n            \"translate-x-full fixed right-0\": isCombinedPreviewMode,\n          })}\n        >\n          <RightPane />\n        </div>\n      </EditorWrapperContainer>\n      <BottomBar viewMode={isPreviewMode} />\n    </>\n  );\n}\n\nIDE.displayName = \"AppsmithIDE\";\n\nexport default React.memo(IDE);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport type { AppState } from \"@appsmith/reducers\";\nimport { Hotkey, Hotkeys, HotkeysTarget } from \"@blueprintjs/core\";\nimport {\n  closePropertyPane,\n  closeTableFilterPane,\n  copyWidget,\n  cutWidget,\n  deleteSelectedWidget,\n  groupWidgets,\n  pasteWidget,\n} from \"actions/widgetActions\";\nimport { selectWidgetInitAction } from \"actions/widgetSelectionActions\";\nimport { setGlobalSearchCategory } from \"actions/globalSearchActions\";\nimport { getSelectedText, isMacOrIOS } from \"utils/helpers\";\nimport { getLastSelectedWidget, getSelectedWidgets } from \"selectors/ui\";\nimport { MAIN_CONTAINER_WIDGET_ID } from \"constants/WidgetConstants\";\nimport AnalyticsUtil from \"@appsmith/utils/AnalyticsUtil\";\nimport { WIDGETS_SEARCH_ID } from \"constants/Explorer\";\nimport { resetSnipingMode as resetSnipingModeAction } from \"actions/propertyPaneActions\";\n\nimport { runActionViaShortcut } from \"actions/pluginActionActions\";\nimport type { SearchCategory } from \"components/editorComponents/GlobalSearch/utils\";\nimport {\n  filterCategories,\n  SEARCH_CATEGORY_ID,\n} from \"components/editorComponents/GlobalSearch/utils\";\nimport { redoAction, undoAction } from \"actions/pageActions\";\n\nimport { getAppMode } from \"@appsmith/selectors/applicationSelectors\";\nimport type { APP_MODE } from \"entities/App\";\n\nimport {\n  createMessage,\n  SAVE_HOTKEY_TOASTER_MESSAGE,\n} from \"@appsmith/constants/messages\";\nimport { previewModeSelector } from \"selectors/editorSelectors\";\nimport { setIsGitSyncModalOpen } from \"actions/gitSyncActions\";\nimport { GitSyncModalTab } from \"entities/GitSync\";\nimport { matchBuilderPath } from \"constants/routes\";\nimport { toggleInstaller } from \"actions/JSLibraryActions\";\nimport { SelectionRequestType } from \"sagas/WidgetSelectUtils\";\nimport { toast } from \"design-system\";\nimport { showDebuggerFlag } from \"selectors/debuggerSelectors\";\nimport { getIsFirstTimeUserOnboardingEnabled } from \"selectors/onboardingSelectors\";\nimport WalkthroughContext from \"components/featureWalkthrough/walkthroughContext\";\nimport { protectedModeSelector } from \"selectors/gitSyncSelectors\";\nimport { setPreviewModeInitAction } from \"actions/editorActions\";\n\ninterface Props {\n  copySelectedWidget: () => void;\n  pasteCopiedWidget: (mouseLocation: { x: number; y: number }) => void;\n  deleteSelectedWidget: () => void;\n  cutSelectedWidget: () => void;\n  groupSelectedWidget: () => void;\n  setGlobalSearchCategory: (category: SearchCategory) => void;\n  resetSnipingMode: () => void;\n  closeProppane: () => void;\n  closeTableFilterProppane: () => void;\n  executeAction: () => void;\n  selectAllWidgetsInit: () => void;\n  deselectAllWidgets: () => void;\n  selectedWidget?: string;\n  selectedWidgets: string[];\n  isDebuggerOpen: boolean;\n  children: React.ReactNode;\n  undo: () => void;\n  redo: () => void;\n  appMode?: APP_MODE;\n  isPreviewMode: boolean;\n  isProtectedMode: boolean;\n  setPreviewModeInitAction: (shouldSet: boolean) => void;\n  isSignpostingEnabled: boolean;\n  showCommitModal: () => void;\n  getMousePosition: () => { x: number; y: number };\n  hideInstaller: () => void;\n  toggleDebugger: () => void;\n}\n\n@HotkeysTarget\nclass GlobalHotKeys extends React.Component<Props> {\n  public stopPropagationIfWidgetSelected(e: KeyboardEvent): boolean {\n    const multipleWidgetsSelected =\n      this.props.selectedWidgets && this.props.selectedWidgets.length;\n    const singleWidgetSelected =\n      this.props.selectedWidget &&\n      this.props.selectedWidget != MAIN_CONTAINER_WIDGET_ID;\n    if (\n      (singleWidgetSelected || multipleWidgetsSelected) &&\n      !getSelectedText()\n    ) {\n      e.preventDefault();\n      e.stopPropagation();\n      return true;\n    }\n    return false;\n  }\n\n  public onOnmnibarHotKeyDown(\n    e: KeyboardEvent,\n    categoryId: SEARCH_CATEGORY_ID = SEARCH_CATEGORY_ID.NAVIGATION,\n  ) {\n    e.preventDefault();\n\n    // don't open omnibar if preview mode is on\n    if (this.props.isPreviewMode) return;\n\n    const category = filterCategories[categoryId];\n    this.props.setGlobalSearchCategory(category);\n    this.props.hideInstaller();\n    AnalyticsUtil.logEvent(\"OPEN_OMNIBAR\", {\n      source: \"HOTKEY_COMBO\",\n      category: category.title,\n    });\n  }\n\n  public renderHotkeys() {\n    const { isOpened: isWalkthroughOpened } = this.context ?? {};\n    const { isProtectedMode } = this.props;\n    // If walkthrough is open disable shortcuts\n    if (isWalkthroughOpened || isProtectedMode) return <Hotkeys />;\n\n    return (\n      <Hotkeys>\n        <Hotkey\n          combo=\"mod + f\"\n          global\n          label=\"Search entities\"\n          onKeyDown={(e: any) => {\n            const widgetSearchInput =\n              document.getElementById(WIDGETS_SEARCH_ID);\n            if (widgetSearchInput) {\n              widgetSearchInput.focus();\n              e.preventDefault();\n              e.stopPropagation();\n            }\n          }}\n        />\n        <Hotkey\n          allowInInput\n          combo=\"mod + p\"\n          global\n          label=\"Navigate\"\n          onKeyDown={(e) => this.onOnmnibarHotKeyDown(e)}\n        />\n        <Hotkey\n          allowInInput\n          combo=\"mod + plus\"\n          global\n          label=\"Create new\"\n          onKeyDown={(e) =>\n            this.onOnmnibarHotKeyDown(e, SEARCH_CATEGORY_ID.ACTION_OPERATION)\n          }\n        />\n        <Hotkey\n          allowInInput\n          combo=\"mod + k\"\n          global\n          label=\"Show omnibar\"\n          onKeyDown={(e) =>\n            this.onOnmnibarHotKeyDown(e, SEARCH_CATEGORY_ID.INIT)\n          }\n        />\n        <Hotkey\n          allowInInput\n          combo=\"mod + d\"\n          global\n          group=\"Canvas\"\n          label=\"Open Debugger\"\n          onKeyDown={this.props.toggleDebugger}\n          preventDefault\n        />\n        <Hotkey\n          combo=\"mod + c\"\n          global\n          group=\"Canvas\"\n          label=\"Copy widget\"\n          onKeyDown={(e: any) => {\n            if (this.stopPropagationIfWidgetSelected(e)) {\n              this.props.copySelectedWidget();\n            }\n          }}\n        />\n        <Hotkey\n          combo=\"mod + v\"\n          global\n          group=\"Canvas\"\n          label=\"Paste Widget\"\n          onKeyDown={() => {\n            if (matchBuilderPath(window.location.pathname)) {\n              this.props.pasteCopiedWidget(\n                this.props.getMousePosition() || { x: 0, y: 0 },\n              );\n            }\n          }}\n        />\n        <Hotkey\n          combo=\"backspace\"\n          global\n          group=\"Canvas\"\n          label=\"Delete widget\"\n          onKeyDown={(e: any) => {\n            if (this.stopPropagationIfWidgetSelected(e) && isMacOrIOS()) {\n              this.props.deleteSelectedWidget();\n            }\n          }}\n        />\n        <Hotkey\n          combo=\"del\"\n          global\n          group=\"Canvas\"\n          label=\"Delete widget\"\n          onKeyDown={(e: any) => {\n            if (this.stopPropagationIfWidgetSelected(e)) {\n              this.props.deleteSelectedWidget();\n            }\n          }}\n        />\n        <Hotkey\n          combo=\"mod + x\"\n          global\n          group=\"Canvas\"\n          label=\"Cut Widget\"\n          onKeyDown={(e: any) => {\n            if (this.stopPropagationIfWidgetSelected(e)) {\n              this.props.cutSelectedWidget();\n            }\n          }}\n        />\n\n        <Hotkey\n          combo=\"mod + a\"\n          global\n          group=\"Canvas\"\n          label=\"Select all Widget\"\n          onKeyDown={(e: any) => {\n            if (matchBuilderPath(window.location.pathname)) {\n              this.props.selectAllWidgetsInit();\n              e.preventDefault();\n            }\n          }}\n        />\n        <Hotkey\n          combo=\"esc\"\n          global\n          group=\"Canvas\"\n          label=\"Deselect all Widget\"\n          onKeyDown={(e: any) => {\n            this.props.resetSnipingMode();\n            if (matchBuilderPath(window.location.pathname)) {\n              this.props.deselectAllWidgets();\n              this.props.closeProppane();\n              this.props.closeTableFilterProppane();\n            }\n            e.preventDefault();\n          }}\n        />\n        <Hotkey\n          combo=\"v\"\n          global\n          label=\"Edit Mode\"\n          onKeyDown={(e: any) => {\n            this.props.resetSnipingMode();\n            e.preventDefault();\n          }}\n        />\n        <Hotkey\n          allowInInput\n          combo=\"mod + enter\"\n          global\n          label=\"Execute Action\"\n          onKeyDown={this.props.executeAction}\n          preventDefault\n          stopPropagation\n        />\n        <Hotkey\n          combo=\"mod + z\"\n          global\n          label=\"Undo change in canvas\"\n          onKeyDown={this.props.undo}\n          preventDefault\n          stopPropagation\n        />\n        <Hotkey\n          combo=\"mod + shift + z\"\n          global\n          label=\"Redo change in canvas\"\n          onKeyDown={this.props.redo}\n          preventDefault\n          stopPropagation\n        />\n        <Hotkey\n          combo=\"mod + y\"\n          global\n          label=\"Redo change in canvas\"\n          onKeyDown={this.props.redo}\n          preventDefault\n          stopPropagation\n        />\n        <Hotkey\n          combo=\"mod + g\"\n          global\n          group=\"Canvas\"\n          label=\"Cut Widgets for grouping\"\n          onKeyDown={(e: any) => {\n            if (this.stopPropagationIfWidgetSelected(e)) {\n              this.props.groupSelectedWidget();\n            }\n          }}\n        />\n        <Hotkey\n          combo=\"mod + s\"\n          global\n          label=\"Save progress\"\n          onKeyDown={() => {\n            toast.show(createMessage(SAVE_HOTKEY_TOASTER_MESSAGE), {\n              kind: \"info\",\n            });\n          }}\n          preventDefault\n          stopPropagation\n        />\n        <Hotkey\n          combo=\"alt + p\"\n          global\n          label=\"Preview Mode\"\n          onKeyDown={() => {\n            this.props.setPreviewModeInitAction(!this.props.isPreviewMode);\n          }}\n        />\n        <Hotkey\n          combo=\"ctrl + shift + g\"\n          global\n          label=\"Show git commit modal\"\n          onKeyDown={() => {\n            this.props.showCommitModal();\n          }}\n        />\n      </Hotkeys>\n    );\n  }\n\n  render() {\n    return <div>{this.props.children}</div>;\n  }\n}\n\nconst mapStateToProps = (state: AppState) => ({\n  selectedWidget: getLastSelectedWidget(state),\n  selectedWidgets: getSelectedWidgets(state),\n  isDebuggerOpen: showDebuggerFlag(state),\n  appMode: getAppMode(state),\n  isPreviewMode: previewModeSelector(state),\n  isProtectedMode: protectedModeSelector(state),\n  isSignpostingEnabled: getIsFirstTimeUserOnboardingEnabled(state),\n});\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    copySelectedWidget: () => dispatch(copyWidget(true)),\n    pasteCopiedWidget: (mouseLocation: { x: number; y: number }) =>\n      dispatch(\n        pasteWidget({\n          groupWidgets: false,\n          mouseLocation,\n        }),\n      ),\n    deleteSelectedWidget: () => dispatch(deleteSelectedWidget(true)),\n    cutSelectedWidget: () => dispatch(cutWidget()),\n    groupSelectedWidget: () => dispatch(groupWidgets()),\n    setGlobalSearchCategory: (category: SearchCategory) =>\n      dispatch(setGlobalSearchCategory(category)),\n    resetSnipingMode: () => dispatch(resetSnipingModeAction()),\n    closeProppane: () => dispatch(closePropertyPane()),\n    closeTableFilterProppane: () => dispatch(closeTableFilterPane()),\n    selectAllWidgetsInit: () =>\n      dispatch(selectWidgetInitAction(SelectionRequestType.All)),\n    deselectAllWidgets: () =>\n      dispatch(selectWidgetInitAction(SelectionRequestType.Empty)),\n    executeAction: () => dispatch(runActionViaShortcut()),\n    undo: () => dispatch(undoAction()),\n    redo: () => dispatch(redoAction()),\n    showCommitModal: () =>\n      dispatch(\n        setIsGitSyncModalOpen({\n          isOpen: true,\n          tab: GitSyncModalTab.DEPLOY,\n        }),\n      ),\n    hideInstaller: () => dispatch(toggleInstaller(false)),\n    setPreviewModeInitAction: (shouldSet: boolean) =>\n      dispatch(setPreviewModeInitAction(shouldSet)),\n  };\n};\n\nGlobalHotKeys.contextType = WalkthroughContext;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GlobalHotKeys);\n","import GlobalHotKeys from \"./GlobalHotKeys\";\nimport React from \"react\";\nimport { useMouseLocation } from \"./useMouseLocation\";\nimport useDebuggerTriggerClick from \"components/editorComponents/Debugger/hooks/useDebuggerTriggerClick\";\n\n//HOC to track user's mouse location, separated out so that it doesn't render the component on every mouse move\nfunction HotKeysHOC(props: any) {\n  const getMousePosition = useMouseLocation();\n  const toggleDebugger = useDebuggerTriggerClick();\n\n  return (\n    <GlobalHotKeys\n      {...props}\n      getMousePosition={getMousePosition}\n      toggleDebugger={toggleDebugger}\n    >\n      {props.children}\n    </GlobalHotKeys>\n  );\n}\n\nexport default HotKeysHOC;\n","import { useEffect, useRef } from \"react\";\n\nexport const useMouseLocation = () => {\n  const mousePosition = useRef<{ x: number; y: number }>({\n    x: 0,\n    y: 0,\n  });\n\n  const setMousePosition = (e: any) => {\n    if (e) {\n      mousePosition.current = { x: e.clientX, y: e.clientY };\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"mousemove\", setMousePosition);\n\n    () => {\n      window.removeEventListener(\"mousemove\", setMousePosition);\n    };\n  }, []);\n\n  return function () {\n    return mousePosition.current;\n  };\n};\n","import React, { useCallback, useState } from \"react\";\nimport {\n  getDisconnectDocUrl,\n  getDisconnectingGitApplication,\n  getIsDisconnectGitModalOpen,\n} from \"selectors/gitSyncSelectors\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  revokeGit,\n  setDisconnectingGitApplication,\n  setGitSettingsModalOpenAction,\n  setIsDisconnectGitModalOpen,\n} from \"actions/gitSyncActions\";\nimport {\n  Button,\n  Callout,\n  Input,\n  Modal,\n  ModalBody,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  Text,\n} from \"design-system\";\nimport {\n  APPLICATION_NAME,\n  createMessage,\n  GIT_REVOKE_ACCESS,\n  GIT_TYPE_REPO_NAME_FOR_REVOKING_ACCESS,\n  GO_BACK,\n  NONE_REVERSIBLE_MESSAGE,\n  REVOKE,\n} from \"@appsmith/constants/messages\";\nimport AnalyticsUtil from \"@appsmith/utils/AnalyticsUtil\";\nimport { Space } from \"./components/StyledComponents\";\nimport { GitSettingsTab } from \"reducers/uiReducers/gitSyncReducer\";\n\nfunction DisconnectGitModal() {\n  const dispatch = useDispatch();\n  const isModalOpen = useSelector(getIsDisconnectGitModalOpen);\n  const disconnectingApp = useSelector(getDisconnectingGitApplication);\n  const gitDisconnectDocumentUrl = useSelector(getDisconnectDocUrl);\n  const [appName, setAppName] = useState(\"\");\n  const [isRevoking, setIsRevoking] = useState(false);\n\n  const handleClickOnBack = useCallback(() => {\n    dispatch(setIsDisconnectGitModalOpen(false));\n    dispatch(\n      setGitSettingsModalOpenAction({\n        open: true,\n        tab: GitSettingsTab.GENERAL,\n      }),\n    );\n    dispatch(setDisconnectingGitApplication({ id: \"\", name: \"\" }));\n  }, [dispatch]);\n\n  const handleClose = useCallback(() => {\n    dispatch(setIsDisconnectGitModalOpen(false));\n  }, [dispatch, setIsDisconnectGitModalOpen]);\n\n  const onDisconnectGit = useCallback(() => {\n    setIsRevoking(true);\n    dispatch(revokeGit());\n  }, [dispatch, revokeGit]);\n\n  const shouldDisableRevokeButton =\n    disconnectingApp.id === \"\" ||\n    appName !== disconnectingApp.name ||\n    isRevoking;\n\n  return (\n    <Modal\n      onOpenChange={(open: boolean) => {\n        if (!open) handleClose();\n      }}\n      open={isModalOpen}\n    >\n      <ModalContent\n        data-testid=\"t--disconnect-git-modal\"\n        style={{ width: \"640px\" }}\n      >\n        <ModalHeader>\n          {createMessage(GIT_REVOKE_ACCESS, disconnectingApp.name)}\n        </ModalHeader>\n        <ModalBody>\n          <Text color={\"var(--ads-v2-color-fg-emphasis)\"} kind=\"heading-s\">\n            {createMessage(\n              GIT_TYPE_REPO_NAME_FOR_REVOKING_ACCESS,\n              disconnectingApp.name,\n            )}\n          </Text>\n          <Space size={2} />\n          <Input\n            className=\"t--git-app-name-input\"\n            label={createMessage(APPLICATION_NAME)}\n            onBlur={(event: React.FocusEvent<any, Element>) => {\n              AnalyticsUtil.logEvent(\n                \"GS_MATCHING_REPO_NAME_ON_GIT_DISCONNECT_MODAL\",\n                {\n                  value: event.target.value,\n                  expecting: disconnectingApp.name,\n                },\n              );\n            }}\n            onChange={(value: string) => setAppName(value)}\n            size=\"md\"\n            value={appName}\n          />\n          <Space size={2} />\n          <Callout\n            kind=\"error\"\n            links={[\n              {\n                children: \"Learn more\",\n                to: gitDisconnectDocumentUrl,\n                className: \"t--disconnect-learn-more\",\n              },\n            ]}\n          >\n            {createMessage(NONE_REVERSIBLE_MESSAGE)}\n          </Callout>\n        </ModalBody>\n        <ModalFooter>\n          <Button\n            className=\"t--git-revoke-back-button\"\n            kind=\"secondary\"\n            onClick={handleClickOnBack}\n            size=\"md\"\n          >\n            {createMessage(GO_BACK)}\n          </Button>\n          <Button\n            className=\"t--git-revoke-button\"\n            isDisabled={shouldDisableRevokeButton}\n            kind=\"primary\"\n            onClick={onDisconnectGit}\n            size=\"md\"\n          >\n            {createMessage(REVOKE)}\n          </Button>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  );\n}\n\nexport default DisconnectGitModal;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport {\n  createMessage,\n  APPLICATION_IMPORT_SUCCESS,\n  APPLICATION_IMPORT_SUCCESS_DESCRIPTION,\n} from \"@appsmith/constants/messages\";\nimport {\n  Button,\n  Icon,\n  Modal,\n  ModalBody,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  Text,\n} from \"design-system\";\n\nconst BodyContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  align-items: center;\n`;\n\nconst StyledModalContent = styled(ModalContent)`\n  width: 640px;\n`;\n\ninterface ImportSuccessModalProps {\n  title?: string;\n  description?: string;\n}\n\nfunction ImportSuccessModal(props: ImportSuccessModalProps) {\n  const {\n    description = createMessage(APPLICATION_IMPORT_SUCCESS_DESCRIPTION),\n    title = createMessage(APPLICATION_IMPORT_SUCCESS),\n  } = props;\n  const importedAppSuccess = localStorage.getItem(\"importSuccess\");\n  // const isOpen = importedAppSuccess === \"true\";\n  const [isOpen, setIsOpen] = useState(importedAppSuccess === \"true\");\n\n  const onClose = (open: boolean) => {\n    if (!open) {\n      close();\n    }\n  };\n\n  const close = () => {\n    setIsOpen(false);\n    localStorage.setItem(\"importSuccess\", \"false\");\n  };\n\n  return (\n    <Modal onOpenChange={onClose} open={isOpen}>\n      <StyledModalContent className={\"t--import-app-success-modal\"}>\n        <ModalHeader>Datasource configured</ModalHeader>\n        <ModalBody>\n          <BodyContainer>\n            <Icon\n              color=\"var(--ads-v2-color-fg-success)\"\n              name=\"success\"\n              size={\"lg\"}\n            />\n            <Text kind=\"heading-m\">{title}</Text>\n            <Text>{description}</Text>\n          </BodyContainer>\n        </ModalBody>\n        <ModalFooter>\n          <Button\n            className=\"t--import-success-modal-got-it\"\n            onClick={() => {\n              close();\n            }}\n            size={\"md\"}\n          >\n            Got it\n          </Button>\n        </ModalFooter>\n      </StyledModalContent>\n    </Modal>\n  );\n}\n\nexport default ImportSuccessModal;\n","import {\n  TEMPLATES_BACK_BUTTON,\n  createMessage,\n} from \"@appsmith/constants/messages\";\nimport { Link, Text } from \"design-system\";\nimport React from \"react\";\n\ninterface Props {\n  onBackPress: () => void;\n  title: string;\n}\n\nconst TemplateDetailedViewHeader = (props: Props) => {\n  return (\n    <div className=\"flex flex-row items-center \">\n      <Link\n        className=\"back-button\"\n        kind=\"secondary\"\n        onClick={props.onBackPress}\n        startIcon=\"back-control\"\n      >\n        {createMessage(TEMPLATES_BACK_BUTTON)}\n      </Link>\n      <Text kind=\"heading-l\">{props.title}</Text>\n    </div>\n  );\n};\n\nexport default TemplateDetailedViewHeader;\n","import type { ApplicationPagePayload } from \"@appsmith/api/ApplicationApi\";\nimport {\n  FILTER_SELECTALL,\n  FILTER_SELECT_PAGE,\n  FILTER_SELECT_PAGES,\n  PAGE,\n  PAGES,\n  createMessage,\n} from \"@appsmith/constants/messages\";\nimport { getCurrentAppWorkspace } from \"@appsmith/selectors/selectedWorkspaceSelectors\";\nimport { importTemplateIntoApplication } from \"actions/templateActions\";\nimport type { Template } from \"api/TemplatesApi\";\nimport { Button, Checkbox, Divider, Icon, Text } from \"design-system\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getCurrentApplicationId } from \"selectors/editorSelectors\";\nimport styled from \"styled-components\";\nimport AnalyticsUtil from \"@appsmith/utils/AnalyticsUtil\";\n\nconst Wrapper = styled.div`\n  width: 280px;\n  padding-left: ${(props) => props.theme.spaces[9]}px;\n  position: sticky;\n  top: 0;\n  height: fit-content;\n`;\n\nconst Card = styled.div`\n  padding: ${(props) => props.theme.spaces[9]}px;\n  border: solid 1px var(--ads-v2-color-border);\n  border-radius: var(--ads-v2-border-radius);\n`;\n\nconst CardHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst Page = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-top: 12px;\n  margin-bottom: 20px;\n  .ads-v2-checkbox {\n    height: 16px;\n    width: 16px;\n    padding: 0;\n  }\n`;\nconst PageName = styled.div`\n  cursor: pointer;\n  &:hover {\n    text-decoration: underline;\n    text-underline-offset: 2px;\n  }\n  .cs-text {\n    margin-left: 4px;\n  }\n`;\nconst StyledButton = styled(Button)`\n  margin-top: 12px;\n`;\n\ninterface PageSelectionProps {\n  isStartWithTemplateFlow: boolean;\n  pages: ApplicationPagePayload[];\n  template: Template;\n  onPageSelection: (pageId: string) => void;\n}\n\nfunction PageSelection(props: PageSelectionProps) {\n  const dispatch = useDispatch();\n  const [selectedPages, setSelectedPages] = useState(\n    props.pages.map((page) => page.name),\n  );\n  const pagesText =\n    props.pages.length > 1 || props.pages.length === 0\n      ? createMessage(PAGES)\n      : createMessage(PAGE);\n  const applicationId = useSelector(getCurrentApplicationId);\n  const currentWorkSpace = useSelector(getCurrentAppWorkspace);\n\n  useEffect(() => {\n    setSelectedPages(props.pages.map((page) => page.name));\n  }, [props.pages]);\n\n  const onSelection = (selectedPageName: string, checked: boolean) => {\n    if (checked) {\n      if (!selectedPages.includes(selectedPageName)) {\n        setSelectedPages((pages) => [...pages, selectedPageName]);\n      }\n    } else {\n      setSelectedPages((pages) =>\n        pages.filter((pageName) => pageName !== selectedPageName),\n      );\n    }\n  };\n\n  const onSelectAllToggle = (checked: boolean) => {\n    if (checked) {\n      setSelectedPages(props.pages.map((page) => page.name));\n    } else {\n      setSelectedPages([]);\n    }\n  };\n\n  const importPagesToApp = () => {\n    dispatch(\n      importTemplateIntoApplication(\n        props.template.id,\n        props.template.title,\n        selectedPages,\n      ),\n    );\n    if (props.isStartWithTemplateFlow) {\n      AnalyticsUtil.logEvent(\"fork_APPLICATIONTEMPLATE\", {\n        applicationId: applicationId,\n        workspaceId: currentWorkSpace.id,\n        source: \"canvas\",\n        eventData: {\n          templateAppName: props.template.title,\n          selectedPages,\n        },\n      });\n    }\n  };\n\n  return (\n    <Wrapper>\n      <Card>\n        <CardHeader>\n          <Text kind=\"heading-s\">\n            {props.pages.length} {pagesText}\n          </Text>\n          <div className=\"flex\">\n            {/* <Text type={TextType.P4}>{createMessage(FILTER_SELECTALL)}</Text> */}\n            <Checkbox\n              isDisabled={props.pages.length === 0}\n              isSelected={selectedPages.length === props.pages.length}\n              onChange={onSelectAllToggle}\n            >\n              {createMessage(FILTER_SELECTALL)}\n            </Checkbox>\n          </div>\n        </CardHeader>\n        <Divider />\n        {props.pages.map((page) => {\n          return (\n            <Page key={page.id}>\n              <PageName\n                className=\"flex items-center\"\n                onClick={() => props.onPageSelection(page.id)}\n              >\n                <Icon name=\"page-line\" size=\"md\" />\n                <Text className=\"cs-text\" kind=\"body-m\">\n                  {page.name}\n                </Text>\n              </PageName>\n              <Checkbox\n                isSelected={selectedPages.includes(page.name)}\n                onChange={(checked) => onSelection(page.name, checked)}\n              />\n            </Page>\n          );\n        })}\n        <StyledButton\n          data-testid=\"template-fork-button\"\n          isDisabled={!selectedPages.length}\n          onClick={importPagesToApp}\n          size=\"md\"\n        >\n          {createMessage(\n            props.pages.length === 1 ? FILTER_SELECT_PAGE : FILTER_SELECT_PAGES,\n          )}\n        </StyledButton>\n      </Card>\n    </Wrapper>\n  );\n}\n\nexport default PageSelection;\n","import {\n  createMessage,\n  FETCHING_TEMPLATES,\n  FORKING_TEMPLATE,\n} from \"@appsmith/constants/messages\";\nimport type { AppState } from \"@appsmith/reducers\";\nimport {\n  getSimilarTemplatesInit,\n  getTemplateInformation,\n} from \"actions/templateActions\";\nimport type { Template } from \"api/TemplatesApi\";\nimport { VIEWER_PATH, VIEWER_PATH_DEPRECATED } from \"constants/routes\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { generatePath, matchPath } from \"react-router\";\nimport {\n  getActiveTemplateSelector,\n  isFetchingTemplateSelector,\n  isImportingTemplateToAppSelector,\n} from \"selectors/templatesSelectors\";\nimport styled from \"styled-components\";\nimport { isURLDeprecated, trimQueryString } from \"utils/helpers\";\nimport SimilarTemplates from \"../Template/SimilarTemplates\";\nimport TemplateDescription from \"../Template/TemplateDescription\";\nimport { IframeTopBar, IframeWrapper } from \"../TemplateView\";\nimport TemplateDetailedViewHeader from \"./Components/TemplateDetailedViewHeader\";\nimport LoadingScreen from \"./LoadingScreen\";\nimport PageSelection from \"./PageSelection\";\n\nconst Wrapper = styled.div`\n  height: 85vh;\n  display: flex;\n  flex-direction: column;\n  overflow-y: auto;\n  .back-button {\n    margin-right: 8px;\n  }\n`;\n\nconst Body = styled.div`\n  margin-bottom: ${(props) => props.theme.spaces[7]}px;\n  height: 70vh;\n  overflow: auto;\n`;\n\nconst StyledSimilarTemplatesWrapper = styled(SimilarTemplates)`\n  padding: 0px;\n`;\n\nconst TemplateDescriptionWrapper = styled.div`\n  padding-bottom: 52px;\n`;\n\ninterface TemplateDetailedViewProps {\n  isStartWithTemplateFlow: boolean;\n  templateId: string;\n  onBackPress: () => void;\n  onClose: () => void;\n}\n\nfunction TemplateDetailedView(props: TemplateDetailedViewProps) {\n  const [currentTemplateId, setCurrentTemplateId] = useState(props.templateId);\n  const [previewUrl, setPreviewUrl] = useState(\"\");\n  const dispatch = useDispatch();\n  const similarTemplates = useSelector(\n    (state: AppState) => state.ui.templates.similarTemplates,\n  );\n  const isFetchingTemplate = useSelector(isFetchingTemplateSelector);\n  const isImportingTemplateToApp = useSelector(\n    isImportingTemplateToAppSelector,\n  );\n  const currentTemplate = useSelector(getActiveTemplateSelector);\n  const containerRef = useRef<HTMLDivElement>(null);\n  const LoadingText = isImportingTemplateToApp\n    ? createMessage(FORKING_TEMPLATE)\n    : createMessage(FETCHING_TEMPLATES);\n\n  useEffect(() => {\n    dispatch(getTemplateInformation(currentTemplateId));\n    dispatch(getSimilarTemplatesInit(currentTemplateId));\n  }, [currentTemplateId]);\n\n  useEffect(() => {\n    if (currentTemplate?.appUrl) {\n      setPreviewUrl(currentTemplate.appUrl);\n    }\n  }, [currentTemplate?.id]);\n\n  const onSimilarTemplateClick = (template: Template) => {\n    setCurrentTemplateId(template.id);\n    if (containerRef.current) {\n      containerRef.current.scrollTo({ top: 0 });\n    }\n  };\n\n  if (isFetchingTemplate || isImportingTemplateToApp) {\n    return <LoadingScreen text={LoadingText} />;\n  }\n\n  if (!currentTemplate) {\n    return null;\n  }\n\n  // Update the page id in the url\n  const onPageSelection = (pageId: string) => {\n    const url = new URL(currentTemplate.appUrl);\n    const path = isURLDeprecated(url.pathname)\n      ? VIEWER_PATH_DEPRECATED\n      : VIEWER_PATH;\n    const matchViewerPath = matchPath(url.pathname, {\n      path: [trimQueryString(path)],\n    });\n    url.pathname = generatePath(path, {\n      ...matchViewerPath?.params,\n      pageId,\n    });\n    setPreviewUrl(url.toString());\n  };\n\n  return (\n    <Wrapper ref={containerRef}>\n      <Body className=\"flex flex-row templates-body\">\n        <div className=\"flex flex-col flex-1\">\n          <TemplateDetailedViewHeader\n            onBackPress={props.onBackPress}\n            title={currentTemplate.title}\n          />\n          <IframeWrapper>\n            <IframeTopBar>\n              <div className=\"round red\" />\n              <div className=\"round yellow\" />\n              <div className=\"round green\" />\n            </IframeTopBar>\n            <iframe src={previewUrl} />\n          </IframeWrapper>\n          <TemplateDescriptionWrapper>\n            <TemplateDescription template={currentTemplate} />\n          </TemplateDescriptionWrapper>\n          <StyledSimilarTemplatesWrapper\n            isForkingEnabled={false}\n            onBackPress={props.onBackPress}\n            onClick={onSimilarTemplateClick}\n            onFork={onSimilarTemplateClick}\n            similarTemplates={similarTemplates}\n          />\n        </div>\n        <PageSelection\n          isStartWithTemplateFlow={props.isStartWithTemplateFlow}\n          onPageSelection={onPageSelection}\n          pages={currentTemplate.pages || []}\n          template={currentTemplate}\n        />\n      </Body>\n    </Wrapper>\n  );\n}\n\nexport default TemplateDetailedView;\n","// import { Text, TextType } from \"design-system-old\";\nimport {\n  ADD_PAGE_FROM_TEMPLATE_MODAL,\n  createMessage,\n} from \"@appsmith/constants/messages\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nconst BackText = styled.div<{ width?: number; hidden?: boolean }>`\n  ${(props) => props.hidden && \"visibility: hidden;\"}\n`;\nconst HeaderWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  .back-button {\n    margin-right: 8px;\n  }\n`;\n\ninterface TemplateModalHeaderProps {\n  className?: string;\n}\n\nfunction TemplateModalHeader(props: TemplateModalHeaderProps) {\n  return (\n    <HeaderWrapper className={props.className}>\n      <BackText>{createMessage(ADD_PAGE_FROM_TEMPLATE_MODAL.title)}</BackText>\n    </HeaderWrapper>\n  );\n}\n\nexport default TemplateModalHeader;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  allTemplatesFiltersSelector,\n  templateModalSelector,\n  templatesCountSelector,\n} from \"selectors/templatesSelectors\";\nimport {\n  getAllTemplates,\n  getTemplateFilters,\n  hideTemplatesModal,\n} from \"actions/templateActions\";\nimport { fetchDefaultPlugins } from \"actions/pluginActions\";\nimport TemplateDetailedView from \"./TemplateDetailedView\";\nimport { isEmpty } from \"lodash\";\nimport type { AppState } from \"@appsmith/reducers\";\nimport { Modal, ModalBody, ModalContent, ModalHeader } from \"design-system\";\nimport TemplateModalHeader from \"./Header\";\nimport { ReduxActionTypes } from \"@appsmith/constants/ReduxActionConstants\";\nimport TemplatesListLayoutSwitcher from \"./TemplatesListLayoutSwitcher\";\n\nconst ModalContentWrapper = styled(ModalContent)`\n  width: 100%;\n  overflow-y: hidden;\n  background-color: var(--ads-v2-color-gray-50);\n`;\nconst ModalBodyWrapper = styled(ModalBody)`\n  width: 100%;\n  overflow-y: hidden;\n`;\nfunction TemplatesModal() {\n  const templatesModalInfo = useSelector(templateModalSelector);\n  const dispatch = useDispatch();\n  const templatesCount = useSelector(templatesCountSelector);\n  const pluginListLength = useSelector(\n    (state: AppState) => state.entities.plugins.defaultPluginList.length,\n  );\n  const filters = useSelector(allTemplatesFiltersSelector);\n  const [showTemplateDetails, setShowTemplateDetails] = useState(\"\");\n\n  useEffect(() => {\n    setShowTemplateDetails(\"\");\n    if (templatesModalInfo.isOpen) {\n      dispatch({\n        type: ReduxActionTypes.RESET_TEMPLATE_FILTERS,\n      });\n    }\n  }, [templatesModalInfo]);\n\n  useEffect(() => {\n    if (!templatesCount && templatesModalInfo) {\n      dispatch(getAllTemplates());\n    }\n  }, [templatesCount, templatesModalInfo]);\n\n  useEffect(() => {\n    if (!pluginListLength) {\n      dispatch(fetchDefaultPlugins());\n    }\n  }, [pluginListLength]);\n\n  useEffect(() => {\n    if (isEmpty(filters.functions)) {\n      dispatch(getTemplateFilters());\n    }\n  }, [filters]);\n\n  const onClose = (open: boolean) => {\n    if (open === false) {\n      dispatch(hideTemplatesModal());\n      setShowTemplateDetails(\"\");\n    }\n  };\n\n  const onTemplateClick = (id: string) => {\n    setShowTemplateDetails(id);\n  };\n\n  return (\n    <Modal\n      onOpenChange={(open) => onClose(open)}\n      open={templatesModalInfo.isOpen}\n    >\n      <ModalContentWrapper data-testid=\"t--templates-dialog-component\">\n        <ModalHeader>\n          <TemplateModalHeader\n            className={!showTemplateDetails ? \"modal-header\" : \"\"}\n          />\n        </ModalHeader>\n        <ModalBodyWrapper>\n          {!!showTemplateDetails ? (\n            <TemplateDetailedView\n              isStartWithTemplateFlow={templatesModalInfo.isOpenFromCanvas}\n              onBackPress={() => setShowTemplateDetails(\"\")}\n              onClose={() => onClose(false)}\n              templateId={showTemplateDetails}\n            />\n          ) : (\n            <TemplatesListLayoutSwitcher\n              analyticsEventNameForTemplateCardClick=\"TEMPLATE_ADD_PAGE_FROM_TEMPLATE_FLOW\"\n              isStartWithTemplateFlow={templatesModalInfo.isOpenFromCanvas}\n              onTemplateClick={onTemplateClick}\n            />\n          )}\n        </ModalBodyWrapper>\n      </ModalContentWrapper>\n    </Modal>\n  );\n}\n\nexport default TemplatesModal;\n","import { showSignpostingModal } from \"actions/onboardingActions\";\nimport { Layers } from \"constants/Layers\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getIsFirstTimeUserOnboardingEnabled,\n  getSignpostingSetOverlay,\n} from \"selectors/onboardingSelectors\";\nimport styled from \"styled-components\";\n\nconst StyledOverlay = styled.div`\n  z-index: ${Layers.signpostingOverlay};\n  opacity: 0.6;\n  background-color: transparent;\n  animation: fade-in 1s forwards;\n  will-change: background-color;\n  @keyframes fade-in {\n    from {\n      background-color: transparent;\n    }\n    to {\n      background-color: var(--ads-v2-color-bg-emphasis-max);\n    }\n  }\n  pointer-events: auto;\n`;\n\nfunction Overlay() {\n  const signpostingEnabled = useSelector(getIsFirstTimeUserOnboardingEnabled);\n  const setOverlay = useSelector(getSignpostingSetOverlay);\n  const dispatch = useDispatch();\n\n  if (signpostingEnabled && setOverlay) {\n    return (\n      <StyledOverlay\n        className=\"fixed top-0 w-full h-full overflow-hidden\"\n        onClick={() => {\n          dispatch(showSignpostingModal(false));\n        }}\n      />\n    );\n  }\n\n  return null;\n}\n\nexport default Overlay;\n","import {\n  toggleAutocommitEnabledInit,\n  setIsAutocommitModalOpen,\n} from \"actions/gitSyncActions\";\nimport {\n  AUTOCOMMIT_CONFIRM_DISABLE_MESSAGE,\n  AUTOCOMMIT_DISABLE,\n  createMessage,\n} from \"@appsmith/constants/messages\";\nimport {\n  Button,\n  Callout,\n  Modal,\n  ModalBody,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  Text,\n} from \"design-system\";\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  getIsAutocommitModalOpen,\n  getIsAutocommitToggling,\n} from \"selectors/gitSyncSelectors\";\nimport AnalyticsUtil from \"@appsmith/utils/AnalyticsUtil\";\n\nfunction DisableAutocommitModal() {\n  const isAutocommitModalOpen = useSelector(getIsAutocommitModalOpen);\n  const isAutocommitToggling = useSelector(getIsAutocommitToggling);\n\n  const dispatch = useDispatch();\n\n  const handleClose = () => {\n    dispatch(setIsAutocommitModalOpen(false));\n  };\n\n  const handleDisableAutocommit = () => {\n    dispatch(toggleAutocommitEnabledInit());\n    AnalyticsUtil.logEvent(\"GS_AUTO_COMMIT_DISABLED\");\n    dispatch(setIsAutocommitModalOpen(false));\n  };\n\n  return (\n    <Modal\n      onOpenChange={(open: boolean) => {\n        if (!open) handleClose();\n      }}\n      open={isAutocommitModalOpen}\n    >\n      <ModalContent\n        data-testid=\"t--autocommit-git-modal\"\n        style={{ width: \"640px\" }}\n      >\n        <ModalHeader style={{ margin: 0 }}>\n          {createMessage(AUTOCOMMIT_DISABLE)}\n        </ModalHeader>\n        <ModalBody>\n          <Callout kind=\"warning\">\n            <Text>{createMessage(AUTOCOMMIT_CONFIRM_DISABLE_MESSAGE)}</Text>\n          </Callout>\n        </ModalBody>\n        <ModalFooter>\n          <Button\n            className=\"t--autocommit-modal-cta-button\"\n            isLoading={isAutocommitToggling}\n            kind=\"primary\"\n            onClick={handleDisableAutocommit}\n            size=\"md\"\n          >\n            {createMessage(AUTOCOMMIT_DISABLE)}\n          </Button>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  );\n}\n\nexport default DisableAutocommitModal;\n","import React, { useEffect, useMemo } from \"react\";\nimport { Space } from \"../../components/StyledComponents\";\nimport {\n  AUTHOR_EMAIL_ONLY,\n  AUTHOR_EMAIL_CANNOT_BE_EMPTY,\n  AUTHOR_NAME_ONLY,\n  AUTHOR_NAME_CANNOT_BE_EMPTY,\n  FORM_VALIDATION_INVALID_EMAIL,\n  GIT_USER_SETTINGS_TITLE,\n  UPDATE,\n  USE_DEFAULT_CONFIGURATION,\n  createMessage,\n} from \"@appsmith/constants/messages\";\nimport styled, { keyframes } from \"styled-components\";\nimport { Button, Input, Switch, Text } from \"design-system\";\nimport {\n  getGlobalGitConfig,\n  getLocalGitConfig,\n  getIsFetchingGlobalGitConfig,\n  getIsFetchingLocalGitConfig,\n} from \"selectors/gitSyncSelectors\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport type { SubmitHandler } from \"react-hook-form\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport { omit } from \"lodash\";\nimport {\n  fetchGlobalGitConfigInit,\n  fetchLocalGitConfigInit,\n  updateLocalGitConfigInit,\n} from \"actions/gitSyncActions\";\n\nconst Container = styled.div`\n  padding-top: 8px;\n  padding-bottom: 8px;\n`;\n\nconst HeadContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 12px;\n`;\n\nconst BodyContainer = styled.div`\n  display: flex;\n  align-items: flex-end;\n`;\n\nconst InputContainer = styled.div`\n  margin-right: 12px;\n  width: 240px;\n`;\n\nconst SectionTitle = styled(Text)`\n  font-weight: 600;\n`;\n\nconst loadingKeyframe = keyframes`\n    100% {\n      transform: translateX(100%);\n    }\n`;\n\nconst DummyLabel = styled.div`\n  height: 17px;\n  width: 100px;\n  margin-bottom: 8px;\n  border-radius: 4px;\n  background-color: var(--ads-color-black-100);\n  position: relative;\n\n  overflow: hidden;\n\n  &::after {\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    transform: translateX(-100%);\n    background-image: linear-gradient(\n      90deg,\n      rgba(255, 255, 255, 0) 0,\n      rgba(255, 255, 255, 0.5) 20%,\n      rgba(255, 255, 255, 0.8) 60%,\n      rgba(255, 255, 255, 0)\n    );\n    animation: ${loadingKeyframe} 5s infinite;\n    content: \"\";\n  }\n`;\n\nconst DummyInput = styled.div`\n  height: 36px;\n  border-radius: 4px;\n  background-color: linear-gradient(\n    90deg,\n    var(--ads-color-black-200) 0%,\n    rgba(240, 240, 240, 0) 100%\n  );\n  background-color: var(--ads-color-black-100);\n  position: relative;\n\n  overflow: hidden;\n\n  &::after {\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    transform: translateX(-100%);\n    background-image: linear-gradient(\n      90deg,\n      rgba(255, 255, 255, 0) 0,\n      rgba(255, 255, 255, 0.5) 20%,\n      rgba(255, 255, 255, 0.8) 60%,\n      rgba(255, 255, 255, 0)\n    );\n    animation: ${loadingKeyframe} 5s infinite;\n    content: \"\";\n  }\n`;\n\nconst DummyField = () => {\n  return (\n    <div style={{ width: \"100%\" }}>\n      <DummyLabel />\n      <DummyInput />\n    </div>\n  );\n};\n\nexport interface AuthorInfo {\n  authorName: string;\n  authorEmail: string;\n  useGlobalProfile: boolean;\n}\n\nconst GitUserSettings = () => {\n  const dispatch = useDispatch();\n  const isFetchingGlobalGitConfig = useSelector(getIsFetchingGlobalGitConfig);\n  const isFetchingLocalGitConfig = useSelector(getIsFetchingLocalGitConfig);\n  const globalConfig = useSelector(getGlobalGitConfig);\n  const localConfig = useSelector(getLocalGitConfig);\n\n  const {\n    control,\n    formState: { errors },\n    handleSubmit,\n    register,\n    setValue,\n    watch,\n  } = useForm<AuthorInfo>();\n\n  const useGlobalProfile = watch(\"useGlobalProfile\");\n  const authorName = watch(\"authorName\");\n  const authorEmail = watch(\"authorEmail\");\n\n  useEffect(() => {\n    dispatch(fetchGlobalGitConfigInit());\n    dispatch(fetchLocalGitConfigInit());\n  }, []);\n\n  useEffect(() => {\n    if (!isFetchingGlobalGitConfig && !isFetchingLocalGitConfig) {\n      setValue(\"useGlobalProfile\", !!localConfig?.useGlobalProfile);\n    }\n  }, [isFetchingGlobalGitConfig, isFetchingLocalGitConfig]);\n\n  useEffect(() => {\n    if (!isFetchingGlobalGitConfig && !isFetchingLocalGitConfig) {\n      if (!useGlobalProfile) {\n        setValue(\"authorName\", localConfig?.authorName);\n        setValue(\"authorEmail\", localConfig?.authorEmail);\n      } else {\n        setValue(\"authorName\", globalConfig?.authorName);\n        setValue(\"authorEmail\", globalConfig?.authorEmail);\n      }\n    }\n  }, [isFetchingGlobalGitConfig, isFetchingLocalGitConfig, useGlobalProfile]);\n\n  const onSubmit: SubmitHandler<AuthorInfo> = (data) => {\n    if (data.useGlobalProfile) {\n      data.authorName = localConfig?.authorName;\n      data.authorEmail = localConfig?.authorEmail;\n    }\n    dispatch(updateLocalGitConfigInit(data));\n  };\n\n  const isSubmitAllowed = useMemo(() => {\n    if (!isFetchingGlobalGitConfig && !isFetchingLocalGitConfig) {\n      if (useGlobalProfile) {\n        return (\n          authorName !== globalConfig?.authorName ||\n          authorEmail !== globalConfig?.authorEmail ||\n          useGlobalProfile !== localConfig?.useGlobalProfile\n        );\n      } else {\n        return (\n          authorName !== localConfig?.authorName ||\n          authorEmail !== localConfig?.authorEmail ||\n          useGlobalProfile !== localConfig?.useGlobalProfile\n        );\n      }\n    } else {\n      return false;\n    }\n  }, [\n    isFetchingGlobalGitConfig,\n    isFetchingLocalGitConfig,\n    localConfig,\n    globalConfig,\n    useGlobalProfile,\n    authorName,\n    authorEmail,\n  ]);\n\n  const loading = isFetchingGlobalGitConfig || isFetchingLocalGitConfig;\n\n  return (\n    <Container>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <HeadContainer>\n          <SectionTitle kind=\"heading-s\">\n            {createMessage(GIT_USER_SETTINGS_TITLE)}\n          </SectionTitle>\n          <div>\n            <Controller\n              control={control}\n              name=\"useGlobalProfile\"\n              render={({ field }) => {\n                return (\n                  <Switch\n                    data-testid=\"t--git-user-settings-switch\"\n                    isDisabled={loading}\n                    {...omit(field, [\"value\"])}\n                    isSelected={field.value}\n                  >\n                    {createMessage(USE_DEFAULT_CONFIGURATION)}\n                  </Switch>\n                );\n              }}\n            />\n          </div>\n        </HeadContainer>\n        <Space size={5} />\n        <BodyContainer>\n          <InputContainer>\n            {!loading ? (\n              <Input\n                data-testid=\"t--git-user-settings-author-name-input\"\n                errorMessage={errors?.authorName?.message}\n                isReadOnly={useGlobalProfile}\n                isValid={!errors?.authorName}\n                label={createMessage(AUTHOR_NAME_ONLY)}\n                size=\"md\"\n                type=\"text\"\n                {...register(\"authorName\", {\n                  required: createMessage(AUTHOR_NAME_CANNOT_BE_EMPTY),\n                })}\n                // onChange is overwritten with setValue\n                onChange={(v) => setValue(\"authorName\", v)}\n              />\n            ) : (\n              <DummyField />\n            )}\n          </InputContainer>\n          <InputContainer>\n            {!loading ? (\n              <Input\n                data-testid=\"t--git-user-settings-author-email-input\"\n                errorMessage={errors?.authorEmail?.message}\n                isReadOnly={useGlobalProfile}\n                isValid={!errors?.authorEmail}\n                label={createMessage(AUTHOR_EMAIL_ONLY)}\n                size=\"md\"\n                // type=\"email\"\n                {...register(\"authorEmail\", {\n                  required: createMessage(AUTHOR_EMAIL_CANNOT_BE_EMPTY),\n                  pattern: {\n                    value: /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/,\n                    message: createMessage(FORM_VALIDATION_INVALID_EMAIL),\n                  },\n                })}\n                // onChange is overwritten with setValue\n                onChange={(v) => setValue(\"authorEmail\", v)}\n              />\n            ) : (\n              <DummyField />\n            )}\n          </InputContainer>\n          <Button\n            isDisabled={!isSubmitAllowed}\n            kind=\"secondary\"\n            size=\"md\"\n            type=\"submit\"\n          >\n            {createMessage(UPDATE)}\n          </Button>\n        </BodyContainer>\n      </form>\n    </Container>\n  );\n};\n\nexport default GitUserSettings;\n","import {\n  AUTOCOMMIT,\n  AUTOCOMMIT_DISABLE,\n  AUTOCOMMIT_ENABLE,\n  AUTOCOMMIT_MESSAGE,\n  DANGER_ZONE,\n  DISCONNECT_GIT,\n  DISCONNECT_GIT_MESSAGE,\n  createMessage,\n} from \"@appsmith/constants/messages\";\nimport {\n  setDisconnectingGitApplication,\n  toggleAutocommitEnabledInit,\n  setIsAutocommitModalOpen,\n  setIsDisconnectGitModalOpen,\n  setGitSettingsModalOpenAction,\n} from \"actions/gitSyncActions\";\nimport { FEATURE_FLAG } from \"@appsmith/entities/FeatureFlag\";\nimport { Button, Divider, Text } from \"design-system\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getCurrentApplication } from \"selectors/editorSelectors\";\nimport {\n  getAutocommitEnabledSelector,\n  getGitMetadataLoadingSelector,\n  getIsAutocommitToggling,\n} from \"selectors/gitSyncSelectors\";\nimport styled from \"styled-components\";\nimport AnalyticsUtil from \"@appsmith/utils/AnalyticsUtil\";\nimport { useFeatureFlag } from \"utils/hooks/useFeatureFlag\";\nimport {\n  useHasConnectToGitPermission,\n  useHasManageAutoCommitPermission,\n} from \"../../hooks/gitPermissionHooks\";\n\nconst Container = styled.div`\n  padding-top: 16px;\n  padding-bottom: 16px;\n`;\n\nconst HeadContainer = styled.div`\n  margin-bottom: 16px;\n`;\n\nconst ZoneContainer = styled.div`\n  border: solid 0.4px var(--ads-v2-color-red-600);\n  padding: 12px;\n  border-radius: 4px;\n`;\n\nconst BodyContainer = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst BodyInnerContainer = styled.div`\n  flex: 1;\n  margin-right: 32px;\n`;\n\nconst SectionTitle = styled(Text)`\n  font-weight: 600;\n`;\n\nconst StyledDivider = styled(Divider)`\n  display: block;\n  margin-top: 16px;\n  margin-bottom: 16px;\n`;\n\nfunction DangerZone() {\n  const isConnectToGitPermitted = useHasConnectToGitPermission();\n  const isManageAutoCommitPermitted = useHasManageAutoCommitPermission();\n  const isAutocommitFeatureEnabled = useFeatureFlag(\n    FEATURE_FLAG.release_git_autocommit_feature_enabled,\n  );\n  const isAutocommitToggling = useSelector(getIsAutocommitToggling);\n  const isAutocommitEnabled = useSelector(getAutocommitEnabledSelector);\n  const gitMetadataLoading = useSelector(getGitMetadataLoadingSelector);\n\n  const dispatch = useDispatch();\n\n  const currentApp = useSelector(getCurrentApplication);\n\n  const handleDisconnect = () => {\n    AnalyticsUtil.logEvent(\"GS_DISCONNECT_GIT_CLICK\", {\n      source: \"GIT_CONNECTION_MODAL\",\n    });\n    dispatch(setGitSettingsModalOpenAction({ open: false }));\n    dispatch(\n      setDisconnectingGitApplication({\n        id: currentApp?.id || \"\",\n        name: currentApp?.name || \"\",\n      }),\n    );\n    dispatch(setIsDisconnectGitModalOpen(true));\n  };\n\n  const handleToggleAutocommit = () => {\n    if (isAutocommitEnabled) {\n      dispatch(setGitSettingsModalOpenAction({ open: false }));\n      dispatch(setIsAutocommitModalOpen(true));\n    } else {\n      dispatch(toggleAutocommitEnabledInit());\n      AnalyticsUtil.logEvent(\"GS_AUTO_COMMIT_ENABLED\");\n    }\n  };\n\n  const showAutoCommit =\n    isAutocommitFeatureEnabled && isManageAutoCommitPermitted;\n  const showDisconnect = isConnectToGitPermitted;\n  const showDivider = showAutoCommit && showDisconnect;\n\n  return (\n    <Container>\n      <HeadContainer>\n        <SectionTitle kind=\"heading-s\">\n          {createMessage(DANGER_ZONE)}\n        </SectionTitle>\n      </HeadContainer>\n      <ZoneContainer>\n        {showAutoCommit && (\n          <BodyContainer>\n            <BodyInnerContainer>\n              <Text kind=\"heading-xs\" renderAs=\"p\">\n                {createMessage(AUTOCOMMIT)}\n              </Text>\n              <Text renderAs=\"p\">{createMessage(AUTOCOMMIT_MESSAGE)}</Text>\n            </BodyInnerContainer>\n            <Button\n              data-testid=\"t--git-disconnect-btn\"\n              isLoading={isAutocommitToggling || gitMetadataLoading}\n              kind={isAutocommitEnabled ? \"error\" : \"secondary\"}\n              onClick={handleToggleAutocommit}\n              size=\"md\"\n            >\n              {isAutocommitEnabled\n                ? createMessage(AUTOCOMMIT_DISABLE)\n                : createMessage(AUTOCOMMIT_ENABLE)}\n            </Button>\n          </BodyContainer>\n        )}\n        {showDivider && <StyledDivider />}\n        {isConnectToGitPermitted && (\n          <BodyContainer>\n            <BodyInnerContainer>\n              <Text kind=\"heading-xs\" renderAs=\"p\">\n                {createMessage(DISCONNECT_GIT)}\n              </Text>\n              <Text renderAs=\"p\">{createMessage(DISCONNECT_GIT_MESSAGE)}</Text>\n            </BodyInnerContainer>\n            <Button\n              data-testid=\"t--git-disconnect-btn\"\n              kind=\"error\"\n              onClick={handleDisconnect}\n              size=\"md\"\n            >\n              {createMessage(DISCONNECT_GIT)}\n            </Button>\n          </BodyContainer>\n        )}\n      </ZoneContainer>\n    </Container>\n  );\n}\n\nexport default DangerZone;\n","import React from \"react\";\nimport GitUserSettings from \"./GitUserSettings\";\nimport DangerZone from \"./DangerZone\";\nimport styled from \"styled-components\";\nimport {\n  useHasConnectToGitPermission,\n  useHasManageAutoCommitPermission,\n} from \"../../hooks/gitPermissionHooks\";\n\nconst Container = styled.div`\n  overflow: auto;\n`;\n\nfunction TabGeneral() {\n  const isConnectToGitPermitted = useHasConnectToGitPermission();\n  const isManageAutoCommitPermitted = useHasManageAutoCommitPermission();\n\n  const showDangerZone = isConnectToGitPermitted || isManageAutoCommitPermitted;\n\n  return (\n    <Container>\n      <GitUserSettings />\n      {showDangerZone && <DangerZone />}\n    </Container>\n  );\n}\n\nexport default TabGeneral;\n","import { getInstanceId } from \"@appsmith/selectors/tenantSelectors\";\nimport { useSelector } from \"react-redux\";\nimport { ENTERPRISE_PRICING_PAGE } from \"constants/ThirdPartyConstants\";\nimport { useMemo } from \"react\";\nimport { getUserSource } from \"@appsmith/utils/AnalyticsUtil\";\n\nexport const useAppsmithEnterpriseLink = (feature: string) => {\n  const instanceId = useSelector(getInstanceId);\n  const source = getUserSource();\n  const constructedUrl = useMemo(() => {\n    const url = new URL(ENTERPRISE_PRICING_PAGE);\n    if (source) url.searchParams.append(\"source\", source);\n    if (instanceId) url.searchParams.append(\"instance\", instanceId);\n    if (feature) url.searchParams.append(\"feature\", feature);\n    return url.href;\n  }, [source, instanceId, feature]);\n\n  return constructedUrl;\n};\n","import {\n  APPSMITH_ENTERPRISE,\n  DEFAULT_BRANCH,\n  DEFAULT_BRANCH_DESC,\n  UPDATE,\n  createMessage,\n} from \"@appsmith/constants/messages\";\nimport { updateGitDefaultBranch } from \"actions/gitSyncActions\";\nimport { Button, Link, Option, Select, Text } from \"design-system\";\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getGitBranches } from \"selectors/gitSyncSelectors\";\nimport styled from \"styled-components\";\nimport { useFeatureFlag } from \"utils/hooks/useFeatureFlag\";\nimport { FEATURE_FLAG } from \"@appsmith/entities/FeatureFlag\";\nimport { useAppsmithEnterpriseLink } from \"./hooks\";\nimport AnalyticsUtil from \"@appsmith/utils/AnalyticsUtil\";\n\nconst Container = styled.div`\n  padding-top: 8px;\n  padding-bottom: 16px;\n`;\n\nconst HeadContainer = styled.div`\n  margin-bottom: 16px;\n`;\n\nconst BodyContainer = styled.div`\n  display: flex;\n`;\n\nconst SectionTitle = styled(Text)`\n  font-weight: 600;\n  margin-bottom: 4px;\n`;\n\nconst SectionDesc = styled(Text)`\n  margin-bottom: 4px;\n`;\n\nconst StyledSelect = styled(Select)`\n  width: 240px;\n  margin-right: 12px;\n`;\n\nfunction GitDefaultBranch() {\n  const dispatch = useDispatch();\n  const isGitProtectedFeatureLicensed = useFeatureFlag(\n    FEATURE_FLAG.license_git_branch_protection_enabled,\n  );\n  const unfilteredBranches = useSelector(getGitBranches);\n  const [selectedValue, setSelectedValue] = useState<string | undefined>();\n\n  const currentDefaultBranch = useMemo(() => {\n    const defaultBranch = unfilteredBranches.find((b) => b.default);\n    return defaultBranch?.branchName;\n  }, [unfilteredBranches]);\n\n  const enterprisePricingLink = useAppsmithEnterpriseLink(\n    \"git_branch_protection\",\n  );\n\n  useEffect(() => {\n    const defaultBranch = unfilteredBranches.find((b) => b.default);\n    setSelectedValue(defaultBranch?.branchName);\n  }, []);\n\n  const branches = unfilteredBranches.filter(\n    (branch) => !branch.branchName.includes(\"origin/\"),\n  );\n\n  const handleUpdate = () => {\n    if (selectedValue) {\n      AnalyticsUtil.logEvent(\"GS_DEFAULT_BRANCH_UPDATE\", {\n        old_branch: currentDefaultBranch,\n        new_branch: selectedValue,\n      });\n      dispatch(updateGitDefaultBranch({ branchName: selectedValue }));\n    }\n  };\n\n  const updateIsDisabled =\n    !selectedValue || selectedValue === currentDefaultBranch;\n\n  return (\n    <Container>\n      <HeadContainer>\n        <SectionTitle kind=\"heading-s\" renderAs=\"h3\">\n          {createMessage(DEFAULT_BRANCH)}\n        </SectionTitle>\n        <SectionDesc kind=\"body-m\" renderAs=\"p\">\n          {createMessage(DEFAULT_BRANCH_DESC)}\n        </SectionDesc>\n        {!isGitProtectedFeatureLicensed && (\n          <SectionDesc kind=\"body-m\" renderAs=\"p\">\n            To change your default branch, try{\" \"}\n            <Link\n              kind=\"primary\"\n              style={{ display: \"inline-flex\" }}\n              target=\"_blank\"\n              to={enterprisePricingLink}\n            >\n              {createMessage(APPSMITH_ENTERPRISE)}\n            </Link>\n          </SectionDesc>\n        )}\n      </HeadContainer>\n      <BodyContainer>\n        <StyledSelect\n          data-testid=\"t--git-default-branch-select\"\n          dropdownMatchSelectWidth\n          getPopupContainer={(triggerNode) => triggerNode.parentNode}\n          isDisabled={!isGitProtectedFeatureLicensed}\n          onChange={(v) => setSelectedValue(v)}\n          value={selectedValue}\n        >\n          {branches.map((b) => (\n            <Option key={b.branchName} value={b.branchName}>\n              {b.branchName}\n            </Option>\n          ))}\n        </StyledSelect>\n        <Button\n          data-testid=\"t--git-default-branch-update-btn\"\n          isDisabled={updateIsDisabled}\n          kind=\"secondary\"\n          onClick={handleUpdate}\n          size=\"md\"\n        >\n          {createMessage(UPDATE)}\n        </Button>\n      </BodyContainer>\n    </Container>\n  );\n}\n\nexport default GitDefaultBranch;\n","import {\n  APPSMITH_ENTERPRISE,\n  BRANCH_PROTECTION,\n  BRANCH_PROTECTION_DESC,\n  LEARN_MORE,\n  UPDATE,\n  createMessage,\n} from \"@appsmith/constants/messages\";\nimport { updateGitProtectedBranchesInit } from \"actions/gitSyncActions\";\nimport { Button, Link, Option, Select, Text } from \"design-system\";\nimport { xor } from \"lodash\";\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getDefaultGitBranchName,\n  getGitBranches,\n  getIsUpdateProtectedBranchesLoading,\n  getProtectedBranchesSelector,\n} from \"selectors/gitSyncSelectors\";\nimport styled from \"styled-components\";\nimport { useFeatureFlag } from \"utils/hooks/useFeatureFlag\";\nimport { FEATURE_FLAG } from \"@appsmith/entities/FeatureFlag\";\nimport { useAppsmithEnterpriseLink } from \"./hooks\";\nimport { REMOTE_BRANCH_PREFIX } from \"../../constants\";\nimport AnalyticsUtil from \"@appsmith/utils/AnalyticsUtil\";\nimport { DOCS_BRANCH_PROTECTION_URL } from \"constants/ThirdPartyConstants\";\n\nconst Container = styled.div`\n  padding-top: 16px;\n  padding-bottom: 16px;\n`;\n\nconst HeadContainer = styled.div`\n  margin-bottom: 16px;\n`;\n\nconst BodyContainer = styled.div`\n  display: flex;\n`;\n\nconst SectionTitle = styled(Text)`\n  font-weight: 600;\n  margin-bottom: 4px;\n`;\n\nconst SectionDesc = styled(Text)`\n  margin-bottom: 4px;\n`;\n\nconst StyledSelect = styled(Select)`\n  width: 300px;\n  margin-right: 12px;\n`;\n\nconst StyledLink = styled(Link)`\n  display: inline-flex;\n`;\n\nfunction GitProtectedBranches() {\n  const dispatch = useDispatch();\n\n  const unfilteredBranches = useSelector(getGitBranches);\n  const defaultBranch = useSelector(getDefaultGitBranchName);\n\n  const branchNames = useMemo(() => {\n    const returnVal: string[] = [];\n    for (const unfilteredBranch of unfilteredBranches) {\n      if (unfilteredBranch.branchName === defaultBranch) {\n        returnVal.unshift(unfilteredBranch.branchName);\n      } else if (unfilteredBranch.branchName.includes(REMOTE_BRANCH_PREFIX)) {\n        const localBranchName = unfilteredBranch.branchName.replace(\n          REMOTE_BRANCH_PREFIX,\n          \"\",\n        );\n        if (!returnVal.includes(localBranchName)) {\n          returnVal.push(\n            unfilteredBranch.branchName.replace(REMOTE_BRANCH_PREFIX, \"\"),\n          );\n        }\n      } else {\n        returnVal.push(unfilteredBranch.branchName);\n      }\n    }\n    return returnVal;\n  }, [unfilteredBranches, defaultBranch]);\n\n  const isGitProtectedFeatureLicensed = useFeatureFlag(\n    FEATURE_FLAG.license_git_branch_protection_enabled,\n  );\n  const protectedBranches = useSelector(getProtectedBranchesSelector);\n  const isUpdateLoading = useSelector(getIsUpdateProtectedBranchesLoading);\n  const [selectedValues, setSelectedValues] = useState<string[]>([]);\n\n  const enterprisePricingLink = useAppsmithEnterpriseLink(\n    \"git_branch_protection\",\n  );\n\n  useEffect(() => {\n    setSelectedValues(protectedBranches);\n  }, []);\n\n  const areProtectedBranchesDifferent = useMemo(() => {\n    return xor(protectedBranches, selectedValues).length > 0;\n  }, [protectedBranches, selectedValues]);\n\n  const updateIsDisabled = !areProtectedBranchesDifferent;\n\n  const handleUpdate = () => {\n    sendAnalyticsEvent();\n    dispatch(\n      updateGitProtectedBranchesInit({\n        protectedBranches: selectedValues ?? [],\n      }),\n    );\n  };\n\n  const sendAnalyticsEvent = () => {\n    const eventData = {\n      branches_added: [] as string[],\n      branches_removed: [] as string[],\n      protected_branches: selectedValues,\n    };\n    for (const val of selectedValues) {\n      if (!protectedBranches.includes(val)) {\n        eventData.branches_added.push(val);\n      }\n    }\n    for (const val of protectedBranches) {\n      if (!selectedValues.includes(val)) {\n        eventData.branches_removed.push(val);\n      }\n    }\n    AnalyticsUtil.logEvent(\"GS_PROTECTED_BRANCHES_UPDATE\", eventData);\n  };\n\n  return (\n    <Container>\n      <HeadContainer>\n        <SectionTitle kind=\"heading-s\" renderAs=\"h3\">\n          {createMessage(BRANCH_PROTECTION)}\n        </SectionTitle>\n        <SectionDesc kind=\"body-m\" renderAs=\"p\">\n          {createMessage(BRANCH_PROTECTION_DESC)}{\" \"}\n          <StyledLink target=\"_blank\" to={DOCS_BRANCH_PROTECTION_URL}>\n            {createMessage(LEARN_MORE)}\n          </StyledLink>\n        </SectionDesc>\n        {!isGitProtectedFeatureLicensed && (\n          <SectionDesc kind=\"body-m\" renderAs=\"p\">\n            To protect multiple branches, try{\" \"}\n            <StyledLink\n              kind=\"primary\"\n              target=\"_blank\"\n              to={enterprisePricingLink}\n            >\n              {createMessage(APPSMITH_ENTERPRISE)}\n            </StyledLink>\n          </SectionDesc>\n        )}\n      </HeadContainer>\n      <BodyContainer>\n        <StyledSelect\n          data-testid=\"t--git-protected-branches-select\"\n          dropdownMatchSelectWidth\n          getPopupContainer={(triggerNode) => triggerNode.parentNode}\n          isMultiSelect\n          maxTagTextLength={8}\n          onChange={(v) => setSelectedValues(v)}\n          value={selectedValues}\n        >\n          {branchNames.map((branchName) => (\n            <Option\n              disabled={\n                !isGitProtectedFeatureLicensed && branchName !== defaultBranch\n              }\n              key={branchName}\n              value={branchName}\n            >\n              {branchName}\n            </Option>\n          ))}\n        </StyledSelect>\n        <Button\n          data-testid=\"t--git-protected-branches-update-btn\"\n          isDisabled={updateIsDisabled}\n          isLoading={isUpdateLoading}\n          kind=\"secondary\"\n          onClick={handleUpdate}\n          size=\"md\"\n        >\n          {createMessage(UPDATE)}\n        </Button>\n      </BodyContainer>\n    </Container>\n  );\n}\n\nexport default GitProtectedBranches;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport GitDefaultBranch from \"./GitDefaultBranch\";\nimport GitProtectedBranches from \"./GitProtectedBranches\";\nimport {\n  useHasManageDefaultBranchPermission,\n  useHasManageProtectedBranchesPermission,\n} from \"../../hooks/gitPermissionHooks\";\n\nconst Container = styled.div`\n  overflow: auto;\n`;\n\nfunction TabBranch() {\n  const isManageProtectedBranchesPermitted =\n    useHasManageProtectedBranchesPermission();\n  const isManageDefaultBranchPermitted = useHasManageDefaultBranchPermission();\n\n  const showDefaultBranch = isManageDefaultBranchPermitted;\n  const showProtectedBranches = isManageProtectedBranchesPermitted;\n\n  return (\n    <Container>\n      {showDefaultBranch && <GitDefaultBranch />}\n      {showProtectedBranches && <GitProtectedBranches />}\n    </Container>\n  );\n}\n\nexport default TabBranch;\n","import {\n  CONFIGURE_CD_DESC,\n  CONFIGURE_CD_TITLE,\n  TRY_APPSMITH_ENTERPRISE,\n  createMessage,\n} from \"@appsmith/constants/messages\";\nimport { Button, Text } from \"design-system\";\nimport { useAppsmithEnterpriseLink } from \"pages/Editor/gitSync/GitSettingsModal/TabBranch/hooks\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nexport const Container = styled.div`\n  padding-top: 8px;\n  padding-bottom: 16px;\n  overflow: auto;\n  min-height: calc(360px + 52px);\n`;\n\nexport const SectionTitle = styled(Text)`\n  font-weight: 600;\n  margin-bottom: 4px;\n`;\n\nexport const SectionDesc = styled(Text)`\n  margin-bottom: 12px;\n`;\n\nexport const StyledButton = styled(Button)`\n  display: inline-block;\n`;\n\nfunction UnlicensedGitCD() {\n  const enterprisePricingLink = useAppsmithEnterpriseLink(\n    \"git_continuous_delivery\",\n  );\n\n  return (\n    <Container>\n      <SectionTitle kind=\"heading-s\" renderAs=\"h3\">\n        {createMessage(CONFIGURE_CD_TITLE)}\n      </SectionTitle>\n      <SectionDesc kind=\"body-m\" renderAs=\"p\">\n        {createMessage(CONFIGURE_CD_DESC)}\n      </SectionDesc>\n      <StyledButton\n        href={enterprisePricingLink}\n        kind=\"primary\"\n        renderAs=\"a\"\n        size=\"md\"\n        target=\"_blank\"\n      >\n        {createMessage(TRY_APPSMITH_ENTERPRISE)}\n      </StyledButton>\n    </Container>\n  );\n}\n\nexport default UnlicensedGitCD;\n","export * from \"ce/components/gitComponents/GitSettingsCDTab/UnlicensedGitCD\";\nimport { default as CE_UnlicensedGitCD } from \"ce/components/gitComponents/GitSettingsCDTab/UnlicensedGitCD\";\nexport default CE_UnlicensedGitCD;\n","import React from \"react\";\nimport UnlicensedGitCD from \"@appsmith/components/gitComponents/GitSettingsCDTab/UnlicensedGitCD\";\n\nfunction GitSettingsCDTab() {\n  return <UnlicensedGitCD />;\n}\n\nexport default GitSettingsCDTab;\n","export * from \"ce/components/gitComponents/GitSettingsCDTab\";\nimport { default as CE_GitSettingsCDTab } from \"ce/components/gitComponents/GitSettingsCDTab\";\nexport default CE_GitSettingsCDTab;\n","import React, { useMemo } from \"react\";\nimport {\n  activeGitSettingsModalTabSelector,\n  isGitSettingsModalOpenSelector,\n} from \"selectors/gitSyncSelectors\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setGitSettingsModalOpenAction } from \"actions/gitSyncActions\";\n\nimport { Modal, ModalBody, ModalContent, ModalHeader } from \"design-system\";\nimport styled from \"styled-components\";\nimport Menu from \"../Menu\";\nimport { GitSettingsTab } from \"reducers/uiReducers/gitSyncReducer\";\nimport {\n  BRANCH,\n  CONTINUOUS_DELIVERY,\n  GENERAL,\n  SETTINGS_GIT,\n  createMessage,\n} from \"@appsmith/constants/messages\";\nimport TabGeneral from \"./TabGeneral\";\nimport TabBranch from \"./TabBranch\";\nimport GitSettingsCDTab from \"@appsmith/components/gitComponents/GitSettingsCDTab\";\nimport {\n  useHasManageDefaultBranchPermission,\n  useHasManageProtectedBranchesPermission,\n} from \"../hooks/gitPermissionHooks\";\n\nconst StyledModalContent = styled(ModalContent)`\n  &&& {\n    width: 600px;\n    transform: none !important;\n    top: 100px;\n    left: calc(50% - 300px);\n    max-height: calc(100vh - 200px);\n  }\n`;\n\nfunction GitSettingsModal() {\n  const isManageProtectedBranchesPermitted =\n    useHasManageProtectedBranchesPermission();\n  const isManageDefaultBranchPermitted = useHasManageDefaultBranchPermission();\n\n  const showBranchTab =\n    isManageDefaultBranchPermitted || isManageProtectedBranchesPermitted;\n\n  const isModalOpen = useSelector(isGitSettingsModalOpenSelector);\n  const activeTabKey = useSelector(activeGitSettingsModalTabSelector);\n\n  const menuOptions = useMemo(() => {\n    const menuOptions = [\n      {\n        key: GitSettingsTab.GENERAL,\n        title: createMessage(GENERAL),\n      },\n    ];\n\n    if (showBranchTab) {\n      menuOptions.push({\n        key: GitSettingsTab.BRANCH,\n        title: createMessage(BRANCH),\n      });\n    }\n\n    menuOptions.push({\n      key: GitSettingsTab.CD,\n      title: createMessage(CONTINUOUS_DELIVERY),\n    });\n\n    return menuOptions;\n  }, [showBranchTab]);\n\n  const dispatch = useDispatch();\n\n  const setActiveTabKey = (tabKey: GitSettingsTab) => {\n    dispatch(\n      setGitSettingsModalOpenAction({\n        open: true,\n        tab: tabKey,\n      }),\n    );\n  };\n\n  const handleClose = () => {\n    dispatch(setGitSettingsModalOpenAction({ open: false }));\n  };\n\n  return (\n    <Modal\n      onOpenChange={(open) => {\n        if (!open) {\n          handleClose();\n        }\n      }}\n      open={isModalOpen}\n    >\n      <StyledModalContent data-testid=\"t--git-settings-modal\">\n        <ModalHeader>{createMessage(SETTINGS_GIT)}</ModalHeader>\n        <Menu\n          activeTabKey={activeTabKey}\n          onSelect={(tabKey: string) =>\n            setActiveTabKey(tabKey as GitSettingsTab)\n          }\n          options={menuOptions}\n        />\n        <ModalBody>\n          {activeTabKey === GitSettingsTab.GENERAL && <TabGeneral />}\n          {activeTabKey === GitSettingsTab.BRANCH && <TabBranch />}\n          {activeTabKey === GitSettingsTab.CD && <GitSettingsCDTab />}\n        </ModalBody>\n      </StyledModalContent>\n    </Modal>\n  );\n}\n\nexport default GitSettingsModal;\n","function ReconfigureCDKeyModal() {\n  return null;\n}\n\nexport default ReconfigureCDKeyModal;\n","export * from \"ce/components/gitComponents/ReconfigureCDKeyModal\";\nimport { default as CE_ReconfigureCDKeyModal } from \"ce/components/gitComponents/ReconfigureCDKeyModal\";\nexport default CE_ReconfigureCDKeyModal;\n","function DisableCDModal() {\n  return null;\n}\n\nexport default DisableCDModal;\n","export * from \"ce/components/gitComponents/DisableCDModal\";\nimport { default as CE_DisableCDModal } from \"ce/components/gitComponents/DisableCDModal\";\nexport default CE_DisableCDModal;\n","import styled from \"styled-components\";\n\nexport const CheckboxContainer = styled.div`\n  margin-bottom: 8px;\n`;\n\nexport const CheckboxWrapper = styled.div<{ index?: number }>`\n  padding: 16px;\n  background-color: var(--ads-v2-color-gray-100);\n  border-radius: 4px;\n`;\n\nexport const CheckBoxGrid = styled.div`\n  display: grid;\n  gap: 16px;\n  grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));\n`;\n\nexport const ScrollableSection = styled.section`\n  overflow-y: auto;\n`;\n\nexport const Bar = styled.hr`\n  margin: 16px 0;\n`;\n","import { Checkbox } from \"design-system\";\nimport React from \"react\";\nimport { CheckBoxGrid, CheckboxWrapper } from \"./StyledSheet\";\n\ninterface Props {\n  containerTestId?: string;\n  entities: { id?: string; name: string }[];\n  onEntityChecked: (id: string, selected: boolean) => void;\n  selectedIds: string[];\n}\nconst EntityCheckboxSelector = ({\n  containerTestId,\n  entities,\n  onEntityChecked,\n  selectedIds,\n}: Props) => {\n  return (\n    <CheckboxWrapper data-testid={containerTestId}>\n      <CheckBoxGrid>\n        {entities.map((ds) => (\n          <Checkbox\n            isSelected={selectedIds.includes(ds.id || ds.name)}\n            key={ds.id || ds.name}\n            onChange={(isSelected) =>\n              onEntityChecked(ds.id || ds.name, isSelected)\n            }\n          >\n            {ds.name}\n          </Checkbox>\n        ))}\n      </CheckBoxGrid>\n    </CheckboxWrapper>\n  );\n};\n\nexport default EntityCheckboxSelector;\n","import { getPlugins } from \"@appsmith/selectors/entitiesSelector\";\nimport {\n  Collapsible,\n  CollapsibleContent,\n  CollapsibleHeader,\n  Text,\n} from \"design-system\";\nimport type { Datasource } from \"entities/Datasource\";\nimport { keyBy } from \"lodash\";\nimport { getPluginIcon } from \"pages/Editor/Explorer/ExplorerIcons\";\nimport React, { useMemo } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport EntityCheckboxSelector from \"./EntityCheckboxSelector\";\n\ninterface Props {\n  appDS: Datasource[];\n  data: Record<\n    string,\n    {\n      type: string;\n      group: string;\n      entity: {\n        id: string;\n        name: string;\n      };\n    }[]\n  >;\n  selectedQueries: string[];\n  updateSelectedQueries: (queryIds: string[]) => void;\n}\nconst JSObjectsNQueriesExport = ({\n  appDS,\n  data,\n  selectedQueries,\n  updateSelectedQueries,\n}: Props) => {\n  const plugins = useSelector(getPlugins);\n  const pluginGroups = useMemo(() => keyBy(plugins, \"id\"), [plugins]);\n  const dsIDToPluginIDMap: { [key: string]: any } = useMemo(() => {\n    const map: { [key: string]: any } = {};\n    Object.keys(data).forEach((key) => {\n      const ds = appDS.find((ds) => ds.name === key);\n      if (ds) {\n        map[key] = ds.pluginId;\n      }\n    });\n    return map;\n  }, [appDS]);\n\n  const onEntitySelected = (id: string, selected: boolean) => {\n    const updatedSelectedNodes = [...selectedQueries];\n    if (selected) {\n      updatedSelectedNodes.push(id);\n    } else {\n      updatedSelectedNodes.splice(updatedSelectedNodes.indexOf(id), 1);\n    }\n    updateSelectedQueries(updatedSelectedNodes);\n  };\n\n  return (\n    <div\n      className=\"pl-4 pr-4\"\n      data-testid=\"t--partialExportModal-queriesSection\"\n    >\n      {Object.keys(data).map((dsName) => (\n        <Collapsible isOpen key={dsName}>\n          <CollapsibleHeader>\n            <Text\n              kind=\"heading-s\"\n              style={{ display: \"flex\", alignItems: \"center\", gap: \"8px\" }}\n            >\n              {getPluginIcon(pluginGroups[dsIDToPluginIDMap[dsName]])} {dsName}\n            </Text>\n          </CollapsibleHeader>\n          <CollapsibleContent>\n            <EntityCheckboxSelector\n              entities={data[dsName].map((item) => item.entity)}\n              onEntityChecked={onEntitySelected}\n              selectedIds={selectedQueries}\n            />\n          </CollapsibleContent>\n        </Collapsible>\n      ))}\n    </div>\n  );\n};\n\nexport default JSObjectsNQueriesExport;\n","import { Checkbox, Text } from \"design-system\";\nimport WidgetIcon from \"pages/Editor/Explorer/Widgets/WidgetIcon\";\nimport React from \"react\";\nimport type { CanvasStructure } from \"reducers/uiReducers/pageCanvasStructureReducer\";\nimport {\n  CheckBoxGrid,\n  CheckboxContainer,\n  CheckboxWrapper,\n} from \"./StyledSheet\";\n\ninterface BaseProps {\n  selectedWidgetIds: string[];\n  selectAllchecked: boolean;\n  updateSelectedWidgets: (widgetIds: string[]) => void;\n  updateSelectAllChecked: (checked: boolean) => void;\n}\ninterface Props extends BaseProps {\n  widgets: CanvasStructure;\n}\nconst WidgetsExport = ({\n  selectAllchecked,\n  selectedWidgetIds,\n  updateSelectAllChecked,\n  updateSelectedWidgets,\n  widgets,\n}: Props) => {\n  if (!widgets || !widgets.children || widgets.children.length === 0)\n    return null;\n  return (\n    <WidgetSelector\n      selectAllchecked={selectAllchecked}\n      selectedWidgetIds={selectedWidgetIds}\n      updateSelectAllChecked={updateSelectAllChecked}\n      updateSelectedWidgets={updateSelectedWidgets}\n      widgetList={widgets.children}\n    />\n  );\n};\n\nexport default WidgetsExport;\n\ninterface WidgetSelectorProps extends BaseProps {\n  widgetList: CanvasStructure[];\n}\nfunction WidgetSelector({\n  selectAllchecked,\n  selectedWidgetIds,\n  updateSelectAllChecked,\n  updateSelectedWidgets,\n  widgetList,\n}: WidgetSelectorProps) {\n  const toggleNestedChildrenSelection = (\n    node: CanvasStructure,\n    selectedWidgetIds: string[],\n    checked: boolean,\n  ) => {\n    const isSelected = selectedWidgetIds.includes(node.widgetId);\n    if (checked) {\n      !isSelected && selectedWidgetIds.push(node.widgetId);\n    } else {\n      isSelected &&\n        selectedWidgetIds.splice(selectedWidgetIds.indexOf(node.widgetId), 1);\n    }\n    node?.children?.forEach((child) => {\n      toggleNestedChildrenSelection(child, selectedWidgetIds, checked);\n    });\n  };\n\n  const toggleNode = (node: CanvasStructure, checked: boolean) => {\n    const prevSelectedWidgetIds = [...selectedWidgetIds];\n    toggleNestedChildrenSelection(node, prevSelectedWidgetIds, checked);\n    updateSelectedWidgets(prevSelectedWidgetIds);\n    if (!checked) updateSelectAllChecked(false);\n  };\n\n  function renderWidget(\n    widget: CanvasStructure,\n    level = 0,\n    isParentSelected: boolean,\n  ) {\n    const isSelected = selectedWidgetIds.includes(widget.widgetId);\n    return (\n      <div\n        key={widget.widgetId}\n        style={{ marginLeft: level > 0 ? level + 8 : level }}\n      >\n        <CheckboxContainer>\n          <Checkbox\n            data-testid={`t--partial-export-modal-widget-select-${widget.widgetId}`}\n            isDisabled={isParentSelected}\n            isSelected={isSelected}\n            onChange={(checked) => toggleNode(widget, checked)}\n          >\n            <div className=\"flex items-center\">\n              <WidgetIcon height={12} type={widget.type} width={12} />\n              &nbsp;\n              {widget.widgetName}\n            </div>\n          </Checkbox>\n        </CheckboxContainer>\n        {widget.children?.map((child) =>\n          renderWidget(child, level + 1, isSelected),\n        )}\n      </div>\n    );\n  }\n\n  const handleSelectAllClick = (checked: boolean) => {\n    const prevSelectedWidgetIds = [...selectedWidgetIds];\n    widgetList.forEach((widget) => {\n      toggleNestedChildrenSelection(widget, prevSelectedWidgetIds, checked);\n    });\n    updateSelectedWidgets(prevSelectedWidgetIds);\n    updateSelectAllChecked(checked);\n  };\n  return (\n    <CheckboxWrapper data-testid=\"t--partialExportModal-widgetsSection\">\n      <Checkbox\n        className=\"mb-4\"\n        data-testid=\"t--partial-export-modal-widget-select-all\"\n        isSelected={selectAllchecked}\n        onChange={handleSelectAllClick}\n      >\n        <Text kind=\"body-m\" renderAs=\"p\">\n          Select All\n        </Text>\n      </Checkbox>\n      <CheckBoxGrid>\n        {widgetList.map((widget) => renderWidget(widget, 0, false))}\n      </CheckBoxGrid>\n    </CheckboxWrapper>\n  );\n}\n","import {\n  PARTIAL_IMPORT_EXPORT,\n  createMessage,\n} from \"@appsmith/constants/messages\";\nimport { getPartialImportExportLoadingState } from \"@appsmith/selectors/applicationSelectors\";\n// eslint-disable-next-line @typescript-eslint/no-restricted-imports\nimport { selectFilesForExplorer } from \"ce/selectors/entitiesSelector\";\nimport {\n  selectLibrariesForExplorer,\n  selectWidgetsForCurrentPage,\n} from \"@appsmith/selectors/entitiesSelector\";\nimport {\n  openPartialExportModal,\n  partialExportWidgets,\n} from \"actions/widgetActions\";\nimport {\n  Button,\n  Collapsible,\n  CollapsibleContent,\n  CollapsibleHeader,\n  Icon,\n  Modal,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  Text,\n} from \"design-system\";\nimport { ControlIcons } from \"icons/ControlIcons\";\nimport { MenuIcons } from \"icons/MenuIcons\";\nimport { useAppWideAndOtherDatasource } from \"@appsmith/pages/Editor/Explorer/hooks\";\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport type { CanvasStructure } from \"reducers/uiReducers/pageCanvasStructureReducer\";\nimport type { PartialExportParams } from \"sagas/PartialImportExportSagas\";\nimport { getCurrentPageName } from \"selectors/editorSelectors\";\nimport type { JSLibrary } from \"workers/common/JSLibrary\";\nimport EntityCheckboxSelector from \"./EntityCheckboxSelector\";\nimport JSObjectsNQueriesExport from \"./JSObjectsNQueriesExport\";\nimport { Bar, ScrollableSection } from \"./StyledSheet\";\nimport WidgetsExport from \"./WidgetsExport\";\n\nconst selectedParamsInitValue: PartialExportParams = {\n  jsObjects: [],\n  datasources: [],\n  customJSLibs: [],\n  widgets: [],\n  queries: [],\n};\nexport const PartialExportModal = () => {\n  const [customJsLibraries, setCustomJsLibraries] = useState<JSLibrary[]>([]);\n  const dispatch = useDispatch();\n  const [selectedParams, setSelectedParams] = useState<PartialExportParams>(\n    selectedParamsInitValue,\n  );\n  const files = useSelector(selectFilesForExplorer);\n  const { appWideDS } = useAppWideAndOtherDatasource();\n  const libraries = useSelector(selectLibrariesForExplorer);\n  const canvasWidgets = useSelector(selectWidgetsForCurrentPage);\n  const partialImportExportLoadingState = useSelector(\n    getPartialImportExportLoadingState,\n  );\n  const currentPageName = useSelector(getCurrentPageName);\n  const [widgetSelectAllChecked, setWidgetSelectAllChecked] = useState(false);\n  useEffect(() => {\n    setCustomJsLibraries(libraries.filter((lib) => !!lib.url));\n  }, [libraries]);\n\n  const disableExportCTA = useMemo(() => {\n    return (\n      !selectedParams.jsObjects.length &&\n      !selectedParams.datasources.length &&\n      !selectedParams.customJSLibs.length &&\n      !selectedParams.widgets.length &&\n      !selectedParams.queries.length\n    );\n  }, [selectedParams]);\n\n  const entities = useMemo(() => {\n    const groupedData: Record<string, any> = {};\n\n    let currentGroup: unknown = null;\n\n    for (const item of files) {\n      if (item.type === \"group\") {\n        currentGroup = item.entity.name;\n        groupedData[currentGroup as string] = [];\n      } else if (currentGroup) {\n        groupedData[currentGroup as string].push(item);\n      }\n    }\n    const jsObjects =\n      groupedData[\"JS Objects\"] &&\n      groupedData[\"JS Objects\"].map((item: any) => item.entity);\n    delete groupedData[\"JS Objects\"];\n\n    return [\n      {\n        content: jsObjects ? (\n          <EntityCheckboxSelector\n            containerTestId=\"t--partialExportModal-jsObjectsSection\"\n            entities={jsObjects}\n            onEntityChecked={(id, selected) =>\n              onEntitySelected(\"jsObjects\", id, selected)\n            }\n            selectedIds={selectedParams.jsObjects}\n          />\n        ) : null,\n        icon: <Icon name=\"js\" size=\"md\" />,\n        shouldShowReset: !!selectedParams.jsObjects.length,\n        onResetClick: (event: React.MouseEvent<HTMLElement>) => {\n          setSelectedParams((prev) => ({\n            ...prev,\n            jsObjects: [],\n          }));\n          event.stopPropagation();\n        },\n        title: createMessage(PARTIAL_IMPORT_EXPORT.export.sections.jsObjects),\n      },\n      {\n        content:\n          appWideDS.length > 0 ? (\n            <EntityCheckboxSelector\n              containerTestId=\"t--partialExportModal-datasourcesSection\"\n              entities={appWideDS}\n              onEntityChecked={(id, selected) =>\n                onEntitySelected(\"datasources\", id, selected)\n              }\n              selectedIds={selectedParams.datasources}\n            />\n          ) : null,\n        icon: <Icon name=\"database-2-line\" size=\"md\" />,\n        shouldShowReset: !!selectedParams.datasources.length,\n        onResetClick: (event: React.MouseEvent<HTMLElement>) => {\n          setSelectedParams((prev) => ({\n            ...prev,\n            datasources: [],\n          }));\n          event.stopPropagation();\n        },\n        title: createMessage(PARTIAL_IMPORT_EXPORT.export.sections.databases),\n      },\n      {\n        content: groupedData ? (\n          <JSObjectsNQueriesExport\n            appDS={appWideDS}\n            data={groupedData}\n            selectedQueries={selectedParams.queries}\n            updateSelectedQueries={(queries) =>\n              setSelectedParams((prev) => ({ ...prev, queries }))\n            }\n          />\n        ) : null,\n        icon: <MenuIcons.GROUP_QUERY_ICON height={16} keepColors width={16} />,\n        shouldShowReset: !!selectedParams.queries.length,\n        onResetClick: (event: React.MouseEvent<HTMLElement>) => {\n          setSelectedParams((prev) => ({\n            ...prev,\n            queries: [],\n          }));\n          event.stopPropagation();\n        },\n        title: createMessage(PARTIAL_IMPORT_EXPORT.export.sections.queries),\n      },\n      {\n        content:\n          customJsLibraries.length > 0 ? (\n            <EntityCheckboxSelector\n              containerTestId=\"t--partialExportModal-customJSLibsSection\"\n              entities={customJsLibraries}\n              onEntityChecked={(id, selected) =>\n                onEntitySelected(\"customJSLibs\", id, selected)\n              }\n              selectedIds={selectedParams.customJSLibs}\n            />\n          ) : null,\n        icon: <MenuIcons.LIBRARY_ICON height={16} keepColors width={16} />,\n        shouldShowReset: !!selectedParams.customJSLibs.length,\n        onResetClick: (event: React.MouseEvent<HTMLElement>) => {\n          setSelectedParams((prev) => ({\n            ...prev,\n            customJSLibs: [],\n          }));\n          event.stopPropagation();\n        },\n        title: createMessage(PARTIAL_IMPORT_EXPORT.export.sections.customLibs),\n      },\n      {\n        content: canvasWidgets ? (\n          <WidgetsExport\n            selectAllchecked={widgetSelectAllChecked}\n            selectedWidgetIds={selectedParams.widgets}\n            updateSelectAllChecked={setWidgetSelectAllChecked}\n            updateSelectedWidgets={(widgets) =>\n              setSelectedParams((prev) => ({ ...prev, widgets }))\n            }\n            widgets={canvasWidgets}\n          />\n        ) : null,\n        icon: <ControlIcons.GROUP_CONTROL height={16} keepColors width={16} />,\n        shouldShowReset: !!selectedParams.widgets.length,\n        onResetClick: (event: React.MouseEvent<HTMLElement>) => {\n          setSelectedParams((prev) => ({\n            ...prev,\n            widgets: [],\n          }));\n          setWidgetSelectAllChecked(false);\n          event.stopPropagation();\n        },\n        title: createMessage(PARTIAL_IMPORT_EXPORT.export.sections.widgets),\n      },\n    ];\n  }, [\n    files,\n    appWideDS,\n    customJsLibraries,\n    canvasWidgets,\n    selectedParams,\n    setSelectedParams,\n  ]);\n\n  const onEntitySelected = (\n    keyToUpdate: keyof PartialExportParams,\n    id: string,\n    selected: boolean,\n  ) => {\n    const prevSelectedIdsCopy = [...selectedParams[keyToUpdate]];\n    if (selected) {\n      prevSelectedIdsCopy.push(id);\n    } else {\n      prevSelectedIdsCopy.splice(prevSelectedIdsCopy.indexOf(id), 1);\n    }\n    setSelectedParams((prev: PartialExportParams): PartialExportParams => {\n      const toUpdate = { ...prev, [keyToUpdate]: prevSelectedIdsCopy };\n      return toUpdate;\n    });\n  };\n\n  const selectOnlyParentIds = (\n    widget: CanvasStructure,\n    ids: string[],\n    finalWidgetIDs: string[] = [],\n  ) => {\n    if (widget.widgetId && ids.includes(widget.widgetId)) {\n      finalWidgetIDs.push(widget.widgetId);\n      return finalWidgetIDs;\n    }\n    if (widget.children) {\n      widget.children.forEach((child) => {\n        selectOnlyParentIds(child, ids, finalWidgetIDs);\n      });\n    }\n    return finalWidgetIDs;\n  };\n\n  const onExportClick = () => {\n    dispatch(\n      partialExportWidgets({\n        ...selectedParams,\n        widgets: selectOnlyParentIds(canvasWidgets!, selectedParams.widgets),\n      }),\n    );\n    setSelectedParams(selectedParamsInitValue);\n  };\n\n  const handleModalClose = (open: boolean) => {\n    if (!open) {\n      dispatch(openPartialExportModal(false));\n      setSelectedParams(selectedParamsInitValue);\n    }\n  };\n\n  return (\n    <Modal\n      onOpenChange={handleModalClose}\n      open={partialImportExportLoadingState.isExportModalOpen}\n    >\n      <ModalContent>\n        <ModalHeader>\n          <Text className=\"title\" kind=\"heading-xl\">\n            {createMessage(PARTIAL_IMPORT_EXPORT.export.modalHeading)}{\" \"}\n            {currentPageName ? ` - ${currentPageName}` : \"\"}\n          </Text>\n        </ModalHeader>\n        <Text kind=\"heading-s\" renderAs=\"h2\">\n          {createMessage(PARTIAL_IMPORT_EXPORT.export.modalSubHeading)}\n        </Text>\n        <ScrollableSection data-testid=\"t--partialExportModal\">\n          {entities.map(\n            ({ content, icon, onResetClick, shouldShowReset, title }) => (\n              <React.Fragment key={title}>\n                <Collapsible className=\"mt-4\" key={title}>\n                  <CollapsibleHeader>\n                    <div className=\"w-full flex justify-between\">\n                      <Text\n                        data-testid=\"t--partialExportModal-collapsibleHeader\"\n                        kind=\"heading-s\"\n                        style={{\n                          display: \"flex\",\n                          alignItems: \"center\",\n                          gap: \"8px\",\n                        }}\n                      >\n                        {icon} {title}\n                      </Text>\n\n                      {shouldShowReset && (\n                        <Button\n                          className=\"mr-2\"\n                          data-testid={`t--partial-export-modal-reset-${title}`}\n                          endIcon=\"restart-line\"\n                          kind=\"tertiary\"\n                          onClick={onResetClick}\n                          size=\"sm\"\n                        >\n                          Reset\n                        </Button>\n                      )}\n                    </div>\n                  </CollapsibleHeader>\n                  <CollapsibleContent>{content}</CollapsibleContent>\n                </Collapsible>\n                <Bar />\n              </React.Fragment>\n            ),\n          )}\n        </ScrollableSection>\n        <ModalFooter>\n          <Button\n            data-testid=\"t-partial-export-entities-btn\"\n            isDisabled={disableExportCTA}\n            isLoading={partialImportExportLoadingState.isExporting}\n            onClick={onExportClick}\n            size=\"md\"\n          >\n            {createMessage(PARTIAL_IMPORT_EXPORT.export.cta)}\n          </Button>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  );\n};\n","import {\n  importPartialApplication,\n  openPartialImportModal,\n} from \"@appsmith/actions/applicationActions\";\nimport {\n  IMPORT_APP_FROM_FILE_MESSAGE,\n  IMPORT_APP_FROM_FILE_TITLE,\n  PARTIAL_IMPORT_EXPORT,\n  UPLOADING_APPLICATION,\n  UPLOADING_JSON,\n  createMessage,\n} from \"@appsmith/constants/messages\";\nimport {\n  getIsImportingPartialApplication,\n  getPartialImportExportLoadingState,\n} from \"@appsmith/selectors/applicationSelectors\";\nimport { Icon, Modal, ModalContent, ModalHeader, Text } from \"design-system\";\nimport type { SetProgress } from \"design-system-old\";\nimport { FilePickerV2, FileType } from \"design-system-old\";\nimport Statusbar from \"pages/Editor/gitSync/components/Statusbar\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled, { css } from \"styled-components\";\n\nconst TextWrapper = styled.div`\n  padding: 0;\n  margin-bottom: var(--ads-v2-spaces-7);\n`;\n\nconst Row = styled.div`\n  display: flex;\n  padding: 0;\n  margin: 0;\n  justify-content: center;\n  gap: 16px;\n`;\n\nconst CardStyles = css`\n  height: 200px;\n  border: 1px solid var(--ads-v2-color-border);\n  border-radius: var(--ads-v2-border-radius);\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  cursor: pointer;\n  position: relative;\n\n  &:hover {\n    background: var(--ads-v2-color-bg-subtle);\n  }\n`;\n\nconst FileImportCard = styled.div<{ fillCardWidth: boolean }>`\n  ${CardStyles}\n  width: ${(props) => (props.fillCardWidth ? \"100%\" : \"320px\")};\n  & > div {\n    background: transparent none;\n    border: none;\n\n    .upload-form-container {\n      padding-top: 0;\n    }\n\n    .button-wrapper {\n      width: 100%;\n      height: 100%;\n      justify-content: flex-start;\n\n      .cs-icon {\n        border-radius: 50%;\n        width: ${(props) => props.theme.spaces[12] + 2}px;\n        height: ${(props) => props.theme.spaces[12] + 2}px;\n        background: var(--ads-v2-color-bg-muted);\n        display: flex;\n        justify-content: center;\n        margin-top: 35px;\n        margin-bottom: 32px;\n        color: var(--ads-v2-color-fg) !important;\n\n        svg {\n          width: ${(props) => props.theme.iconSizes.XL}px;\n          height: ${(props) => props.theme.iconSizes.XL}px;\n\n          path {\n            color: var(--ads-v2-color-fg) !important;\n          }\n        }\n      }\n\n      .cs-text {\n        max-width: 220px;\n        text-align: center;\n        margin-top: 0;\n        font-size: ${(props) => props.theme.typography.p1.fontSize}px;\n\n        &.drag-drop-text {\n          color: var(--ads-v2-color-fg);\n        }\n\n        &.drag-drop-description {\n          color: var(--ads-v2-color-fg-muted);\n        }\n      }\n    }\n  }\n`;\n\nconst StatusbarWrapper = styled.div`\n  width: 252px;\n  height: 240px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  .cs-icon {\n    margin: auto;\n    border-radius: var(--ads-v2-border-radius-circle);\n    width: 32px;\n    height: 32px;\n    display: flex;\n    justify-content: center;\n    margin-bottom: 8px;\n    background: var(--appsmith-color-black-200);\n    svg {\n      width: 20px;\n      height: 20px;\n    }\n  }\n  .ads-v2-text.importing-app-name {\n    display: flex;\n    justify-content: center;\n  }\n`;\n\nexport function PartialImportModal() {\n  const [appFileToBeUploaded, setAppFileToBeUploaded] = useState<{\n    file: File;\n    setProgress: SetProgress;\n  } | null>(null);\n\n  const dispatch = useDispatch();\n\n  const importingPartialApplication = useSelector(\n    getIsImportingPartialApplication,\n  );\n  const partialImportExportLoadingState = useSelector(\n    getPartialImportExportLoadingState,\n  );\n\n  const FileUploader = useCallback(\n    async (file: File, setProgress: SetProgress) => {\n      if (!!file) {\n        setAppFileToBeUploaded({\n          file,\n          setProgress,\n        });\n        dispatch(\n          importPartialApplication({\n            applicationFile: file,\n          }),\n        );\n      } else {\n        setAppFileToBeUploaded(null);\n      }\n    },\n    [],\n  );\n\n  const handleClose = () => {\n    dispatch(openPartialImportModal(false));\n  };\n\n  useEffect(() => {\n    // finished of importing application\n    if (appFileToBeUploaded && partialImportExportLoadingState.isImportDone) {\n      setAppFileToBeUploaded(null);\n      handleClose();\n    }\n  }, [appFileToBeUploaded, partialImportExportLoadingState]);\n\n  const onRemoveFile = useCallback(() => setAppFileToBeUploaded(null), []);\n\n  const handleModalClose = (open: boolean) => {\n    if (!open) {\n      handleClose();\n    }\n  };\n\n  return (\n    <Modal\n      onOpenChange={handleModalClose}\n      open={partialImportExportLoadingState.isImportModalOpen}\n    >\n      <ModalContent\n        className={\"t--import-application-modal\"}\n        data-testid=\"t--partialImportModal\"\n        style={{\n          width: importingPartialApplication ? \"40vw\" : \"fit-content\",\n          minWidth: \"30vw\",\n        }}\n      >\n        <ModalHeader>\n          {createMessage(PARTIAL_IMPORT_EXPORT.import.modalHeading)}\n        </ModalHeader>\n        <TextWrapper>\n          <Text kind=\"body-m\">\n            {createMessage(\n              importingPartialApplication\n                ? UPLOADING_JSON\n                : PARTIAL_IMPORT_EXPORT.import.modalSubheading,\n            )}\n          </Text>\n        </TextWrapper>\n        {!importingPartialApplication && (\n          <Row>\n            <FileImportCard\n              className=\"t--import-json-card\"\n              fillCardWidth={false}\n            >\n              <FilePickerV2\n                containerClickable\n                description={createMessage(IMPORT_APP_FROM_FILE_MESSAGE)}\n                fileType={FileType.JSON}\n                fileUploader={FileUploader}\n                iconFillColor={\"var(--ads-v2-color-fg)\"}\n                onFileRemoved={onRemoveFile}\n                title={createMessage(IMPORT_APP_FROM_FILE_TITLE)}\n                uploadIcon=\"file-line\"\n              />\n            </FileImportCard>\n          </Row>\n        )}\n        {importingPartialApplication && (\n          <Row className=\"t-import-app-progress-wrapper\">\n            <StatusbarWrapper className=\"t--importing-app-statusbar\">\n              <Icon name=\"file-line\" size=\"md\" />\n              <Text className=\"importing-app-name\" kind=\"body-m\">\n                {appFileToBeUploaded?.file?.name || \"filename.json\"}\n              </Text>\n              <Statusbar\n                completed={!importingPartialApplication}\n                message={createMessage(UPLOADING_APPLICATION)}\n                period={4}\n              />\n            </StatusbarWrapper>\n          </Row>\n        )}\n      </ModalContent>\n    </Modal>\n  );\n}\n","import React, { Component } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { connect } from \"react-redux\";\nimport type { RouteComponentProps } from \"react-router-dom\";\nimport { withRouter } from \"react-router-dom\";\nimport type { BuilderRouteParams } from \"constants/routes\";\nimport type { AppState } from \"@appsmith/reducers\";\nimport IDE from \"./IDE\";\nimport {\n  getCurrentApplicationId,\n  getIsEditorInitialized,\n  getIsEditorLoading,\n  getIsPublishingApplication,\n  getPublishingError,\n} from \"selectors/editorSelectors\";\nimport type { InitializeEditorPayload } from \"actions/initActions\";\nimport { initEditor, resetEditorRequest } from \"actions/initActions\";\nimport CenteredWrapper from \"components/designSystems/appsmith/CenteredWrapper\";\nimport { getCurrentUser } from \"selectors/usersSelectors\";\nimport type { User } from \"constants/userConstants\";\nimport RequestConfirmationModal from \"pages/Editor/RequestConfirmationModal\";\nimport * as Sentry from \"@sentry/react\";\nimport { getTheme, ThemeMode } from \"selectors/themeSelectors\";\nimport { ThemeProvider } from \"styled-components\";\nimport type { Theme } from \"constants/DefaultTheme\";\nimport GlobalHotKeys from \"./GlobalHotKeys\";\nimport GitSyncModal from \"pages/Editor/gitSync/GitSyncModal\";\nimport DisconnectGitModal from \"pages/Editor/gitSync/DisconnectGitModal\";\nimport { setupPage, updateCurrentPage } from \"actions/pageActions\";\nimport { getCurrentPageId } from \"selectors/editorSelectors\";\nimport { getSearchQuery } from \"utils/helpers\";\nimport RepoLimitExceededErrorModal from \"./gitSync/RepoLimitExceededErrorModal\";\nimport ImportedApplicationSuccessModal from \"./gitSync/ImportSuccessModal\";\nimport { getIsBranchUpdated } from \"../utils\";\nimport { APP_MODE } from \"entities/App\";\nimport { GIT_BRANCH_QUERY_KEY } from \"constants/routes\";\nimport TemplatesModal from \"pages/Templates/TemplatesModal\";\nimport ReconnectDatasourceModal from \"./gitSync/ReconnectDatasourceModal\";\nimport { Spinner } from \"design-system\";\nimport SignpostingOverlay from \"pages/Editor/FirstTimeUserOnboarding/Overlay\";\nimport { editorInitializer } from \"../../utils/editor/EditorUtils\";\nimport { widgetInitialisationSuccess } from \"../../actions/widgetActions\";\nimport urlBuilder from \"@appsmith/entities/URLRedirect/URLAssembly\";\nimport DisableAutocommitModal from \"./gitSync/DisableAutocommitModal\";\nimport GitSettingsModal from \"./gitSync/GitSettingsModal\";\nimport ReconfigureCDKeyModal from \"@appsmith/components/gitComponents/ReconfigureCDKeyModal\";\nimport DisableCDModal from \"@appsmith/components/gitComponents/DisableCDModal\";\nimport { PartialExportModal } from \"components/editorComponents/PartialImportExport/PartialExportModal\";\nimport { PartialImportModal } from \"components/editorComponents/PartialImportExport/PartialImportModal\";\n\ninterface EditorProps {\n  currentApplicationId?: string;\n  currentApplicationName?: string;\n  initEditor: (payload: InitializeEditorPayload) => void;\n  isPublishing: boolean;\n  isEditorLoading: boolean;\n  isEditorInitialized: boolean;\n  isEditorInitializeError: boolean;\n  errorPublishing: boolean;\n  loadingGuidedTour: boolean;\n  user?: User;\n  lightTheme: Theme;\n  resetEditorRequest: () => void;\n  setupPage: (pageId: string) => void;\n  updateCurrentPage: (pageId: string) => void;\n  handleBranchChange: (branch: string) => void;\n  currentPageId?: string;\n  pageLevelSocketRoomId: string;\n  isMultiPane: boolean;\n  widgetConfigBuildSuccess: () => void;\n}\n\ntype Props = EditorProps & RouteComponentProps<BuilderRouteParams>;\n\nclass Editor extends Component<Props> {\n  componentDidMount() {\n    const { pageId } = this.props.match.params || {};\n    urlBuilder.setCurrentPageId(pageId);\n\n    editorInitializer().then(() => {\n      this.props.widgetConfigBuildSuccess();\n    });\n  }\n  shouldComponentUpdate(nextProps: Props) {\n    const isBranchUpdated = getIsBranchUpdated(\n      this.props.location,\n      nextProps.location,\n    );\n\n    return (\n      isBranchUpdated ||\n      nextProps.currentApplicationName !== this.props.currentApplicationName ||\n      nextProps.match?.params?.pageId !== this.props.match?.params?.pageId ||\n      nextProps.currentApplicationId !== this.props.currentApplicationId ||\n      nextProps.isEditorInitialized !== this.props.isEditorInitialized ||\n      nextProps.isPublishing !== this.props.isPublishing ||\n      nextProps.isEditorLoading !== this.props.isEditorLoading ||\n      nextProps.errorPublishing !== this.props.errorPublishing ||\n      nextProps.isEditorInitializeError !==\n        this.props.isEditorInitializeError ||\n      nextProps.loadingGuidedTour !== this.props.loadingGuidedTour\n    );\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const { applicationId, pageId } = this.props.match.params || {};\n    const { pageId: prevPageId } = prevProps.match.params || {};\n    const isBranchUpdated = getIsBranchUpdated(\n      this.props.location,\n      prevProps.location,\n    );\n\n    const branch = getSearchQuery(\n      this.props.location.search,\n      GIT_BRANCH_QUERY_KEY,\n    );\n    const prevBranch = getSearchQuery(\n      prevProps.location.search,\n      GIT_BRANCH_QUERY_KEY,\n    );\n\n    const isPageIdUpdated = pageId !== prevPageId;\n\n    // to prevent re-init during connect\n    if (prevBranch && isBranchUpdated && pageId) {\n      this.props.initEditor({\n        applicationId,\n        pageId,\n        branch,\n        mode: APP_MODE.EDIT,\n      });\n    } else {\n      /**\n       * First time load is handled by init sagas\n       * If we don't check for `prevPageId`: fetch page is re triggered\n       * when redirected to the default page\n       */\n      if (prevPageId && pageId && isPageIdUpdated) {\n        this.props.updateCurrentPage(pageId);\n        this.props.setupPage(pageId);\n        urlBuilder.setCurrentPageId(pageId);\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.resetEditorRequest();\n    urlBuilder.setCurrentPageId(null);\n  }\n\n  public render() {\n    if (!this.props.isEditorInitialized || this.props.loadingGuidedTour) {\n      return (\n        <CenteredWrapper\n          style={{ height: `calc(100vh - ${theme.smallHeaderHeight})` }}\n        >\n          <Spinner size=\"lg\" />\n        </CenteredWrapper>\n      );\n    }\n    return (\n      <ThemeProvider theme={theme}>\n        <div>\n          <Helmet>\n            <meta charSet=\"utf-8\" />\n            <title>\n              {`${this.props.currentApplicationName} | Editor | Appsmith`}\n            </title>\n          </Helmet>\n          <GlobalHotKeys>\n            <IDE />\n            <GitSyncModal />\n            <GitSettingsModal />\n            <DisableCDModal />\n            <ReconfigureCDKeyModal />\n            <DisconnectGitModal />\n            <DisableAutocommitModal />\n            <RepoLimitExceededErrorModal />\n            <TemplatesModal />\n            <ImportedApplicationSuccessModal />\n            <ReconnectDatasourceModal />\n            <SignpostingOverlay />\n            <PartialExportModal />\n            <PartialImportModal />\n          </GlobalHotKeys>\n        </div>\n        <RequestConfirmationModal />\n      </ThemeProvider>\n    );\n  }\n}\n\nconst theme = getTheme(ThemeMode.LIGHT);\n\nconst mapStateToProps = (state: AppState) => ({\n  currentApplicationId: getCurrentApplicationId(state),\n  errorPublishing: getPublishingError(state),\n  isPublishing: getIsPublishingApplication(state),\n  isEditorLoading: getIsEditorLoading(state),\n  isEditorInitialized: getIsEditorInitialized(state),\n  user: getCurrentUser(state),\n  currentApplicationName: state.ui.applications.currentApplication?.name,\n  currentPageId: getCurrentPageId(state),\n});\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    initEditor: (payload: InitializeEditorPayload) =>\n      dispatch(initEditor(payload)),\n    resetEditorRequest: () => dispatch(resetEditorRequest()),\n    setupPage: (pageId: string) => dispatch(setupPage(pageId)),\n    updateCurrentPage: (pageId: string) => dispatch(updateCurrentPage(pageId)),\n    widgetConfigBuildSuccess: () => dispatch(widgetInitialisationSuccess()),\n  };\n};\n\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(Sentry.withProfiler(Editor)),\n);\n"],"names":["GlobalSearchHotKeys","HotkeysTarget","_class","_React$Component","_classCallCheck","arguments","_inherits","_createClass","key","get","_this","combo","onKeyDown","props","handleUpKey","allowInInput","group","label","this","handleDownKey","handleSubmitKey","handleEscKey","value","_jsx","Hotkeys","children","hotKeysConfig","map","_ref","index","Hotkey","global","style","display","flex","flexDirection","minHeight","overflow","React","BranchListItemContainer","styled","_templateObject","_taggedTemplateLiteral","concat","theme","spaces","selected","active","OptionsContainer","RemoteBranchListItem","branch","className","onClick","textRef","_useSelector","useSelector","getBranchSwitchingDetails","isSwitchingBranch","switchingToBranch","_jsxs","isDefault","ref","Tooltip","content","isDisabled","isEllipsisActive","document","getElementById","placement","Text","id","width","whiteSpace","textOverflow","type","TextType","Spinner","size","DefaultTag","Tag","isClosable","DeleteButton","branchToDelete","gitMetaData","dispatch","currentBranch","branchName","defaultBranchName","MenuItem","e","stopPropagation","toast","createMessage","DELETE_BRANCH_WARNING_DEFAULT","kind","DELETE_BRANCH_WARNING_CHECKED_OUT","deleteBranchInit","startIcon","DELETE","BranchMoreMenu","open","setOpen","useDispatch","buttons","getCurrentAppGitMetaData","handleMenuClose","Menu","modal","MenuTrigger","Button","isIconButton","AnalyticsUtil","source","MenuContent","align","onEscapeKeyDown","onPointerDownOutside","ProtectedIcon","importRemixIcon","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","abrupt","stop","BranchListItem","_ref2","isProtected","shouldScrollIntoView","itemRef","_useHover","useHover","hover","_slicedToArray","_React$useState","_React$useState2","isMoreMenuOpen","setIsMoreMenuOpen","useEffect","current","scrollIntoView","scrollMode","block","inline","marginRight","height","marginTop","ListContainer","BranchDropdownContainer","_templateObject2","textInputHeight","textHeight","CreateNewBranchContainer","_templateObject3","getTypographyByKey","SpinnerContainer","_templateObject4","isCreatingNewBranch","CreateNewBranch","hovered","useTheme","alignItems","cursor","justifyContent","background","padding","_get","borderRadius","Icon","color","name","LoadingRow","Skeleton","BranchesLoading","_Fragment","Header","closePopup","fetchBranches","title","SWITCH_BRANCHES","marginLeft","SYNC_BRANCHES","BranchList","branches","getGitBranches","branchNames","getGitBranchNames","getCurrentGitBranch","fetchingBranches","getFetchingBranches","defaultBranch","getDefaultGitBranchName","protectedBranches","getProtectedBranchesSelector","isGetProtectedBranchesLoading","getIsGetProtectedBranchesLoading","_useState","useState","_useState2","searchText","changeSearchTextInState","isCreateNewBranchInputValid","useMemo","find","filteredBranches","useFilteredBranches","localBranches","filter","b","isLocalBranch","remoteBranches","isRemoteBranch","_useActiveHoverIndex","useActiveHoverIndex","activeHoverIndex","setActiveHoverIndex","_useState3","_useState4","setIsCreatingNewBranch","handleCreateNewBranch","createNewBranchInit","onErrorCallback","onSuccessCallback","setIsPopupOpen","switchBranch","switchGitBranchInit","remoteBranchList","length","fontWeight","REMOTE_BRANCHES","RemoteBranchList","localBranchList","undefined","LOCAL_BRANCHES","isActive","getIsActiveItem","includes","LocalBranchList","loading","BranchListHotkeys","fetchBranchesInit","pruneBranches","fetchGitProtectedBranchesInit","Space","SearchInput","autoFocus","fill","onChange","text","removeSpecialChars","placeholder","FIND_OR_CREATE_A_BRANCH","ButtonContainer","isProtectedMode","protectedModeSelector","labelTarget","useRef","status","getGitStatus","isOpen","showBranchPopupSelector","triggeringAutocommit","getIsTriggeringAutocommit","pollingAutocommit","getIsPollingAutocommit","isBranchChangeDisabled","setIsOpen","setShowBranchPopupAction","Popover2","disabled","hasBackdrop","minimal","modifiers","offset","enabled","options","onInteraction","nextState","maxWidth","isClean","StatusbarWrapper","AutocommitStatusbar","completed","onHide","percentage","setPercentage","timeout","setTimeout","clearTimeout","interval","setInterval","period","clearInterval","Statusbar","message","AUTOCOMMIT_IN_PROGRESS_MESSAGE","showOnlyMessage","QuickActionButtonContainer","p","Colors","capitalizeFirstLetter","string","charAt","toUpperCase","toLowerCase","slice","QuickActionButton","_ref$className","_ref$count","count","_ref$disabled","icon","tooltipText","SpinnerLoader","getPullBtnStatus","gitStatus","pullFailed","behindCount","NO_COMMITS_TO_PULL","PULL_CHANGES","CONFLICTS_FOUND","CANNOT_PULL_WITH_LOCAL_UNCOMMITTED_CHANGES","getQuickActionButtons","_ref3","changesToCommit","commit","isFetchingGitStatus","merge","pull","pullDisabled","pullTooltipMessage","settings","showPullLoadingState","COMMIT_CHANGES","MERGE","GIT_SETTINGS","Container","StyledIcon","OuterContainer","_templateObject5","CenterDiv","_templateObject6","ConnectGitPlaceholder","isConnectToGitPermitted","useHasConnectToGitPermission","isTooltipEnabled","tooltipContent","NOT_LIVE_FOR_YOU_YET","COMING_SOON","CONTACT_ADMIN_FOR_GIT","setIsGitSyncModalOpen","tab","GitSyncModalTab","CONNECT_GIT_BETA","QuickGitActions","_gitMetadata$autoComm","isGitConnected","getIsGitConnected","getPullFailed","_getPullBtnStatus","isPullInProgress","getIsDiscardInProgress","getIsFetchingGitStatus","getCountOfChangesToCommit","isAutocommitFeatureEnabled","useFeatureFlag","FEATURE_FLAG","gitMetadata","getGitMetadataSelector","isPollingAutocommit","isAutocommitEnabled","autoCommitConfig","quickActionButtons","setGitSettingsModalOpenAction","GitSettingsTab","discardChanges","successToastMessage","DISCARD_AND_PULL_SUCCESS","gitPullInit","triggeredFromBottomBar","isDeploying","BranchButton","button","_objectSpread","selectedTab","getDebuggerSelectedTab","errorCount","getErrorCount","responsePaneHeight","getResponsePaneHeight","updateResponsePaneHeight","useCallback","setResponsePaneHeight","DEBUGGER_TABS","DEBUGGER_TAB_KEYS","DEBUGGER_ERRORS","panelComponent","Errors","hasShortCut","DEBUGGER_LOGS","DebuggerLogs","INSPECT_ENTITY","EntityDeps","shouldRender","IDEBottomView","behaviour","ViewHideBehaviour","displayMode","ViewDisplayMode","hidden","onHideClick","showDebugger","setHeight","EntityBottomTabs","expandedHeight","ActionExecutionResizerHeight","onSelect","tabKey","setDebuggerSelectedTab","selectedTabKey","tabs","DebuggerTrigger","messageCounters","getMessageCount","setErrorCount","errors","useDebuggerTriggerClick","showDebuggerFlag","DebuggerTabs","bottomBarHeight","colors","editorBottomBar","Layers","Wrapper","BottomBar","viewMode","appId","getCurrentApplicationId","SwitchEnvironment","editorId","onChangeEnv","softRefreshActions","startSwitchEnvMessage","START_SWITCH_ENVIRONMENT","ManualUpgrades","showTooltip","HelpButton","smallHeaderHeight","appBackground","isCombinedPreviewMode","combinedPreviewModeSelector","classNames","_defineProperty","IconContainer","ConditionIcon","SidebarTopButtonTitles","tooltip","conditionIcon","appState","bottomButtons","topButtons","datasources","getDatasources","SidebarButton","state","urlSuffix","conditionType","conditionTooltip","SideButtonType","useCurrentAppState","pageId","getCurrentPageId","currentWorkspaceId","getCurrentWorkspaceId","fetchWorkspace","suffix","history","builderURL","invokedBy","NavigationMethod","SidebarComponent","BottomButtons","TopButtons","rightIcon","SettingsPageWrapper","APP_SETTINGS_PANE_WIDTH","PaneHeader","EditorSettingsPaneContainer","AppSettingsPane","userWorkspacePermissions","_getCurrentAppWorkspa","getCurrentAppWorkspace","userPermissions","isFeatureEnabled","getHasCreateDatasourcePermission","Popover","PopoverTrigger","PaneContainer","PaneBody","DatasourceIcon","StyledList","List","_props$dsUsageSelecto","dsUsageSelector","getDatasourceUsageCountForApp","editorType","useEditorType","currentSelectedDatasource","setCurrentSelectedDatasource","groupedDatasources","getDatasourcesGroupedByPluginCategory","plugins","getPlugins","groupedPlugins","_keyBy","dsUsageMap","goToDatasource","datasourcesEditorIdURL","datasourceId","location","useLocation","getSelectedDatasourceId","pathname","canCreateDatasource","CreateDatasourcePopover","DATA_PANE_TITLE","EmptyState","buttonClassName","buttonText","description","DATASOURCE_LIST_BLANK_DESCRIPTION","integrationEditorURL","INTEGRATION_TABS","Flex","gap","overflowY","px","Object","entries","py","items","data","descriptionType","isSelected","src","getAssetUrl","pluginId","iconLocation","InstallationProgressWrapper","addBorder","StatusIcon","action","_props$isInstalled","isInstalled","actionProps","InstallState","trigger","ProgressTracker","isFirst","isLast","url","Callout","links","customJSLibraryMessages","to","EXT_LINK","reportIssue","target","learnMore","Banner","InstallationProgress","installStatusMap","selectInstallationStatus","urls","keys","recommendedLibraries","lib","reverse","idx","jsDelivr","Installer","URL","setURL","isValid","setIsValid","_useState5","_useState6","errorMessage","setErrorMessage","installedLibraries","selectInstalledLibraries","queuedLibraries","selectQueuedLibraries","installerRef","updateURL","validate","test","valid","installLibrary","libURL","libInstalled","accessor","installLibraryInit","version","EntityClassNames","Input","labelPosition","isLoading","Link","Divider","LibraryCard","isLastCard","selectStatusForURL","selectIsLibraryInstalled","endIcon","docsURL","Avatar","image","author","onOpenChange","clearInstalls","PopoverContent","side","sideOffset","PopoverHeader","PopoverBody","writeToClipboard","el","navigator","clipboard","writeText","childNodes","textContent","classList","add","append","t0","_ref$current","removeChild","_x","_x2","_x3","apply","createElement","createTextNode","appendChild","docsURLMap","acc","Library","Name","Version","PrimaryCTA","installationStatus","uninstallLibrary","uninstallLibraryInit","LibraryEntity","openDocs","window","propertyRef","write","useClipboard","copyToClipboard","Collapse","libraries","selectLibrariesForExplorer","transitions","useTransition","from","opacity","enter","leave","AddLibraryPopover","animated","QueriesContainer","path","useRouteMatch","routes","useQuerySegmentRoutes","Switch","route","SentryRoute","component","exact","WidgetTypes","WidgetFactory","WidgetContextMenu","widgetId","parentId","ui","pageWidgets","dsl","widget","parentWidget","dispatchDelete","tabName","TABS_WIDGET","tabsObj","filteredTabs","values","ReduxActionTypes","payload","tabId","WidgetReduxActionTypes","showBinding","widgetName","entityId","entityName","entityType","ENTITY_TYPE","show","editWidgetName","initExplorerEntityNameEdit","optionTree","canManagePages","option","push","isDeletable","intent","confirmDelete","ContextMenu","displayName","UNREGISTERED_WIDGETS","WidgetEntity","memo","_props$childWidgets","widgetsToExpand","getEntityExplorerWidgetsToExpand","IconCmp","widgetType","WidgetIcon","forceExpand","pagePermissions","getPagePermissions","getHasManagePagePermission","_useWidget","selectedWidgets","getSelectedWidgets","lastSelectedWidget","getLastSelectedWidget","isWidgetSelected","multipleWidgetsSelected","navigateToWidget","useNavigateToWidget","isMultiSelect","metaKey","ctrlKey","isShiftSelect","shiftKey","useWidget","parentModalId","parentModalIdForChildren","switchWidget","fromUrl","toUrl","hash","indexOf","contextMenu","showContextMenu","widgetsInStep","childWidgets","child","Entity","canEditEntityName","highlight","isDefaultExpanded","searchKeyword","showAddButton","step","updateEntityName","updateWidgetName","_widgets$children2","widgets","selectWidgetsForCurrentPage","_widgets$children","addButtonClickHandler","setFocusSearchInput","widgetsExist","EDITOR_PANE_TEXTS","SEE_MORE_LESS_TEXT","showSeeLess","SEE_MORE_ARROW","toggleSeeMore","LoadingWrapper","LoadingContainer","showFullItems","setShowFullItems","noOfItemsToRender","cards","initialEntityCountForExplorerTag","tag","CollapsibleHeader","arrowPosition","Collapsible","replace","CollapsibleContent","WIDGET_TAGS","_sortBy","SUGGESTED_WIDGETS_ORDER","card","WidgetCard","details","SeeMoreButton","UIEntitySidebar","_searchInputRef$curre2","focusSearchInput","_useUIExplorerItems","releaseDragDropBuildingBlocks","isFixedLayout","isFixedLayoutSelector","isBuildingBlocksLoaded","templatesCountSelector","entityLoading","setEntityLoading","widgetCards","getWidgetCards","buildingBlockCards","getBuildingBlockExplorerCards","getAllTemplates","_toConsumableArray","groupedCards","groupWidgetCardsByTags","useUIExplorerItems","filteredCards","setFilteredCards","searchInputRef","isSearching","setIsSearching","areSearchResultsEmpty","setAreSearchResultsEmpty","isDragDropBuildingBlocksEnabled","hideSuggestedWidgets","searchWildcards","isSearchWildcard","tags","fuse","Fuse","weight","threshold","distance","sendWidgetSearchAnalytics","_debounce","search","keyword","trim","searchResult","filterCards","_searchInputRef$curre","focus","autoComplete","ENTITY_EXPLORER_SEARCH_ID","UI_ELEMENT_PANEL_SEARCH_TEXT","pt","renderAs","marginBottom","WIDGET_PANEL_EMPTY_MESSAGE","cardsForThisTag","UIEntityTagGroup","closeButtonClickHandler","widgetListURL","borderBottom","overflowX","BUILDER_PATH_DEPRECATED","BUILDER_PATH","BUILDER_CUSTOM_PATH","WIDGETS_EDITOR_ID_PATH","ADD_PATH","AddWidgets","WIDGETS_EDITOR_BASE_PATH","ListWidgets","useJSSegmentRoutes","isGlobalAddPaneEnabled","segment","useCurrentEditorState","onSegmentChange","useSegmentNavigation","backgroundColor","SegmentedControl","EditorEntityTab","globalAddURL","StyledTab","TabTextContainer","TabIconContainer","FileTab","onClose","clsx","sanitizeString","currentEntity","isListActive","navigateToTab","segmentMode","onCloseClick","EditorEntityTabState","maxHeight","AddButton","addClickHandler","useIDETabClickHandlers","isJSLoading","useIsJSAddLoading","Announcement","localStorageFlag","localStorage","LOCAL_STORAGE_KEYS","JSON","parse","setShow","tryClickHandler","learnClickHandler","AnnouncementModal","banner","ASSETS_CDN_URL","SPLITPANE_ANNOUNCEMENT","footer","isBeta","bg","h","w","zIndex","ListQuery","ListJSObjects","ScreenModeToggle","ideViewMode","getIDEViewMode","toggleEditorMode","newMode","EditorViewMode","setIdeEditorViewMode","MAXIMIZE_BUTTON_TOOLTIP","MINIMIZE_BUTTON_TOOLTIP","AddTab","newTabClickCallback","_useCurrentEditorStat","showListView","setShowListView","isSideBySideEnabled","getIsSideBySideEnabled","_useIDETabClickHandle","closeClickHandler","tabClickHandler","tabsConfig","TabSelectors","files","tabsSelector","shallowEqual","identifyEntityFromPath","entity","activetab","querySelector","ele","scrollWidth","clientWidth","borderRight","ToggleButton","ScrollArea","x","y","FileTabs","querySegmentRoutes","CURL_IMPORT_PAGE_PATH","API_EDITOR_BASE_PATH","SAAS_EDITOR_PATH","QUERIES_EDITOR_BASE_PATH","jsSegmentRoutes","JS_COLLECTION_EDITOR_PATH","widgetSegmentRoutes","SegmentedHeader","EditorTabs","QueriesSegment","JSSegment","WidgetsSegment","CTABox","CTAIcon","bgColor","CreateCTA","onCreateNewQuery","queryAddURL","onCreateJS","createNewJSCollection","LIGHT","css","fonts","code","DARK","Prism","punctuation","pattern","property","StyledCode","skin","Skin","themes","bindingText","SYNTAX_HIGHLIGHTING_SUPPORTED_LANGUAGES","forwardRef","codeRef","codeText","language","JAVASCRIPT","multiline","APPSMITH","CopyBox","StyledHighlightedCode","HighlightedCode","propertyName","isString","copyBindingToClipboard","toggleChildren","CollapseToggle","isVisible","COPY_ELEMENT","CurrentValueViewer","evaluatedValue","hideLabel","EditorTheme","ActionEntityPublicProperties","getEntityPropertiesMap","entityProperties","properties","jsActionEntity","jsActionEntityConfig","ConfigTreeActions","variableNames","variables","i","variableName","jsCollection","store","entities","jsActions","js","config","actions","_jsCollection$data","getPropsForJSActionEntity","actionProperty","entityDefinitions","k","run","clear","_WidgetFactory$getWid","widgetEntity","_isFunction","settersConfig","__setters","widgetProperty","EntityInfoContainer","selectEntityInfo","explorer","entityInfo","Sentry","evaluations","tree","selectedWidgetId","widgetDragResize","PerformanceTracker","PerformanceTransactionName","addEventListener","handleOutsideClick","removeEventListener","selectedWidget","canvasWidgets","closeContainer","entityPropertiesContainer","paths","composedPath","element","rect","getBoundingClientRect","bottom","top","innerHeight","left","getEntityProperties","entityProperty","EntityProperty","match","useEditorPaneWidth","EntityProperties","GlobalAdd","EditorPaneSegments","LeftPaneContainer","_ref$showRightBorder","showRightBorder","DataSidePane","DATA_SOURCES_EDITOR_LIST_PATH","DATA_SOURCES_EDITOR_ID_PATH","INTEGRATION_EDITOR_PATH","SAAS_GSHEET_EDITOR_ID_PATH","LibrarySidePane","APP_LIBRARIES_EDITOR_PATH","APP_SETTINGS_EDITOR_PATH","EditorPane","WidgetEditorContainer","isNavigationSelectedInSettings","getIsAppSettingsPaneWithNavigationTabOpen","isAppSettingsPaneWithNavigationTabOpen","EditorState","EditorContextProvider","renderMode","RenderModes","AnonymousDataPopup","user","getCurrentUser","isAdmin","isSuperUser","isOnboardingCompleted","getFirstTimeUserOnboardingComplete","isAnonymousDataPopupVisible","getIsAnonymousDataPopupVisible","isFirstTimeUserOnboardingEnabled","getIsFirstTimeUserOnboardingEnabled","hideAnonymousDataPopup","showAnonymousDataPopup","setFirstTimeUserOnboardingTelemetryCalloutVisibility","handleLinkClick","link","ADMIN_SETTINGS_CATEGORY_DEFAULT_PATH","TELEMETRY_DOCS_PAGE_URL","showShowAnonymousDataPopup","shouldPopupShow","isAirgapped","getFirstTimeUserOnboardingTelemetryCalloutIsAlreadyShown","sent","deleteCanvasCardsState","ANONYMOUS_DATA_POPOP_TIMEOUT","ADMIN_SETTINGS","LEARN_MORE","ONBOARDING_TELEMETRY_POPUP","WidgetEditorHeader","missingModuleNotification","useMissingModuleNotification","isPreviewMode","Navigation","WidgetEditorNavigation","navigationPreviewRef","NavigationPreview","getCrudInfoModalData","createSelector","crudInfoModal","crudInfoModalOpen","generateCRUDSuccessInfo","getInfoThumbnail","Content","ImageWrapper","ProgressiveImageContainer","SuccessContentWrapper","InfoContentHeadingText","SuccessText","STEP","InfoContent","successImageUrl","successMessage","dangerouslySetInnerHTML","__html","ProgressiveImage","alt","imageSource","thumbnailSource","connect","setStep","setCrudInfoModalData","GEN_CRUD_INFO_DIALOG_SUBTITLE","timerId","Modal","ModalContent","ModalBody","SuccessTick","GEN_CRUD_SUCCESS_MESSAGE","ModalFooter","WidgetEditorContentWrapper","allowDragToSelect","isResizing","getLayoutSystemType","LayoutSystemTypes","isDragging","isSelecting","canvasSelection","isDraggingForSelection","isAutoCanvasResizing","isDraggingDisabled","isResizingOrDragging","isSnipingMode","snipingModeSelector","isWidgetSelectionBlocked","getWidgetSelectionBlock","useAllowEditorDragToSelect","isAutoHeightWithLimitsChanging","useAutoHeightUIState","handleWrapperClick","_e$target","isCanvasWrapperClicked","nodeName","setCanvasSelectionFromEditor","onDragStart","preventDefault","startPoints","clientX","clientY","selectedTheme","getSelectedAppTheme","fontFamily","appFont","isAutoLayout","getIsAutoLayout","wrapperStyle","contain","draggable","NavigationAdjustedPageViewer","_currentApplicationDe","_currentApplicationDe2","isPreview","currentApplicationDetails","getCurrentApplication","isAppSidebarPinned","getAppSidebarPinned","sidebarWidth","getSidebarWidth","isPublished","getAppMode","APP_MODE","isMobile","useIsMobileDevice","isPreviewingNavigation","isAnvilLayout","getIsAnvilLayout","PageViewWrapper","hasPinnedSidebar","applicationDetail","navigationSetting","orientation","NAVIGATION_SETTINGS","CANVAS_VIEWPORT","transform","BannerWrapper","SnapShotBannerCTA","showModal","setShowModal","conversionState","layoutConversion","hideCloseButton","CONVERSION_STATES","lastUpdatedTime","getSnapshotUpdatedTime","readableSnapShotDetails","getReadableSnapShotDetails","formProps","useSnapShotForm","modalHeader","DISCARD_SNAPSHOT_HEADER","USE_SNAPSHOT_HEADER","closeModal","setConversionStop","openModal","setConversionStart","USE_SNAPSHOT_CTA","DISCARD_SNAPSHOT_CTA","SNAPSHOT_TIME_TILL_EXPIRATION_MESSAGE","timeTillExpiration","SNAPSHOT_BANNER_MESSAGE","onInteractOutside","ModalHeader","isCloseButtonVisible","ConversionForm","isWidgetSelectionBlock","editorState","shouldShow","setShouldShow","retrieveCodeWidgetNavigationUsed","then","timesUsed","catch","CANVAS_VIEW_MODE_TOOLTIP","modText","showArrow","StyledWDSThemeProvider","WDSThemeProvider","$enableMainCanvasResizer","backgroundForCanvas","canvasWidth","themeSetting","getAppThemeSettings","wdsThemeProps","seedColor","accentColor","colorMode","userSizing","sizing","userDensity","density","iconStyle","unfocusAllWidgets","focusWidget","focusRef","useWidgetFocus","marginHorizontalClass","enableMainCanvasResizer","paddingBottomClass","renderChildren","CodeModeTooltip","getViewportClassName","CANVAS_ART_BOARD","onMouseLeave","widgetsStructure","renderAppsmithCanvas","error","log","CanvasResizerIcon","importSvg","AutoLayoutCanvasResizer","MainContainerResizer","currentPageId","isPageInitiated","navigationHeight","appLayout","getCurrentApplicationLayout","fullWidthCSS","AUTOLAYOUT_RESIZER_WIDTH_BUFFER","wrapperElement","offsetWidth","smallestWidth","layoutConfigurations","events","mouseMoveHandler","dx","mouseUpHandler","setAutoCanvasResizing","rightResizer","rightMove","styles","getComputedStyle","parseInt","mouseMove","mouseDownHandler","removeProperty","shouldShowSnapShotBanner","isFetchingPage","getIsFetchingPage","getCanvasWidgetsStructure","equal","pages","getViewModePageList","shouldHaveTopMargin","isAppThemeChanging","getAppThemeIsChanging","showCanvasTopSection","showCanvasTopSectionSelector","isLayoutingInitialized","useDynamicAppLayout","isPageInitializing","_useMainContainerResi","_checkLayoutSystemFea","useLayoutSystemFeatures","checkLayoutSystemFeatures","LayoutSystemFeatures","enableMainContainerResizer","previewModeSelector","canShowResizer","useMainContainerResizer","forceOpenWidgetPanel","node","pageLoading","Centered","Canvas","getCanvasClassName","pointerEvents","WidgetGlobaStyles","primaryColor","LayoutSystemBasedPageViewer","appSettingsPaneContext","getAppSettingsPaneContext","getCanvasWidth","isConversionFlowEnabled","useShowSnapShotBanner","MainContainerWrapper","AppSettingsTabs","WidgetEditorContent","_useNavigationPreview","setNavigationHeight","offsetHeight","useNavigationPreviewHeight","CrudInfoModal","currentPageName","getCurrentPageName","currentApp","pageName","appName","mode","WidgetEditorFooter","fontWeights","onBackButton","subtitle","IntegrationUnavailableImage","filled","iconAlignment","ActionButton","BaseButton","DatasourceImage","EditDatasourceButton","DatasourceName","DatasourceCardHeader","DatasourceNameWrapper","_templateObject7","Queries","_templateObject8","ButtonsWrapper","_templateObject9","_datasource$pluginId","pluginImages","getPluginImages","params","useParams","datasource","datasourceFormConfigs","formConfigs","queriesWithThisDatasource","getCurrentActions","isStoredDatasource","currentFormConfig","QUERY","saasEditorDatasourceIdURL","buttonStyle","onCreate","_isEmpty","RenderDatasourceInformation","showOnlyCurrentEnv","IntegrationHomePage","fontSizes","CenteredWrapper","AddDatasource","Boundary","ListView","_len","args","Array","_key","handleCreateNewDatasource","createDatasource","handleCreateNewAPI","_this$props","pgId","URLSearchParams","createAction","_this$props2","isCreating","isEditorInitialized","plugin","renderLoading","renderPage","renderNotFound","_this2","_this$props3","DatasourceCard","_this$props4","NotFound","getPluginByPackageName","pluginPackageName","getDatasourcesByPluginId","_selectURLSlugs","selectURLSlugs","applicationSlug","pageSlug","apiPane","getIsEditorInitialized","applicationId","createDatasourceFromForm","createActionRequest","BlankStateIllustration","DATASOURCE_BLANK_STATE_MESSAGE","GeneratePageForm","HeadingContainer","isGenerateFormPage","heading","BackButton","PageContent","JSAddState","AddJS","containerProps","innerContainerProps","minWidth","QueriesAddState","AddQuery","editorMode","WidgetsEditor","API_EDITOR_ID_PATH","LIST_PATH","API_EDITOR_ID_ADD_PATH","QUERIES_EDITOR_ID_PATH","QUERIES_EDITOR_ID_ADD_PATH","JS_COLLECTION_ID_PATH","SAAS_EDITOR_API_ID_PATH","SAAS_EDITOR_API_ID_ADD_PATH","CreateNewDatasourceTab","OnboardingChecklist","BUILDER_CHECKLIST_PATH","DataSourceEditor","DatasourceBlankState","DatasourceForm","SAAS_EDITOR_DATASOURCE_ID_PATH","GeneratePage","GENERATE_TEMPLATE_FORM_PATH","ApiEditor","QueriesBlankState","QueryEditor","JSBlankState","JSEditor","CurlImportEditor","Route","useRoutes","useWidgetSelectionBlockListener","_createElement","CreateNewQueryModal","groupedActionOperations","useGroupedAddQueryOperations","getListItems","useAddQueryListItems","showCreateNewModal","getShowCreateNewModal","onCloseHandler","setShowQueryCreateNewModal","CREATE_A_NEW_ITEM","GroupedList","groups","groupTitle","operations","propertyPaneWidth","getPropertyPaneWidth","onRightSidebarDragEnd","setPropertyPaneWidthAction","onRightSidebarWidthChange","newWidth","PropertyPaneSidebar","onDragEnd","onWidthChange","PropertyPaneWrapper","StyledCallout","getIsUpdateProtectedBranchesLoading","BRANCH_PROTECTION_CALLOUT_CREATE_BRANCH","BRANCH_PROTECTION_CALLOUT_UNPROTECT_LOADING","BRANCH_PROTECTION_CALLOUT_UNPROTECT","remainingBranches","protectedBranch","updateGitProtectedBranchesInit","BRANCH_PROTECTION_CALLOUT_MSG","IDE","ProtectedCallout","EditorWrapperContainer","tailwindLayers","Sidebar","LeftPane","MainPane","RightPane","GlobalHotKeys","MAIN_CONTAINER_WIDGET_ID","getSelectedText","categoryId","SEARCH_CATEGORY_ID","category","filterCategories","setGlobalSearchCategory","hideInstaller","_this$context","isWalkthroughOpened","context","isOpened","widgetSearchInput","WIDGETS_SEARCH_ID","onOnmnibarHotKeyDown","toggleDebugger","stopPropagationIfWidgetSelected","copySelectedWidget","matchBuilderPath","pasteCopiedWidget","getMousePosition","isMacOrIOS","deleteSelectedWidget","cutSelectedWidget","selectAllWidgetsInit","resetSnipingMode","deselectAllWidgets","closeProppane","closeTableFilterProppane","executeAction","undo","redo","groupSelectedWidget","SAVE_HOTKEY_TOASTER_MESSAGE","setPreviewModeInitAction","showCommitModal","contextType","WalkthroughContext","isDebuggerOpen","appMode","isSignpostingEnabled","copyWidget","mouseLocation","pasteWidget","groupWidgets","cutWidget","resetSnipingModeAction","closePropertyPane","closeTableFilterPane","selectWidgetInitAction","SelectionRequestType","runActionViaShortcut","undoAction","redoAction","toggleInstaller","shouldSet","mousePosition","setMousePosition","useMouseLocation","isModalOpen","getIsDisconnectGitModalOpen","disconnectingApp","getDisconnectingGitApplication","gitDisconnectDocumentUrl","getDisconnectDocUrl","setAppName","isRevoking","setIsRevoking","handleClickOnBack","setIsDisconnectGitModalOpen","setDisconnectingGitApplication","handleClose","onDisconnectGit","revokeGit","shouldDisableRevokeButton","GIT_REVOKE_ACCESS","GIT_TYPE_REPO_NAME_FOR_REVOKING_ACCESS","APPLICATION_NAME","onBlur","event","expecting","NONE_REVERSIBLE_MESSAGE","GO_BACK","REVOKE","BodyContainer","StyledModalContent","_props$description","APPLICATION_IMPORT_SUCCESS_DESCRIPTION","_props$title","APPLICATION_IMPORT_SUCCESS","importedAppSuccess","getItem","close","setItem","onBackPress","TEMPLATES_BACK_BUTTON","Card","CardHeader","Page","PageName","StyledButton","page","selectedPages","setSelectedPages","pagesText","PAGES","PAGE","currentWorkSpace","Checkbox","checked","FILTER_SELECTALL","onPageSelection","selectedPageName","onSelection","importTemplateIntoApplication","template","isStartWithTemplateFlow","workspaceId","eventData","templateAppName","FILTER_SELECT_PAGE","FILTER_SELECT_PAGES","Body","StyledSimilarTemplatesWrapper","SimilarTemplates","TemplateDescriptionWrapper","templateId","currentTemplateId","setCurrentTemplateId","previewUrl","setPreviewUrl","similarTemplates","templates","isFetchingTemplate","isFetchingTemplateSelector","isImportingTemplateToApp","isImportingTemplateToAppSelector","currentTemplate","getActiveTemplateSelector","containerRef","LoadingText","FORKING_TEMPLATE","FETCHING_TEMPLATES","getTemplateInformation","getSimilarTemplatesInit","appUrl","onSimilarTemplateClick","scrollTo","LoadingScreen","TemplateDetailedViewHeader","IframeWrapper","IframeTopBar","TemplateDescription","isForkingEnabled","onFork","PageSelection","isURLDeprecated","VIEWER_PATH_DEPRECATED","VIEWER_PATH","matchViewerPath","matchPath","trimQueryString","generatePath","toString","BackText","HeaderWrapper","ADD_PAGE_FROM_TEMPLATE_MODAL","ModalContentWrapper","ModalBodyWrapper","templatesModalInfo","templateModalSelector","templatesCount","pluginListLength","defaultPluginList","filters","allTemplatesFiltersSelector","showTemplateDetails","setShowTemplateDetails","fetchDefaultPlugins","functions","getTemplateFilters","hideTemplatesModal","TemplateModalHeader","TemplateDetailedView","isOpenFromCanvas","TemplatesListLayoutSwitcher","analyticsEventNameForTemplateCardClick","onTemplateClick","StyledOverlay","signpostingEnabled","setOverlay","getSignpostingSetOverlay","showSignpostingModal","isAutocommitModalOpen","getIsAutocommitModalOpen","isAutocommitToggling","getIsAutocommitToggling","setIsAutocommitModalOpen","margin","AUTOCOMMIT_DISABLE","AUTOCOMMIT_CONFIRM_DISABLE_MESSAGE","toggleAutocommitEnabledInit","HeadContainer","InputContainer","SectionTitle","loadingKeyframe","keyframes","DummyLabel","DummyInput","DummyField","_errors$authorName","_errors$authorEmail","isFetchingGlobalGitConfig","getIsFetchingGlobalGitConfig","isFetchingLocalGitConfig","getIsFetchingLocalGitConfig","globalConfig","getGlobalGitConfig","localConfig","getLocalGitConfig","_useForm","useForm","control","formState","handleSubmit","register","setValue","watch","useGlobalProfile","authorName","authorEmail","fetchGlobalGitConfigInit","fetchLocalGitConfigInit","isSubmitAllowed","onSubmit","updateLocalGitConfigInit","GIT_USER_SETTINGS_TITLE","Controller","render","field","_omit","USE_DEFAULT_CONFIGURATION","isReadOnly","AUTHOR_NAME_ONLY","required","AUTHOR_NAME_CANNOT_BE_EMPTY","v","AUTHOR_EMAIL_ONLY","AUTHOR_EMAIL_CANNOT_BE_EMPTY","FORM_VALIDATION_INVALID_EMAIL","UPDATE","ZoneContainer","BodyInnerContainer","StyledDivider","isManageAutoCommitPermitted","useHasManageAutoCommitPermission","getAutocommitEnabledSelector","gitMetadataLoading","getGitMetadataLoadingSelector","showAutoCommit","showDivider","DANGER_ZONE","AUTOCOMMIT","AUTOCOMMIT_MESSAGE","AUTOCOMMIT_ENABLE","DISCONNECT_GIT","DISCONNECT_GIT_MESSAGE","showDangerZone","GitUserSettings","DangerZone","useAppsmithEnterpriseLink","feature","instanceId","getInstanceId","getUserSource","ENTERPRISE_PRICING_PAGE","searchParams","href","SectionDesc","StyledSelect","Select","isGitProtectedFeatureLicensed","unfilteredBranches","selectedValue","setSelectedValue","currentDefaultBranch","default","enterprisePricingLink","updateIsDisabled","DEFAULT_BRANCH","DEFAULT_BRANCH_DESC","APPSMITH_ENTERPRISE","dropdownMatchSelectWidth","getPopupContainer","triggerNode","parentNode","Option","old_branch","new_branch","updateGitDefaultBranch","StyledLink","_step","returnVal","_iterator","_createForOfIteratorHelper","s","n","done","unfilteredBranch","unshift","REMOTE_BRANCH_PREFIX","localBranchName","err","f","isUpdateLoading","selectedValues","setSelectedValues","_xor","sendAnalyticsEvent","_step2","branches_added","branches_removed","protected_branches","_iterator2","val","_step3","_iterator3","BRANCH_PROTECTION","BRANCH_PROTECTION_DESC","DOCS_BRANCH_PROTECTION_URL","maxTagTextLength","isManageProtectedBranchesPermitted","useHasManageProtectedBranchesPermission","showDefaultBranch","useHasManageDefaultBranchPermission","showProtectedBranches","GitDefaultBranch","GitProtectedBranches","CONFIGURE_CD_TITLE","CONFIGURE_CD_DESC","TRY_APPSMITH_ENTERPRISE","UnlicensedGitCD","showBranchTab","isGitSettingsModalOpenSelector","activeTabKey","activeGitSettingsModalTabSelector","menuOptions","GENERAL","BRANCH","CONTINUOUS_DELIVERY","SETTINGS_GIT","setActiveTabKey","TabGeneral","TabBranch","GitSettingsCDTab","CheckboxContainer","CheckboxWrapper","CheckBoxGrid","ScrollableSection","Bar","containerTestId","onEntityChecked","selectedIds","ds","appDS","selectedQueries","updateSelectedQueries","pluginGroups","dsIDToPluginIDMap","forEach","onEntitySelected","updatedSelectedNodes","splice","dsName","getPluginIcon","EntityCheckboxSelector","item","selectAllchecked","selectedWidgetIds","updateSelectAllChecked","updateSelectedWidgets","WidgetSelector","widgetList","toggleNestedChildrenSelection","_node$children","renderWidget","_widget$children","level","isParentSelected","prevSelectedWidgetIds","toggleNode","selectedParamsInitValue","jsObjects","customJSLibs","queries","PartialExportModal","customJsLibraries","setCustomJsLibraries","selectedParams","setSelectedParams","selectFilesForExplorer","appWideDS","useAppWideAndOtherDatasource","partialImportExportLoadingState","getPartialImportExportLoadingState","widgetSelectAllChecked","setWidgetSelectAllChecked","disableExportCTA","groupedData","currentGroup","shouldShowReset","onResetClick","PARTIAL_IMPORT_EXPORT","JSObjectsNQueriesExport","MenuIcons","keepColors","WidgetsExport","ControlIcons","keyToUpdate","prevSelectedIdsCopy","selectOnlyParentIds","ids","finalWidgetIDs","openPartialExportModal","isExportModalOpen","isExporting","partialExportWidgets","TextWrapper","Row","CardStyles","FileImportCard","fillCardWidth","iconSizes","XL","typography","p1","fontSize","PartialImportModal","_appFileToBeUploaded$","appFileToBeUploaded","setAppFileToBeUploaded","importingPartialApplication","getIsImportingPartialApplication","FileUploader","file","setProgress","importPartialApplication","applicationFile","openPartialImportModal","isImportDone","onRemoveFile","isImportModalOpen","UPLOADING_JSON","FilePickerV2","containerClickable","IMPORT_APP_FROM_FILE_MESSAGE","fileType","FileType","fileUploader","iconFillColor","onFileRemoved","IMPORT_APP_FROM_FILE_TITLE","uploadIcon","UPLOADING_APPLICATION","Editor","_Component","urlBuilder","editorInitializer","widgetConfigBuildSuccess","nextProps","_nextProps$match","_nextProps$match$para","_this$props$match","_this$props$match$par","getIsBranchUpdated","currentApplicationName","currentApplicationId","isPublishing","isEditorLoading","errorPublishing","isEditorInitializeError","loadingGuidedTour","prevProps","prevPageId","isBranchUpdated","getSearchQuery","GIT_BRANCH_QUERY_KEY","isPageIdUpdated","initEditor","updateCurrentPage","setupPage","resetEditorRequest","ThemeProvider","Helmet","charSet","GitSyncModal","GitSettingsModal","DisableCDModal","ReconfigureCDKeyModal","DisconnectGitModal","DisableAutocommitModal","RepoLimitExceededErrorModal","TemplatesModal","ImportedApplicationSuccessModal","ReconnectDatasourceModal","SignpostingOverlay","RequestConfirmationModal","Component","getTheme","ThemeMode","withRouter","_state$ui$application","getPublishingError","getIsPublishingApplication","getIsEditorLoading","applications","currentApplication","widgetInitialisationSuccess"],"sourceRoot":""}