{"version":3,"file":"static/js/walkthrough-renderer.0511e1f0.chunk.js","mappings":"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","sources":["components/featureWalkthrough/walkthroughRenderer.tsx"],"sourcesContent":["import { Icon, Text, Button, Divider } from \"design-system\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { PADDING_HIGHLIGHT, getPosition } from \"./utils\";\nimport type {\n  FeatureDetails,\n  FeatureParams,\n  OffsetType,\n} from \"./walkthroughContext\";\nimport WalkthroughContext, {\n  isFeatureFooterDetails,\n} from \"./walkthroughContext\";\nimport AnalyticsUtil from \"@appsmith/utils/AnalyticsUtil\";\nimport { showIndicator } from \"components/utils/Indicator\";\n\nconst CLIPID = \"clip__feature\";\nconst Z_INDEX = 1000;\n\nconst WalkthroughDescription = styled(Text)`\n  // CSS to add new line for each \\n in the description\n  white-space: pre-line;\n`;\n\nconst WalkthroughWrapper = styled.div<{ overlayColor?: string }>`\n  left: 0px;\n  top: 0px;\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  color: ${(props) => props.overlayColor ?? \"rgb(0, 0, 0, 0.7)\"};\n  z-index: ${Z_INDEX};\n  // This allows the user to click on the target element rather than the overlay div\n  pointer-events: none;\n`;\n\nconst SvgWrapper = styled.svg`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n`;\n\nconst InstructionsWrapper = styled.div`\n  padding: var(--ads-v2-spaces-4);\n  position: absolute;\n  background: white;\n  display: flex;\n  flex-direction: column;\n  width: 296px;\n  pointer-events: auto;\n  border-radius: var(--ads-radius-1);\n`;\n\nconst ImageWrapper = styled.div`\n  border-radius: var(--ads-radius-1);\n  background: #f1f5f9;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 8px;\n  padding: var(--ads-v2-spaces-7);\n  img {\n    max-height: 220px;\n  }\n`;\n\nconst InstructionsHeaderWrapper = styled.div`\n  display: flex;\n  p {\n    flex-grow: 1;\n  }\n  span {\n    align-self: flex-start;\n    margin-top: 5px;\n    cursor: pointer;\n  }\n`;\n\nconst FeatureFooterDivider = styled(Divider)`\n  margin-top: 8px;\n`;\n\nconst FeatureFooterWrapper = styled.div`\n  height: 36px;\n  margin-top: 8px;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n`;\n\ninterface RefRectParams {\n  // body params\n  bh: number;\n  bw: number;\n  // target params\n  th: number;\n  tw: number;\n  tx: number;\n  ty: number;\n}\n\n/*\n * Clip Path Polygon for single target with bounding rect :\n * 1) 0 0 ---->  (body start) (body start)\n * 2) 0 ${boundingRect.bh} ---->  (body start) (body end)\n * 3) ${boundingRect.tx} ${boundingRect.bh} ----> (target start) (body end)\n * 4) ${boundingRect.tx} ${boundingRect.ty} ----> (target start) (target start)\n * 5) ${boundingRect.tx + boundingRect.tw} ${boundingRect.ty} ----> (target end) (target start)\n * 6) ${boundingRect.tx + boundingRect.tw} ${boundingRect.ty + boundingRect.th} ----> (target end) (target end)\n * 7) ${boundingRect.tx} ${boundingRect.ty + boundingRect.th} ----> (target start) (target end)\n * 8) ${boundingRect.tx} ${boundingRect.bh} ----> (target start) (body end)\n * 9) ${boundingRect.bw} ${boundingRect.bh} ----> (body end) (body end)\n * 10) ${boundingRect.bw} 0 ----> (body end) (body start)\n *\n *\n *      1 ← ← ← ← ← ← ← ← ← ← ← ← ← ← ← ← ←10\n *      ↓                                   ↑\n *      ↓               Body                ↑\n *      ↓                                   ↑\n *      ↓                                   ↑\n *      ↓         4 → → → → → → → 5         ↑\n *      ↓         ↑ / / / / / / / ↓         ↑\n *      ↓         ↑ / / /Target/ /↓         ↑\n *      ↓         ↑ / / / / / / / ↓         ↑\n *      ↓         7 ← ← ← ← ← ← ← 6         ↑\n *      ↓         ↑↓                        ↑\n *      ↓         ↑↓                        ↑\n *      2 → → → → 3,8 → → → → → → → → → → → 9\n *\n *   Repeat steps 3 to 8 for each element if there are multiple highlighting elements.\n *\n */\n\n/**\n * Creates a Highlighting Clipping mask around a target container\n * @param targetId Id for the target container to show highlighting around it\n */\n\ntype BoundingRectTargets = Record<string, RefRectParams>;\n\nconst WalkthroughRenderer = ({\n  details,\n  dismissOnOverlayClick,\n  eventParams = {},\n  multipleHighlights,\n  offset,\n  overlayColor,\n  targetId,\n}: FeatureParams) => {\n  const [boundingRects, setBoundingRects] =\n    useState<BoundingRectTargets | null>(null);\n  const { popFeature } = useContext(WalkthroughContext) || {};\n\n  const multipleHighlightsIds = multipleHighlights?.length\n    ? multipleHighlights\n    : [targetId];\n  if (multipleHighlightsIds.indexOf(targetId) === -1)\n    multipleHighlightsIds.push(targetId);\n  const updateBoundingRect = () => {\n    const mainTarget = document.querySelector(targetId);\n    if (mainTarget) {\n      const data: BoundingRectTargets = {};\n      multipleHighlightsIds.forEach((id) => {\n        const highlightArea = document.querySelector(id);\n        if (highlightArea) {\n          const boundingRect = highlightArea.getBoundingClientRect();\n          const bodyRect = document.body.getBoundingClientRect();\n          const offsetHighlightPad =\n            typeof offset?.highlightPad === \"number\"\n              ? offset?.highlightPad\n              : PADDING_HIGHLIGHT;\n          data[id] = {\n            bw: bodyRect.width,\n            bh: bodyRect.height,\n            tw: boundingRect.width + 2 * offsetHighlightPad,\n            th: boundingRect.height + 2 * offsetHighlightPad,\n            tx: boundingRect.x - offsetHighlightPad,\n            ty: boundingRect.y - offsetHighlightPad,\n          };\n        }\n      });\n\n      if (Object.keys(data).length > 0) {\n        setBoundingRects(data);\n        showIndicator(`${targetId}`, offset?.position, {\n          top: offset?.indicatorTop || 0,\n          left: offset?.indicatorLeft || 0,\n          zIndex: Z_INDEX + 1,\n        });\n      }\n    }\n  };\n\n  useEffect(() => {\n    updateBoundingRect();\n    const highlightArea = document.querySelector(targetId);\n    window.addEventListener(\"resize\", updateBoundingRect);\n    const resizeObserver = new ResizeObserver(updateBoundingRect);\n    if (highlightArea) {\n      AnalyticsUtil.logEvent(\"WALKTHROUGH_SHOWN\", eventParams);\n      resizeObserver.observe(highlightArea);\n    }\n    return () => {\n      window.removeEventListener(\"resize\", updateBoundingRect);\n      if (highlightArea) resizeObserver.unobserve(highlightArea);\n    };\n  }, [targetId]);\n\n  const onDismissWalkthrough = () => {\n    popFeature && popFeature(\"WALKTHROUGH_CROSS_ICON\");\n  };\n\n  if (!boundingRects || Object.keys(boundingRects).length === 0) return null;\n  const targetBounds = boundingRects[targetId];\n\n  if (!targetBounds) return null;\n\n  return (\n    <WalkthroughWrapper\n      className=\"t--walkthrough-overlay\"\n      overlayColor={overlayColor}\n    >\n      <SvgWrapper\n        height={targetBounds.bh}\n        onClick={dismissOnOverlayClick ? onDismissWalkthrough : () => null}\n        width={targetBounds.bw}\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <defs>\n          <clipPath id={CLIPID}>\n            <polygon\n              // See the comments above the component declaration to understand the below points assignment.\n              points={`0 0, \n                    0 ${targetBounds.bh}, \n                    ${multipleHighlightsIds.reduce((acc, id) => {\n                      const boundingRect = boundingRects[id];\n                      if (boundingRect) {\n                        acc = `${acc} ${boundingRect.tx} ${boundingRect.bh}, \n                        ${boundingRect.tx} ${boundingRect.ty}, \n                        ${boundingRect.tx + boundingRect.tw} ${boundingRect.ty},\n                        ${boundingRect.tx + boundingRect.tw} ${\n                          boundingRect.ty + boundingRect.th\n                        }, \n                        ${boundingRect.tx} ${\n                          boundingRect.ty + boundingRect.th\n                        }, \n                        ${boundingRect.tx} ${boundingRect.bh},`;\n                      }\n                      return acc;\n                    }, \"\")}\n                    ${targetBounds.bw} ${targetBounds.bh}, \n                    ${targetBounds.bw} 0\n                  `}\n            />\n          </clipPath>\n        </defs>\n        <rect\n          style={{\n            clipPath: 'url(\"#' + CLIPID + '\")',\n            fill: \"currentcolor\",\n            height: targetBounds.bh,\n            pointerEvents: \"auto\",\n            width: targetBounds.bw,\n          }}\n        />\n      </SvgWrapper>\n\n      <InstructionsComponent\n        details={details}\n        offset={offset}\n        onClose={onDismissWalkthrough}\n        targetId={targetId}\n      />\n    </WalkthroughWrapper>\n  );\n};\n\nconst InstructionsComponent = ({\n  details,\n  offset,\n  onClose,\n  targetId,\n}: {\n  details?: FeatureDetails;\n  offset?: OffsetType;\n  targetId: string;\n  onClose: () => void;\n}) => {\n  if (!details) return null;\n\n  const positionAttr = getPosition({\n    targetId,\n    offset,\n  });\n\n  return (\n    <InstructionsWrapper style={{ ...positionAttr }}>\n      <InstructionsHeaderWrapper>\n        <Text kind=\"heading-s\" renderAs=\"p\">\n          {details.title}\n        </Text>\n        <Icon\n          className=\"t--walkthrough-close\"\n          color=\"black\"\n          name=\"close\"\n          onClick={onClose}\n          size=\"md\"\n        />\n      </InstructionsHeaderWrapper>\n      <WalkthroughDescription>{details.description}</WalkthroughDescription>\n      {details.imageURL && (\n        <ImageWrapper>\n          <img src={details.imageURL} />\n        </ImageWrapper>\n      )}\n      {!!details.footerDetails &&\n        isFeatureFooterDetails(details.footerDetails) && (\n          <>\n            <FeatureFooterDivider />\n            <FeatureFooterWrapper>\n              <Text kind=\"body-s\">{details.footerDetails.footerText}</Text>\n              <Button onClick={details.footerDetails.onClickHandler} size=\"sm\">\n                {details.footerDetails.footerButtonText}\n              </Button>\n            </FeatureFooterWrapper>\n          </>\n        )}\n    </InstructionsWrapper>\n  );\n};\n\nexport default WalkthroughRenderer;\n"],"names":["CLIPID","WalkthroughDescription","styled","Text","_templateObject","_taggedTemplateLiteral","WalkthroughWrapper","_templateObject2","props","_props$overlayColor","overlayColor","SvgWrapper","_templateObject3","InstructionsWrapper","_templateObject4","ImageWrapper","_templateObject5","InstructionsHeaderWrapper","_templateObject6","FeatureFooterDivider","Divider","_templateObject7","FeatureFooterWrapper","_templateObject8","InstructionsComponent","_ref3","details","offset","onClose","targetId","positionAttr","getPosition","_jsxs","style","_objectSpread","children","_jsx","kind","renderAs","title","Icon","className","color","name","onClick","size","description","imageURL","src","footerDetails","isFeatureFooterDetails","_Fragment","footerText","Button","onClickHandler","footerButtonText","_ref","dismissOnOverlayClick","_ref$eventParams","eventParams","multipleHighlights","_useState","useState","_useState2","_slicedToArray","boundingRects","setBoundingRects","popFeature","useContext","WalkthroughContext","multipleHighlightsIds","length","indexOf","push","updateBoundingRect","document","querySelector","data","forEach","id","highlightArea","boundingRect","getBoundingClientRect","bodyRect","body","offsetHighlightPad","highlightPad","PADDING_HIGHLIGHT","bw","width","bh","height","tw","th","tx","x","ty","y","Object","keys","showIndicator","concat","position","top","indicatorTop","left","indicatorLeft","zIndex","Z_INDEX","useEffect","window","addEventListener","resizeObserver","ResizeObserver","AnalyticsUtil","observe","removeEventListener","unobserve","onDismissWalkthrough","targetBounds","xmlns","points","reduce","acc","clipPath","fill","pointerEvents"],"sourceRoot":""}