{"version":3,"file":"static/js/CustomWidgetBuilder.eeb4b85a.chunk.js","mappings":"0FAAA,SAASA,EAAoBC,GAC5B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBF,EAAM,KAEjD,MADAC,EAAEE,KAAO,mBACHF,CACP,CACAF,EAAoBK,KAAO,WAAa,MAAO,EAAI,EACnDL,EAAoBM,QAAUN,EAC9BA,EAAoBO,GAAK,MACzBC,EAAOC,QAAUT,C,iRCFJU,EAAUC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6XACnB,SAACC,GAAK,OAAKA,EAAMC,MAAQ,EAAE,IAC7B,SAACD,GAAK,OAAKA,EAAMC,MAAQ,EAAE,IAMjB,SAACD,GAAK,OAAKA,EAAME,eAAe,GAGzCC,EAAAA,EAAAA,O,mBCbAC,EAAgBP,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,ojBAQ3B,SAACC,GAAK,OAAKA,EAAMK,MAAMC,iBAAiB,IAE9CC,EAAAA,EAAAA,IAAmB,OACZ,SAACP,GAAK,OAAKA,EAAMK,MAAMG,OAAOC,OAAOC,OAAO,GAEnDd,GAkBOe,EAAgBd,EAAAA,GAAAA,IAAUe,IAAAA,GAAAb,EAAAA,EAAAA,GAAA,0S,WClCvC,GAAgB,cAAgB,8BAA8B,OAAS,uBAAuB,eAAiB,+BAA+B,QAAU,wBAAwB,OAAS,uBAAuB,YAAc,4BAA4B,wBAA0B,wCAAwC,aAAe,6BAA6B,YAAc,6B,uDCgBhXM,GAAQQ,EAAAA,EAAAA,IAASC,EAAAA,GAAAA,OAER,SAASC,IACtB,IAAAC,GAA6CC,EAAAA,EAAAA,YAC3CC,IADMC,EAAKH,EAALG,MAAOC,EAAyBJ,EAAzBI,0BAIf,OACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAa,CAACjB,MAAOA,EAAMkB,UAC1BC,EAAAA,EAAAA,MAACpB,EAAa,CAACqB,UAAWC,EAAAA,cAAqBH,SAAA,EAC7CC,EAAAA,EAAAA,MAACb,EAAa,CAACc,UAAWC,EAAAA,cAAqBH,SAAA,EAC7CF,EAAAA,EAAAA,KAACM,EAAAA,EAAY,KACbN,EAAAA,EAAAA,KAACO,EAAAA,EAAI,CAACH,UAAWC,EAAAA,OAAeG,KAAK,aAAYN,UAC9CO,EAAAA,EAAAA,KAAcC,EAAAA,GAAAA,QAAAA,cAGnBP,EAAAA,EAAAA,MAACb,EAAa,CACZc,WAAWO,EAAAA,EAAAA,GAAKN,EAAAA,cAAsBA,EAAAA,gBAAuBH,SAAA,CAE5DH,IACCI,EAAAA,EAAAA,MAAAS,EAAAA,SAAA,CAAAV,SAAA,EACEF,EAAAA,EAAAA,KAACO,EAAAA,EAAI,CAACM,MAAM,mCAAkCX,UAC3CO,EAAAA,EAAAA,KAAcC,EAAAA,GAAAA,QAAAA,mBAEjBV,EAAAA,EAAAA,KAACc,EAAAA,EAAI,CACHC,KAAK,cACLnC,KAAK,KACLoC,MAAO,CACLH,MAAO,0CAKfb,EAAAA,EAAAA,KAACiB,EAAAA,EAAM,CACLb,UAAWC,EAAAA,YACXG,KAAK,WACLU,QAASpB,EACTlB,KAAK,KAAIsB,UAERO,EAAAA,EAAAA,KAAcC,EAAAA,GAAAA,QAAAA,gBAM3B,C,8CC7DA,GAAgB,QAAU,wBAAwB,YAAc,4BAA4B,aAAe,6BAA6B,aAAe,6BAA6B,oBAAsB,oCAAoC,iBAAmB,iCAAiC,iBAAmB,iCAAiC,wBAA0B,wCAAwC,gBAAkB,gCAAgC,gBAAkB,gCAAgC,oBAAsB,oCAAoC,uBAAyB,uCAAuC,cAAgB,8BAA8B,kBAAoB,mC,iCCgBzqB,SAASS,EAAaxC,GAAqB,IAADyC,EAC/CC,EAAS1C,EAAT0C,KAEFC,EAAmB,OAAJD,QAAI,IAAJA,GAAS,QAALD,EAAJC,EAAO,UAAE,IAAAD,OAAL,EAAJA,EAAWG,QAEhC,OACEpB,EAAAA,EAAAA,MAACqB,EAAAA,GAAO,CAAAtB,SAAA,EACNF,EAAAA,EAAAA,KAACyB,EAAAA,GAAc,CAAAvB,UACbF,EAAAA,EAAAA,KAACiB,EAAAA,EAAM,CAACT,KAAK,WAAW5B,KAAK,KAAK8C,UAAU,qBAE9C1B,EAAAA,EAAAA,KAAC2B,EAAAA,GAAc,CAACvB,UAAWC,EAAAA,uBAA8BH,UACvDF,EAAAA,EAAAA,KAAC4B,EAAAA,EAAI,CACHC,MAAO,CACL,CACEH,WAAW1B,EAAAA,EAAAA,KAACc,EAAAA,EAAI,CAACC,KAAK,OAAOnC,KAAK,OAClCkD,MAAO,gBACPZ,QAAS,WACPa,OAAOC,KAAKC,EAAAA,GAAuB,SACrC,EACAC,YAAa,GACbC,gBAAiB,UASnB,CACET,WAAW1B,EAAAA,EAAAA,KAACc,EAAAA,EAAI,CAACC,KAAK,UAAUnC,KAAK,OACrCkD,OAAOrB,EAAAA,EAAAA,KACLC,EAAAA,GAAAA,SAAAA,aAAAA,eAEFQ,QAAS,WACPG,EAAK,IACHU,OAAOC,KAAK,sCAADI,OAEP,gBACAC,mBAAmBf,GAAuB,KAE5C,SAEN,EACAY,YAAa,GACbC,gBAAiB,iBAc/B,CCpEO,I,EAAMG,EAAkB,CAC7BC,IAAK,MACLC,KAAM,OACNC,KAAM,OACNC,MAAO,S,8BCTM,SAASC,EAAWhE,GAoBjC,OAAOqB,EAAAA,EAAAA,KAAC4C,KAASC,EAAAA,EAAAA,GAAA,CAACC,IAAKnE,EAAMoE,OAjBN,CACrB/D,MAAO,cACP+B,KAAM,KACNiC,iBAAiB,EACjBC,mBAAmB,EACnBC,kBAAkB,EAClBlC,MAAO,CACLmC,SAAU,QAEZC,UAAW,EACXC,eAAgB,SAACC,GAEf,OAD2B,EAAbA,EAAMvC,MACJ,CAClB,EACAwC,YAAa,IAIjB,CChBA,IAAMC,EAAahF,EAAAA,GAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yBACnB,SAACC,GACR,OAAQA,EAAM8E,MACZ,IAAK,SACH,MAAO,kBACT,IAAK,SACH,MAAO,UACT,QACE,MAAO,UAEb,IAGIC,EAAU,SAACD,GACf,OAAQA,GACN,KAAKnB,EAAgBI,MACnB,OACE1C,EAAAA,EAAAA,KAACc,EAAAA,EAAI,CACHC,KAAK,eACLnC,KAAK,KACLoC,MAAO,CACLH,MAAO,iCAIf,KAAKyB,EAAgBG,KACnB,OACEzC,EAAAA,EAAAA,KAACc,EAAAA,EAAI,CACHC,KAAK,aACLnC,KAAK,KACLoC,MAAO,CACLH,MAAO,oCAIf,KAAKyB,EAAgBC,IACnB,OAAOvC,EAAAA,EAAAA,KAACc,EAAAA,EAAI,CAACC,KAAK,UAAUnC,KAAK,OACnC,KAAK0D,EAAgBE,KACnB,OAAOxC,EAAAA,EAAAA,KAACc,EAAAA,EAAI,CAACC,KAAK,OAAOnC,KAAK,OAChC,QACE,OAAOoB,EAAAA,EAAAA,KAACc,EAAAA,EAAI,CAACC,KAAK,UAAUnC,KAAK,OAEvC,EAEM+E,EAAa,SAACF,EAAcpC,GAChC,OAAOA,EAAKuC,KAAI,SAACC,EAAGC,GAClB,OAAID,EAAEtC,mBAAmBwC,QAChB/D,EAAAA,EAAAA,KAAC2C,EAAU,CAASI,MAAOc,EAAEtC,SAAZuC,GACN,QAATL,GAEPzD,EAAAA,EAAAA,KAACwD,EAAU,CAASC,YAAaI,EAAEtC,QAAQrB,SACnB,kBAAd2D,EAAEtC,QACNsC,EAAEtC,QACFyC,KAAKC,UAAUJ,EAAEtC,UAHNuC,IAOZ9D,EAAAA,EAAAA,KAAA,QAAAE,SAAe2D,EAAEtC,SAANuC,EAEtB,GACF,EAEMI,EAAqB,SAACT,GAC1B,OAAQA,GACN,KAAKnB,EAAgBI,MACnB,MAAO,6BACT,KAAKJ,EAAgBG,KACnB,MAAO,iCACT,QACE,MAAO,OAEb,EAEe,SAAS0B,EAAaxF,GACnC,IAAQ0C,EAAe1C,EAAf0C,KAAMoC,EAAS9E,EAAT8E,KAEd,OACEtD,EAAAA,EAAAA,MAAA,OACEC,UAAWC,EAAAA,aACXW,MAAO,CACLoD,WAAYF,EAAmBvF,EAAM8E,OACrCvD,SAAA,EAEFF,EAAAA,EAAAA,KAAA,OAAKI,UAAWC,EAAAA,iBAAwBH,SAAEwD,EAAQ/E,EAAM8E,SACxDzD,EAAAA,EAAAA,KAAA,OAAKI,UAAWC,EAAAA,oBAA2BH,SAAEyD,EAAWF,EAAMpC,KAC7DoC,IAASnB,EAAgBI,QACxB1C,EAAAA,EAAAA,KAAA,OAAKI,UAAWC,EAAAA,iBAAwBH,UACtCF,EAAAA,EAAAA,KAACmB,EAAY,CAACE,KAAMA,EAAMoC,KAAMA,QAK1C,CChGe,SAASY,EAAQ1F,GAM9B,IAAQ2F,EAA8B3F,EAA9B2F,MAAOC,EAAuB5F,EAAvB4F,IAAKrD,EAAkBvC,EAAlBuC,QAASsD,EAAS7F,EAAT6F,KAE7B,OACErE,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,gBAAwBa,QAAS,kBAAMA,GAAS,EAAChB,SAAA,EAC/DC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,oBAA2BH,SAAA,EACzCF,EAAAA,EAAAA,KAACc,EAAAA,EAAI,CACHC,KAAK,eACLnC,KAAK,KACLoC,MAAO,CACLH,MAAO,iCAGVyD,MAEHnE,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,oBAA2BH,SAAA,EACzCF,EAAAA,EAAAA,KAACc,EAAAA,EAAI,CACHC,KAAK,aACLnC,KAAK,KACLoC,MAAO,CACLH,MAAO,oCAGV2D,MAEHrE,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,oBAA2BH,SAAA,EACzCF,EAAAA,EAAAA,KAACc,EAAAA,EAAI,CAACC,KAAK,UAAUnC,KAAK,OACzB2F,OAIT,C,eCrCME,EAAe,IAAIC,EAAAA,GAEV,SAASC,EACtBC,EACAC,GAEA,IAAAC,GAAsCC,EAAAA,EAAAA,WAAS,WAC7C,IAAMhC,EAAQ0B,EAAaO,QAAQJ,GAEnC,OAAO7B,EAASiB,KAAKiB,MAAMlC,GAAoB8B,CACjD,IAAEK,GAAAC,EAAAA,EAAAA,GAAAL,EAAA,GAJKM,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAWlC,MAAO,CAACE,GALSE,EAAAA,EAAAA,cAAY,SAACC,GAC5BF,EAAeE,GACfd,EAAae,QAAQZ,EAAKZ,KAAKC,UAAUsB,GAC3C,GAAG,IAGL,C,0BCNME,EACJ,uDAEa,SAASC,IACtB,IAAMC,EAAcC,EAAAA,OAA6B,MAEjDC,EAAwBlB,EACtBc,GACA,GACDK,GAAAX,EAAAA,EAAAA,GAAAU,EAAA,GAHM7D,EAAI8D,EAAA,GAAEC,EAAOD,EAAA,GAKpBnG,GAAuDC,EAAAA,EAAAA,YACrDC,IADMmG,EAAkBrG,EAAlBqG,mBAAoBC,EAAYtG,EAAZsG,aAAcC,EAAQvG,EAARuG,UAI1CC,EAAAA,EAAAA,YAAU,WAAO,IAADC,EACK,QAAnBA,EAAAT,EAAYU,eAAO,IAAAD,GAAnBA,EAAqBE,eAAe,CAAEC,SAAU,UAClD,GAAG,CAACN,IAEJ,IAAMO,GAASlB,EAAAA,EAAAA,cAAY,WACzBS,GAAS/D,GACTyE,EAAAA,GAAAA,SACE,oDACA,CACEP,SAAUA,EACVQ,SAAU1E,GAGhB,GAAG,CAACA,IAEJ,OACE7B,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,QAAeH,SAAA,EAC7BC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,gBAAuBH,SAAA,EACrCF,EAAAA,EAAAA,KAACqE,EAAO,CACNC,OACc,OAAZ2B,QAAY,IAAZA,OAAY,EAAZA,EAAcU,QAAO,SAAC9C,GAAC,OAAKA,EAAEJ,OAASnB,EAAgBI,KAAK,IACzDkE,SAAU,EAEfrC,KACc,OAAZ0B,QAAY,IAAZA,OAAY,EAAZA,EAAcU,QAAO,SAAC9C,GAAC,OAAKA,EAAEJ,OAASnB,EAAgBC,GAAG,IACvDqE,SAAU,EAEf1F,QAAS,kBAAMsF,GAAQ,EACvBhC,MACc,OAAZyB,QAAY,IAAZA,OAAY,EAAZA,EAAcU,QAAO,SAAC9C,GAAC,OAAKA,EAAEJ,OAASnB,EAAgBG,IAAI,IACxDmE,SAAU,KAGjB5G,EAAAA,EAAAA,KAAC6G,EAAAA,EAAO,CAACC,QAAQ,gBAAe5G,UAC9BF,EAAAA,EAAAA,KAACc,EAAAA,EAAI,CACHC,KAAK,cACLG,QAAS,WACW,OAAlB8E,QAAkB,IAAlBA,GAAAA,IACAS,EAAAA,GAAAA,SAAuB,yCAA0C,CAC/DP,SAAUA,GAEd,EACAtH,KAAK,KACLoC,MAAO,CAAE+F,OAAQ,gBAGrB/G,EAAAA,EAAAA,KAAC6G,EAAAA,EAAO,CAACC,QAAS9E,EAAO,gBAAkB,eAAe9B,UACxDF,EAAAA,EAAAA,KAACc,EAAAA,EAAI,CACHC,KAAMiB,EAAO,oBAAsB,kBACnCd,QAAS,kBAAMsF,GAAQ,EACvB5H,KAAK,KACLoC,MAAO,CAAE+F,OAAQ,mBAIvB5G,EAAAA,EAAAA,MAAC6G,EAAAA,GAAI,CAACjE,MAAO,WAAW7C,SAAA,EACtBF,EAAAA,EAAAA,KAACiH,EAAAA,GAAQ,CAAC7G,UAAWC,EAAAA,YAAoBa,QAAS,kBAAMsF,GAAQ,EAACtG,UAC/DF,EAAAA,EAAAA,KAACkH,EAAAA,GAAG,CAAgBnE,MAAM,WAAU7C,UACjCO,EAAAA,EAAAA,KAAcC,EAAAA,GAAAA,SAAAA,QADR,cAIVsB,IACC7B,EAAAA,EAAAA,MAACgH,EAAAA,GAAQ,CACP/G,UAAWC,EAAAA,aAEX0C,MAAM,WAAU7C,SAAA,CAEH,OAAZ+F,QAAY,IAAZA,GAAAA,EAAcW,OACD,OAAZX,QAAY,IAAZA,OAAY,EAAZA,EAAcrC,KAAI,SAACW,EAAK6C,GAAK,OAC3BpH,EAAAA,EAAAA,KAACmE,EAAY,CAAC9C,KAAMkD,EAAIlD,KAAkBoC,KAAMc,EAAId,MAAjB2D,EAAyB,KAG9DjH,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,uBAA8BH,SAAA,EAC5CF,EAAAA,EAAAA,KAAA,OAAKI,UAAWC,EAAAA,kBAAyBH,UACvCF,EAAAA,EAAAA,KAAA,OAAK8C,IAAKuE,EAAAA,OAEZrH,EAAAA,EAAAA,KAAA,OAAKI,UAAWC,EAAAA,cAAqBH,UAClCO,EAAAA,EAAAA,KAAcC,EAAAA,GAAAA,SAAAA,oBAIrBV,EAAAA,EAAAA,KAAA,OAAKsH,IAAK3B,MAjBN,iBAuBhB,C,gBCzGe,SAAS4B,GAAOC,GAAgC,IAADC,EAA5BC,EAAKF,EAALE,MAChC/H,GAQIC,EAAAA,EAAAA,YAAWC,IAPb+E,EAAGjF,EAAHiF,IACA+C,EAAKhI,EAALgI,MACAC,EAAMjI,EAANiI,OACA5I,EAAKW,EAALX,MACA6I,EAAkBlI,EAAlBkI,mBACAC,EAAWnI,EAAXmI,YACA5B,EAAQvG,EAARuG,SAGFpB,GAAoCC,EAAAA,EAAAA,UAAS,CAC3C2C,MAAO,IACPK,OAAQ,MACR7C,GAAAC,EAAAA,EAAAA,GAAAL,EAAA,GAHKkD,EAAU9C,EAAA,GAAE+C,EAAa/C,EAAA,GAK1BgD,GAAeC,EAAAA,EAAAA,QAAuB,MA4C5C,OA1CAhC,EAAAA,EAAAA,YAAU,WACmB,IAADiC,EAAtBF,EAAa7B,SACf4B,EAAc,CACZP,OAA2B,QAApBU,EAAAF,EAAa7B,eAAO,IAAA+B,OAAA,EAApBA,EAAsBC,aAAc,EAC3CN,OACEhG,OAAOuG,YACPJ,EAAa7B,QAAQkC,wBAAwBC,IAC7C,KAIN,IAAMC,EAAe,WACQ,IAADC,EAAtBR,EAAa7B,SACf4B,EAAc,CACZP,OAA2B,QAApBgB,EAAAR,EAAa7B,eAAO,IAAAqC,OAAA,EAApBA,EAAsBL,aAAc,EAC3CN,OACEhG,OAAOuG,YACPJ,EAAa7B,QAAQkC,wBAAwBC,IAC7C,IAGR,EAIA,OAFAzG,OAAO4G,iBAAiB,SAAUF,GAE3B,WACL1G,OAAO6G,oBAAoB,SAAUH,EACvC,CACF,GAAG,KAEHtC,EAAAA,EAAAA,YAAU,WACJ+B,EAAa7B,SACf4B,EAAc,CACZP,MAAOQ,EAAa7B,QAAQgC,YAAc,EAC1CN,OACEhG,OAAOuG,YACPJ,EAAa7B,QAAQkC,wBAAwBC,IAC7C,IAGR,GAAG,CAACd,EAA2B,QAAtBD,EAAES,EAAa7B,eAAO,IAAAoB,OAAA,EAApBA,EAAsBY,eAG/BlI,EAAAA,EAAAA,MAAA,OAAKmH,IAAKY,EAAahI,SAAA,EACrBF,EAAAA,EAAAA,KAAC6I,EAAAA,EAAe,CACdC,cAAeC,GAAAA,GAAAA,MACfC,QAAS,SAACjI,EAAMkI,GACdC,EAAAA,EAAAA,KAAW,GAAD9G,QACL3B,EAAAA,EAAAA,KACDC,EAAAA,GAAAA,QAAAA,YACD,KAAA0B,OAAIrB,GACL,CAAEP,KAAM,YAGQ,OAAlBqH,QAAkB,IAAlBA,GAAAA,EAAqB,CACnBpE,KAAM,OACNpC,KAAM,CACJ,CACEE,QAAQ,GAADa,QAAK3B,EAAAA,EAAAA,KACVC,EAAAA,GAAAA,QAAAA,YACD,MAAA0B,OAAKrB,EAAI,MAEZ,CAAEQ,QAAS0H,KAGjB,EACAlB,OAAQC,EAAWD,OAEnBoB,iBAAkB,EAClBxB,MAAOA,GAAS,CAAC,EACjByB,UAAW,SAAC3F,EAAMpC,GACE,OAAlBwG,QAAkB,IAAlBA,GAAAA,EAAqB,CACnBpE,KAAAA,EACApC,KAAAA,GAEJ,EACAgI,WAAW,UACXzB,OAAQA,GAAU,CAAE0B,KAAM,GAAIC,GAAI,GAAIC,IAAK,IAC3CxK,MAAOA,EACPyK,OAAQ,SAACC,GACI,OAAX5B,QAAW,IAAXA,GAAAA,EAAc4B,GAEd,IAAMnI,GAAUd,EAAAA,EAAAA,KACdC,EAAAA,GAAAA,QAAAA,cAGFwI,EAAAA,EAAAA,KAAW3H,EAAS,CAAEf,KAAM,YAEV,OAAlBqH,QAAkB,IAAlBA,GAAAA,EAAqB,CACnBpE,KAAM,OACNpC,KAAM,CAAC,CAAEE,QAAAA,GAAW,CAAEA,QAASmI,KAEnC,EACAxD,SAAUA,GAAY,GACtBwB,MAAOM,EAAWN,OA3Bb9C,IA6BP5E,EAAAA,EAAAA,KAAC0F,EAAQ,MAGf,C,gBChIA,IAAgB,iBAAmB,iCAAiC,eAAiB,gCCArF,IAAgB,sBAAwB,sCAAsC,yBAA2B,0CCAzG,IAAgB,QAAU,wBAAwB,QAAU,wBAAwB,SAAW,yBAAyB,SAAW,0BCa7HiE,GAAqB,kCAEZ,SAASC,GAAUjL,GAChC,IAAQkL,EAASlL,EAATkL,KAERhE,EAAsClB,EACpCgF,GACAE,EAAK,GAAG/H,OACTgE,GAAAX,EAAAA,EAAAA,GAAAU,EAAA,GAHMiE,EAAWhE,EAAA,GAAEiE,EAAcjE,EAAA,IAKlCK,EAAAA,EAAAA,YAAU,WACH0D,EAAKG,MAAK,SAACnG,GAAC,OAAKA,EAAE/B,QAAUgI,CAAW,KAC3CC,EAAeF,EAAK,GAAG/H,MAE3B,GAAG,IAEH,IAAMoG,GAAeC,EAAAA,EAAAA,QAAuB,MAE5C8B,EAA4BrE,EAAAA,SAAe,GAAEsE,GAAA/E,EAAAA,EAAAA,GAAA8E,EAAA,GAAtClC,EAAMmC,EAAA,GAAEC,EAASD,EAAA,GAExBpF,GAA8BC,EAAAA,EAAAA,WAAS,GAAKG,GAAAC,EAAAA,EAAAA,GAAAL,EAAA,GAArCsF,EAAOlF,EAAA,GAAEmF,EAAUnF,EAAA,IAE1BiB,EAAAA,EAAAA,YAAU,WACJ+B,EAAa7B,UACf8D,EACEpI,OAAOuG,YACLJ,EAAa7B,QAAQkC,wBAAwBC,IAC7C,IAGJ6B,GAAW,IAGb,IAAMC,EAAU,WACVpC,EAAa7B,SACf8D,EACEpI,OAAOuG,YACLJ,EAAa7B,QAAQkC,wBAAwBC,IAC7C,GAGR,EAIA,OAFAzG,OAAO4G,iBAAiB,SAAU2B,GAE3B,WACLvI,OAAO6G,oBAAoB,SAAU0B,EACvC,CACF,GAAG,IAEH,IAAMC,EAAoBV,EAAKG,MAAK,SAACnG,GAAC,OAAKA,EAAE/B,QAAUgI,CAAW,IAElE,OACE3J,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,GAAAA,QAAgBiH,IAAKY,EAAahI,SAAA,EAC9CkK,IACAjK,EAAAA,EAAAA,MAAC6G,EAAAA,GAAI,CACHwD,cAAe,SAACC,GAKdC,YAAW,WACTX,EAAeU,EACjB,GACF,EACA1H,MAAO+G,EAAY5J,SAAA,EAEnBF,EAAAA,EAAAA,KAACiH,EAAAA,GAAQ,CAAC7G,UAAWC,GAAAA,QAAeH,SACjC2J,EAAKjG,KAAI,SAAC6G,GAAG,OACZzK,EAAAA,EAAAA,KAACkH,EAAAA,GAAG,CAAiBnE,MAAO0H,EAAI3I,MAAM5B,SACnCuK,EAAI3I,OADG2I,EAAI3I,MAER,MAGT+H,EAAKjG,KAAI,SAAC6G,GAAG,OACZzK,EAAAA,EAAAA,KAACmH,EAAAA,GAAQ,CACP/G,UAAWC,GAAAA,SAEX0C,MAAO0H,EAAI3I,MAAM5B,SAEhBuK,EAAIvK,SAAS,CACZ6H,OAAQA,EACRL,MAAO,UALJ+C,EAAI3I,MAOA,QAIjB9B,EAAAA,EAAAA,KAAA,OAAKI,UAAWC,GAAAA,SAAgBH,SAC7BqK,IAAqBvK,EAAAA,EAAAA,KAAA,OAAAE,SAAMqK,EAAkBI,oBAItD,C,sCC1GA,IAAgB,aAAe,6BAA6B,qBAAuB,qCAAqC,WAAa,2BAA2B,UAAY,2B,6CCiB5K,IAAMC,GAAgB,GAEhBC,GACJ,sCAEa,SAASC,GAAYnM,GAClC,IAAQoM,EAASpM,EAAToM,KACF7C,GAAeC,EAAAA,EAAAA,QAAuB,MAC5C8B,EAA4BrE,EAAAA,SAAe,GAAEsE,GAAA/E,EAAAA,EAAAA,GAAA8E,EAAA,GAAtClC,EAAMmC,EAAA,GAAEC,EAASD,EAAA,GACxBpF,GAA8BC,EAAAA,EAAAA,WAAS,GAAKG,GAAAC,EAAAA,EAAAA,GAAAL,EAAA,GAArCsF,EAAOlF,EAAA,GAAEmF,EAAUnF,EAAA,GAC1B8F,ECxBK,SAAyBpG,EAAaC,GAG3C,IAAAC,GAAsCC,EAAAA,EAAAA,WAAS,WAC7C,IAEE,IAAMkG,EAAOxG,EAAAA,GAAAA,QAAqBG,GAElC,OAAOqG,EAAOjH,KAAKiB,MAAMgG,GAAQpG,CACnC,CAAE,MAAOP,GAGP,OADAC,KAAAA,MAAUD,GACHO,CACT,CACF,IAAEK,GAAAC,EAAAA,EAAAA,GAAAL,EAAA,GAXKM,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GA8BlC,MAAO,CAACE,EAfS,SAACrC,GAChB,IAEE,IAAMmI,EACJnI,aAAiBoI,SAAWpI,EAAMqC,GAAerC,EAEnDsC,EAAe6F,GAEfzG,EAAAA,GAAAA,QAAqBG,EAAKZ,KAAKC,UAAUiH,GAC3C,CAAE,MAAO5G,GAEPC,KAAAA,MAAUD,EACZ,CACF,EAGF,CDV8C8G,CAC1CP,GACAQ,MAAMN,EAAKnE,QAAQ0E,MAAK,IACzBC,GAAApG,EAAAA,EAAAA,GAAA6F,EAAA,GAHMQ,EAAcD,EAAA,GAAEE,EAAiBF,EAAA,IAKxCpF,EAAAA,EAAAA,YAAU,WACJ+B,EAAa7B,UACf8D,EACEpI,OAAOuG,YAAcJ,EAAa7B,QAAQkC,wBAAwBC,KAGpE6B,GAAW,IAGb,IAAMC,EAAU,WACVpC,EAAa7B,SACf8D,EACEpI,OAAOuG,YAAcJ,EAAa7B,QAAQkC,wBAAwBC,IAGxE,EAIA,OAFAzG,OAAO4G,iBAAiB,SAAU2B,GAE3B,WACLvI,OAAO6G,oBAAoB,SAAU0B,EACvC,CACF,GAAG,IAEH,IAAMoB,GAAiBC,EAAAA,EAAAA,UAAQ,WAC7B,IAAMC,EAAeJ,EAAe7E,QAAO,SAACkF,GAAY,OAAMA,CAAG,IAAEjF,OAEnE,OAAQmB,EAAS6C,GAAgBG,EAAKnE,QAAUgF,CAClD,GAAG,CAACJ,EAAgBzD,IAEpB,OACE/H,EAAAA,EAAAA,KAAA,OAAKI,UAAWC,GAAAA,QAAgBiH,IAAKY,EAAahI,UAC9CkK,GACAW,EAAKnH,KAAI,SAACiI,EAAKzE,GAAK,OAClBjH,EAAAA,EAAAA,MAAA,OAAKC,UAAW0L,KAAWzL,GAAAA,QAAeH,SAAA,EACxCC,EAAAA,EAAAA,MAAA,OACEC,UAAW0L,KACTzL,GAAAA,aACAmL,EAAepE,IAAUA,IAAU2D,EAAKnE,OAAS,EAC7CvG,GAAAA,UACA,IAENa,QAAS,kBACPuK,EACEM,MAAAC,EAAAA,GAAAA,GAAQR,GAAiBpE,GAAQoE,EAAepE,IACjD,EACFlH,SAAA,EAEDF,EAAAA,EAAAA,KAAA,OAAAE,SAAM2L,EAAI/J,SACV3B,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,GAAAA,qBAA4BH,SAAA,CACzC2L,EAAIlB,eACL3K,EAAAA,EAAAA,KAACc,EAAAA,EAAI,CACHC,KACGyK,EAAepE,GAEZ,kBADA,oBAGNxI,KAAK,KACLoC,MAAO,CAAE+F,OAAQ,oBAKrByE,EAAepE,KACfpH,EAAAA,EAAAA,KAAA,OACEI,UAAWC,GAAAA,WACXW,MAAO,CAAE+G,OAAQ2D,GAAiBxL,SAEjC2L,EAAI3L,SAAS,CACZ6H,OAAQ2D,EACRhE,MAAO,aApCiCmE,EAAI/J,MAwC9C,KAIhB,CEhGe,SAASmK,GAAOtN,GAC7B,IAAQmI,EAAYnI,EAAZmI,QAEFoF,GAAUtM,EAAAA,EAAAA,YAAWC,IAErBsM,GAASR,EAAAA,EAAAA,UAAQ,WACrB,OAAQO,EAAQE,gBACd,IAAK,OACH,OAAOpM,EAAAA,EAAAA,KAAC4J,GAAS,CAACC,KAAM/C,IAC1B,IAAK,QACH,OAAO9G,EAAAA,EAAAA,KAAC8K,GAAW,CAACC,KAAMjE,IAC5B,QACE,OAAO9G,EAAAA,EAAAA,KAAA,OAAAE,SAAK,eAElB,GAAG,CAACgM,EAAQE,iBAEZ,OACEpM,EAAAA,EAAAA,KAAA,OACEI,UACE8L,EAAQG,gBACJhM,GAAAA,yBACAA,GAAAA,sBACLH,SAEAiM,GAGP,CCzCA,QAAgB,WAAa,2BAA2B,oBAAsB,oCAAoC,mBAAqB,mCAAmC,iBAAmB,iCAAiC,cAAgB,8BAA8B,aAAe,8BCG5Q,SAASG,KACtB,IAAQvL,GAASnB,EAAAA,EAAAA,YAAWC,IAApBkB,KAER,OAAOf,EAAAA,EAAAA,KAAA,OAAKI,UAAWC,GAAAA,WAAkBH,SAAEa,GAC7C,C,mBCGMwL,IAAyB/N,EAAAA,EAAAA,IAAOgO,GAAAA,EAAPhO,CAAwBC,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,kEAMxC,SAAS+N,KACtB,IAAA9M,GAAmDC,EAAAA,EAAAA,YACjDC,IADMuM,EAAczM,EAAdyM,eAAgBM,EAAY/M,EAAZ+M,aAAcxG,EAAQvG,EAARuG,SAatC,OACElG,EAAAA,EAAAA,KAAA,OAAKI,UAAWC,GAAAA,cAAqBH,UACnCF,EAAAA,EAAAA,KAACuM,GAAsB,CACrBI,SAZW,SAAC5J,GACJ,OAAZ2J,QAAY,IAAZA,GAAAA,EAAe3J,GAEf0D,EAAAA,GAAAA,SAAuB,uCAAwC,CAC7DP,SAAUA,EACV0G,WAAY7J,GAEhB,EAMM8J,QAAS,CACP,CACEC,OAAOrM,EAAAA,EAAAA,KAAcC,EAAAA,GAAAA,OAAAA,OACrBgB,UAAW,qBACXqB,MAAO,SAET,CACE+J,OAAOrM,EAAAA,EAAAA,KAAcC,EAAAA,GAAAA,OAAAA,KACrBgB,UAAW,qBACXqB,MAAO,SAGXA,MAAOqJ,KAIf,CCzCe,SAASW,KACtB,IAAApN,GAAuDC,EAAAA,EAAAA,YACrDC,IADMwM,EAAe1M,EAAf0M,gBAAiBW,EAAerN,EAAfqN,gBAAiB9G,EAAQvG,EAARuG,SAgB1C,OACE/F,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,GAAAA,iBAAyBa,QAb3B,WACC,OAAf8L,QAAe,IAAfA,GAAAA,IAEAvG,EAAAA,GAAAA,SACE,qDACA,CACEP,SAAUA,EACVQ,SAAU2F,GAGhB,EAG4DnM,SAAA,EACxDF,EAAAA,EAAAA,KAAA,OAAAE,UAAMO,EAAAA,EAAAA,KAAcC,EAAAA,GAAAA,YAAAA,UACpBV,EAAAA,EAAAA,KAAA,OAAAE,UACEF,EAAAA,EAAAA,KAAC6G,EAAAA,EAAO,CACNC,QACEuF,GACI5L,EAAAA,EAAAA,KAAcC,EAAAA,GAAAA,YAAAA,QAAAA,QACdD,EAAAA,EAAAA,KAAcC,EAAAA,GAAAA,YAAAA,QAAAA,MAEpBuM,UAAU,OAAM/M,UAEhBF,EAAAA,EAAAA,KAACc,EAAAA,EAAI,CAACC,KAAMsL,EAAkB,SAAW,UAAWzN,KAAK,aAKnE,C,+BCxCA,ICEA,CACEgG,KAAKnE,EAAAA,EAAAA,KAAcC,EAAAA,GAAAA,YAAAA,WACnBwM,iBAAkB,CAChB5D,KAAK,iUAaLE,IAAI,+6CAqEJD,GAAG,g6BAADnH,OAgCY+K,EAAAA,GAA6B,gCCrH/C,CACEvI,KAAKnE,EAAAA,EAAAA,KAAcC,EAAAA,GAAAA,YAAAA,OACnBwM,iBAAkB,CAChB5D,KAAK,8GAGLE,IAAI,w6BA6CJD,GAAG,+yCAADnH,OAsCY+K,EAAAA,GAA6B,gFCzF/C,CACEvI,KAAKnE,EAAAA,EAAAA,KAAcC,EAAAA,GAAAA,YAAAA,KACnBwM,iBAAkB,CAChB5D,KAAK,6eAcLE,IAAI,+6CAqEJD,GAAG,uKAADnH,OAIY+K,EAAAA,GAA6B,uYCtEzCC,IAAe5O,EAAAA,EAAAA,IAAOyC,EAAAA,EAAPzC,CAAcC,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,kIASnC,SAAS2O,GAAkB1O,GAMzB,OACEqB,EAAAA,EAAAA,KAACsN,GAAAA,GAAK,CACJC,aAAc,SAACC,GAAa,OAAK7O,EAAM4O,aAAaC,EAAK,EACzDxL,KAAMrD,EAAMqD,KAAK9B,UAEjBC,EAAAA,EAAAA,MAACsN,GAAAA,GAAY,CACXzM,MAAO,CACL0G,MAAO,SACPxH,SAAA,EAEFF,EAAAA,EAAAA,KAAC0N,GAAAA,GAAW,CAAAxN,UACTO,EAAAA,EAAAA,KAAcC,EAAAA,GAAAA,SAAAA,MAAAA,WAEjBV,EAAAA,EAAAA,KAAC2N,GAAAA,GAAS,CAAAzN,UACRF,EAAAA,EAAAA,KAACO,EAAAA,EAAI,CAACC,KAAK,SAAQN,UAChBO,EAAAA,EAAAA,KAAcC,EAAAA,GAAAA,SAAAA,MAAAA,WAGnBP,EAAAA,EAAAA,MAACyN,GAAAA,GAAW,CAAA1N,SAAA,EACVF,EAAAA,EAAAA,KAACiB,EAAAA,EAAM,CAACT,KAAK,YAAYU,QAASvC,EAAMkP,SAAUjP,KAAK,KAAIsB,UACxDO,EAAAA,EAAAA,KAAcC,EAAAA,GAAAA,SAAAA,MAAAA,cAEjBV,EAAAA,EAAAA,KAACiB,EAAAA,EAAM,CAACC,QAASvC,EAAMmP,UAAWlP,KAAK,KAAIsB,UACxCO,EAAAA,EAAAA,KAAcC,EAAAA,GAAAA,SAAAA,MAAAA,qBAM3B,CAEO,SAASqN,KACd,IAAApO,GAA2DC,EAAAA,EAAAA,YACzDC,IADMmO,EAAUrO,EAAVqO,WAAYC,EAAatO,EAAbsO,cAAeC,EAASvO,EAATuO,UAAWhI,EAAQvG,EAARuG,SAI9CpB,GAAwBC,EAAAA,EAAAA,WAAS,GAAMG,GAAAC,EAAAA,EAAAA,GAAAL,EAAA,GAAhC9C,EAAIkD,EAAA,GAAEa,EAAOb,EAAA,GAEpBiJ,GAAgDpJ,EAAAA,EAAAA,UAAwB,MAAKqJ,GAAAjJ,EAAAA,EAAAA,GAAAgJ,EAAA,GAAtEE,EAAgBD,EAAA,GAAEE,EAAmBF,EAAA,GAC5CG,GAAwDxJ,EAAAA,EAAAA,UAAS,IAAGyJ,GAAArJ,EAAAA,EAAAA,GAAAoJ,EAAA,GAA7DE,EAAoBD,EAAA,GAAEE,EAAuBF,EAAA,GAEpD,OACErO,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,GAAAA,aAAoBH,SAAA,EAClCC,EAAAA,EAAAA,MAACwO,GAAAA,GAAI,CAAAzO,SAAA,EACHF,EAAAA,EAAAA,KAAC4O,GAAAA,GAAW,CAAA1O,UACVF,EAAAA,EAAAA,KAACoN,GAAY,CACXhN,UAAU,oCACVI,KAAK,YACLU,QAAS,WACPuF,EAAAA,GAAAA,SAAuB,wCAAyC,CAC9DP,SAAUA,GAEd,EACAtH,KAAK,KACL8C,UAAU,QAAOxB,UAEhBO,EAAAA,EAAAA,KAAcC,EAAAA,GAAAA,SAAAA,gBAGnBP,EAAAA,EAAAA,MAAC0O,GAAAA,GAAW,CAAA3O,SAAA,CACT+N,GAAiBC,IAChB/N,EAAAA,EAAAA,MAAAS,EAAAA,SAAA,CAAAV,SAAA,EACEF,EAAAA,EAAAA,KAAC8O,GAAAA,GAAQ,CACP5N,QAAS,WACPoN,EAAoBL,GACpBS,EACEhO,EAAAA,GAAAA,SAAAA,QAEFqF,GAAQ,GACRU,EAAAA,GAAAA,SACE,wCACA,CACEP,SAAUA,EACV6I,aAAcrO,EAAAA,GAAAA,SAAAA,QAGpB,EAAER,UAEDO,EAAAA,EAAAA,KAAcC,EAAAA,GAAAA,SAAAA,WAEjBV,EAAAA,EAAAA,KAACgP,GAAAA,GAAa,OAGjBC,GAAAA,KAAkB,SAACC,GAAQ,OAC1BlP,EAAAA,EAAAA,KAAC8O,GAAAA,GAAQ,CAEP5N,QAAS,WACPoN,EAAoBY,EAAShC,kBAC7BwB,EAAwBQ,EAAStK,KACjCmB,GAAQ,GACRU,EAAAA,GAAAA,SACE,wCACA,CACEP,SAAUA,EACV6I,aAAcG,EAAStK,KAG7B,EAAE1E,SAEDgP,EAAStK,KAdLsK,EAAStK,IAeL,WAIjB5E,EAAAA,EAAAA,KAACqN,GAAiB,CAChBQ,SAAU,WACRS,EAAoB,MACpBI,EAAwB,IACxB3I,GAAQ,GACRU,EAAAA,GAAAA,SACE,iDACA,CACEP,SAAUA,EACV6I,aAAcN,GAGpB,EACAlB,aAAc,SAACC,GACRA,IACHc,EAAoB,MACpBI,EAAwB,IACxB3I,GAAQ,GACRU,EAAAA,GAAAA,SACE,iDACA,CACEP,SAAUA,EACV6I,aAAcN,IAItB,EACAX,UAAW,WACTO,IAA8B,OAAVL,QAAU,IAAVA,GAAAA,EAAaK,IACjCC,EAAoB,MACpBI,EAAwB,IACxB3I,GAAQ,GACRU,EAAAA,GAAAA,SACE,kDACA,CACEP,SAAUA,EACV6I,aAAcN,GAGpB,EACAzM,KAAMA,MAId,CCtLe,SAAStC,KACtB,OACES,EAAAA,EAAAA,MAAAS,EAAAA,SAAA,CAAAV,SAAA,EACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,GAAAA,mBAA0BH,SAAA,EACxCF,EAAAA,EAAAA,KAACsM,GAAU,KACXtM,EAAAA,EAAAA,KAAC+N,GAAa,KACd/N,EAAAA,EAAAA,KAACyM,GAAc,QAEjBzM,EAAAA,EAAAA,KAAA,OAAKI,UAAWC,GAAAA,oBAA2BH,UACzCF,EAAAA,EAAAA,KAAC+M,GAAgB,QAIzB,C,wCCnBA,IAAgB,OAAS,wBCkBV,SAASoC,GAAWxQ,GACjC,IAAAmG,GAA8BC,EAAAA,EAAAA,WAAS,GAAKG,GAAAC,EAAAA,EAAAA,GAAAL,EAAA,GAArCsF,EAAOlF,EAAA,GAAEmF,EAAUnF,EAAA,GAE1BvF,GAAgEC,EAAAA,EAAAA,YAC9DC,IADME,EAAyBJ,EAAzBI,0BAA2BmN,EAAgBvN,EAAhBuN,iBAAkBzD,EAAM9J,EAAN8J,OAI7C1B,EAAWpJ,EAAXoJ,OAER,OACE5H,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,GAAAA,QAAeH,SAAA,EAC7BF,EAAAA,EAAAA,KAACoP,GAAAA,EAAc,CACbC,OAAQC,GAAAA,GAAAA,KACRC,YAAU,EACVnP,UAAW,YACXoP,SAAUzP,EACV0P,iBAAiB,4BACjBC,SAAO,EACP3H,OAAQA,EACR4H,oBAAkB,EAClBC,oBAAkB,EAClBC,eAAa,EACbC,oBAAkB,EAClBC,MAAO,CACLhN,MAAuB,OAAhBmK,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkB5D,KACzBqD,SAAU,SAAC5J,GACH,OAAN0G,QAAM,IAANA,GAAAA,EAAS,OAAQ1G,EACnB,GAEFiN,KAAMC,GAAAA,GAAAA,UACNC,OAAQ,kBAAM7F,GAAW,EAAM,EAC/B8F,aAAa1P,EAAAA,EAAAA,KACXC,EAAAA,GAAAA,QAAAA,OAAAA,KAAAA,aAEF0P,mBAAmB,EACnBC,iBAAe,EACfzR,KAAM0R,GAAAA,GAAAA,SACNC,aAAcC,GAAAA,GAAAA,OACdxR,MAAOyR,GAAAA,GAAAA,QAERrG,IACCpK,EAAAA,EAAAA,KAAA,OAAKI,UAAWC,GAAAA,OAAeW,MAAO,CAAE+G,OAAAA,GAAS7H,UAC/CF,EAAAA,EAAAA,KAAC0Q,GAAAA,EAAO,CAAC9R,KAAK,WAKxB,CC/CA,IAAM+R,GAAgBnS,EAAAA,GAAAA,IAAUC,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,gFAQzB,SAASkS,KACd,IAAAjR,GAAmCC,EAAAA,EAAAA,YAAWC,IAAtCwM,EAAe1M,EAAf0M,gBAAiB1E,EAAKhI,EAALgI,MAEnBkJ,GAAelF,EAAAA,EAAAA,UAAQ,WAC3B,OAAOhE,EACH5D,OAAO+M,QAAQnJ,GACZhB,QAAO,SAAAa,GAAgB,IAAZzE,GAAWoC,EAAAA,EAAAA,GAAAqC,EAAA,GAAN,GACf,MAAO,CAAC,SAAU,UAAUuJ,gBAAgBhO,EAC9C,IACCa,KAAI,SAAAoN,GAAY,IAAVpM,GAASO,EAAAA,EAAAA,GAAA6L,EAAA,GAAN,GACR,MAAM,oBAAN5O,OAA2BwC,EAC7B,IACCxC,OAAO,CACN,sBACA,uBACA,gCACA,mCACA,gCACA,+BAEJ,EACN,GAAG,CAACuF,IAEJ,OACE3H,EAAAA,EAAAA,KAAC6G,EAAAA,EAAO,CACNC,SACE3G,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEC,EAAAA,EAAAA,MAAA,MAAIC,UAAU,OAAMF,SAAA,CAAC,IACjB,KACDO,EAAAA,EAAAA,KACCC,EAAAA,GAAAA,QAAAA,OAAAA,IAAAA,wBAGJP,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,CAAK,IACD,KACDO,EAAAA,EAAAA,KACCC,EAAAA,GAAAA,QAAAA,OAAAA,IAAAA,6BAIJV,EAAAA,EAAAA,KAAA,MAAII,UAAU,OAAMF,SACjB2Q,EAAajN,KAAI,SAACb,EAAOqE,GAAK,OAC7BpH,EAAAA,EAAAA,KAAA,MAAAE,SAAiB6C,GAARqE,EAAmB,YAMtC6F,UAAWZ,EAAkB,SAAW,OAAOnM,UAE/CF,EAAAA,EAAAA,KAACc,EAAAA,EAAI,CAACC,KAAK,WAAWnC,KAAK,QAGjC,CAEe,SAASqS,GAAUtS,GAChC,IAAAmG,GAA8BC,EAAAA,EAAAA,WAAS,GAAKG,GAAAC,EAAAA,EAAAA,GAAAL,EAAA,GAArCsF,EAAOlF,EAAA,GAAEmF,EAAUnF,EAAA,GAE1BgM,GAAgEtR,EAAAA,EAAAA,YAC9DC,IADME,EAAyBmR,EAAzBnR,0BAA2BmN,EAAgBgE,EAAhBhE,iBAAkBzD,EAAMyH,EAANzH,OAI7C1B,EAAWpJ,EAAXoJ,OAER,OACE5H,EAAAA,EAAAA,MAACwQ,GAAa,CAAAzQ,SAAA,EACZF,EAAAA,EAAAA,KAACoP,GAAAA,EAAc,CACbC,OAAQC,GAAAA,GAAAA,KACRC,YAAU,EACVnP,UAAW,YACXoP,SAAUzP,EACV0P,iBAAiB,2BACjBC,SAAO,EACP3H,OAAQA,EACR4H,oBAAkB,EAClBC,oBAAkB,EAClBC,eAAa,EACbC,oBAAkB,EAClBC,MAAO,CACLhN,MAAuB,OAAhBmK,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkB1D,IACzBmD,SAAU,SAAC5J,GACH,OAAN0G,QAAM,IAANA,GAAAA,EAAS,MAAO1G,EAClB,GAEFiN,KAAMC,GAAAA,GAAAA,IACNC,OAAQ,kBAAM7F,GAAW,EAAM,EAC/B8F,aAAa1P,EAAAA,EAAAA,KACXC,EAAAA,GAAAA,QAAAA,OAAAA,IAAAA,aAEF0P,mBAAmB,EACnBC,iBAAe,EACfzR,KAAM0R,GAAAA,GAAAA,SACNC,aAAcC,GAAAA,GAAAA,OACdxR,MAAOyR,GAAAA,GAAAA,QAERrG,IACCpK,EAAAA,EAAAA,KAAA,OAAKI,UAAWC,GAAAA,OAAeW,MAAO,CAAE+G,OAAAA,GAAS7H,UAC/CF,EAAAA,EAAAA,KAAC0Q,GAAAA,EAAO,CAAC9R,KAAK,WAKxB,C,2BC5HauS,GAA0B,SAACxJ,GAA8B,MAAM,CAC1EyJ,SAAU,CACRpB,KAAM,GACNrI,MAAOA,EACP0J,GAAI,CACF3J,MAAO,EACPK,OAAQ,GAEV/I,MAAO,CACLsS,aAAc,GACdzS,gBAAiB,GACjB0S,aAAc,GACdC,UAAW,IAEbC,WAAYtG,SACZuG,cAAevG,SACfwG,cAAexG,SACfrD,YAAaqD,SACbyG,aAAczG,SACd0G,QAAS1G,UAEZ,E,oCCCc,SAAS2G,GAASnT,GAC/B,IAAAmG,GAA8BC,EAAAA,EAAAA,WAAS,GAAKG,GAAAC,EAAAA,EAAAA,GAAAL,EAAA,GAArCsF,EAAOlF,EAAA,GAAEmF,EAAUnF,EAAA,GAE1BvF,GAMIC,EAAAA,EAAAA,YAAWC,IALboG,EAAYtG,EAAZsG,aACA0B,EAAKhI,EAALgI,MACA5H,EAAyBJ,EAAzBI,0BACAmN,EAAgBvN,EAAhBuN,iBACAzD,EAAM9J,EAAN8J,OAGM1B,EAAWpJ,EAAXoJ,OAEFgK,GAAsBpG,EAAAA,EAAAA,UAAQ,WAClC,OAAO1F,EACHA,EACGU,QAAO,SAAC9C,GAAC,OAAKA,EAAEJ,OAASnB,EAAgBI,KAAK,IAC9CkB,KAAI,SAACC,GAAC,OAAKA,EAAExC,IAAI,IACjB2Q,OACArL,QAAO,SAAC9C,GAAC,OAAMoO,KAAYpO,EAAEqO,QAAUD,KAAYpO,EAAEsO,OAAO,IAC5DvO,KAAI,SAACC,GAAC,MAAM,CACXuO,UAAWC,GAAAA,GAAAA,KACXC,KAAqB,OAAhBpF,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkB3D,KAAM,GAC7BgJ,SAAUC,GAAAA,EAAAA,MACVlR,aAAc,CACZP,KAAM,eACNQ,QAASsC,EAAEtC,SAEbkR,cAA8B,OAAhBvF,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkB3D,KAAM,GACtCmJ,iBAAiC,OAAhBxF,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkB3D,KAAM,GACzCoJ,UAAW,GACX1U,KAAM,GACNiU,KAAMrO,EAAEqO,KAAOrO,EAAEqO,KAAO,EAAI,EAC5BU,GAAI/O,EAAEsO,OAAStO,EAAEsO,OAAS,EAAI,EAC/B,IACH,EACN,GAAG,CAAClM,IAQJ,OANAE,EAAAA,EAAAA,YAAU,WACR,CAAC,iBAAkB,aAAc,YAAa,cAAc0M,SAAQ,SAAChP,GACnEiP,GAAAA,GAAAA,UAAgCjP,EAClC,GACF,GAAG,KAGD1D,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,GAAAA,QAAeH,SAAA,EAC7BF,EAAAA,EAAAA,KAACoP,GAAAA,EAAc,CACb2D,sBAAuB5B,GAAwBxJ,GAAS,CAAC,GACzD0H,OAAQC,GAAAA,GAAAA,KACRC,YAAU,EACVnP,UAAW,YACX4S,aAAcjB,EACdkB,aAAc,kBACdzD,SAAUzP,EACV0P,iBAAiB,0BACjBC,SAAO,EACP3H,OAAQA,EACR4H,oBAAkB,EAClBG,oBAAkB,EAClBC,MAAO,CACLhN,MAAuB,OAAhBmK,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkB3D,GACzBoD,SAAU,SAAC5J,GACH,OAAN0G,QAAM,IAANA,GAAAA,EAAS,KAAM1G,EACjB,GAEFiN,KAAMC,GAAAA,GAAAA,WACNC,OAAQ,kBAAM7F,GAAW,EAAM,EAC/B8F,aAAa1P,EAAAA,EAAAA,KACXC,EAAAA,GAAAA,QAAAA,OAAAA,GAAAA,aAEF0P,mBAAmB,EACnBC,iBAAe,EACfzR,KAAM0R,GAAAA,GAAAA,SACNC,aAAcC,GAAAA,GAAAA,OACdxR,MAAOyR,GAAAA,GAAAA,QAERrG,IACCpK,EAAAA,EAAAA,KAAA,OAAKI,UAAWC,GAAAA,OAAeW,MAAO,CAAE+G,OAAAA,GAAS7H,UAC/CF,EAAAA,EAAAA,KAAC0Q,GAAAA,EAAO,CAAC9R,KAAK,WAKxB,CC9GA,QAAgB,WAAa,2BAA2B,YAAc,4BAA4B,kBAAoB,kCAAkC,gBAAkB,gCAAgC,iBAAmB,iCAAiC,gBAAkB,gCAAgC,UAAY,0BAA0B,OAAS,uBAAuB,MAAQ,sBAAsB,UAAY,0BAA0B,WAAa,2BAA2B,aAAe,6BAA6B,WAAa,2BAA2B,kBAAoB,kCAAkC,oBAAsB,oCAAoC,SAAW,0BCUlqB,SAASsU,GAAYvU,GAAe,IAADwU,EAChDrO,GAAwBC,EAAAA,EAAAA,UAA0B,QAAlBoO,EAACxU,EAAMyU,mBAAW,IAAAD,GAAAA,GAASjO,GAAAC,EAAAA,EAAAA,GAAAL,EAAA,GAApD9C,EAAIkD,EAAA,GAAEa,EAAOb,EAAA,GAEpB,OACE/E,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,GAAAA,YAAmBH,SAAA,EACjCC,EAAAA,EAAAA,MAAA,OACEC,UAAWC,GAAAA,kBACXa,QAAS,WACP6E,GAAS/D,EACX,EAAE9B,SAAA,EAEFC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,GAAAA,iBAAwBH,SAAA,CACrCvB,EAAMmO,MACNnO,EAAM0U,cACLrT,EAAAA,EAAAA,KAAC6G,EAAAA,EAAO,CAACC,QAASnI,EAAM0U,YAAYnT,UAClCF,EAAAA,EAAAA,KAACc,EAAAA,EAAI,CAACC,KAAK,WAAWnC,KAAK,aAIjCoB,EAAAA,EAAAA,KAAA,OAAKI,UAAWC,GAAAA,gBAAuBH,UACrCF,EAAAA,EAAAA,KAACc,EAAAA,EAAI,CACHC,KAAMiB,EAAO,oBAAsB,kBACnCpD,KAAK,YAIVoD,IAAQhC,EAAAA,EAAAA,KAAA,OAAKI,UAAWC,GAAAA,gBAAuBH,SAAEvB,EAAMuB,aAG9D,CC/Be,SAASoT,KACtB,OACEnT,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAACO,EAAAA,EAAI,CACHM,MAAM,UACN0S,SAAS,IACTvS,MAAO,CACLwS,WAAY,QACZtT,UAEDO,EAAAA,EAAAA,KAAcC,EAAAA,GAAAA,YAAAA,KAAAA,YAEjBV,EAAAA,EAAAA,KAACiB,EAAAA,EAAM,CACLb,UAAWC,GAAAA,UACXoT,KAAMxR,EAAAA,GACNzB,KAAK,YACL+S,SAAS,IACT3U,KAAK,KACL8C,UAAU,OACVgS,OAAO,SAAQxT,UAEdO,EAAAA,EAAAA,KAAcC,EAAAA,GAAAA,YAAAA,KAAAA,eAIvB,CC9Be,SAASiT,KACtB,IAqBQhM,GAAU/H,EAAAA,EAAAA,YAAWC,IAArB8H,MAER,OAAO3H,EAAAA,EAAAA,KAAC4C,KAASC,EAAAA,EAAAA,GAAA,CAACC,IAAK6E,GAvBA,CACrB3I,MAAO,cACP+B,KAAM,KACNiC,iBAAiB,EACjBC,mBAAmB,EACnBC,kBAAkB,EAClBlC,MAAO,CACLmC,SAAU,OACVuE,MAAO,OACPkM,SAAU,OACVC,UAAW,OACX,aAAc,cAEhBzQ,UAAW,EACXC,eAAgB,SAACC,GAEf,OAD2B,EAAbA,EAAMvC,MACJ,CAClB,EACAwC,YAAa,IAMjB,C,kBCXMuQ,GAA8BtV,EAAAA,GAAAA,IAAUC,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,8OAe/B,SAASqV,KAAU,IAADC,EAC/BrU,GAA6BC,EAAAA,EAAAA,YAAWC,IAAhCoU,EAAMtU,EAANsU,OAAQ/N,EAAQvG,EAARuG,SAEhBpB,GAAkCC,EAAAA,EAAAA,UAAkC,CAAC,GAAEG,GAAAC,EAAAA,EAAAA,GAAAL,EAAA,GAAhEoP,EAAShP,EAAA,GAAEiP,EAAYjP,EAAA,GAExBkP,GAAa9O,EAAAA,EAAAA,cAAY,SAAC+O,GAC9B5N,EAAAA,GAAAA,SAAuB,+CAAgD,CACrEP,SAAUA,EACVoO,UAAWD,IAGbF,GAAa,SAACI,GACZ,OAAA1R,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACK0R,GAAI,IAAAC,EAAAA,GAAAA,GAAA,GACNH,GAASE,EAAKF,IAEnB,GACF,GAAG,IAEH,OACElU,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,GAAAA,OAAcH,SAAA,CAC3B+T,IACoB,QADdD,EACLjQ,OAAO7F,KAAK+V,UAAO,IAAAD,OAAA,EAAnBA,EAAqBpQ,KAAI,SAACyQ,GACxB,OACElU,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,GAAAA,MAAaH,SAAA,EAC3BC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,GAAAA,UAAiBH,SAAA,EAC/BF,EAAAA,EAAAA,KAAA,OACEI,UAAWC,GAAAA,WACXa,QAAS,kBAAMkT,EAAWC,EAAM,EAACnU,SAEhCmU,KAEHrU,EAAAA,EAAAA,KAAA,OACEI,UAAWC,GAAAA,aACXa,QAAS,kBAAMkT,EAAWC,EAAM,EAACnU,UAEjCF,EAAAA,EAAAA,KAACc,EAAAA,EAAI,CACHC,KACEmT,EAAUG,GAAS,oBAAsB,kBAE3CzV,KAAK,YAIVsV,EAAUG,KACTrU,EAAAA,EAAAA,KAAC8T,GAA2B,CAAC1T,UAAWC,GAAAA,WAAkBH,UACxDF,EAAAA,EAAAA,KAACoP,GAAAA,EAAc,CACbG,YAAU,EACVkF,eAAgBR,EAAOI,GACvB1E,oBAAkB,EAClBI,MAAO,CACLhN,MAAOkR,EAAOI,IAEhBK,YAAU,EACV1E,KAAMC,GAAAA,GAAAA,kBACNE,YAAY,YACZwE,6BAA2B,EAC3BC,qCAAqC,EACrCxE,mBAAmB,EACnBxR,KAAM0R,GAAAA,GAAAA,SACNC,aAAcC,GAAAA,GAAAA,OACdxR,MAAOyR,GAAAA,GAAAA,YArCoB4D,EA2CvC,KACDJ,GAAyC,IAA/BlQ,OAAO7F,KAAK+V,GAAQrN,SAC7B5G,EAAAA,EAAAA,KAACO,EAAAA,EAAI,CACHM,MAAM,UACN0S,SAAS,IACTvS,MAAO,CACLwS,WAAY,QACZtT,UAEDO,EAAAA,EAAAA,KAAcC,EAAAA,GAAAA,YAAAA,OAAAA,kBAKzB,CCvGe,SAASmU,KACtB,OACE1U,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,GAAAA,WAAkBH,SAAA,EAChCF,EAAAA,EAAAA,KAACkT,GAAW,CACVG,aACElT,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAAE,UACGO,EAAAA,EAAAA,KACCC,EAAAA,GAAAA,YAAAA,UAAAA,YAAAA,OAGJV,EAAAA,EAAAA,KAAA,MAAAE,UACGO,EAAAA,EAAAA,KACCC,EAAAA,GAAAA,YAAAA,UAAAA,YAAAA,SAKRoM,OAAOrM,EAAAA,EAAAA,KAAcC,EAAAA,GAAAA,YAAAA,UAAAA,OAAmDR,UAExEF,EAAAA,EAAAA,KAAC8U,GAAS,OAEZ9U,EAAAA,EAAAA,KAACkT,GAAW,CACVG,aACElT,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAAE,UACGO,EAAAA,EAAAA,KACCC,EAAAA,GAAAA,YAAAA,OAAAA,YAAAA,OAGJV,EAAAA,EAAAA,KAAA,MAAAE,UACGO,EAAAA,EAAAA,KACCC,EAAAA,GAAAA,YAAAA,OAAAA,YAAAA,SAKRoM,OAAOrM,EAAAA,EAAAA,KAAcC,EAAAA,GAAAA,YAAAA,OAAAA,OAAgDR,UAErEF,EAAAA,EAAAA,KAAC+T,GAAM,OAET/T,EAAAA,EAAAA,KAACkT,GAAW,CAACpG,MAAM,OAAM5M,UACvBF,EAAAA,EAAAA,KAACsT,GAAI,QAIb,CC9Ce,SAASyB,KACtB,IAAQ1I,GAAoBzM,EAAAA,EAAAA,YAAWC,IAA/BwM,gBAER,OACElM,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,OAAKI,UAAWC,GAAAA,eAAsBH,UACpCF,EAAAA,EAAAA,KAACN,GAAM,OAETS,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,GAAAA,iBAAwBH,SAAA,EACtCF,EAAAA,EAAAA,KAACiM,GAAM,CACLnF,QAAS,CACP,CACEhF,MAAO,OACP5B,SAAU,SAACvB,GAAmB,OAAKqB,EAAAA,EAAAA,KAACmP,IAAUtM,EAAAA,EAAAA,GAAA,GAAKlE,GAAS,GAE9D,CACEmD,MAAO,QACP6I,eAAe3K,EAAAA,EAAAA,KAAC4Q,GAAa,IAC7B1Q,SAAU,SAACvB,GAAmB,OAAKqB,EAAAA,EAAAA,KAACgV,IAAWnS,EAAAA,EAAAA,GAAA,GAAKlE,GAAS,GAE/D,CACEmD,MAAO,aACP5B,SAAU,SAACvB,GAAmB,OAAKqB,EAAAA,EAAAA,KAAC8R,IAAQjP,EAAAA,EAAAA,GAAA,GAAKlE,GAAS,MAI/D0N,IAAmBrM,EAAAA,EAAAA,KAAC6U,GAAU,SAIvC,CCrCe,SAASI,KAGtB,OAFsCrV,EAAAA,EAAAA,YAAWC,IAAzCE,2BAGCC,EAAAA,EAAAA,KAAA,OAAKI,UAAWC,EAAAA,0BAEhB,IAEX,C,oDCGa6U,GAAgB,SAACtN,GAC5B,IAAMuN,EAAiC,CACrClX,KAAM2J,EACNwN,SAAU,GACVrD,OAAQ,KAkCZ,SAA0BoD,GACxB,IAAMlX,EAAOkX,EAAelX,KAAKsL,IAEzB,OAAJtL,QAAI,IAAJA,OAAI,EAAJA,EAAM2I,QAAS,IAMhB3I,EAAKoX,MAAM,mDACVF,EAAeC,SAASE,KAAK,CAC3B/T,SAASd,EAAAA,EAAAA,KACPC,EAAAA,GAAAA,SAAAA,iBACAyM,EAAAA,KAIV,CAhDEoI,CAAiBJ,GAEjB,IACE,IAAMK,GAASC,EAAAA,GAAAA,WAAU7N,EAAO2B,GAAI,CAClCmM,WAAY,SACZC,QAAS,CAAC,SACVC,QAAS,CACPC,WAAW,KAIfV,EAAelX,MAAI4E,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACdsS,EAAelX,MAAI,IACtBsL,IAAU,OAANiM,QAAM,IAANA,OAAM,EAANA,EAAQvX,OAAQ,IAExB,CAAE,MAAOF,GACPoX,EAAepD,OAAOuD,KAAKQ,GAAS/X,GACtC,CAEA,IACEoX,EAAelX,MAAI4E,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACdsS,EAAelX,MAAI,IACtBuL,KAAKuM,EAAAA,GAAAA,IAAcnO,EAAO4B,KAAKA,KAAO,IAE1C,CAAE,MAAOzL,GACPoX,EAAeC,SAASE,KAAKQ,GAAS/X,GACxC,CAEA,OAAOoX,CACT,EA8BO,IC7DHa,GD6DSF,GAAW,SAAC/X,GAAoC,IAADkY,EAAAC,EAC1D,MAAO,CACLhE,KAAO,OAADnU,QAAC,IAADA,GAAM,QAALkY,EAADlY,EAAGoY,WAAG,IAAAF,OAAL,EAADA,EAAQ/D,KACdC,OAAS,OAADpU,QAAC,IAADA,GAAM,QAALmY,EAADnY,EAAGoY,WAAG,IAAAD,OAAL,EAADA,EAAQ/D,OAChB5Q,QAAU,OAADxD,QAAC,IAADA,OAAC,EAADA,EAAGqY,WAEhB,E,kCEvEavW,GAA6B+F,EAAAA,cAExC,CAAC,GAEGyQ,GAAiB7X,EAAAA,GAAAA,IAAUC,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,yOAKjB,SAACC,GAAK,OAClBA,EAAM2X,SAAW,6BAA+B,aAAa,IAO3DC,GAAU/X,EAAAA,GAAAA,IAAUe,KAAAA,IAAAb,EAAAA,EAAAA,GAAA,yFAQpB8X,GAAmB,qCAEV,SAASC,KACtB,IAAAC,EDtBK,WACL,IAAA5R,GAA8BC,EAAAA,EAAAA,WAAS,GAAKG,GAAAC,EAAAA,EAAAA,GAAAL,EAAA,GAArCsF,EAAOlF,EAAA,GAAEmF,EAAUnF,EAAA,GAE1BW,EAA8ClB,EAC5CgS,EAAAA,IACA,GACD7Q,GAAAX,EAAAA,EAAAA,GAAAU,EAAA,GAHMwG,EAAevG,EAAA,GAAE8Q,EAAkB9Q,EAAA,GAK1C+Q,EAA4ClS,EAC1CmS,EAAAA,GACA,QACDC,GAAA5R,EAAAA,EAAAA,GAAA0R,EAAA,GAHMzK,EAAc2K,EAAA,GAAEC,EAAiBD,EAAA,GAKxC5I,GACEpJ,EAAAA,EAAAA,UAA8CkS,EAAAA,IAAsB7I,GAAAjJ,EAAAA,EAAAA,GAAAgJ,EAAA,GAD/D+I,EAAY9I,EAAA,GAAE+I,EAAe/I,EAAA,IAGpCjI,EAAAA,EAAAA,YAAU,WACR,IAS4BiR,EATtB5B,EAASN,GAAcgC,EAAahK,kBAE1CiK,GAAgB,SAAC5C,GACf,OAAA1R,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACK0R,GAAI,IACP3M,OAAQ4N,EAAOvX,MAEnB,IAEIiZ,EAAahJ,YACF,QAAbkJ,EAAArV,OAAOsV,cAAM,IAAAD,GAAbA,EAAeE,YACb,CACE7T,KAAM8T,EAAAA,GAAAA,cACN3P,OAAQ4N,EAAOvX,KACfiP,iBAAkBgK,EAAahK,kBAEjC,MAIJ,IAAMsK,EAA6B,GAE/BhC,EAAOzD,OAAOnL,QAChB4Q,EAAYlC,KAAK,CACf7R,KAAMnB,EAAgBI,MACtBrB,KAAMmU,EAAOzD,SAIbyD,EAAOJ,SAASxO,QAClB4Q,EAAYlC,KAAK,CACf7R,KAAMnB,EAAgBG,KACtBpB,KAAMmU,EAAOJ,WAIjB+B,GAAgB,SAAC5C,GAAI,OAAA1R,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAChB0R,GAAI,IACPtO,aAAa,GAAD7D,OAAMoV,IAAY,GAElC,GAAG,CAACN,EAAahK,iBAAkBgK,EAAahJ,YAEhD,IAAMuJ,GAASnS,EAAAA,EAAAA,cAAY,WACzB6R,GAAgB,SAAC5C,GACf,OAAA1R,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACK0R,GAAI,IACP3P,IAAK8S,KAAKC,UAEd,GACF,GAAG,IAEGC,GAA2DjM,EAAAA,EAAAA,UAC/D,iBAAO,CACLqB,gBAAiB,WACf4J,GAAoBvK,EACtB,EACAK,aAAc,SAACP,GACb6K,EAAkB7K,EACpB,EACArM,MAAO,WAAO,IAAD+X,EACE,QAAbA,EAAA9V,OAAOsV,cAAM,IAAAQ,GAAbA,EAAeC,QACf/V,OAAOjC,OACT,EACAkO,WAAY,SAACd,GACXiK,GAAgB,SAAC5C,GACf,OAAA1R,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACK0R,GAAI,IACPrH,iBAAAA,EACAgB,UAAW6J,KAAKC,OAEpB,GACF,EACAvO,OAAQ,SAACwO,EAAQlV,GACfoU,GAAgB,SAAC5C,GACf,OAAA1R,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACK0R,GAAI,IACPrH,kBAAgBrK,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACX0R,EAAKrH,kBAAgB,IAAAsH,EAAAA,GAAAA,GAAA,GACvByD,EAASlV,IAEZmL,UAAW6J,KAAKC,OAEpB,IAEAvR,EAAAA,GAAAA,SAAuB,sCAAuC,CAC5DP,SAAUgR,EAAahR,SACvBgS,WAAYD,GAEhB,EACAnQ,YAAa,SAACH,GACZwP,GAAgB,SAAC5C,GACf,OAAA1R,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACK0R,GAAI,IACP5M,OAAK9E,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACA0R,EAAK5M,OACLA,IAGT,GACF,EACAE,mBAAoB,SAACtD,GACnB4S,GAAgB,SAAC5C,GACf,OAAA1R,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACK0R,GAAI,IACPtO,aAAa,GAAD7D,QAAA4J,EAAAA,GAAAA,GAAMuI,EAAKtO,cAAY,CAAE1B,KAEzC,GACF,EACAyB,mBAAoB,WAClBmR,GAAgB,SAAC5C,GACf,OAAA1R,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACK0R,GAAI,IACPtO,aAAc,IAElB,GACF,EACD,GACD,CACEiR,EAAahK,iBACb0J,EACAvK,EACA2K,IAIE9K,GAAUP,EAAAA,EAAAA,UACd,kBAAA9I,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAD,EACKqU,GAAY,IACf7K,gBAAAA,EACAD,eAAAA,GACGwL,EAAgB,GAErB,CAACV,EAAcU,EAAkBvL,EAAiBD,IAsFpD,OAnFAjG,EAAAA,EAAAA,WAAUsR,EAAQ,CAACP,EAAatP,UAEhCzB,EAAAA,EAAAA,YAAU,WAAO,IAADgS,EACdpW,OAAO4G,iBAAiB,WAAW,SAAC0L,GAClC,OAAQA,EAAM3K,KAAKjG,MACjB,KAAK8T,EAAAA,GAAAA,UACHvB,IAAqBoC,aAAapC,IAClCmB,GAAgB,SAAC5C,GACf,OAAA1R,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACK0R,GAAI,IACPxT,KAAMsT,EAAM3K,KAAK3I,KACjBmF,SAAUmO,EAAM3K,KAAKxD,SACrB0B,OAAQyM,EAAM3K,KAAK9B,OACnBsF,iBAAkBmH,EAAM3K,KAAKwD,iBAC7Be,cAAeoG,EAAM3K,KAAKwD,iBAC1BvF,MAAO0M,EAAM3K,KAAK/B,MAClBsM,OAAQI,EAAM3K,KAAKuK,OACnBjV,MAAOqV,EAAM3K,KAAK1K,OAEtB,IACAqL,GAAW,GACX,MACF,KAAKkN,EAAAA,GAAAA,kBACHJ,GAAgB,SAAC5C,GACf,OAAA1R,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACK0R,GAAI,IACPxT,KAAMsT,EAAM3K,KAAK3I,KACjB4G,MAAO0M,EAAM3K,KAAK/B,MAClBsM,OAAQI,EAAM3K,KAAKuK,OACnBjV,MAAOqV,EAAM3K,KAAK1K,OAEtB,IACAyY,IACA,MACF,KAAKF,EAAAA,GAAAA,MACHJ,GAAgB,SAAC5C,GACf,OAAA1R,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACK0R,GAAI,IACPxU,2BAA2B,GAE/B,IACA,MACF,KAAKwX,EAAAA,GAAAA,OACHJ,GAAgB,SAAC5C,GACf,OAAA1R,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACK0R,GAAI,IACPxU,2BAA2B,EAC3BgB,KAAMsT,EAAM3K,KAAK3I,KACjBmF,SAAUmO,EAAM3K,KAAKxD,SACrB0B,OAAQyM,EAAM3K,KAAK9B,OACnBsF,iBAAkBmH,EAAM3K,KAAKwD,iBAC7Be,cAAeoG,EAAM3K,KAAKwD,iBAC1BvF,MAAO0M,EAAM3K,KAAK/B,MAClBsM,OAAQI,EAAM3K,KAAKuK,OACnBjV,MAAOqV,EAAM3K,KAAK1K,OAEtB,IAGN,IAEa,QAAbmZ,EAAApW,OAAOsV,cAAM,IAAAc,GAAbA,EAAeb,YACb,CACE7T,KAAM8T,EAAAA,GAAAA,OAER,KAGFxV,OAAO4G,iBAAiB,gBAAgB,WAAO,IAAD0P,EAC/B,QAAbA,EAAAtW,OAAOsV,cAAM,IAAAgB,GAAbA,EAAef,YACb,CACE7T,KAAM8T,EAAAA,GAAAA,cAER,IAEJ,IAGAvB,GAAoBtL,YAAW,WAC7B4N,GAAAA,EAAAA,QAAgBvW,OAAOwW,SAASC,SAASC,QAAQ,WAAY,IAC/D,GAAG,IACL,GAAG,IAEI,CAACvM,EAAS9B,EACnB,CCtN6BsO,GAAkBC,GAAAxT,EAAAA,EAAAA,GAAAuR,EAAA,GAAtCxK,EAAOyM,EAAA,GAAEvO,EAAOuO,EAAA,GAEvB9S,EAAsClB,EACpC6R,GACoB,GAApBzU,OAAO6W,YACR9S,GAAAX,EAAAA,EAAAA,GAAAU,EAAA,GAHMgT,EAAW/S,EAAA,GAAEgT,EAAchT,EAAA,GAK5BiT,GAAY5Q,EAAAA,EAAAA,QAAuB,MAEnC6Q,GAAa7Q,EAAAA,EAAAA,QAAuB,MAEpC8Q,GAAW3T,EAAAA,EAAAA,cAAY,SAAC4T,GAC5B,GAAIH,EAAU1S,SAAW2S,EAAW3S,QAAS,CAC3C,IAAM8S,EAAmBD,EAAWnX,OAAO6W,WAAc,IAEzDG,EAAU1S,QAAQrF,MAAM0G,MAAK,GAAAtF,OAAM+W,EAAe,KAClDH,EAAW3S,QAAQrF,MAAM0G,MAAK,GAAAtF,OAAM,IAAM+W,EAAe,KAEzDL,EAAeI,EACjB,CACF,GAAG,KAEH/S,EAAAA,EAAAA,YAAU,WACR8S,EAASJ,EACX,GAAG,CAACE,EAAU1S,QAAS2S,EAAW3S,UAElC,IAAA+S,GACEC,EAAAA,GAAAA,GAAoBN,EAAWE,OAAUK,GAAW,GAD9CC,EAAWH,EAAXG,YAAaC,EAASJ,EAATI,UAAWC,EAAYL,EAAZK,aAAcnD,EAAQ8C,EAAR9C,SAG9C,OACEnW,EAAAA,EAAAA,MAACN,GAA2B6Z,SAAQ,CAAC3W,MAAOmJ,EAAQhM,SAAA,EAClDC,EAAAA,EAAAA,MAACwZ,GAAAA,GAAM,CAAAzZ,SAAA,EACLF,EAAAA,EAAAA,KAAA,QAAM4Z,QAAQ,WACd5Z,EAAAA,EAAAA,KAAA,SAAAE,SAAA,GAAAkC,OAAW8J,EAAQnL,KAAI,+BAEzBf,EAAAA,EAAAA,KAACN,EAAM,IACN0K,GACCpK,EAAAA,EAAAA,KAAC0Q,GAAAA,EAAO,CAACtQ,UAAWC,EAAAA,OAAezB,KAAK,QAExCuB,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,QAAeH,SAAA,EAC7BC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,YAAoBiH,IAAK0R,EAAW9Y,SAAA,CACjDoW,IAAYtW,EAAAA,EAAAA,KAACuW,GAAO,KACrBvW,EAAAA,EAAAA,KAACuH,GAAO,CAACG,MAAOmR,QAElB7Y,EAAAA,EAAAA,KAAA,OACEI,UAAS,4CAAAgC,OAA8CyX,GAAAA,GAAAA,SACvDN,YAAaA,EACbO,WAAYN,EACZC,aAAcA,EAAavZ,UAE3BF,EAAAA,EAAAA,KAACqW,GAAc,CACbjW,UAAW0L,KAAW,CACpB,wBAAwB,IAE1BwK,SAAUA,OAGdtW,EAAAA,EAAAA,KAAA,OAAKI,UAAWC,EAAAA,aAAqBiH,IAAKyR,EAAU7Y,UAClDF,EAAAA,EAAAA,KAAC+U,GAAM,UAIb/U,EAAAA,EAAAA,KAACiV,GAAc,MAGrB,C,oBC7GA,SAASpX,EAAoBC,GAC5B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBF,EAAM,KAEjD,MADAC,EAAEE,KAAO,mBACHF,CACP,CACAF,EAAoBK,KAAO,WAAa,MAAO,EAAI,EACnDL,EAAoBM,QAAUN,EAC9BA,EAAoBO,GAAK,MACzBC,EAAOC,QAAUT,C","sources":["../node_modules/@babel/standalone|sync","pages/common/ProfileImage.tsx","pages/Editor/commons/EditorHeaderComponents.tsx","webpack://appsmith/./src/pages/Editor/CustomWidgetBuilder/styles.module.css?1779","pages/Editor/CustomWidgetBuilder/header.tsx","webpack://appsmith/./src/pages/Editor/CustomWidgetBuilder/Preview/Debugger/styles.module.css?92d4","pages/Editor/CustomWidgetBuilder/Preview/Debugger/helpDropdown.tsx","pages/Editor/CustomWidgetBuilder/types.ts","pages/Editor/CustomWidgetBuilder/Preview/Debugger/objectView.tsx","pages/Editor/CustomWidgetBuilder/Preview/Debugger/debuggerItem.tsx","pages/Editor/CustomWidgetBuilder/Preview/Debugger/counter.tsx","utils/hooks/useLocalStorageState.ts","pages/Editor/CustomWidgetBuilder/Preview/Debugger/index.tsx","pages/Editor/CustomWidgetBuilder/Preview/index.tsx","webpack://appsmith/./src/pages/Editor/CustomWidgetBuilder/Editor/styles.module.css?5e55","webpack://appsmith/./src/pages/Editor/CustomWidgetBuilder/Editor/Layouts/styles.module.css?fa9e","webpack://appsmith/./src/pages/Editor/CustomWidgetBuilder/Editor/Layouts/TabsLayout/styles.module.css?4621","pages/Editor/CustomWidgetBuilder/Editor/Layouts/TabsLayout/index.tsx","webpack://appsmith/./src/pages/Editor/CustomWidgetBuilder/Editor/Layouts/SplitLayout/styles.module.css?1578","pages/Editor/CustomWidgetBuilder/Editor/Layouts/SplitLayout/index.tsx","utils/hooks/localstorage.tsx","pages/Editor/CustomWidgetBuilder/Editor/Layouts/index.tsx","webpack://appsmith/./src/pages/Editor/CustomWidgetBuilder/Editor/Header/styles.module.css?a38c","pages/Editor/CustomWidgetBuilder/Editor/Header/widgetName.tsx","pages/Editor/CustomWidgetBuilder/Editor/Header/layoutControls.tsx","pages/Editor/CustomWidgetBuilder/Editor/Header/referenceTrigger.tsx","pages/Editor/CustomWidgetBuilder/Editor/Header/CodeTemplates/Templates/index.ts","pages/Editor/CustomWidgetBuilder/Editor/Header/CodeTemplates/Templates/vanillaJs.ts","pages/Editor/CustomWidgetBuilder/Editor/Header/CodeTemplates/Templates/react.ts","pages/Editor/CustomWidgetBuilder/Editor/Header/CodeTemplates/Templates/vue.ts","pages/Editor/CustomWidgetBuilder/Editor/Header/CodeTemplates/index.tsx","pages/Editor/CustomWidgetBuilder/Editor/Header/index.tsx","webpack://appsmith/./src/pages/Editor/CustomWidgetBuilder/Editor/CodeEditors/styles.module.css?0343","pages/Editor/CustomWidgetBuilder/Editor/CodeEditors/HTMLEditor.tsx","pages/Editor/CustomWidgetBuilder/Editor/CodeEditors/StyleEditor.tsx","widgets/CustomWidget/component/constants.ts","pages/Editor/CustomWidgetBuilder/Editor/CodeEditors/JSEditor.tsx","webpack://appsmith/./src/pages/Editor/CustomWidgetBuilder/Editor/References/styles.module.css?5562","pages/Editor/CustomWidgetBuilder/Editor/References/collapsible.tsx","pages/Editor/CustomWidgetBuilder/Editor/References/help.tsx","pages/Editor/CustomWidgetBuilder/Editor/References/liveModel.tsx","pages/Editor/CustomWidgetBuilder/Editor/References/events.tsx","pages/Editor/CustomWidgetBuilder/Editor/References/index.tsx","pages/Editor/CustomWidgetBuilder/Editor/index.tsx","pages/Editor/CustomWidgetBuilder/connectionLost.tsx","pages/Editor/CustomWidgetBuilder/utility.ts","pages/Editor/CustomWidgetBuilder/useCustomBuilder.tsx","pages/Editor/CustomWidgetBuilder/index.tsx","../node_modules/sass|sync"],"sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 25380;\nmodule.exports = webpackEmptyContext;","import React, { useContext } from \"react\";\nimport { getInitialsAndColorCode } from \"utils/AppsmithUtils\";\nimport styled, { ThemeContext } from \"styled-components\";\nimport { Colors } from \"constants/Colors\";\nimport { Avatar } from \"design-system\";\n\nexport const Profile = styled.div<{ backgroundColor?: string; size?: number }>`\n  /* width: ${(props) => props.size || 34}px;\n  height: ${(props) => props.size || 34}px;\n  display: flex;\n  align-items: center;\n  border-radius: 50%;\n  justify-content: center;\n  cursor: pointer;\n  background-color: ${(props) => props.backgroundColor};\n  flex-shrink: 0;\n  && span {\n    color: ${Colors.BLACK};\n    letter-spacing: normal;\n  } */\n\n  /* img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n    border-radius: 50%;\n  } */\n`;\n\nexport default function ProfileImage(props: {\n  userName?: string;\n  className?: string;\n  commonName?: string;\n  size?: string;\n  source?: string;\n}) {\n  const theme = useContext(ThemeContext);\n\n  const initialsAndColorCode = getInitialsAndColorCode(\n    props.commonName || props.userName,\n    theme.colors.appCardColors,\n  );\n\n  return (\n    <Avatar\n      className={props.className}\n      firstLetter={props.commonName || initialsAndColorCode[0]}\n      image={props.source}\n      label={props.commonName || initialsAndColorCode[0]}\n      size={props.size}\n    />\n  );\n}\n","import styled from \"styled-components\";\nimport { Profile } from \"pages/common/ProfileImage\";\nimport { getTypographyByKey } from \"design-system-old\";\n\nexport const HeaderWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  background-color: var(--ads-v2-color-bg);\n  flex-direction: row;\n  box-shadow: none;\n  border-bottom: 1px solid var(--ads-v2-color-border);\n  height: ${(props) => props.theme.smallHeaderHeight};\n  & .editable-application-name {\n    ${getTypographyByKey(\"h4\")}\n    color: ${(props) => props.theme.colors.header.appName};\n  }\n  & ${Profile} {\n    width: 24px;\n    height: 24px;\n  }\n\n  @media only screen and (max-width: 900px) {\n    & .help-bar {\n      display: none;\n    }\n  }\n\n  @media only screen and (max-width: 700px) {\n    & .app-realtime-editors {\n      display: none;\n    }\n  }\n`;\n\nexport const HeaderSection = styled.div`\n  position: relative;\n  display: flex;\n  flex: 1;\n  overflow: visible;\n  align-items: center;\n  :nth-child(1) {\n    justify-content: flex-start;\n    max-width: 30%;\n  }\n  :nth-child(2) {\n    justify-content: center;\n  }\n  :nth-child(3) {\n    justify-content: flex-end;\n  }\n`;\n","// extracted by mini-css-extract-plugin\nexport default {\"headerWrapper\":\"styles_headerWrapper__db9Sk\",\"header\":\"styles_header__AFFoO\",\"headerControls\":\"styles_headerControls__Rxk8M\",\"content\":\"styles_content__yzY2p\",\"loader\":\"styles_loader__vmmYl\",\"closeButton\":\"styles_closeButton__-GUiB\",\"connectionLostContainer\":\"styles_connectionLostContainer__ARVjz\",\"contentRight\":\"styles_contentRight__4BsYN\",\"contentLeft\":\"styles_contentLeft__LIRVz\"};","import React, { useContext } from \"react\";\nimport { ThemeProvider } from \"styled-components\";\nimport { getTheme, ThemeMode } from \"selectors/themeSelectors\";\nimport {\n  HeaderSection,\n  HeaderWrapper,\n} from \"../commons/EditorHeaderComponents\";\nimport { AppsmithLink } from \"../AppsmithLink\";\nimport styles from \"./styles.module.css\";\nimport { Button, Icon, Text } from \"design-system\";\nimport clsx from \"clsx\";\nimport { CustomWidgetBuilderContext } from \".\";\nimport {\n  createMessage,\n  CUSTOM_WIDGET_FEATURE,\n} from \"@appsmith/constants/messages\";\n\nconst theme = getTheme(ThemeMode.LIGHT);\n\nexport default function Header() {\n  const { close, showConnectionLostMessage } = useContext(\n    CustomWidgetBuilderContext,\n  );\n\n  return (\n    <ThemeProvider theme={theme}>\n      <HeaderWrapper className={styles.headerWrapper}>\n        <HeaderSection className={styles.headerSection}>\n          <AppsmithLink />\n          <Text className={styles.header} kind=\"heading-xs\">\n            {createMessage(CUSTOM_WIDGET_FEATURE.builder.header)}\n          </Text>\n        </HeaderSection>\n        <HeaderSection\n          className={clsx(styles.headerSection, styles.headerControls)}\n        >\n          {showConnectionLostMessage && (\n            <>\n              <Text color=\"var(--ads-old-color-pomegranate)\">\n                {createMessage(CUSTOM_WIDGET_FEATURE.builder.connectionLost)}\n              </Text>\n              <Icon\n                name=\"link-unlink\"\n                size=\"md\"\n                style={{\n                  color: \"var(--ads-old-color-pomegranate)\",\n                }}\n              />\n            </>\n          )}\n          <Button\n            className={styles.closeButton}\n            kind=\"tertiary\"\n            onClick={close}\n            size=\"lg\"\n          >\n            {createMessage(CUSTOM_WIDGET_FEATURE.builder.close)}\n          </Button>\n        </HeaderSection>\n      </HeaderWrapper>\n    </ThemeProvider>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"styles_wrapper__Oo8dx\",\"debuggerTab\":\"styles_debuggerTab__RusGu\",\"debuggerBody\":\"styles_debuggerBody__pj72T\",\"debuggerItem\":\"styles_debuggerItem__xxbkx\",\"debuggerItemMessage\":\"styles_debuggerItemMessage__6lDN2\",\"debuggerItemHelp\":\"styles_debuggerItemHelp__YpAh8\",\"debuggerItemIcon\":\"styles_debuggerItemIcon__Kpc8l\",\"debuggerItemHelpContent\":\"styles_debuggerItemHelpContent__LqlzS\",\"debuggerActions\":\"styles_debuggerActions__8JcCl\",\"debuggerCounter\":\"styles_debuggerCounter__hvH5h\",\"debuggerCounterItem\":\"styles_debuggerCounterItem__2sUE8\",\"debuggerEmptyContainer\":\"styles_debuggerEmptyContainer__OYJac\",\"debuggerEmpty\":\"styles_debuggerEmpty__I80up\",\"debuggerEmptyIcon\":\"styles_debuggerEmptyIcon__I5aF+\"};","import React from \"react\";\nimport {\n  Icon,\n  Button,\n  Popover,\n  PopoverTrigger,\n  PopoverContent,\n  List,\n} from \"design-system\";\nimport styles from \"./styles.module.css\";\nimport type { DebuggerLog } from \"../../types\";\nimport {\n  CUSTOM_WIDGET_FEATURE,\n  createMessage,\n} from \"@appsmith/constants/messages\";\nimport { CUSTOM_WIDGET_DOC_URL } from \"../../constants\";\n\nexport default function HelpDropdown(props: DebuggerLog) {\n  const { args } = props;\n\n  const errorMessage = args?.[0]?.message;\n\n  return (\n    <Popover>\n      <PopoverTrigger>\n        <Button kind=\"tertiary\" size=\"sm\" startIcon=\"question-line\" />\n      </PopoverTrigger>\n      <PopoverContent className={styles.consoleItemHelpContent}>\n        <List\n          items={[\n            {\n              startIcon: <Icon name=\"book\" size=\"md\" />,\n              title: \"Documentation\",\n              onClick: () => {\n                window.open(CUSTOM_WIDGET_DOC_URL, \"_blank\");\n              },\n              description: \"\",\n              descriptionType: \"inline\",\n            },\n            // {\n            //   startIcon: <Icon name=\"wand\" size=\"md\" />,\n            //   title: \"Troubleshoot with AI\",\n            //   description: \"\",\n            //   descriptionType: \"inline\",\n            //   onClick: noop,\n            // },\n            {\n              startIcon: <Icon name=\"snippet\" size=\"md\" />,\n              title: createMessage(\n                CUSTOM_WIDGET_FEATURE.debugger.helpDropdown.stackoverflow,\n              ),\n              onClick: () => {\n                args[0] &&\n                  window.open(\n                    `https://stackoverflow.com/search?q=${\n                      \"[javascript] \" +\n                      encodeURIComponent(errorMessage as string)\n                    }}`,\n                    \"_blank\",\n                  );\n              },\n              description: \"\",\n              descriptionType: \"inline\",\n            },\n            // {\n            //   startIcon: <Icon name=\"support\" size=\"md\" />,\n            //   title: \"Appsmith Support\",\n            //   description: \"\",\n            //   descriptionType: \"inline\",\n            //   onClick: noop,\n            // },\n          ]}\n        />\n      </PopoverContent>\n    </Popover>\n  );\n}\n","import type { AppThemeProperties } from \"entities/AppTheming\";\n\nexport interface DebuggerLogItem {\n  message: string | number | Record<string, unknown> | Array<unknown>;\n  line?: number;\n  column?: number;\n}\n\nexport const DebuggerLogType = {\n  LOG: \"log\",\n  INFO: \"info\",\n  WARN: \"warn\",\n  ERROR: \"error\",\n};\n\nexport interface DebuggerLog {\n  type: string;\n  args: Array<DebuggerLogItem>;\n}\n\nexport interface SrcDoc {\n  html: string;\n  js: string;\n  css: string;\n}\n\nexport interface CustomWidgetBuilderContextValueType {\n  //Custom widget name\n  name: string;\n  widgetId: string;\n\n  isReferenceOpen: boolean;\n  selectedLayout: string;\n\n  //Compiled src doc\n  srcDoc: SrcDoc;\n\n  //unCompiled src doc\n  uncompiledSrcDoc: SrcDoc;\n  model: Record<string, unknown>;\n  events: Record<string, string>;\n  key: number;\n  lastSaved?: number;\n\n  //the version of uncompiledSrcDoc when the builder is opened.\n  // used to revert the changes made in current session.\n  initialSrcDoc?: SrcDoc;\n\n  //Array of logs to show on the debugger section\n  debuggerLogs: Array<DebuggerLog>;\n\n  //Flag to indicatae that widget is not focus in main window\n  showConnectionLostMessage: boolean;\n\n  theme: AppThemeProperties;\n}\n\nexport interface CustomWidgetBuilderContextFunctionType {\n  toggleReference: () => void;\n  selectLayout: (layout: string) => void;\n  close: () => void;\n  update: (editor: string, value: string) => void;\n  updateModel: (model: Record<string, unknown>) => void;\n  bulkUpdate: (srcDoc: CustomWidgetBuilderContextValueType[\"srcDoc\"]) => void;\n  updateDebuggerLogs: (log: { type: string; args: any }) => void;\n  clearDegbuggerLogs: () => void;\n}\n\nexport interface CustomWidgetBuilderContextType\n  extends CustomWidgetBuilderContextValueType,\n    CustomWidgetBuilderContextFunctionType {}\n","import React from \"react\";\nimport ReactJson from \"react-json-view\";\n\nexport default function ObjectView(props: {\n  value: Record<string, unknown> | unknown[];\n}) {\n  const reactJsonProps = {\n    theme: \"rjv-default\",\n    name: null,\n    enableClipboard: false,\n    displayObjectSize: false,\n    displayDataTypes: false,\n    style: {\n      fontSize: \"10px\",\n    },\n    collapsed: 0,\n    shouldCollapse: (field: any) => {\n      const index = field.name * 1;\n      return index >= 2;\n    },\n    indentWidth: 1,\n  };\n\n  return <ReactJson src={props.value} {...reactJsonProps} />;\n}\n","import React from \"react\";\nimport { Icon } from \"design-system\";\nimport styles from \"./styles.module.css\";\nimport HelpDropdown from \"./helpDropdown\";\nimport { DebuggerLogType, type DebuggerLog } from \"../../types\";\nimport ObjectView from \"./objectView\";\nimport styled from \"styled-components\";\n\nconst StyledSpan = styled.span<{ type: string }>`\n  color: ${(props) => {\n    switch (props.type) {\n      case \"string\":\n        return \"hsl(30,77%,40%)\";\n      case \"number\":\n        return \"#1659df\";\n      default:\n        return \"#063289\";\n    }\n  }};\n`;\n\nconst getIcon = (type: DebuggerLog[\"type\"]) => {\n  switch (type) {\n    case DebuggerLogType.ERROR:\n      return (\n        <Icon\n          name=\"close-circle\"\n          size=\"md\"\n          style={{\n            color: \"var(--ads-v2-color-red-600)\",\n          }}\n        />\n      );\n    case DebuggerLogType.WARN:\n      return (\n        <Icon\n          name=\"alert-fill\"\n          size=\"md\"\n          style={{\n            color: \"var(--ads-v2-color-yellow-600)\",\n          }}\n        />\n      );\n    case DebuggerLogType.LOG:\n      return <Icon name=\"snippet\" size=\"md\" />;\n    case DebuggerLogType.INFO:\n      return <Icon name=\"info\" size=\"md\" />;\n    default:\n      return <Icon name=\"snippet\" size=\"md\" />;\n  }\n};\n\nconst getContent = (type: string, args: DebuggerLog[\"args\"]) => {\n  return args.map((d, i) => {\n    if (d.message instanceof Object) {\n      return <ObjectView key={i} value={d.message} />;\n    } else if (type === \"log\") {\n      return (\n        <StyledSpan key={i} type={typeof d.message}>\n          {typeof d.message === \"number\"\n            ? d.message\n            : JSON.stringify(d.message)}\n        </StyledSpan>\n      );\n    } else {\n      return <span key={i}>{d.message}</span>;\n    }\n  });\n};\n\nconst getBackgroundColor = (type: DebuggerLog[\"type\"]) => {\n  switch (type) {\n    case DebuggerLogType.ERROR:\n      return \"var(--ads-v2-color-red-50)\";\n    case DebuggerLogType.WARN:\n      return \"var(--ads-v2-color-yellow-100)\";\n    default:\n      return \"#fff\";\n  }\n};\n\nexport default function DebuggerItem(props: DebuggerLog) {\n  const { args, type } = props;\n\n  return (\n    <div\n      className={styles.debuggerItem}\n      style={{\n        background: getBackgroundColor(props.type),\n      }}\n    >\n      <div className={styles.debuggerItemIcon}>{getIcon(props.type)}</div>\n      <div className={styles.debuggerItemMessage}>{getContent(type, args)}</div>\n      {type === DebuggerLogType.ERROR && (\n        <div className={styles.debuggerItemHelp}>\n          <HelpDropdown args={args} type={type} />\n        </div>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Icon } from \"design-system\";\nimport styles from \"./styles.module.css\";\n\nexport default function Counter(props: {\n  log: number;\n  error: number;\n  warn: number;\n  onClick: () => void;\n}) {\n  const { error, log, onClick, warn } = props;\n\n  return (\n    <div className={styles.debuggerCounter} onClick={() => onClick()}>\n      <div className={styles.debuggerCounterItem}>\n        <Icon\n          name=\"close-circle\"\n          size=\"sm\"\n          style={{\n            color: \"var(--ads-v2-color-red-600)\",\n          }}\n        />\n        {error}\n      </div>\n      <div className={styles.debuggerCounterItem}>\n        <Icon\n          name=\"alert-fill\"\n          size=\"sm\"\n          style={{\n            color: \"var(--ads-v2-color-yellow-600)\",\n          }}\n        />\n        {warn}\n      </div>\n      <div className={styles.debuggerCounterItem}>\n        <Icon name=\"snippet\" size=\"sm\" />\n        {log}\n      </div>\n    </div>\n  );\n}\n","import { useCallback, useState } from \"react\";\nimport { LocalStorage } from \"utils/localStorage\";\n\nconst localStorage = new LocalStorage();\n\nexport default function useLocalStorageState<Tvalue>(\n  key: string,\n  initialValue: Tvalue,\n): [Tvalue, (newValue: Tvalue) => void] {\n  const [storedValue, setStoredValue] = useState(() => {\n    const value = localStorage.getItem(key);\n\n    return value ? (JSON.parse(value) as Tvalue) : initialValue;\n  });\n\n  const setValue = useCallback((newValue: Tvalue) => {\n    setStoredValue(newValue);\n    localStorage.setItem(key, JSON.stringify(newValue));\n  }, []);\n\n  return [storedValue, setValue];\n}\n","import React, { useCallback, useContext, useEffect } from \"react\";\nimport { Tabs, TabsList, Tab, TabPanel, Icon, Tooltip } from \"design-system\";\nimport DebuggerItem from \"./debuggerItem\";\nimport styles from \"./styles.module.css\";\nimport Counter from \"./counter\";\nimport useLocalStorageState from \"utils/hooks/useLocalStorageState\";\nimport { CustomWidgetBuilderContext } from \"../..\";\nimport { DebuggerLogType } from \"../../types\";\nimport BugIcon from \"../Debugger/icon.svg\";\nimport {\n  CUSTOM_WIDGET_FEATURE,\n  createMessage,\n} from \"@appsmith/constants/messages\";\nimport AnalyticsUtil from \"@appsmith/utils/AnalyticsUtil\";\n\nconst LOCAL_STORAGE_KEYS_IS_DEBUGGER_OPEN =\n  \"custom-widget-builder-context-state-is-debugger-open\";\n\nexport default function Debugger() {\n  const scrollToRef = React.useRef<HTMLDivElement>(null);\n\n  const [open, setOpen] = useLocalStorageState(\n    LOCAL_STORAGE_KEYS_IS_DEBUGGER_OPEN,\n    false,\n  );\n\n  const { clearDegbuggerLogs, debuggerLogs, widgetId } = useContext(\n    CustomWidgetBuilderContext,\n  );\n\n  useEffect(() => {\n    scrollToRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  }, [debuggerLogs]);\n\n  const toggle = useCallback(() => {\n    setOpen(!open);\n    AnalyticsUtil.logEvent(\n      \"CUSTOM_WIDGET_BUILDER_DEBUGGER_VISIBILITY_CHANGED\",\n      {\n        widgetId: widgetId,\n        visible: !open,\n      },\n    );\n  }, [open]);\n\n  return (\n    <div className={styles.wrapper}>\n      <div className={styles.debuggerActions}>\n        <Counter\n          error={\n            debuggerLogs?.filter((d) => d.type === DebuggerLogType.ERROR)\n              .length || 0\n          }\n          log={\n            debuggerLogs?.filter((d) => d.type === DebuggerLogType.LOG)\n              .length || 0\n          }\n          onClick={() => toggle()}\n          warn={\n            debuggerLogs?.filter((d) => d.type === DebuggerLogType.WARN)\n              .length || 0\n          }\n        />\n        <Tooltip content=\"Clear console\">\n          <Icon\n            name=\"forbid-line\"\n            onClick={() => {\n              clearDegbuggerLogs?.();\n              AnalyticsUtil.logEvent(\"CUSTOM_WIDGET_BUILDER_DEBUGGER_CLEARED\", {\n                widgetId: widgetId,\n              });\n            }}\n            size=\"md\"\n            style={{ cursor: \"pointer\" }}\n          />\n        </Tooltip>\n        <Tooltip content={open ? \"Close console\" : \"Open console\"}>\n          <Icon\n            name={open ? \"arrow-down-s-line\" : \"arrow-up-s-line\"}\n            onClick={() => toggle()}\n            size=\"lg\"\n            style={{ cursor: \"pointer\" }}\n          />\n        </Tooltip>\n      </div>\n      <Tabs value={\"Debugger\"}>\n        <TabsList className={styles.debuggerTab} onClick={() => toggle()}>\n          <Tab key=\"Debugger\" value=\"Debugger\">\n            {createMessage(CUSTOM_WIDGET_FEATURE.debugger.title)}\n          </Tab>\n        </TabsList>\n        {open && (\n          <TabPanel\n            className={styles.debuggerBody}\n            key=\"Debugger\"\n            value=\"Debugger\"\n          >\n            {debuggerLogs?.length ? (\n              debuggerLogs?.map((log, index) => (\n                <DebuggerItem args={log.args} key={index} type={log.type} />\n              ))\n            ) : (\n              <div className={styles.debuggerEmptyContainer}>\n                <div className={styles.debuggerEmptyIcon}>\n                  <img src={BugIcon} />\n                </div>\n                <div className={styles.debuggerEmpty}>\n                  {createMessage(CUSTOM_WIDGET_FEATURE.debugger.emptyMessage)}\n                </div>\n              </div>\n            )}\n            <div ref={scrollToRef} />\n          </TabPanel>\n        )}\n      </Tabs>\n    </div>\n  );\n}\n","import React, { useContext, useEffect, useRef, useState } from \"react\";\nimport CustomComponent from \"widgets/CustomWidget/component\";\nimport { CustomWidgetBuilderContext } from \"../index\";\nimport { toast } from \"design-system\";\nimport Debugger from \"./Debugger\";\nimport {\n  CUSTOM_WIDGET_FEATURE,\n  createMessage,\n} from \"@appsmith/constants/messages\";\nimport type { AppThemeProperties } from \"entities/AppTheming\";\nimport { DynamicHeight } from \"utils/WidgetFeatures\";\n\nexport default function Preview({ width }: { width: number }) {\n  const {\n    key,\n    model,\n    srcDoc,\n    theme,\n    updateDebuggerLogs,\n    updateModel,\n    widgetId,\n  } = useContext(CustomWidgetBuilderContext);\n\n  const [dimensions, setDimensions] = useState({\n    width: 300,\n    height: 500,\n  });\n\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (containerRef.current) {\n      setDimensions({\n        width: containerRef.current?.clientWidth + 8,\n        height:\n          window.innerHeight -\n          containerRef.current.getBoundingClientRect().top -\n          31,\n      });\n    }\n\n    const handleResize = () => {\n      if (containerRef.current) {\n        setDimensions({\n          width: containerRef.current?.clientWidth + 8,\n          height:\n            window.innerHeight -\n            containerRef.current.getBoundingClientRect().top -\n            31,\n        });\n      }\n    };\n\n    window.addEventListener(\"resize\", handleResize);\n\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (containerRef.current) {\n      setDimensions({\n        width: containerRef.current.clientWidth + 8,\n        height:\n          window.innerHeight -\n          containerRef.current.getBoundingClientRect().top -\n          31,\n      });\n    }\n  }, [width, containerRef.current?.clientWidth]);\n\n  return (\n    <div ref={containerRef}>\n      <CustomComponent\n        dynamicHeight={DynamicHeight.FIXED}\n        execute={(name, contextObject) => {\n          toast.show(\n            `${createMessage(\n              CUSTOM_WIDGET_FEATURE.preview.eventFired,\n            )} ${name}`,\n            { kind: \"success\" },\n          );\n\n          updateDebuggerLogs?.({\n            type: \"info\",\n            args: [\n              {\n                message: `${createMessage(\n                  CUSTOM_WIDGET_FEATURE.preview.eventFired,\n                )} '${name}'`,\n              },\n              { message: contextObject },\n            ],\n          });\n        }}\n        height={dimensions.height}\n        key={key}\n        minDynamicHeight={0}\n        model={model || {}}\n        onConsole={(type, args) => {\n          updateDebuggerLogs?.({\n            type,\n            args,\n          });\n        }}\n        renderMode=\"BUILDER\"\n        srcDoc={srcDoc || { html: \"\", js: \"\", css: \"\" }}\n        theme={theme as AppThemeProperties}\n        update={(data) => {\n          updateModel?.(data);\n\n          const message = createMessage(\n            CUSTOM_WIDGET_FEATURE.preview.modelUpdated,\n          );\n\n          toast.show(message, { kind: \"success\" });\n\n          updateDebuggerLogs?.({\n            type: \"info\",\n            args: [{ message }, { message: data }],\n          });\n        }}\n        widgetId={widgetId || \"\"}\n        width={dimensions.width}\n      />\n      <Debugger />\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"contentRightBody\":\"styles_contentRightBody__W+O0F\",\"headerControls\":\"styles_headerControls__gF+Ao\"};","// extracted by mini-css-extract-plugin\nexport default {\"editorLayoutFullWidth\":\"styles_editorLayoutFullWidth__C47c6\",\"editorLayoutPartialWidth\":\"styles_editorLayoutPartialWidth__DAJmM\"};","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"styles_wrapper__+sEAX\",\"tabList\":\"styles_tabList__+Lx9X\",\"tabPanel\":\"styles_tabPanel__ktW1v\",\"controls\":\"styles_controls__a0uMh\"};","import React, { useEffect, useRef, useState } from \"react\";\nimport styles from \"./styles.module.css\";\nimport { Tab, TabPanel, Tabs, TabsList } from \"design-system\";\nimport type { ContentProps } from \"../../CodeEditors/types\";\nimport useLocalStorageState from \"utils/hooks/useLocalStorageState\";\n\ninterface Props {\n  tabs: Array<{\n    title: string;\n    titleControls?: React.ReactNode;\n    children: (props: ContentProps) => React.ReactNode;\n  }>;\n}\n\nconst LOCAL_STORAGE_KEYS = \"custom-widget-layout-tabs-state\";\n\nexport default function TabLayout(props: Props) {\n  const { tabs } = props;\n\n  const [selectedTab, setSelectedTab] = useLocalStorageState<string>(\n    LOCAL_STORAGE_KEYS,\n    tabs[0].title,\n  );\n\n  useEffect(() => {\n    if (!tabs.find((d) => d.title === selectedTab)) {\n      setSelectedTab(tabs[0].title);\n    }\n  }, []);\n\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [height, setHeight] = React.useState(0);\n\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    if (containerRef.current) {\n      setHeight(\n        window.innerHeight -\n          containerRef.current.getBoundingClientRect().top -\n          39,\n      );\n\n      setLoading(false);\n    }\n\n    const handler = () => {\n      if (containerRef.current) {\n        setHeight(\n          window.innerHeight -\n            containerRef.current.getBoundingClientRect().top -\n            39,\n        );\n      }\n    };\n\n    window.addEventListener(\"resize\", handler);\n\n    return () => {\n      window.removeEventListener(\"resize\", handler);\n    };\n  }, []);\n\n  const selectedTabObject = tabs.find((d) => d.title === selectedTab);\n\n  return (\n    <div className={styles.wrapper} ref={containerRef}>\n      {!loading && (\n        <Tabs\n          onValueChange={(tab: string) => {\n            /*\n             * We need this set timeout to let the editor blur event fire before changin the tab\n             *  to let the editor save the last cursor position\n             */\n            setTimeout(() => {\n              setSelectedTab(tab);\n            });\n          }}\n          value={selectedTab}\n        >\n          <TabsList className={styles.tabList}>\n            {tabs.map((tab) => (\n              <Tab key={tab.title} value={tab.title}>\n                {tab.title}\n              </Tab>\n            ))}\n          </TabsList>\n          {tabs.map((tab) => (\n            <TabPanel\n              className={styles.tabPanel}\n              key={tab.title}\n              value={tab.title}\n            >\n              {tab.children({\n                height: height,\n                width: \"100%\",\n              })}\n            </TabPanel>\n          ))}\n        </Tabs>\n      )}\n      <div className={styles.controls}>\n        {selectedTabObject && <div>{selectedTabObject.titleControls}</div>}\n      </div>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"editorHeader\":\"styles_editorHeader__bxb5g\",\"editorHeaderControls\":\"styles_editorHeaderControls__Q7kWr\",\"editorBody\":\"styles_editorBody__6LiVM\",\"hasBorder\":\"styles_hasBorder__UmrIP\"};","import React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport styles from \"./styles.module.css\";\nimport type { ContentProps } from \"../../CodeEditors/types\";\nimport { Icon } from \"design-system\";\nimport { set } from \"lodash\";\nimport classNames from \"classnames\";\nimport { useLocalStorage } from \"utils/hooks/localstorage\";\n\ninterface Row {\n  title: string;\n  titleControls?: React.ReactNode;\n  children: (props: ContentProps) => React.ReactNode;\n}\n\ninterface Props {\n  rows: Array<Row>;\n}\n\nconst HEADER_HEIGHT = 38;\n\nconst CUSTOM_WIDGET_SPLIT_VIEW_VISIBILITY =\n  \"CUSTOM_WIDGET_SPLIT_VIEW_VISIBILITY\";\n\nexport default function SplitLayout(props: Props) {\n  const { rows } = props;\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [height, setHeight] = React.useState(0);\n  const [loading, setLoading] = useState(true);\n  const [isRowCollapsed, setIsRowCollapsed] = useLocalStorage(\n    CUSTOM_WIDGET_SPLIT_VIEW_VISIBILITY,\n    Array(rows.length).fill(false),\n  );\n\n  useEffect(() => {\n    if (containerRef.current) {\n      setHeight(\n        window.innerHeight - containerRef.current.getBoundingClientRect().top,\n      );\n\n      setLoading(false);\n    }\n\n    const handler = () => {\n      if (containerRef.current) {\n        setHeight(\n          window.innerHeight - containerRef.current.getBoundingClientRect().top,\n        );\n      }\n    };\n\n    window.addEventListener(\"resize\", handler);\n\n    return () => {\n      window.removeEventListener(\"resize\", handler);\n    };\n  }, []);\n\n  const computedHeight = useMemo(() => {\n    const expandedRows = isRowCollapsed.filter((row: boolean) => !row).length;\n\n    return (height - HEADER_HEIGHT * rows.length) / expandedRows;\n  }, [isRowCollapsed, height]);\n\n  return (\n    <div className={styles.wrapper} ref={containerRef}>\n      {!loading &&\n        rows.map((row, index) => (\n          <div className={classNames(styles.editor)} key={row.title}>\n            <div\n              className={classNames(\n                styles.editorHeader,\n                isRowCollapsed[index] && index === rows.length - 1\n                  ? styles.hasBorder\n                  : \"\",\n              )}\n              onClick={() =>\n                setIsRowCollapsed(\n                  set([...isRowCollapsed], index, !isRowCollapsed[index]),\n                )\n              }\n            >\n              <div>{row.title}</div>\n              <div className={styles.editorHeaderControls}>\n                {row.titleControls}\n                <Icon\n                  name={\n                    !isRowCollapsed[index]\n                      ? \"arrow-down-s-line\"\n                      : \"arrow-up-s-line\"\n                  }\n                  size=\"lg\"\n                  style={{ cursor: \"pointer\" }}\n                />\n              </div>\n            </div>\n\n            {!isRowCollapsed[index] && (\n              <div\n                className={styles.editorBody}\n                style={{ height: computedHeight }}\n              >\n                {row.children({\n                  height: computedHeight,\n                  width: \"100%\",\n                })}\n              </div>\n            )}\n          </div>\n        ))}\n    </div>\n  );\n}\n","import { useState } from \"react\";\nimport localStorage from \"utils/localStorage\";\nimport log from \"loglevel\";\n\nexport function useLocalStorage(key: string, initialValue?: unknown) {\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      // Get from local storage by key\n      const item = localStorage.getItem(key);\n      // Parse stored json or if none return initialValue\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n      log.error(error);\n      return initialValue;\n    }\n  });\n\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n  const setValue = (value: any) => {\n    try {\n      // Allow value to be a function so we have same API as useState\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n      // Save state\n      setStoredValue(valueToStore);\n      // Save to local storage\n      localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n      log.error(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n","import React, { useContext, useMemo } from \"react\";\nimport styles from \"./styles.module.css\";\nimport { CustomWidgetBuilderContext } from \"../..\";\nimport TabLayout from \"./TabsLayout\";\nimport SplitLayout from \"./SplitLayout\";\nimport type { ContentProps } from \"../CodeEditors/types\";\n\ninterface Props {\n  content: Array<{\n    title: string;\n    titleControls?: React.ReactNode;\n    children: (props: ContentProps) => React.ReactNode;\n  }>;\n}\n\nexport default function Layout(props: Props) {\n  const { content } = props;\n\n  const context = useContext(CustomWidgetBuilderContext);\n\n  const layout = useMemo(() => {\n    switch (context.selectedLayout) {\n      case \"tabs\":\n        return <TabLayout tabs={content} />;\n      case \"split\":\n        return <SplitLayout rows={content} />;\n      default:\n        return <div>Tab Layout</div>;\n    }\n  }, [context.selectedLayout]);\n\n  return (\n    <div\n      className={\n        context.isReferenceOpen\n          ? styles.editorLayoutPartialWidth\n          : styles.editorLayoutFullWidth\n      }\n    >\n      {layout}\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"widgetName\":\"styles_widgetName__8AcxR\",\"headerControlsRight\":\"styles_headerControlsRight__51ykc\",\"headerControlsLeft\":\"styles_headerControlsLeft__PzDii\",\"referenceTrigger\":\"styles_referenceTrigger__iM+Ov\",\"layoutControl\":\"styles_layoutControl__bn2kU\",\"templateMenu\":\"styles_templateMenu__BHiOy\"};","import React, { useContext } from \"react\";\nimport styles from \"./styles.module.css\";\nimport { CustomWidgetBuilderContext } from \"../..\";\n\nexport default function WidgetName() {\n  const { name } = useContext(CustomWidgetBuilderContext);\n\n  return <div className={styles.widgetName}>{name}</div>;\n}\n","import { SegmentedControl } from \"design-system\";\nimport React, { useContext } from \"react\";\nimport { CustomWidgetBuilderContext } from \"../..\";\nimport styles from \"./styles.module.css\";\nimport styled from \"styled-components\";\nimport {\n  CUSTOM_WIDGET_FEATURE,\n  createMessage,\n} from \"@appsmith/constants/messages\";\nimport AnalyticsUtil from \"@appsmith/utils/AnalyticsUtil\";\n\nconst StyledSegmentedControl = styled(SegmentedControl)`\n  & .ads-v2-icon {\n    transform: rotate(90deg);\n  }\n`;\n\nexport default function LayoutControls() {\n  const { selectedLayout, selectLayout, widgetId } = useContext(\n    CustomWidgetBuilderContext,\n  );\n\n  const onChange = (value: string) => {\n    selectLayout?.(value);\n\n    AnalyticsUtil.logEvent(\"CUSTOM_WIDGET_BUILDER_LAYOUT_CHANGED\", {\n      widgetId: widgetId,\n      layoutName: value,\n    });\n  };\n\n  return (\n    <div className={styles.layoutControl}>\n      <StyledSegmentedControl\n        onChange={onChange}\n        options={[\n          {\n            label: createMessage(CUSTOM_WIDGET_FEATURE.layout.split),\n            startIcon: \"layout-column-line\",\n            value: \"split\",\n          },\n          {\n            label: createMessage(CUSTOM_WIDGET_FEATURE.layout.tab),\n            startIcon: \"layout-left-2-line\",\n            value: \"tabs\",\n          },\n        ]}\n        value={selectedLayout}\n      />\n    </div>\n  );\n}\n","import { Icon, Tooltip } from \"design-system\";\nimport React, { useContext } from \"react\";\nimport { CustomWidgetBuilderContext } from \"../..\";\nimport styles from \"./styles.module.css\";\nimport {\n  CUSTOM_WIDGET_FEATURE,\n  createMessage,\n} from \"@appsmith/constants/messages\";\nimport AnalyticsUtil from \"@appsmith/utils/AnalyticsUtil\";\n\nexport default function ReferenceTrigger() {\n  const { isReferenceOpen, toggleReference, widgetId } = useContext(\n    CustomWidgetBuilderContext,\n  );\n\n  const onClick = () => {\n    toggleReference?.();\n\n    AnalyticsUtil.logEvent(\n      \"CUSTOM_WIDGET_BUILDER_REFERENCE_VISIBILITY_CHANGED\",\n      {\n        widgetId: widgetId,\n        visible: !isReferenceOpen,\n      },\n    );\n  };\n\n  return (\n    <div className={styles.referenceTrigger} onClick={onClick}>\n      <div>{createMessage(CUSTOM_WIDGET_FEATURE.referrences.title)}</div>\n      <div>\n        <Tooltip\n          content={\n            isReferenceOpen\n              ? createMessage(CUSTOM_WIDGET_FEATURE.referrences.tooltip.close)\n              : createMessage(CUSTOM_WIDGET_FEATURE.referrences.tooltip.open)\n          }\n          placement=\"left\"\n        >\n          <Icon name={isReferenceOpen ? \"eye-on\" : \"eye-off\"} size=\"md\" />\n        </Tooltip>\n      </div>\n    </div>\n  );\n}\n","import vanillaJs from \"./vanillaJs\";\nimport react from \"./react\";\nimport vue from \"./vue\";\n\nexport default [vanillaJs, react, vue];\n","import {\n  CUSTOM_WIDGET_FEATURE,\n  createMessage,\n} from \"@appsmith/constants/messages\";\nimport { CUSTOM_WIDGET_ONREADY_DOC_URL } from \"pages/Editor/CustomWidgetBuilder/constants\";\n\nexport default {\n  key: createMessage(CUSTOM_WIDGET_FEATURE.templateKey.vanillaJs),\n  uncompiledSrcDoc: {\n    html: `<div class=\"app\">\n\t<div class=\"tip-container\">\n\t\t<div class=\"tip-header\">\n\t\t\t<h2>Custom Widget</h2>\n\t\t\t<div id=\"index\"></div>\n\t\t</div>\n\t\t<div id=\"tip\"></div>\n\t</div>\n\t<div class=\"button-container\">\n\t\t<button id=\"next\">Next Tip</button>\n\t\t<button id=\"reset\">Reset</button>\n\t</div>\n</div>`,\n    css: `.app {\n\theight: calc(var(--appsmith-ui-height) * 1px);\n\twidth: calc(var(--appsmith-ui-width) * 1px);\n\tjustify-content: center;\n\tborder-radius: var(--appsmith-theme-borderRadius);\n\tbox-shadow: var(--appsmith-theme-boxShadow);\n\tpadding: 29px 25px;\n\tbox-sizing: border-box;\n\tfont-family: system-ui;\n\tbackground: #fff;\n}\n\n.tip-container {\n  margin-bottom: 20px;\n\tfont-size: 14px;\n\tline-height: 1.571429;\n}\n\n.tip-container h2 {\n  margin-bottom: 20px;\n\tfont-size: 16px;\n\tfont-weight: 700;\n}\n\n.tip-header {\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: baseline;\n\tmargin-bottom: 9px;\n}\n\n.tip-header div {\n\tcolor: #999;\n}\n\n.button-container {\n\ttext-align: right;\t\n\tpadding-top: 4px;\n}\n\n.button-container button {\n  margin: 0 10px;\n\tcursor: pointer;\n\tborder-radius: var(--appsmith-theme-borderRadius);\n\tpadding: 6px 16px;\n\tbackground: none;\n}\n\n.button-container button#next {\n\tbackground: var(--appsmith-theme-primaryColor) !important;\n\tcolor: #fff;\n\tborder:1px solid var(--appsmith-theme-primaryColor) !important;\n}\n\n.button-container button#reset {\n\tborder: 1px solid #999;\n\tcolor: #999;\n\toutline: none;\n\tbox-shadow: none;\n}\n\n.button-container button#reset:hover:not(:disabled) {\n\tcolor: var(--appsmith-theme-primaryColor);\n\tborder-color: var(--appsmith-theme-primaryColor);\n}\n\n.button-container button#reset:disabled {\n\tcursor: default;\n}`,\n    js: `function initApp() {\n\tconst index = document.getElementById(\"index\");\n\tconst tip = document.getElementById(\"tip\");\n\tconst next = document.getElementById(\"next\");\n\tconst reset = document.getElementById(\"reset\");\n\n\tlet currentIndex = 0;\n\t\n\tconst updateDom = () => {\n\t\ttip.innerHTML = appsmith.model.tips[currentIndex];\n\t\tindex.innerHTML = (currentIndex + 1) + \" / \" + appsmith.model.tips.length;\n\t\treset.disabled = currentIndex === 0;\n\t};\n\t\n\tnext.addEventListener(\"click\", () => {\n\t\tcurrentIndex = (currentIndex + 1) % appsmith.model.tips.length;\n\t\tupdateDom();\n\t});\n\t\n\treset.addEventListener(\"click\", () => {\n\t\tcurrentIndex = 0;\n\t\tupdateDom();\n\t\tappsmith.triggerEvent(\"onReset\");\n\t});\n\n\tupdateDom();\n}\n\nappsmith.onReady(() => {\n\t/*\n\t * This handler function will get called when parent application is ready.\n\t * Initialize your component here\n\t * more info - ${CUSTOM_WIDGET_ONREADY_DOC_URL}\n\t */\n\tinitApp();\n});`,\n  },\n};\n","import {\n  CUSTOM_WIDGET_FEATURE,\n  createMessage,\n} from \"@appsmith/constants/messages\";\nimport { CUSTOM_WIDGET_ONREADY_DOC_URL } from \"pages/Editor/CustomWidgetBuilder/constants\";\n\nexport default {\n  key: createMessage(CUSTOM_WIDGET_FEATURE.templateKey.react),\n  uncompiledSrcDoc: {\n    html: `<!-- no need to write html, head, body tags, it is handled by the widget -->\n<div id=\"root\"></div>\n`,\n    css: `.app {\n\theight: calc(var(--appsmith-ui-height) * 1px);\n\twidth: calc(var(--appsmith-ui-width) * 1px);\n\tjustify-content: center;\n\tborder-radius: var(--appsmith-theme-borderRadius);\n\tbox-shadow: var(--appsmith-theme-boxShadow);\n}\n\n.tip-container {\n  margin-bottom: 20px;\n}\n\n.tip-container h2 {\n  margin-bottom: 20px;\n\tfont-size: 16px;\n\tfont-weight: 700;\n}\n\n.tip-header {\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: baseline;\n}\n\n.tip-header div {\n\tcolor: #999;\n}\n\n.button-container {\n\ttext-align: right;\t\n}\n\n.button-container button {\n  margin: 0 10px;\n\tborder-radius: var(--appsmith-theme-borderRadius);\n}\n\n.button-container button.primary {\n\tbackground: var(--appsmith-theme-primaryColor) !important;\n}\n\n.button-container button.reset {\n\tcolor: var(--appsmith-theme-primaryColor) !important;\n\tborder-color: var(--appsmith-theme-primaryColor) !important;\n}`,\n    js: `import React from 'https://cdn.jsdelivr.net/npm/react@18.2.0/+esm'\nimport reactDom from 'https://cdn.jsdelivr.net/npm/react-dom@18.2.0/+esm'\nimport { Button, Card } from 'https://cdn.jsdelivr.net/npm/antd@5.11.1/+esm'\nimport Markdown from 'https://cdn.jsdelivr.net/npm/react-markdown@9.0.1/+esm'\n\nfunction App() {\n\tconst [currentIndex, setCurrentIndex] = React.useState(0);\n\n\tconst handleNext = () => {\n\t\tsetCurrentIndex((prevIndex) => (prevIndex + 1) % appsmith.model.tips.length);\n\t};\n\n\tconst handleReset = () => {\n\t\tsetCurrentIndex(0);\n\t\tappsmith.triggerEvent(\"onReset\");\n\t};\n\n\treturn (\n\t\t<Card className=\"app\">\n\t\t\t<div className=\"tip-container\">\n\t\t\t\t<div className=\"tip-header\">\n\t\t\t\t\t<h2>Custom Widget</h2>\n\t\t\t\t\t<div>{currentIndex + 1} / {appsmith.model.tips.length}\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<Markdown>{appsmith.model.tips[currentIndex]}</Markdown>\n\t\t\t</div>\n\t\t\t<div className=\"button-container\">\n\t\t\t\t<Button className=\"primary\" onClick={handleNext} type=\"primary\">Next Tip</Button>\n\t\t\t\t<Button onClick={handleReset}>Reset</Button>\n\t\t\t</div>\n\t</Card>\n);\n}\n\nappsmith.onReady(() => {\n\t/*\n\t * This handler function will get called when parent application is ready.\n\t * Initialize your component here\n\t * more info - ${CUSTOM_WIDGET_ONREADY_DOC_URL}\n\t */\n\treactDom.render(<App />, document.getElementById(\"root\"));\n});`,\n  },\n};\n","import {\n  CUSTOM_WIDGET_FEATURE,\n  createMessage,\n} from \"@appsmith/constants/messages\";\nimport { CUSTOM_WIDGET_ONREADY_DOC_URL } from \"pages/Editor/CustomWidgetBuilder/constants\";\n\nexport default {\n  key: createMessage(CUSTOM_WIDGET_FEATURE.templateKey.vue),\n  uncompiledSrcDoc: {\n    html: `<div id=\"app\">\n\t<div class=\"tip-container\">\n\t\t<div class=\"tip-header\">\n\t\t\t<h2>Custom Widget</h2>\n\t\t\t<div id=\"index\">{{ currentIndex + 1 }} / {{ tips.length }}</div>\n\t\t</div>\n\t\t<div id=\"tip\">{{ tips[currentIndex] }}</div>\n\t</div>\n\t<div class=\"button-container\">\n\t\t<button @click=\"next\" id=\"next\">Next Tip</button>\n\t\t<button @click=\"reset\" id=\"reset\">Reset</button>\n\t</div>\n</div>\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/vue/2.1.6/vue.min.js\"></script>`,\n    css: `#app {\n\theight: calc(var(--appsmith-ui-height) * 1px);\n\twidth: calc(var(--appsmith-ui-width) * 1px);\n\tjustify-content: center;\n\tborder-radius: var(--appsmith-theme-borderRadius);\n\tbox-shadow: var(--appsmith-theme-boxShadow);\n\tpadding: 29px 25px;\n\tbox-sizing: border-box;\n\tfont-family: system-ui;\n\tbackground: #fff;\n}\n\n.tip-container {\n  margin-bottom: 20px;\n\tfont-size: 14px;\n  line-height: 1.571429;\n}\n\n.tip-container h2 {\n  margin-bottom: 20px;\n\tfont-size: 16px;\n\tfont-weight: 700;\n}\n\n.tip-header {\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: baseline;\n\tmargin-bottom: 9px;\n}\n\n.tip-header div {\n\tcolor: #999;\n}\n\n.button-container {\n\ttext-align: right;\t\n\tpadding-top: 4px;\n}\n\n.button-container button {\n  margin: 0 10px;\n\tcursor: pointer;\n\tborder-radius: var(--appsmith-theme-borderRadius);\n\tpadding: 6px 16px;\n\tbackground: none;\n}\n\n.button-container button#next {\n\tbackground: var(--appsmith-theme-primaryColor) !important;\n\tcolor: #fff;\n\tborder:1px solid var(--appsmith-theme-primaryColor) !important;\n}\n\n.button-container button#reset {\n\tborder: 1px solid #999;\n\tcolor: #999;\n\toutline: none;\n\tbox-shadow: none;\n}\n\n.button-container button#reset:hover:not(:disabled) {\n\tcolor: var(--appsmith-theme-primaryColor);\n\tborder-color: var(--appsmith-theme-primaryColor);\n}\n\n.button-container button#reset:disabled {\n\tcursor: default;\n}`,\n    js: `appsmith.onReady(() => {\n  /*\n\t * This handler function will get called when parent application is ready.\n\t * Initialize your component here\n\t * more info - ${CUSTOM_WIDGET_ONREADY_DOC_URL}\n\t */\n\tnew Vue({\n\t\tel: \"#app\",\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\tcurrentIndex: 0,\n\t\t\t\ttips: appsmith.model.tips,\n\t\t\t};\n\t\t},\n\t\tmethods: {\n\t\t\tnext() {\n\t\t\t\tthis.currentIndex = (this.currentIndex + 1) % this.tips.length;\n\t\t\t},\n\t\t\treset() {\n\t\t\t\tthis.currentIndex = 0;\n\t\t\t\tappsmith.triggerEvent(\"onReset\");\n\t\t\t},\n\t\t},\n\t});\n});`,\n  },\n};\n","import {\n  Button,\n  Menu,\n  MenuContent,\n  MenuItem,\n  MenuSeparator,\n  MenuTrigger,\n  Modal,\n  ModalContent,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Text,\n} from \"design-system\";\nimport React, { useContext, useState } from \"react\";\nimport codeTemplates from \"./Templates\";\nimport { CustomWidgetBuilderContext } from \"pages/Editor/CustomWidgetBuilder\";\nimport styles from \"../styles.module.css\";\nimport type { SrcDoc } from \"pages/Editor/CustomWidgetBuilder/types\";\nimport styled from \"styled-components\";\nimport {\n  CUSTOM_WIDGET_FEATURE,\n  createMessage,\n} from \"@appsmith/constants/messages\";\nimport AnalyticsUtil from \"@appsmith/utils/AnalyticsUtil\";\n\nconst StyledButton = styled(Button)`\n  height: 32px !important;\n\n  & .ads-v2-button__content-children {\n    font-size: 14px;\n    font-weight: 400;\n  }\n`;\n\nfunction ConfirmationModal(props: {\n  open: boolean;\n  onOpenChange: (flag: boolean) => void;\n  onCancel: () => void;\n  onReplace: () => void;\n}) {\n  return (\n    <Modal\n      onOpenChange={(flag: boolean) => props.onOpenChange(flag)}\n      open={props.open}\n    >\n      <ModalContent\n        style={{\n          width: \"580px\",\n        }}\n      >\n        <ModalHeader>\n          {createMessage(CUSTOM_WIDGET_FEATURE.template.modal.header)}\n        </ModalHeader>\n        <ModalBody>\n          <Text kind=\"body-m\">\n            {createMessage(CUSTOM_WIDGET_FEATURE.template.modal.body)}\n          </Text>\n        </ModalBody>\n        <ModalFooter>\n          <Button kind=\"secondary\" onClick={props.onCancel} size=\"md\">\n            {createMessage(CUSTOM_WIDGET_FEATURE.template.modal.cancelCTA)}\n          </Button>\n          <Button onClick={props.onReplace} size=\"md\">\n            {createMessage(CUSTOM_WIDGET_FEATURE.template.modal.successCTA)}\n          </Button>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  );\n}\n\nexport function CodeTemplates() {\n  const { bulkUpdate, initialSrcDoc, lastSaved, widgetId } = useContext(\n    CustomWidgetBuilderContext,\n  );\n\n  const [open, setOpen] = useState(false);\n\n  const [selectedTemplate, setSelectedTemplate] = useState<SrcDoc | null>(null);\n  const [selectedTemplateName, setSelectedTemplateName] = useState(\"\");\n\n  return (\n    <div className={styles.templateMenu}>\n      <Menu>\n        <MenuTrigger>\n          <StyledButton\n            className=\"t--custom-widget-template-trigger\"\n            kind=\"secondary\"\n            onClick={() => {\n              AnalyticsUtil.logEvent(\"CUSTOM_WIDGET_BUILDER_TEMPLATE_OPENED\", {\n                widgetId: widgetId,\n              });\n            }}\n            size=\"sm\"\n            startIcon=\"query\"\n          >\n            {createMessage(CUSTOM_WIDGET_FEATURE.template.buttonCTA)}\n          </StyledButton>\n        </MenuTrigger>\n        <MenuContent>\n          {initialSrcDoc && lastSaved && (\n            <>\n              <MenuItem\n                onClick={() => {\n                  setSelectedTemplate(initialSrcDoc);\n                  setSelectedTemplateName(\n                    CUSTOM_WIDGET_FEATURE.template.revert,\n                  );\n                  setOpen(true);\n                  AnalyticsUtil.logEvent(\n                    \"CUSTOM_WIDGET_BUILDER_TEMPLATE_SELECT\",\n                    {\n                      widgetId: widgetId,\n                      templateName: CUSTOM_WIDGET_FEATURE.template.revert,\n                    },\n                  );\n                }}\n              >\n                {createMessage(CUSTOM_WIDGET_FEATURE.template.revert)}\n              </MenuItem>\n              <MenuSeparator />\n            </>\n          )}\n          {codeTemplates.map((template) => (\n            <MenuItem\n              key={template.key}\n              onClick={() => {\n                setSelectedTemplate(template.uncompiledSrcDoc);\n                setSelectedTemplateName(template.key);\n                setOpen(true);\n                AnalyticsUtil.logEvent(\n                  \"CUSTOM_WIDGET_BUILDER_TEMPLATE_SELECT\",\n                  {\n                    widgetId: widgetId,\n                    templateName: template.key,\n                  },\n                );\n              }}\n            >\n              {template.key}\n            </MenuItem>\n          ))}\n        </MenuContent>\n      </Menu>\n      <ConfirmationModal\n        onCancel={() => {\n          setSelectedTemplate(null);\n          setSelectedTemplateName(\"\");\n          setOpen(false);\n          AnalyticsUtil.logEvent(\n            \"CUSTOM_WIDGET_BUILDER_TEMPLATE_SELECT_CANCELED\",\n            {\n              widgetId: widgetId,\n              templateName: selectedTemplateName,\n            },\n          );\n        }}\n        onOpenChange={(flag: boolean) => {\n          if (!flag) {\n            setSelectedTemplate(null);\n            setSelectedTemplateName(\"\");\n            setOpen(false);\n            AnalyticsUtil.logEvent(\n              \"CUSTOM_WIDGET_BUILDER_TEMPLATE_SELECT_CANCELED\",\n              {\n                widgetId: widgetId,\n                templateName: selectedTemplateName,\n              },\n            );\n          }\n        }}\n        onReplace={() => {\n          selectedTemplate && bulkUpdate?.(selectedTemplate);\n          setSelectedTemplate(null);\n          setSelectedTemplateName(\"\");\n          setOpen(false);\n          AnalyticsUtil.logEvent(\n            \"CUSTOM_WIDGET_BUILDER_TEMPLATE_SELECT_CONFIRMED\",\n            {\n              widgetId: widgetId,\n              templateName: selectedTemplateName,\n            },\n          );\n        }}\n        open={open}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\nimport styles from \"./styles.module.css\";\nimport WidgetName from \"./widgetName\";\nimport LayoutControls from \"./layoutControls\";\nimport ReferenceTrigger from \"./referenceTrigger\";\nimport { CodeTemplates } from \"./CodeTemplates\";\n\nexport default function Header() {\n  return (\n    <>\n      <div className={styles.headerControlsLeft}>\n        <WidgetName />\n        <CodeTemplates />\n        <LayoutControls />\n      </div>\n      <div className={styles.headerControlsRight}>\n        <ReferenceTrigger />\n      </div>\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"styles_loader__PEqWv\"};","import React, { useContext, useState } from \"react\";\nimport \"codemirror/mode/htmlmixed/htmlmixed\";\nimport type { ContentProps } from \"./types\";\nimport {\n  CodeEditorBorder,\n  EditorModes,\n  EditorSize,\n  EditorTheme,\n  TabBehaviour,\n} from \"components/editorComponents/CodeEditor/EditorConfig\";\nimport { CustomWidgetBuilderContext } from \"../..\";\nimport LazyCodeEditor from \"components/editorComponents/LazyCodeEditor\";\nimport styles from \"./styles.module.css\";\nimport { Spinner } from \"design-system\";\nimport {\n  CUSTOM_WIDGET_FEATURE,\n  createMessage,\n} from \"@appsmith/constants/messages\";\n\nexport default function HTMLEditor(props: ContentProps) {\n  const [loading, setLoading] = useState(true);\n\n  const { showConnectionLostMessage, uncompiledSrcDoc, update } = useContext(\n    CustomWidgetBuilderContext,\n  );\n\n  const { height } = props;\n\n  return (\n    <div className={styles.wrapper}>\n      <LazyCodeEditor\n        border={CodeEditorBorder.NONE}\n        borderLess\n        className={\"js-editor\"}\n        disabled={showConnectionLostMessage}\n        focusElementName=\"custom-widget-html-editor\"\n        folding\n        height={height}\n        hideEvaluatedValue\n        ignoreAutoComplete\n        ignoreBinding\n        ignoreSlashCommand\n        input={{\n          value: uncompiledSrcDoc?.html,\n          onChange: (value) => {\n            update?.(\"html\", value);\n          },\n        }}\n        mode={EditorModes.HTMLMIXED}\n        onLoad={() => setLoading(false)}\n        placeholder={createMessage(\n          CUSTOM_WIDGET_FEATURE.builder.editor.html.placeholder,\n        )}\n        showLightningMenu={false}\n        showLineNumbers\n        size={EditorSize.EXTENDED}\n        tabBehaviour={TabBehaviour.INDENT}\n        theme={EditorTheme.LIGHT}\n      />\n      {loading && (\n        <div className={styles.loader} style={{ height }}>\n          <Spinner size=\"lg\" />\n        </div>\n      )}\n    </div>\n  );\n}\n","import React, { useContext, useMemo, useState } from \"react\";\nimport type { ContentProps } from \"./types\";\nimport {\n  CodeEditorBorder,\n  EditorModes,\n  EditorSize,\n  EditorTheme,\n  TabBehaviour,\n} from \"components/editorComponents/CodeEditor/EditorConfig\";\nimport { CustomWidgetBuilderContext } from \"../..\";\nimport LazyCodeEditor from \"components/editorComponents/LazyCodeEditor\";\nimport { Icon, Tooltip, Spinner } from \"design-system\";\nimport styles from \"./styles.module.css\";\nimport {\n  CUSTOM_WIDGET_FEATURE,\n  createMessage,\n} from \"@appsmith/constants/messages\";\nimport styled from \"styled-components\";\n\nconst StyledWrapper = styled.div`\n  position: relative;\n\n  span.cm-error {\n    color: #2d2006;\n  }\n`;\n\nexport function TitleControls() {\n  const { isReferenceOpen, model } = useContext(CustomWidgetBuilderContext);\n\n  const variableList = useMemo(() => {\n    return model\n      ? Object.entries(model)\n          .filter(([, value]) => {\n            return [\"string\", \"number\"].includes(typeof value);\n          })\n          .map(([key]) => {\n            return `--appsmith-model-${key}`;\n          })\n          .concat([\n            \"--appsmith-ui-width\",\n            \"--appsmith-ui-height\",\n            \"--appsmith-theme-primaryColor\",\n            \"--appsmith-theme-backgroundColor\",\n            \"--appsmith-theme-borderRadius\",\n            \"--appsmith-theme-boxShadow\",\n          ])\n      : [];\n  }, [model]);\n\n  return (\n    <Tooltip\n      content={\n        <ol>\n          <li className=\"mb-1\">\n            -{\" \"}\n            {createMessage(\n              CUSTOM_WIDGET_FEATURE.builder.editor.css.contextTooltipScss,\n            )}\n          </li>\n          <li>\n            <div>\n              -{\" \"}\n              {createMessage(\n                CUSTOM_WIDGET_FEATURE.builder.editor.css\n                  .contextTooltipVariables,\n              )}\n            </div>\n            <ol className=\"ml-3\">\n              {variableList.map((value, index) => (\n                <li key={index}>{value}</li>\n              ))}\n            </ol>\n          </li>\n        </ol>\n      }\n      placement={isReferenceOpen ? \"bottom\" : \"left\"}\n    >\n      <Icon name=\"question\" size=\"md\" />\n    </Tooltip>\n  );\n}\n\nexport default function CSSEditor(props: ContentProps) {\n  const [loading, setLoading] = useState(true);\n\n  const { showConnectionLostMessage, uncompiledSrcDoc, update } = useContext(\n    CustomWidgetBuilderContext,\n  );\n\n  const { height } = props;\n\n  return (\n    <StyledWrapper>\n      <LazyCodeEditor\n        border={CodeEditorBorder.NONE}\n        borderLess\n        className={\"js-editor\"}\n        disabled={showConnectionLostMessage}\n        focusElementName=\"custom-widget-css-editor\"\n        folding\n        height={height}\n        hideEvaluatedValue\n        ignoreAutoComplete\n        ignoreBinding\n        ignoreSlashCommand\n        input={{\n          value: uncompiledSrcDoc?.css,\n          onChange: (value) => {\n            update?.(\"css\", value);\n          },\n        }}\n        mode={EditorModes.CSS}\n        onLoad={() => setLoading(false)}\n        placeholder={createMessage(\n          CUSTOM_WIDGET_FEATURE.builder.editor.css.placeholder,\n        )}\n        showLightningMenu={false}\n        showLineNumbers\n        size={EditorSize.EXTENDED}\n        tabBehaviour={TabBehaviour.INDENT}\n        theme={EditorTheme.LIGHT}\n      />\n      {loading && (\n        <div className={styles.loader} style={{ height }}>\n          <Spinner size=\"lg\" />\n        </div>\n      )}\n    </StyledWrapper>\n  );\n}\n","export const CUSTOM_WIDGET_LOAD_EVENTS = {\n  STARTED: \"started\",\n  DOM_CONTENTED_LOADED: \"DOMContentLoaded\",\n  COMPLETED: \"completed\",\n};\n\nexport const getAppsmithScriptSchema = (model: Record<string, unknown>) => ({\n  appsmith: {\n    mode: \"\",\n    model: model,\n    ui: {\n      width: 1,\n      height: 2,\n    },\n    theme: {\n      primaryColor: \"\",\n      backgroundColor: \"\",\n      borderRadius: \"\",\n      boxShadow: \"\",\n    },\n    onUiChange: Function,\n    onModelChange: Function,\n    onThemeChange: Function,\n    updateModel: Function,\n    triggerEvent: Function,\n    onReady: Function,\n  },\n});\n","import React, { useContext, useEffect, useMemo, useState } from \"react\";\nimport type { ContentProps } from \"./types\";\nimport styles from \"./styles.module.css\";\nimport {\n  CodeEditorBorder,\n  EditorModes,\n  EditorSize,\n  EditorTheme,\n  TabBehaviour,\n} from \"components/editorComponents/CodeEditor/EditorConfig\";\nimport { CustomWidgetBuilderContext } from \"../..\";\nimport LazyCodeEditor from \"components/editorComponents/LazyCodeEditor\";\nimport { getAppsmithScriptSchema } from \"widgets/CustomWidget/component/constants\";\n// import { DebuggerLogType } from \"../../types\";\n// import { PropertyEvaluationErrorType } from \"utils/DynamicBindingUtils\";\n// import { Severity } from \"entities/AppsmithConsole\";\nimport CodemirrorTernService from \"utils/autocomplete/CodemirrorTernService\";\nimport { Spinner } from \"design-system\";\nimport {\n  CUSTOM_WIDGET_FEATURE,\n  createMessage,\n} from \"@appsmith/constants/messages\";\nimport { DebuggerLogType } from \"../../types\";\nimport type { LintError } from \"utils/DynamicBindingUtils\";\nimport { PropertyEvaluationErrorType } from \"utils/DynamicBindingUtils\";\nimport { Severity } from \"entities/AppsmithConsole\";\nimport { isUndefined } from \"lodash\";\n\nexport default function JSEditor(props: ContentProps) {\n  const [loading, setLoading] = useState(true);\n\n  const {\n    debuggerLogs,\n    model,\n    showConnectionLostMessage,\n    uncompiledSrcDoc,\n    update,\n  } = useContext(CustomWidgetBuilderContext);\n\n  const { height } = props;\n\n  const errors: LintError[] = useMemo(() => {\n    return debuggerLogs\n      ? debuggerLogs\n          .filter((d) => d.type === DebuggerLogType.ERROR)\n          .map((d) => d.args)\n          .flat()\n          .filter((d) => !isUndefined(d.line) && !isUndefined(d.column))\n          .map((d) => ({\n            errorType: PropertyEvaluationErrorType.LINT,\n            raw: uncompiledSrcDoc?.js || \"\",\n            severity: Severity.ERROR,\n            errorMessage: {\n              name: \"LintingError\",\n              message: d.message as string,\n            },\n            errorSegment: uncompiledSrcDoc?.js || \"\",\n            originalBinding: uncompiledSrcDoc?.js || \"\",\n            variables: [],\n            code: \"\",\n            line: d.line ? d.line - 1 : 1,\n            ch: d.column ? d.column + 2 : 1,\n          }))\n      : [];\n  }, [debuggerLogs]);\n\n  useEffect(() => {\n    [\"LIB/node-forge\", \"LIB/moment\", \"base64-js\", \"LIB/lodash\"].forEach((d) => {\n      CodemirrorTernService.removeDef(d);\n    });\n  }, []);\n\n  return (\n    <div className={styles.wrapper}>\n      <LazyCodeEditor\n        additionalDynamicData={getAppsmithScriptSchema(model || {})}\n        border={CodeEditorBorder.NONE}\n        borderLess\n        className={\"js-editor\"}\n        customErrors={errors}\n        dataTreePath={\"customwidget.js\"}\n        disabled={showConnectionLostMessage}\n        focusElementName=\"custom-widget-js-editor\"\n        folding\n        height={height}\n        hideEvaluatedValue\n        ignoreSlashCommand\n        input={{\n          value: uncompiledSrcDoc?.js,\n          onChange: (value) => {\n            update?.(\"js\", value);\n          },\n        }}\n        mode={EditorModes.JAVASCRIPT}\n        onLoad={() => setLoading(false)}\n        placeholder={createMessage(\n          CUSTOM_WIDGET_FEATURE.builder.editor.js.placeholder,\n        )}\n        showLightningMenu={false}\n        showLineNumbers\n        size={EditorSize.EXTENDED}\n        tabBehaviour={TabBehaviour.INDENT}\n        theme={EditorTheme.LIGHT}\n      />\n      {loading && (\n        <div className={styles.loader} style={{ height }}>\n          <Spinner size=\"lg\" />\n        </div>\n      )}\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"references\":\"styles_references__wYn5c\",\"collapsible\":\"styles_collapsible__IKxW+\",\"collapsibleHeader\":\"styles_collapsibleHeader__MHoCE\",\"collapsibleBody\":\"styles_collapsibleBody__0JgqZ\",\"collapsibleTitle\":\"styles_collapsibleTitle__yAlIt\",\"collapsibleIcon\":\"styles_collapsibleIcon__qct6s\",\"marginTop\":\"styles_marginTop__BOAb1\",\"events\":\"styles_events__QC7GO\",\"event\":\"styles_event__WA9iw\",\"eventName\":\"styles_eventName__U6r3-\",\"eventLabel\":\"styles_eventLabel__UPvbf\",\"eventControl\":\"styles_eventControl__wrtdT\",\"eventValue\":\"styles_eventValue__2apym\",\"eventValueDefault\":\"styles_eventValueDefault__srl1m\",\"switchTransientMode\":\"styles_switchTransientMode__OEoSW\",\"noMargin\":\"styles_noMargin__Wjwcu\"};","import React, { useState } from \"react\";\nimport styles from \"./styles.module.css\";\nimport { Icon, Tooltip } from \"design-system\";\n\ninterface Props {\n  label: string;\n  defaultOpen?: boolean;\n  helpMessage?: React.ReactNode;\n  children: React.ReactNode;\n}\n\nexport default function Collapsible(props: Props) {\n  const [open, setOpen] = useState(props.defaultOpen ?? true);\n\n  return (\n    <div className={styles.collapsible}>\n      <div\n        className={styles.collapsibleHeader}\n        onClick={() => {\n          setOpen(!open);\n        }}\n      >\n        <div className={styles.collapsibleTitle}>\n          {props.label}\n          {props.helpMessage && (\n            <Tooltip content={props.helpMessage}>\n              <Icon name=\"question\" size=\"md\" />\n            </Tooltip>\n          )}\n        </div>\n        <div className={styles.collapsibleIcon}>\n          <Icon\n            name={open ? \"arrow-down-s-line\" : \"arrow-up-s-line\"}\n            size=\"md\"\n          />\n        </div>\n      </div>\n      {open && <div className={styles.collapsibleBody}>{props.children}</div>}\n    </div>\n  );\n}\n","import { Button, Text } from \"design-system\";\nimport styles from \"./styles.module.css\";\nimport React from \"react\";\nimport {\n  CUSTOM_WIDGET_FEATURE,\n  createMessage,\n} from \"@appsmith/constants/messages\";\nimport { CUSTOM_WIDGET_DOC_URL } from \"../../constants\";\n\nexport default function Help() {\n  return (\n    <div>\n      <Text\n        color=\"#6A7585\"\n        renderAs=\"p\"\n        style={{\n          lineHeight: \"18px\",\n        }}\n      >\n        {createMessage(CUSTOM_WIDGET_FEATURE.referrences.help.message)}\n      </Text>\n      <Button\n        className={styles.marginTop}\n        href={CUSTOM_WIDGET_DOC_URL}\n        kind=\"secondary\"\n        renderAs=\"a\"\n        size=\"md\"\n        startIcon=\"book\"\n        target=\"_blank\"\n      >\n        {createMessage(CUSTOM_WIDGET_FEATURE.referrences.help.buttonCTA)}\n      </Button>\n    </div>\n  );\n}\n","import React, { useContext } from \"react\";\nimport ReactJson from \"react-json-view\";\nimport { CustomWidgetBuilderContext } from \"../..\";\n\nexport default function ModelVariables() {\n  const reactJsonProps = {\n    theme: \"rjv-default\",\n    name: null,\n    enableClipboard: false,\n    displayObjectSize: false,\n    displayDataTypes: false,\n    style: {\n      fontSize: \"12px\",\n      width: \"100%\",\n      overflow: \"auto\",\n      marginTop: \"10px\",\n      \"word-break\": \"break-word\",\n    },\n    collapsed: 1,\n    shouldCollapse: (field: any) => {\n      const index = field.name * 1;\n      return index >= 1;\n    },\n    indentWidth: 1,\n  };\n\n  const { model } = useContext(CustomWidgetBuilderContext);\n\n  return <ReactJson src={model} {...reactJsonProps} />;\n}\n","import React, { useCallback, useContext, useState } from \"react\";\nimport styles from \"./styles.module.css\";\nimport { Icon, Text } from \"design-system\";\nimport {\n  EditorModes,\n  EditorSize,\n  EditorTheme,\n  TabBehaviour,\n} from \"components/editorComponents/CodeEditor/EditorConfig\";\nimport { CustomWidgetBuilderContext } from \"../..\";\nimport LazyCodeEditor from \"components/editorComponents/LazyCodeEditor\";\nimport styled from \"styled-components\";\nimport {\n  CUSTOM_WIDGET_FEATURE,\n  createMessage,\n} from \"@appsmith/constants/messages\";\nimport AnalyticsUtil from \"@appsmith/utils/AnalyticsUtil\";\n\nconst StyledLazyCodeEditorWrapper = styled.div`\n  .CodeMirror-line.CodeMirror-line {\n    padding-left: 0;\n  }\n\n  & .CodeMirror.CodeMirror {\n    border: none !important;\n    pointer-events: none;\n  }\n\n  & .LazyCodeEditor pre {\n    padding-left: 0px !important;\n  }\n`;\n\nexport default function Events() {\n  const { events, widgetId } = useContext(CustomWidgetBuilderContext);\n\n  const [openState, setOpenState] = useState<Record<string, boolean>>({});\n\n  const toggleOpen = useCallback((event: string) => {\n    AnalyticsUtil.logEvent(\"CUSTOM_WIDGET_BUILDER_REFERENCE_EVENT_OPENED\", {\n      widgetId: widgetId,\n      eventName: event,\n    });\n\n    setOpenState((prev) => {\n      return {\n        ...prev,\n        [event]: !prev[event],\n      };\n    });\n  }, []);\n\n  return (\n    <div className={styles.events}>\n      {events &&\n        Object.keys(events)?.map((event) => {\n          return (\n            <div className={styles.event} key={event}>\n              <div className={styles.eventName}>\n                <div\n                  className={styles.eventLabel}\n                  onClick={() => toggleOpen(event)}\n                >\n                  {event}\n                </div>\n                <div\n                  className={styles.eventControl}\n                  onClick={() => toggleOpen(event)}\n                >\n                  <Icon\n                    name={\n                      openState[event] ? \"arrow-down-s-line\" : \"arrow-up-s-line\"\n                    }\n                    size=\"md\"\n                  />\n                </div>\n              </div>\n              {openState[event] && (\n                <StyledLazyCodeEditorWrapper className={styles.eventValue}>\n                  <LazyCodeEditor\n                    borderLess\n                    evaluatedValue={events[event]}\n                    hideEvaluatedValue\n                    input={{\n                      value: events[event],\n                    }}\n                    isReadOnly\n                    mode={EditorModes.TEXT_WITH_BINDING}\n                    placeholder=\"No action\"\n                    positionCursorInsideBinding\n                    showCustomToolTipForHighlightedText={false}\n                    showLightningMenu={false}\n                    size={EditorSize.EXTENDED}\n                    tabBehaviour={TabBehaviour.INDENT}\n                    theme={EditorTheme.LIGHT}\n                  />\n                </StyledLazyCodeEditorWrapper>\n              )}\n            </div>\n          );\n        })}\n      {events && Object.keys(events).length === 0 && (\n        <Text\n          color=\"#6A7585\"\n          renderAs=\"p\"\n          style={{\n            lineHeight: \"18px\",\n          }}\n        >\n          {createMessage(CUSTOM_WIDGET_FEATURE.referrences.events.emptyMessage)}\n        </Text>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport styles from \"./styles.module.css\";\nimport Collapsible from \"./collapsible\";\nimport Help from \"./help\";\nimport LiveModel from \"./liveModel\";\nimport Events from \"./events\";\nimport {\n  CUSTOM_WIDGET_FEATURE,\n  createMessage,\n} from \"@appsmith/constants/messages\";\n\nexport default function References() {\n  return (\n    <div className={styles.references}>\n      <Collapsible\n        helpMessage={\n          <ol>\n            <li>\n              {createMessage(\n                CUSTOM_WIDGET_FEATURE.referrences.liveModel.helpMessage[0],\n              )}\n            </li>\n            <li>\n              {createMessage(\n                CUSTOM_WIDGET_FEATURE.referrences.liveModel.helpMessage[1],\n              )}\n            </li>\n          </ol>\n        }\n        label={createMessage(CUSTOM_WIDGET_FEATURE.referrences.liveModel.label)}\n      >\n        <LiveModel />\n      </Collapsible>\n      <Collapsible\n        helpMessage={\n          <ol>\n            <li>\n              {createMessage(\n                CUSTOM_WIDGET_FEATURE.referrences.events.helpMessage[0],\n              )}\n            </li>\n            <li>\n              {createMessage(\n                CUSTOM_WIDGET_FEATURE.referrences.events.helpMessage[1],\n              )}\n            </li>\n          </ol>\n        }\n        label={createMessage(CUSTOM_WIDGET_FEATURE.referrences.events.label)}\n      >\n        <Events />\n      </Collapsible>\n      <Collapsible label=\"Help\">\n        <Help />\n      </Collapsible>\n    </div>\n  );\n}\n","import React, { useContext } from \"react\";\nimport styles from \"./styles.module.css\";\nimport Layout from \"./Layouts\";\nimport Header from \"./Header\";\nimport { CustomWidgetBuilderContext } from \"..\";\nimport HTMLEditor from \"./CodeEditors/HTMLEditor\";\nimport StyleEditor, { TitleControls } from \"./CodeEditors/StyleEditor\";\nimport JSEditor from \"./CodeEditors/JSEditor\";\nimport type { ContentProps } from \"./CodeEditors/types\";\nimport References from \"./References\";\n\nexport default function Editor() {\n  const { isReferenceOpen } = useContext(CustomWidgetBuilderContext);\n\n  return (\n    <div>\n      <div className={styles.headerControls}>\n        <Header />\n      </div>\n      <div className={styles.contentRightBody}>\n        <Layout\n          content={[\n            {\n              title: \"HTML\",\n              children: (props: ContentProps) => <HTMLEditor {...props} />,\n            },\n            {\n              title: \"Style\",\n              titleControls: <TitleControls />,\n              children: (props: ContentProps) => <StyleEditor {...props} />,\n            },\n            {\n              title: \"Javascript\",\n              children: (props: ContentProps) => <JSEditor {...props} />,\n            },\n          ]}\n        />\n        {isReferenceOpen && <References />}\n      </div>\n    </div>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { CustomWidgetBuilderContext } from \".\";\nimport styles from \"./styles.module.css\";\n\nexport default function ConnectionLost() {\n  const { showConnectionLostMessage } = useContext(CustomWidgetBuilderContext);\n\n  if (showConnectionLostMessage) {\n    return <div className={styles.connectionLostContainer} />;\n  } else {\n    return null;\n  }\n}\n","import { transform } from \"@babel/standalone/\";\nimport type { DebuggerLogItem, SrcDoc } from \"./types\";\nimport {\n  CUSTOM_WIDGET_FEATURE,\n  createMessage,\n} from \"@appsmith/constants/messages\";\nimport { CUSTOM_WIDGET_ONREADY_DOC_URL } from \"./constants\";\nimport { compileString } from \"sass\";\n\ninterface CompiledResult {\n  code: SrcDoc;\n  warnings: DebuggerLogItem[];\n  errors: DebuggerLogItem[];\n}\n\nexport const compileSrcDoc = (srcDoc: SrcDoc): CompiledResult => {\n  const compiledResult: CompiledResult = {\n    code: srcDoc,\n    warnings: [],\n    errors: [],\n  };\n\n  checkForWarnings(compiledResult);\n\n  try {\n    const result = transform(srcDoc.js, {\n      sourceType: \"module\",\n      presets: [\"react\"],\n      targets: {\n        esmodules: true,\n      },\n    });\n\n    compiledResult.code = {\n      ...compiledResult.code,\n      js: result?.code || \"\",\n    };\n  } catch (e) {\n    compiledResult.errors.push(getError(e as BabelError));\n  }\n\n  try {\n    compiledResult.code = {\n      ...compiledResult.code,\n      css: compileString(srcDoc.css).css || \"\",\n    };\n  } catch (e) {\n    compiledResult.warnings.push(getError(e as BabelError));\n  }\n\n  return compiledResult;\n};\n\nfunction checkForWarnings(compiledResult: CompiledResult) {\n  const code = compiledResult.code.js;\n\n  if (code?.length > 0) {\n    /*\n     * Check whether the code has an onReady function.\n     * We are keeping this check as a simple string check instead of using AST\n     * because we want to keep the custom widget compile process as simple as possible.\n     */\n    !code.match(/appsmith[\\n\\t\\s]*\\.[\\n\\t\\s]*onReady[\\n\\t\\s]*\\(/) &&\n      compiledResult.warnings.push({\n        message: createMessage(\n          CUSTOM_WIDGET_FEATURE.debugger.noOnReadyWarning,\n          CUSTOM_WIDGET_ONREADY_DOC_URL,\n        ),\n      });\n  }\n}\n\nexport interface BabelError {\n  reasonCode: string;\n  message: string;\n  loc: {\n    line: number;\n    column: number;\n  };\n}\n\nexport const getError = (e: BabelError): DebuggerLogItem => {\n  return {\n    line: e?.loc?.line,\n    column: e?.loc?.column,\n    message: e?.toString(),\n  };\n};\n","import { useCallback, useEffect, useMemo, useState } from \"react\";\nimport {\n  CUSTOM_WIDGET_BUILDER_EVENTS,\n  DEFAULT_CONTEXT_VALUE,\n  LOCAL_STORAGE_KEYS_IS_REFERENCE_OPEN,\n  LOCAL_STORAGE_KEYS_SELECTED_LAYOUT,\n} from \"./constants\";\nimport history from \"utils/history\";\nimport useLocalStorageState from \"utils/hooks/useLocalStorageState\";\nimport {\n  DebuggerLogType,\n  type CustomWidgetBuilderContextFunctionType,\n  type CustomWidgetBuilderContextValueType,\n  type DebuggerLog,\n  type SrcDoc,\n  type CustomWidgetBuilderContextType,\n} from \"./types\";\nimport { compileSrcDoc } from \"./utility\";\nimport AnalyticsUtil from \"@appsmith/utils/AnalyticsUtil\";\n\nlet connectionTimeout: number;\n\nexport function useCustomBuilder(): [CustomWidgetBuilderContextType, boolean] {\n  const [loading, setLoading] = useState(true);\n\n  const [isReferenceOpen, setIsReferenceOpen] = useLocalStorageState<boolean>(\n    LOCAL_STORAGE_KEYS_IS_REFERENCE_OPEN,\n    true,\n  );\n\n  const [selectedLayout, setSelectedLayout] = useLocalStorageState<string>(\n    LOCAL_STORAGE_KEYS_SELECTED_LAYOUT,\n    \"tabs\",\n  );\n\n  const [contextValue, setContextValue] =\n    useState<CustomWidgetBuilderContextValueType>(DEFAULT_CONTEXT_VALUE);\n\n  useEffect(() => {\n    const result = compileSrcDoc(contextValue.uncompiledSrcDoc);\n\n    setContextValue((prev) => {\n      return {\n        ...prev,\n        srcDoc: result.code,\n      };\n    });\n\n    if (contextValue.lastSaved) {\n      window.opener?.postMessage(\n        {\n          type: CUSTOM_WIDGET_BUILDER_EVENTS.UPDATE_SRCDOC,\n          srcDoc: result.code,\n          uncompiledSrcDoc: contextValue.uncompiledSrcDoc,\n        },\n        \"*\",\n      );\n    }\n\n    const compileLogs: DebuggerLog[] = [];\n\n    if (result.errors.length) {\n      compileLogs.push({\n        type: DebuggerLogType.ERROR,\n        args: result.errors,\n      });\n    }\n\n    if (result.warnings.length) {\n      compileLogs.push({\n        type: DebuggerLogType.WARN,\n        args: result.warnings,\n      });\n    }\n\n    setContextValue((prev) => ({\n      ...prev,\n      debuggerLogs: [...compileLogs],\n    }));\n  }, [contextValue.uncompiledSrcDoc, contextValue.lastSaved]);\n\n  const replay = useCallback(() => {\n    setContextValue((prev) => {\n      return {\n        ...prev,\n        key: Math.random(),\n      };\n    });\n  }, []);\n\n  const contextFunctions: CustomWidgetBuilderContextFunctionType = useMemo(\n    () => ({\n      toggleReference: () => {\n        setIsReferenceOpen(!isReferenceOpen);\n      },\n      selectLayout: (layout) => {\n        setSelectedLayout(layout);\n      },\n      close: () => {\n        window.opener?.focus();\n        window.close();\n      },\n      bulkUpdate: (uncompiledSrcDoc: SrcDoc) => {\n        setContextValue((prev) => {\n          return {\n            ...prev,\n            uncompiledSrcDoc,\n            lastSaved: Date.now(),\n          };\n        });\n      },\n      update: (editor, value) => {\n        setContextValue((prev) => {\n          return {\n            ...prev,\n            uncompiledSrcDoc: {\n              ...prev.uncompiledSrcDoc,\n              [editor]: value,\n            },\n            lastSaved: Date.now(),\n          };\n        });\n\n        AnalyticsUtil.logEvent(\"CUSTOM_WIDGET_BUILDER_SRCDOC_UPDATE\", {\n          widgetId: contextValue.widgetId,\n          srcDocFile: editor,\n        });\n      },\n      updateModel: (model: Record<string, unknown>) => {\n        setContextValue((prev) => {\n          return {\n            ...prev,\n            model: {\n              ...prev.model,\n              ...model,\n            },\n          };\n        });\n      },\n      updateDebuggerLogs: (log: DebuggerLog) => {\n        setContextValue((prev) => {\n          return {\n            ...prev,\n            debuggerLogs: [...prev.debuggerLogs, log],\n          };\n        });\n      },\n      clearDegbuggerLogs: () => {\n        setContextValue((prev) => {\n          return {\n            ...prev,\n            debuggerLogs: [],\n          };\n        });\n      },\n    }),\n    [\n      contextValue.uncompiledSrcDoc,\n      setIsReferenceOpen,\n      isReferenceOpen,\n      setSelectedLayout,\n    ],\n  );\n\n  const context = useMemo(\n    () => ({\n      ...contextValue,\n      isReferenceOpen,\n      selectedLayout,\n      ...contextFunctions,\n    }),\n    [contextValue, contextFunctions, isReferenceOpen, selectedLayout],\n  );\n\n  useEffect(replay, [contextValue.srcDoc]);\n\n  useEffect(() => {\n    window.addEventListener(\"message\", (event: any) => {\n      switch (event.data.type) {\n        case CUSTOM_WIDGET_BUILDER_EVENTS.READY_ACK:\n          connectionTimeout && clearTimeout(connectionTimeout);\n          setContextValue((prev) => {\n            return {\n              ...prev,\n              name: event.data.name,\n              widgetId: event.data.widgetId,\n              srcDoc: event.data.srcDoc,\n              uncompiledSrcDoc: event.data.uncompiledSrcDoc,\n              initialSrcDoc: event.data.uncompiledSrcDoc,\n              model: event.data.model,\n              events: event.data.events,\n              theme: event.data.theme,\n            };\n          });\n          setLoading(false);\n          break;\n        case CUSTOM_WIDGET_BUILDER_EVENTS.UPDATE_REFERENCES:\n          setContextValue((prev) => {\n            return {\n              ...prev,\n              name: event.data.name,\n              model: event.data.model,\n              events: event.data.events,\n              theme: event.data.theme,\n            };\n          });\n          replay();\n          break;\n        case CUSTOM_WIDGET_BUILDER_EVENTS.PAUSE:\n          setContextValue((prev) => {\n            return {\n              ...prev,\n              showConnectionLostMessage: true,\n            };\n          });\n          break;\n        case CUSTOM_WIDGET_BUILDER_EVENTS.RESUME:\n          setContextValue((prev) => {\n            return {\n              ...prev,\n              showConnectionLostMessage: false,\n              name: event.data.name,\n              widgetId: event.data.widgetId,\n              srcDoc: event.data.srcDoc,\n              uncompiledSrcDoc: event.data.uncompiledSrcDoc,\n              initialSrcDoc: event.data.uncompiledSrcDoc,\n              model: event.data.model,\n              events: event.data.events,\n              theme: event.data.theme,\n            };\n          });\n          break;\n      }\n    });\n\n    window.opener?.postMessage(\n      {\n        type: CUSTOM_WIDGET_BUILDER_EVENTS.READY,\n      },\n      \"*\",\n    );\n\n    window.addEventListener(\"beforeunload\", () => {\n      window.opener?.postMessage(\n        {\n          type: CUSTOM_WIDGET_BUILDER_EVENTS.DISCONNECTED,\n        },\n        \"*\",\n      );\n    });\n\n    // if connection cannot be made, redirect to editor\n    connectionTimeout = setTimeout(() => {\n      history.replace(window.location.pathname.replace(\"/builder\", \"\"));\n    }, 4000);\n  }, []);\n\n  return [context, loading];\n}\n","import React, { useCallback, useEffect, useRef } from \"react\";\nimport Header from \"./header\";\nimport styles from \"./styles.module.css\";\nimport Preview from \"./Preview\";\nimport { Spinner } from \"design-system\";\nimport Editor from \"./Editor\";\nimport type { CustomWidgetBuilderContextType } from \"./types\";\nimport ConnectionLost from \"./connectionLost\";\nimport Helmet from \"react-helmet\";\nimport { useCustomBuilder } from \"./useCustomBuilder\";\nimport { tailwindLayers } from \"constants/Layers\";\nimport useHorizontalResize from \"utils/hooks/useHorizontalResize\";\nimport styled from \"styled-components\";\nimport classNames from \"classnames\";\nimport useLocalStorageState from \"utils/hooks/useLocalStorageState\";\n\nexport const CustomWidgetBuilderContext = React.createContext<\n  Partial<CustomWidgetBuilderContextType>\n>({});\n\nconst ResizerHandler = styled.div<{ resizing: boolean }>`\n  width: 6px;\n  height: 100%;\n  margin-left: 2px;\n  border-right: 1px solid var(--ads-v2-color-border);\n  background: ${(props) =>\n    props.resizing ? \"var(--ads-v2-color-border)\" : \"transparent\"};\n  &:hover {\n    background: var(--ads-v2-color-border);\n    border-color: transparent;\n  }\n`;\n\nconst Overlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n`;\n\nconst EDITOR_WIDTH_KEY = \"CUSTOM_WIDGET_BUILDER_EDITOR_WIDTH\";\n\nexport default function CustomWidgetBuilder() {\n  const [context, loading] = useCustomBuilder();\n\n  const [editorWidth, setEditorWidth] = useLocalStorageState(\n    EDITOR_WIDTH_KEY,\n    window.innerWidth * 0.5,\n  );\n\n  const editorRef = useRef<HTMLDivElement>(null);\n\n  const previewRef = useRef<HTMLDivElement>(null);\n\n  const onResize = useCallback((newWidth) => {\n    if (editorRef.current && previewRef.current) {\n      const widthPercentage = (newWidth / window.innerWidth) * 100;\n\n      editorRef.current.style.width = `${widthPercentage}%`;\n      previewRef.current.style.width = `${100 - widthPercentage}%`;\n\n      setEditorWidth(newWidth);\n    }\n  }, []);\n\n  useEffect(() => {\n    onResize(editorWidth);\n  }, [editorRef.current, previewRef.current]);\n\n  const { onMouseDown, onMouseUp, onTouchStart, resizing } =\n    useHorizontalResize(editorRef, onResize, undefined, true);\n\n  return (\n    <CustomWidgetBuilderContext.Provider value={context}>\n      <Helmet>\n        <meta charSet=\"utf-8\" />\n        <title>{`${context.name} | Builder | Appsmith`}</title>\n      </Helmet>\n      <Header />\n      {loading ? (\n        <Spinner className={styles.loader} size=\"lg\" />\n      ) : (\n        <div className={styles.content}>\n          <div className={styles.contentLeft} ref={previewRef}>\n            {resizing && <Overlay />}\n            <Preview width={editorWidth} />\n          </div>\n          <div\n            className={`w-2 h-full -ml-2 group  cursor-ew-resize ${tailwindLayers.resizer}`}\n            onMouseDown={onMouseDown}\n            onTouchEnd={onMouseUp}\n            onTouchStart={onTouchStart}\n          >\n            <ResizerHandler\n              className={classNames({\n                \"transform transition\": true,\n              })}\n              resizing={resizing}\n            />\n          </div>\n          <div className={styles.contentRight} ref={editorRef}>\n            <Editor />\n          </div>\n        </div>\n      )}\n      <ConnectionLost />\n    </CustomWidgetBuilderContext.Provider>\n  );\n}\n\nexport { Header as CustomWidgetBuilderHeader };\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 74057;\nmodule.exports = webpackEmptyContext;"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","id","module","exports","Profile","styled","_templateObject","_taggedTemplateLiteral","props","size","backgroundColor","Colors","HeaderWrapper","theme","smallHeaderHeight","getTypographyByKey","colors","header","appName","HeaderSection","_templateObject2","getTheme","ThemeMode","Header","_useContext","useContext","CustomWidgetBuilderContext","close","showConnectionLostMessage","_jsx","ThemeProvider","children","_jsxs","className","styles","AppsmithLink","Text","kind","createMessage","CUSTOM_WIDGET_FEATURE","clsx","_Fragment","color","Icon","name","style","Button","onClick","HelpDropdown","_args$","args","errorMessage","message","Popover","PopoverTrigger","startIcon","PopoverContent","List","items","title","window","open","CUSTOM_WIDGET_DOC_URL","description","descriptionType","concat","encodeURIComponent","DebuggerLogType","LOG","INFO","WARN","ERROR","ObjectView","ReactJson","_objectSpread","src","value","enableClipboard","displayObjectSize","displayDataTypes","fontSize","collapsed","shouldCollapse","field","indentWidth","StyledSpan","type","getIcon","getContent","map","d","i","Object","JSON","stringify","getBackgroundColor","DebuggerItem","background","Counter","error","log","warn","localStorage","LocalStorage","useLocalStorageState","key","initialValue","_useState","useState","getItem","parse","_useState2","_slicedToArray","storedValue","setStoredValue","useCallback","newValue","setItem","LOCAL_STORAGE_KEYS_IS_DEBUGGER_OPEN","Debugger","scrollToRef","React","_useLocalStorageState","_useLocalStorageState2","setOpen","clearDegbuggerLogs","debuggerLogs","widgetId","useEffect","_scrollToRef$current","current","scrollIntoView","behavior","toggle","AnalyticsUtil","visible","filter","length","Tooltip","content","cursor","Tabs","TabsList","Tab","TabPanel","index","BugIcon","ref","Preview","_ref","_containerRef$current3","width","model","srcDoc","updateDebuggerLogs","updateModel","height","dimensions","setDimensions","containerRef","useRef","_containerRef$current","clientWidth","innerHeight","getBoundingClientRect","top","handleResize","_containerRef$current2","addEventListener","removeEventListener","CustomComponent","dynamicHeight","DynamicHeight","execute","contextObject","toast","minDynamicHeight","onConsole","renderMode","html","js","css","update","data","LOCAL_STORAGE_KEYS","TabLayout","tabs","selectedTab","setSelectedTab","find","_React$useState","_React$useState2","setHeight","loading","setLoading","handler","selectedTabObject","onValueChange","tab","setTimeout","titleControls","HEADER_HEIGHT","CUSTOM_WIDGET_SPLIT_VIEW_VISIBILITY","SplitLayout","rows","_useLocalStorage","item","valueToStore","Function","useLocalStorage","Array","fill","_useLocalStorage2","isRowCollapsed","setIsRowCollapsed","computedHeight","useMemo","expandedRows","row","classNames","_set","_toConsumableArray","Layout","context","layout","selectedLayout","isReferenceOpen","WidgetName","StyledSegmentedControl","SegmentedControl","LayoutControls","selectLayout","onChange","layoutName","options","label","ReferenceTrigger","toggleReference","placement","uncompiledSrcDoc","CUSTOM_WIDGET_ONREADY_DOC_URL","StyledButton","ConfirmationModal","Modal","onOpenChange","flag","ModalContent","ModalHeader","ModalBody","ModalFooter","onCancel","onReplace","CodeTemplates","bulkUpdate","initialSrcDoc","lastSaved","_useState3","_useState4","selectedTemplate","setSelectedTemplate","_useState5","_useState6","selectedTemplateName","setSelectedTemplateName","Menu","MenuTrigger","MenuContent","MenuItem","templateName","MenuSeparator","codeTemplates","template","HTMLEditor","LazyCodeEditor","border","CodeEditorBorder","borderLess","disabled","focusElementName","folding","hideEvaluatedValue","ignoreAutoComplete","ignoreBinding","ignoreSlashCommand","input","mode","EditorModes","onLoad","placeholder","showLightningMenu","showLineNumbers","EditorSize","tabBehaviour","TabBehaviour","EditorTheme","Spinner","StyledWrapper","TitleControls","variableList","entries","includes","_ref3","CSSEditor","_useContext2","getAppsmithScriptSchema","appsmith","ui","primaryColor","borderRadius","boxShadow","onUiChange","onModelChange","onThemeChange","triggerEvent","onReady","JSEditor","errors","flat","_isUndefined","line","column","errorType","PropertyEvaluationErrorType","raw","severity","Severity","errorSegment","originalBinding","variables","ch","forEach","CodemirrorTernService","additionalDynamicData","customErrors","dataTreePath","Collapsible","_props$defaultOpen","defaultOpen","helpMessage","Help","renderAs","lineHeight","href","target","ModelVariables","overflow","marginTop","StyledLazyCodeEditorWrapper","Events","_Object$keys","events","openState","setOpenState","toggleOpen","event","eventName","prev","_defineProperty","evaluatedValue","isReadOnly","positionCursorInsideBinding","showCustomToolTipForHighlightedText","References","LiveModel","Editor","StyleEditor","ConnectionLost","compileSrcDoc","compiledResult","warnings","match","push","checkForWarnings","result","transform","sourceType","presets","targets","esmodules","getError","compileString","connectionTimeout","_e$loc","_e$loc2","loc","toString","ResizerHandler","resizing","Overlay","EDITOR_WIDTH_KEY","CustomWidgetBuilder","_useCustomBuilder","LOCAL_STORAGE_KEYS_IS_REFERENCE_OPEN","setIsReferenceOpen","_useLocalStorageState3","LOCAL_STORAGE_KEYS_SELECTED_LAYOUT","_useLocalStorageState4","setSelectedLayout","DEFAULT_CONTEXT_VALUE","contextValue","setContextValue","_window$opener","opener","postMessage","CUSTOM_WIDGET_BUILDER_EVENTS","compileLogs","replay","Math","random","contextFunctions","_window$opener2","focus","Date","now","editor","srcDocFile","_window$opener3","clearTimeout","_window$opener4","history","location","pathname","replace","useCustomBuilder","_useCustomBuilder2","innerWidth","editorWidth","setEditorWidth","editorRef","previewRef","onResize","newWidth","widthPercentage","_useHorizontalResize","useHorizontalResize","undefined","onMouseDown","onMouseUp","onTouchStart","Provider","Helmet","charSet","tailwindLayers","onTouchEnd"],"sourceRoot":""}