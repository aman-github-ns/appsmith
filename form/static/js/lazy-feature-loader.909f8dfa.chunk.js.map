{"version":3,"file":"static/js/lazy-feature-loader.909f8dfa.chunk.js","mappings":"iLAaO,SAASA,EAAkBC,EAAaC,GAC7C,GAAoB,cAAhBA,EACF,OAAQD,GACN,KAAKE,EAAAA,EAAAA,KACH,OAAO,yDACT,KAAKA,EAAAA,EAAAA,SACH,OAAO,yDACT,KAAKA,EAAAA,EAAAA,QACH,OAAO,wDACT,KAAKA,EAAAA,EAAAA,WACH,OAAO,yDACT,KAAKA,EAAAA,EAAAA,cACH,OAAO,mEACT,KAAKA,EAAAA,EAAAA,eACH,OAAO,mEACT,KAAKA,EAAAA,EAAAA,cACH,OAAO,yDACT,KAAKA,EAAAA,EAAAA,aACH,OAAO,wDACT,KAAKA,EAAAA,EAAAA,IACH,OAAO,mEACT,KAAKA,EAAAA,EAAAA,QACH,OAAO,mEACT,QACE,MAAM,IAAIC,MAAM,gDAAgDC,OAAOJ,EAAa,KAAKI,OAAOH,IAGxG,C","sources":["../node_modules/@newrelic/browser-agent/dist/esm/features/utils/lazy-feature-loader.js"],"sourcesContent":["import { FEATURE_NAMES } from '../../loaders/features/features';\n\n/**\n * Centralizes the lazy loading of agent feature aggregate and instrument sources.\n *\n * This function uses two defined switch cases to allow us to easily name our chunks and re-use these\n * chunks for different agent types. We do not use template strings or string concatenation here because\n * doing so makes it much more difficult to name the chunks and forces Webpack to \"guess\" what the chunks\n * should be.\n * @param featureName Name of the feature to import such as ajax or session_trace\n * @param featurePart Name of the feature part to load; should be either instrument or aggregate\n * @returns {Promise<InstrumentBase|FeatureBase|null>}\n */\nexport function lazyFeatureLoader(featureName, featurePart) {\n  if (featurePart === 'aggregate') {\n    switch (featureName) {\n      case FEATURE_NAMES.ajax:\n        return import( /* webpackChunkName: \"ajax-aggregate\" */'../ajax/aggregate');\n      case FEATURE_NAMES.jserrors:\n        return import( /* webpackChunkName: \"jserrors-aggregate\" */'../jserrors/aggregate');\n      case FEATURE_NAMES.metrics:\n        return import( /* webpackChunkName: \"metrics-aggregate\" */'../metrics/aggregate');\n      case FEATURE_NAMES.pageAction:\n        return import( /* webpackChunkName: \"page_action-aggregate\" */'../page_action/aggregate');\n      case FEATURE_NAMES.pageViewEvent:\n        return import( /* webpackChunkName: \"page_view_event-aggregate\" */'../page_view_event/aggregate');\n      case FEATURE_NAMES.pageViewTiming:\n        return import( /* webpackChunkName: \"page_view_timing-aggregate\" */'../page_view_timing/aggregate');\n      case FEATURE_NAMES.sessionReplay:\n        return import( /* webpackChunkName: \"session_replay-aggregate\" */'../session_replay/aggregate');\n      case FEATURE_NAMES.sessionTrace:\n        return import( /* webpackChunkName: \"session_trace-aggregate\" */'../session_trace/aggregate');\n      case FEATURE_NAMES.spa:\n        return import( /* webpackChunkName: \"spa-aggregate\" */'../spa/aggregate');\n      case FEATURE_NAMES.softNav:\n        return import( /* webpackChunkName: \"basic-spa-aggregate\" */'../soft_navigations/aggregate');\n      default:\n        throw new Error(\"Attempted to load unsupported agent feature: \".concat(featureName, \" \").concat(featurePart));\n    }\n  }\n}"],"names":["lazyFeatureLoader","featureName","featurePart","FEATURE_NAMES","Error","concat"],"sourceRoot":""}