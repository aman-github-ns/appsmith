{"version":3,"file":"static/js/charts.89cc4c7c.chunk.js","mappings":"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","sources":["utils/hooks/usePrevious.tsx","widgets/ChartWidget/component/CustomEChartIFrameComponent.tsx","widgets/ChartWidget/component/index.tsx"],"sourcesContent":["import { useEffect, useRef } from \"react\";\n\n// Make sure to use this hook at the start of functional component\nconst usePrevious = <T,>(value: T): T | undefined => {\n  const ref = useRef<T>();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n};\n\nexport default usePrevious;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport type { ChartComponentConnectedProps } from \".\";\nimport { chartOptions, dataClickCallbackHelper } from \"./helpers\";\nimport { ChartErrorComponent } from \"./ChartErrorComponent\";\nimport usePrevious from \"utils/hooks/usePrevious\";\nimport equal from \"fast-deep-equal/es6\";\n\nimport type * as echarts from \"echarts\";\nimport type {\n  CustomEChartClickEventData,\n  CustomEChartErrorData,\n  CustomEChartIFrameMessage,\n  CustomEChartIFrameMessageData,\n} from \"../constants\";\n\nexport const IframeContainer = styled.iframe`\n  position: relative;\n  height: 100%;\n  width: 100%;\n`;\n\nconst OverlayDiv = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n`;\n\n/**\n * TODO : Rajat to move src doc function into typescript file\n *  and a webpack plugin to convert it into srcdoc\n */\nexport function CustomEChartIFrameComponent(\n  props: ChartComponentConnectedProps,\n) {\n  const [errorMsg, setErrorMsg] = useState<string | undefined>(undefined);\n  const [errorStack, setErrorStack] = useState<string | undefined>(undefined);\n  const prevProps = usePrevious(props);\n  const iFrameRef = useRef<HTMLIFrameElement>(null);\n\n  const postMessageFn = (data: CustomEChartIFrameMessageData) => {\n    const iFrameWindow = iFrameRef.current?.contentWindow;\n    iFrameWindow?.postMessage(data, \"*\");\n  };\n\n  const onMessage = (event: MessageEvent) => {\n    const iFrameWindow = iFrameRef.current?.contentWindow;\n\n    if (!iFrameWindow || event.source != iFrameWindow) {\n      return;\n    }\n\n    const message: CustomEChartIFrameMessage = event.data;\n    switch (message.type) {\n      case \"click-event\": {\n        const messageData: CustomEChartClickEventData =\n          message.data as CustomEChartClickEventData;\n        dataClickCallbackHelper(messageData.event, props, \"CUSTOM_ECHART\");\n        break;\n      }\n      case \"load-complete\": {\n        postMessageFn({\n          options: chartOptions(\"CUSTOM_ECHART\", props),\n          shouldUpdateOptions: true,\n          shouldResize: false,\n          width: props.dimensions.componentWidth,\n          height: props.dimensions.componentHeight,\n        });\n        break;\n      }\n      case \"error\": {\n        const errorMessage: CustomEChartErrorData =\n          message.data as CustomEChartErrorData;\n        setErrorMsg(errorMessage.message);\n        setErrorStack(errorMessage.stack);\n        break;\n      }\n      default: {\n        return;\n      }\n    }\n  };\n\n  function shouldResizeECharts(\n    echartsInstance: echarts.ECharts,\n    width: number,\n    height: number,\n  ) {\n    const chartHeight = echartsInstance?.getHeight();\n    const chartWidth = echartsInstance?.getWidth();\n\n    return chartHeight != height || chartWidth != width;\n  }\n\n  function onMessageCallback(\n    e: MessageEvent,\n    echartsInstance: echarts.ECharts,\n    _: any,\n    echarts: any,\n  ) {\n    const config: CustomEChartIFrameMessageData = e.data;\n\n    if (!config || !config.hasOwnProperty(\"options\")) {\n      return;\n    }\n\n    const newOptions = parseConfigurationForCallbackFns(config.options, _);\n\n    try {\n      if (!echartsInstance || echartsInstance.isDisposed()) {\n        echartsInstance = initializeECharts(echarts);\n      }\n\n      if (config.shouldUpdateOptions) {\n        echartsInstance.setOption(newOptions, true);\n      }\n\n      if (\n        config.shouldResize &&\n        shouldResizeECharts(echartsInstance, config.width, config.height)\n      ) {\n        echartsInstance.resize({ width: config.width, height: config.height });\n      }\n    } catch (error) {\n      echartsInstance.dispose();\n\n      const data: CustomEChartErrorData = {\n        message: (error as Error).message,\n        stack: (error as Error).stack || \"\",\n      };\n\n      const message: CustomEChartIFrameMessage = {\n        type: \"error\",\n        data: data,\n      };\n\n      parent.postMessage(message, \"*\");\n    }\n\n    echartsInstance.off(\"click\");\n\n    echartsInstance.on(\"click\", (event: echarts.ECElementEvent) => {\n      const data: CustomEChartClickEventData = {\n        event: _.omit(_.cloneDeep(event), \"event\"),\n      };\n\n      const message: CustomEChartIFrameMessage = {\n        type: \"click-event\",\n        data: data,\n      };\n\n      parent.postMessage(message, \"*\");\n    });\n  }\n\n  function parseConfigurationForCallbackFns(\n    chartConfig: Record<string, unknown>,\n    _: any,\n  ) {\n    const config: Record<string, unknown> = _.cloneDeep(chartConfig);\n\n    const fnKeys = (config[\"__fn_keys__\"] as string[]) ?? [];\n\n    for (let i = 0; i < fnKeys.length; i++) {\n      const fnString = _.get(config, fnKeys[i]);\n      const fn = new Function(\"return \" + fnString)();\n\n      _.set(config, fnKeys[i], fn);\n    }\n    return config;\n  }\n\n  function stringifyFns(fns: ((...args: any[]) => any)[]) {\n    let output: string = \"\";\n    for (const fn of fns) {\n      output += fn.toString();\n      output += \"\\n\";\n    }\n    return output;\n  }\n\n  function initializeECharts(echarts: any) {\n    const echartsElement = document.getElementById(\"chartdiv\");\n    return echarts.init(echartsElement, undefined);\n  }\n\n  function onLoadCallback() {\n    const message: CustomEChartIFrameMessage = {\n      type: \"load-complete\",\n      data: {},\n    };\n\n    parent.postMessage(message, \"*\");\n  }\n\n  const defaultHTMLSrcDoc = `\n        <head>\n            <style type=\"text/css\">\n                body {\n                    margin:0 0 0 0px;\n                }\n            </style>\n            \n            <script src=\"/libraries/echarts@5.4.3.js\"></script>\n            <script src=\"/libraries/echarts-gl@2.0.9.js\"></script>\n            <script src=\"/libraries/lodash@4.17.21.js\"></script>\n        </head>\n\n        <body>\n            <div id=\"chartdiv\" style=\"position:absolute; height: 100%; width: 100%;\"></div>\n    \n            <script>\n                ${stringifyFns([\n                  parseConfigurationForCallbackFns,\n                  initializeECharts,\n                  shouldResizeECharts,\n                ])}\n\n                let echartsInstance = undefined;\n\n                window.onload = ${stringifyFns([onLoadCallback])}\n\n                window.onmessage = function(e) {\n                    ((${stringifyFns([\n                      onMessageCallback,\n                    ])})(e, echartsInstance, _, echarts))\n                }\n            </script>\n        </body>\n        `;\n\n  useEffect(() => {\n    window.addEventListener(\"message\", onMessage);\n    return () => {\n      window.removeEventListener(\"message\", onMessage);\n    };\n  });\n\n  useEffect(() => {\n    let shouldUpdateOptions = true;\n\n    const propsEqual = equal(\n      prevProps?.customEChartConfig,\n      props.customEChartConfig,\n    );\n\n    if (errorMsg) {\n      if (propsEqual) {\n        shouldUpdateOptions = false;\n      } else {\n        setErrorMsg(undefined);\n        setErrorStack(undefined);\n      }\n    } else {\n      if (propsEqual) {\n        shouldUpdateOptions = false;\n      }\n    }\n\n    postMessageFn({\n      options: chartOptions(\"CUSTOM_ECHART\", props),\n      shouldUpdateOptions: shouldUpdateOptions,\n      shouldResize: true,\n      width: props.dimensions.componentWidth,\n      height: props.dimensions.componentHeight,\n    });\n  });\n\n  return (\n    <>\n      {errorMsg && (\n        <ChartErrorComponent message={errorMsg} stack={errorStack} />\n      )}\n      {!errorMsg && (\n        <>\n          <IframeContainer\n            ref={iFrameRef}\n            sandbox=\"allow-scripts\"\n            scrolling=\"no\"\n            srcDoc={defaultHTMLSrcDoc}\n            style={{ height: \"100%\", width: \"100%\" }}\n          />\n          {props.needsOverlay && <OverlayDiv data-testid=\"iframe-overlay\" />}\n        </>\n      )}\n    </>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport * as echarts from \"echarts\";\nimport { invisible } from \"constants/DefaultTheme\";\nimport { getAppsmithConfigs } from \"@appsmith/configs\";\nimport type {\n  ChartType,\n  CustomFusionChartConfig,\n  AllChartData,\n  ChartSelectedDataPoint,\n  LabelOrientation,\n} from \"../constants\";\n\nimport log from \"loglevel\";\nimport equal from \"fast-deep-equal/es6\";\nimport type { WidgetPositionProps } from \"widgets/BaseWidget\";\nimport { ChartErrorComponent } from \"./ChartErrorComponent\";\nimport { EChartsConfigurationBuilder } from \"./EChartsConfigurationBuilder\";\nimport { dataClickCallbackHelper, isBasicEChart } from \"./helpers\";\nimport {\n  parseOnDataPointClickParams,\n  isCustomEChart,\n  isCustomFusionChart,\n  chartOptions,\n} from \"./helpers\";\n\nimport { CustomEChartIFrameComponent } from \"./CustomEChartIFrameComponent\";\nimport type { AppState } from \"@appsmith/reducers\";\nimport { connect } from \"react-redux\";\nimport { getWidgetPropsForPropertyPane } from \"selectors/propertyPaneSelectors\";\nimport { combinedPreviewModeSelector } from \"selectors/editorSelectors\";\nimport { getAppMode } from \"@appsmith/selectors/applicationSelectors\";\nimport { APP_MODE } from \"entities/App\";\n// Leaving this require here. Ref: https://stackoverflow.com/questions/41292559/could-not-find-a-declaration-file-for-module-module-name-path-to-module-nam/42505940#42505940\n// FusionCharts comes with its own typings so there is no need to separately import them. But an import from fusioncharts/core still requires a declaration file.\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst FusionCharts = require(\"fusioncharts\");\nconst plugins: Record<string, any> = {\n  Charts: require(\"fusioncharts/fusioncharts.charts\"),\n  FusionTheme: require(\"fusioncharts/themes/fusioncharts.theme.fusion\"),\n  Widgets: require(\"fusioncharts/fusioncharts.widgets\"),\n  ZoomScatter: require(\"fusioncharts/fusioncharts.zoomscatter\"),\n  ZoomLine: require(\"fusioncharts/fusioncharts.zoomline\"),\n  PowerCharts: require(\"fusioncharts/fusioncharts.powercharts\"),\n  TimeSeries: require(\"fusioncharts/fusioncharts.timeseries\"),\n  OverlappedColumn: require(\"fusioncharts/fusioncharts.overlappedcolumn2d\"),\n  OverlappedBar: require(\"fusioncharts/fusioncharts.overlappedbar2d\"),\n  TreeMap: require(\"fusioncharts/fusioncharts.treemap\"),\n  Maps: require(\"fusioncharts/fusioncharts.maps\"),\n  Gantt: require(\"fusioncharts/fusioncharts.gantt\"),\n  VML: require(\"fusioncharts/fusioncharts.vml\"),\n};\n\n// Enable all plugins.\n// This is needed to support custom chart configs\nObject.keys(plugins).forEach((key: string) =>\n  (plugins[key] as any)(FusionCharts),\n);\n\nconst { fusioncharts } = getAppsmithConfigs();\nFusionCharts.options.license({\n  key: fusioncharts.licenseKey,\n  creditLabel: false,\n});\n\nexport interface ChartComponentState {\n  eChartsError: Error | undefined;\n  chartType: ChartType;\n}\n\nexport interface ChartComponentProps extends WidgetPositionProps {\n  allowScroll: boolean;\n  chartData: AllChartData;\n  chartName: string;\n  chartType: ChartType;\n  customEChartConfig: Record<string, unknown>;\n  customFusionChartConfig: CustomFusionChartConfig;\n  hasOnDataPointClick: boolean;\n  isVisible?: boolean;\n  isLoading: boolean;\n  setAdaptiveYMin: boolean;\n  labelOrientation?: LabelOrientation;\n  onDataPointClick: (selectedDataPoint: ChartSelectedDataPoint) => void;\n  widgetId: string;\n  xAxisName: string;\n  yAxisName: string;\n  borderRadius: string;\n  boxShadow?: string;\n  primaryColor?: string;\n  showDataPointLabel: boolean;\n  fontFamily: string;\n  dimensions: {\n    componentWidth: number;\n    componentHeight: number;\n  };\n}\n\nconst ChartsContainer = styled.div`\n  position: relative;\n  height: 100%;\n  width: 100%;\n`;\n\nconst CanvasContainer = styled.div<\n  Omit<ChartComponentProps, \"onDataPointClick\" | \"hasOnDataPointClick\">\n>`\n  border-radius: ${({ borderRadius }) => borderRadius};\n  box-shadow: ${({ boxShadow }) => `${boxShadow}`} !important;\n\n  height: 100%;\n  width: 100%;\n  background: var(--ads-v2-color-bg);\n  overflow: hidden;\n  position: relative;\n  ${(props) => (!props.isVisible ? invisible : \"\")};\n}`;\n\nexport type ChartComponentConnectedProps = ReturnType<typeof mapStateToProps> &\n  ChartComponentProps;\nclass ChartComponent extends React.Component<\n  ChartComponentConnectedProps,\n  ChartComponentState\n> {\n  fusionChartsInstance: any = null;\n  echartsInstance: echarts.ECharts | undefined;\n\n  customFusionChartContainerId =\n    this.props.widgetId + \"custom-fusion-chart-container\";\n\n  eChartsContainerId = this.props.widgetId + \"echart-container\";\n  eChartsHTMLContainer: HTMLElement | null = null;\n\n  echartsConfigurationBuilder: EChartsConfigurationBuilder;\n\n  echartConfiguration: Record<string, any> = {};\n  prevProps: ChartComponentProps;\n\n  constructor(props: ChartComponentConnectedProps) {\n    super(props);\n    this.echartsConfigurationBuilder = new EChartsConfigurationBuilder();\n    this.prevProps = {} as ChartComponentProps;\n\n    this.state = {\n      eChartsError: undefined,\n      chartType: this.props.chartType,\n    };\n  }\n\n  dataClickCallback = (params: echarts.ECElementEvent) => {\n    dataClickCallbackHelper(params, this.props, this.state.chartType);\n  };\n\n  initializeEchartsInstance = () => {\n    this.eChartsHTMLContainer = document.getElementById(\n      this.eChartsContainerId,\n    );\n    if (!this.eChartsHTMLContainer) {\n      return;\n    }\n\n    if (!this.echartsInstance || this.echartsInstance.isDisposed()) {\n      this.echartsInstance = echarts.init(\n        this.eChartsHTMLContainer,\n        undefined,\n        {\n          renderer: \"svg\",\n          width: this.props.dimensions.componentWidth,\n          height: this.props.dimensions.componentHeight,\n        },\n      );\n    }\n  };\n\n  shouldResizeECharts = () => {\n    return (\n      this.echartsInstance?.getHeight() !=\n        this.props.dimensions.componentHeight ||\n      this.echartsInstance?.getWidth() != this.props.dimensions.componentWidth\n    );\n  };\n\n  shouldSetOptions(eChartOptions: any) {\n    return !equal(this.echartConfiguration, eChartOptions);\n  }\n\n  renderECharts = () => {\n    this.initializeEchartsInstance();\n\n    if (!this.echartsInstance) {\n      return;\n    }\n\n    const eChartOptions: Record<string, unknown> = chartOptions(\n      this.state.chartType,\n      this.props,\n    );\n\n    try {\n      if (this.shouldSetOptions(eChartOptions)) {\n        this.echartConfiguration = eChartOptions;\n        this.echartsInstance.setOption(this.echartConfiguration, true);\n\n        if (this.state.eChartsError) {\n          this.setState({ eChartsError: undefined });\n        }\n      }\n\n      if (this.shouldResizeECharts()) {\n        this.echartsInstance.resize({\n          width: this.props.dimensions.componentWidth,\n          height: this.props.dimensions.componentHeight,\n        });\n      }\n\n      this.echartsInstance.off(\"click\");\n      this.echartsInstance.on(\"click\", this.dataClickCallback);\n    } catch (error) {\n      this.disposeECharts();\n      this.setState({ eChartsError: error as Error });\n    }\n  };\n\n  disposeECharts = () => {\n    if (!this.echartsInstance?.isDisposed()) {\n      this.echartsInstance?.dispose();\n    }\n  };\n\n  componentDidMount() {\n    this.renderChartingLibrary();\n  }\n\n  componentWillUnmount() {\n    this.disposeECharts();\n    this.disposeFusionCharts();\n  }\n\n  renderChartingLibrary() {\n    if (this.state.chartType === \"CUSTOM_FUSION_CHART\") {\n      this.disposeECharts();\n      this.renderFusionCharts();\n    } else if (this.state.chartType == \"CUSTOM_ECHART\") {\n      this.disposeECharts();\n      this.disposeFusionCharts();\n    } else {\n      this.disposeFusionCharts();\n      this.renderECharts();\n    }\n  }\n\n  componentDidUpdate() {\n    if (\n      isCustomFusionChart(this.props.chartType) &&\n      !isCustomFusionChart(this.state.chartType)\n    ) {\n      this.setState({\n        eChartsError: undefined,\n        chartType: \"CUSTOM_FUSION_CHART\",\n      });\n    } else if (\n      isCustomEChart(this.props.chartType) &&\n      !isCustomEChart(this.state.chartType)\n    ) {\n      this.echartConfiguration = {};\n      this.setState({ eChartsError: undefined, chartType: \"CUSTOM_ECHART\" });\n    } else if (\n      isBasicEChart(this.props.chartType) &&\n      !isBasicEChart(this.state.chartType)\n    ) {\n      // User has selected one of the ECharts option\n      this.echartConfiguration = {};\n      this.setState({\n        eChartsError: undefined,\n        chartType: this.props.chartType,\n      });\n    } else {\n      this.renderChartingLibrary();\n    }\n  }\n\n  disposeFusionCharts = () => {\n    this.fusionChartsInstance = null;\n  };\n\n  renderFusionCharts = () => {\n    if (this.fusionChartsInstance) {\n      const { dataSource, type } = this.getCustomFusionChartDataSource();\n      this.fusionChartsInstance.chartType(type);\n      this.fusionChartsInstance.setChartData(dataSource);\n    } else {\n      const config = this.customFusionChartConfig();\n      this.fusionChartsInstance = new FusionCharts(config);\n\n      FusionCharts.ready(() => {\n        /* Component could be unmounted before FusionCharts is ready,\n          this check ensure we don't render on unmounted component */\n        if (this.fusionChartsInstance) {\n          try {\n            this.fusionChartsInstance.render();\n          } catch (e) {\n            log.error(e);\n          }\n        }\n      });\n    }\n  };\n\n  customFusionChartConfig() {\n    const chartConfig = {\n      renderAt: this.customFusionChartContainerId,\n      width: \"100%\",\n      height: \"100%\",\n      events: {\n        dataPlotClick: (evt: any) => {\n          const dataPointClickParams = parseOnDataPointClickParams(\n            evt,\n            this.state.chartType,\n          );\n\n          this.props.onDataPointClick(dataPointClickParams);\n        },\n      },\n      ...this.getCustomFusionChartDataSource(),\n    };\n    return chartConfig;\n  }\n\n  getCustomFusionChartDataSource = () => {\n    // in case of evaluation error, customFusionChartConfig can be undefined\n    let config = this.props.customFusionChartConfig as CustomFusionChartConfig;\n\n    if (config && config.dataSource) {\n      config = {\n        ...config,\n        dataSource: {\n          chart: {\n            ...config.dataSource.chart,\n            caption: this.props.chartName || config.dataSource.chart.caption,\n            setAdaptiveYMin: this.props.setAdaptiveYMin ? \"1\" : \"0\",\n          },\n          ...config.dataSource,\n        },\n      };\n    }\n    return config || {};\n  };\n\n  render() {\n    //eslint-disable-next-line  @typescript-eslint/no-unused-vars\n    const { hasOnDataPointClick, onDataPointClick, ...rest } = this.props;\n\n    // Avoid propagating the click events to upwards\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const onClick = hasOnDataPointClick\n      ? (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => e.stopPropagation()\n      : undefined;\n\n    return (\n      <CanvasContainer\n        className={this.props.isLoading ? \"bp3-skeleton\" : \"\"}\n        onClick={onClick}\n        {...rest}\n      >\n        {isBasicEChart(this.state.chartType) && (\n          <ChartsContainer id={this.eChartsContainerId} />\n        )}\n\n        {isCustomEChart(this.state.chartType) && (\n          <CustomEChartIFrameComponent {...this.props} />\n        )}\n\n        {this.state.chartType === \"CUSTOM_FUSION_CHART\" && (\n          <ChartsContainer id={this.customFusionChartContainerId} />\n        )}\n\n        {this.state.eChartsError && (\n          <ChartErrorComponent error={this.state.eChartsError} />\n        )}\n      </CanvasContainer>\n    );\n  }\n}\n\n/**\n * TODO: Balaji to refactor code to move out selected widget details to platform\n */\nexport const mapStateToProps = (\n  state: AppState,\n  ownProps: ChartComponentProps,\n) => {\n  const isPreviewMode = combinedPreviewModeSelector(state);\n  const appMode = getAppMode(state);\n  return {\n    needsOverlay:\n      appMode == APP_MODE.EDIT &&\n      !isPreviewMode &&\n      ownProps.widgetId !== getWidgetPropsForPropertyPane(state)?.widgetId,\n  };\n};\n\nexport default connect(mapStateToProps)(ChartComponent);\n"],"names":["value","ref","useRef","useEffect","current","IframeContainer","styled","_templateObject","_taggedTemplateLiteral","OverlayDiv","_templateObject2","CustomEChartIFrameComponent","props","_useState","useState","undefined","_useState2","_slicedToArray","errorMsg","setErrorMsg","_useState3","_useState4","errorStack","setErrorStack","prevProps","usePrevious","iFrameRef","postMessageFn","data","_iFrameRef$current","iFrameWindow","contentWindow","postMessage","onMessage","event","_iFrameRef$current2","source","message","type","messageData","dataClickCallbackHelper","options","chartOptions","shouldUpdateOptions","shouldResize","width","dimensions","componentWidth","height","componentHeight","errorMessage","stack","shouldResizeECharts","echartsInstance","chartHeight","getHeight","chartWidth","getWidth","parseConfigurationForCallbackFns","chartConfig","_","_ref","config","cloneDeep","fnKeys","i","length","fnString","get","fn","Function","set","stringifyFns","fns","_step","output","_iterator","_createForOfIteratorHelper","s","n","done","toString","err","e","f","initializeECharts","echarts","echartsElement","document","getElementById","init","defaultHTMLSrcDoc","concat","parent","hasOwnProperty","newOptions","isDisposed","setOption","resize","error","dispose","off","on","omit","window","addEventListener","removeEventListener","propsEqual","equal","customEChartConfig","_jsxs","_Fragment","children","_jsx","ChartErrorComponent","sandbox","scrolling","srcDoc","style","needsOverlay","FusionCharts","require","plugins","Charts","FusionTheme","Widgets","ZoomScatter","ZoomLine","PowerCharts","TimeSeries","OverlappedColumn","OverlappedBar","TreeMap","Maps","Gantt","VML","Object","keys","forEach","key","fusioncharts","getAppsmithConfigs","license","licenseKey","creditLabel","ChartsContainer","CanvasContainer","borderRadius","_ref2","boxShadow","isVisible","invisible","ChartComponent","_React$Component","_this","_classCallCheck","fusionChartsInstance","customFusionChartContainerId","widgetId","eChartsContainerId","eChartsHTMLContainer","echartsConfigurationBuilder","echartConfiguration","dataClickCallback","params","state","chartType","initializeEchartsInstance","renderer","_this$echartsInstance","_this$echartsInstance2","renderECharts","eChartOptions","shouldSetOptions","eChartsError","setState","disposeECharts","_this$echartsInstance3","_this$echartsInstance4","disposeFusionCharts","renderFusionCharts","_this$getCustomFusion","getCustomFusionChartDataSource","dataSource","setChartData","customFusionChartConfig","ready","render","log","_objectSpread","chart","caption","chartName","setAdaptiveYMin","EChartsConfigurationBuilder","_inherits","_createClass","this","renderChartingLibrary","isCustomFusionChart","isCustomEChart","isBasicEChart","_this2","renderAt","events","dataPlotClick","evt","dataPointClickParams","parseOnDataPointClickParams","onDataPointClick","_this$props","hasOnDataPointClick","rest","_objectWithoutProperties","_excluded","onClick","stopPropagation","className","isLoading","id","React","mapStateToProps","ownProps","_getWidgetPropsForPro","isPreviewMode","combinedPreviewModeSelector","getAppMode","APP_MODE","getWidgetPropsForPropertyPane","connect"],"sourceRoot":""}