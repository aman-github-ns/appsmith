{"version":3,"file":"static/js/rte.389ddecf.chunk.js","mappings":"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","sources":["widgets/RichTextEditorWidget/component/index.tsx","webpack://appsmith/./src/theme/wds.css?7b0d"],"sourcesContent":["import \"tinymce/tinymce\";\nimport \"tinymce/icons/default\";\nimport \"tinymce/plugins/link\";\nimport \"tinymce/plugins/image\";\nimport \"tinymce/plugins/table\";\nimport \"tinymce/plugins/code\";\nimport \"tinymce/plugins/help\";\nimport \"tinymce/plugins/insertdatetime\";\nimport \"tinymce/plugins/media\";\nimport \"tinymce/plugins/advlist\";\nimport \"tinymce/plugins/autolink\";\nimport \"tinymce/plugins/lists\";\nimport \"tinymce/plugins/charmap\";\nimport \"tinymce/plugins/preview\";\nimport \"tinymce/plugins/anchor\";\nimport \"tinymce/plugins/searchreplace\";\nimport \"tinymce/plugins/visualblocks\";\nimport \"tinymce/plugins/fullscreen\";\nimport \"tinymce/plugins/emoticons\";\nimport \"tinymce/plugins/emoticons/js/emojis\";\nimport \"tinymce/themes/silver\";\nimport \"tinymce/skins/ui/oxide/skin.min.css\";\nimport \"tinymce/models/dom\";\nimport \"tinymce/plugins/help/js/i18n/keynav/en.js\";\nimport React, { useRef, useCallback, useEffect, useState } from \"react\";\nimport styled, { createGlobalStyle } from \"styled-components\";\nimport { Editor } from \"@tinymce/tinymce-react\";\nimport type { LabelPosition } from \"components/constants\";\nimport type { Alignment } from \"@blueprintjs/core\";\nimport type { TextSize } from \"constants/WidgetConstants\";\n\n// @ts-expect-error: loader types not available\nimport cssVariables from \"!!raw-loader!theme/wds.css\";\nimport { isMacOs } from \"utils/AppsmithUtils\";\nimport LabelWithTooltip, {\n  labelLayoutStyles,\n  LABEL_CONTAINER_CLASS,\n} from \"widgets/components/LabelWithTooltip\";\n\nconst StyledRTEditor = styled.div<{\n  borderRadius: string;\n  boxShadow?: string;\n  compactMode: boolean;\n  labelPosition?: LabelPosition;\n  isValid?: boolean;\n  isDisabled?: boolean;\n  isDynamicHeightEnabled?: boolean;\n}>`\n  && {\n    width: 100%;\n    height: 100%;\n    .tox .tox-editor-header {\n      z-index: 0;\n    }\n\n    .tox-tinymce {\n      border-radius: ${({ borderRadius }) => borderRadius};\n      box-shadow: ${({ boxShadow }) => `${boxShadow}`} !important;\n    }\n  }\n  .tox {\n    font-family: inherit;\n\n    width: 100%;\n    .tox-tbtn {\n      cursor: pointer;\n      .tox-tbtn__select-label {\n        cursor: inherit;\n      }\n    }\n  }\n\n  .tox .tox-toolbar__primary {\n    background: ${(props) =>\n      props.isDisabled\n        ? \"var(--wds-color-bg-disabled)\"\n        : \"var(--wds-color-bg)\"};\n  }\n\n  .tox .tox-edit-area__iframe {\n    background: ${(props) =>\n      props.isDisabled\n        ? \"var(--wds-color-bg-disabled)\"\n        : \"var(--wds-color-bg)\"};\n  }\n\n  .tox-tinymce {\n    border: 1px solid\n      ${(props) =>\n        props.isValid\n          ? \"var(--wds-color-border)\"\n          : \"var(--wds-color-border-danger)\"};\n  }\n\n  &.disabled {\n    cursor: not-allowed !important;\n  }\n\n  &.disabled .tox {\n    pointer-events: none;\n  }\n\n  &:not(.disabled):hover .tox-tinymce {\n    border: 1px solid\n      ${(props) =>\n        props.isValid\n          ? \"var(--wds-color-border-hover)\"\n          : \"var(--wds-color-border-danger-hover)\"};\n  }\n\n  .tox .tox-statusbar {\n    background: ${(props) =>\n      props.isDisabled\n        ? \"var(--wds-color-bg-disabled)\"\n        : \"var(--wds-color-bg)\"};\n  }\n\n  .tox:not([dir=\"rtl\"]) .tox-toolbar__group:not(:last-of-type) {\n    border-right: none;\n    border-bottom: none;\n    position: relative;\n\n    &::after {\n      content: \"\";\n      height: 39px;\n      width: 1px;\n      position: absolute;\n      right: 0;\n      background: var(--wds-color-border);\n    }\n  }\n\n  .tox:not([dir=\"rtl\"]) .tox-toolbar__group:not(:last-of-type),\n  .tox .tox-statusbar {\n    border-color: var(--wds-color-border);\n  }\n\n  .tox .tox-tbtn svg,\n  #tox-icon-highlight-bg-color__color,\n  #tox-icon-text-color__color {\n    fill: ${(props) =>\n      props.isDisabled\n        ? \"var(--wds-color-icon-disabled)\"\n        : \"var(--wds-color-icon)\"};\n  }\n\n  .tox .tox-tbtn {\n    margin: 3px 0 2px 0;\n    border-radius: ${({ borderRadius }) => borderRadius};\n    height: 34px;\n\n    &:hover {\n      background: var(--wds-color-bg-hover);\n    }\n  }\n\n  .tox .tox-toolbar,\n  .tox .tox-toolbar__overflow {\n    background: linear-gradient(\n      to bottom,\n      var(--wds-color-border) 1px,\n      transparent 1px\n    );\n    background-color: ${(props) =>\n      props.isDisabled\n        ? \"var(--wds-color-bg-disabled)\"\n        : \"var(--wds-color-bg)\"};\n    background-size: auto 39px;\n  }\n\n  .tox:not(.tox-tinymce-inline) .tox-editor-header {\n    border-bottom: 1px solid var(--wds-color-border);\n  }\n\n  .tox-tbtn__select-label {\n    color: ${(props) =>\n      props.isDisabled\n        ? \"var(--wds-color-text-disabled)\"\n        : \"var(--wds-color-text)\"};\n  }\n\n  .tox .tox-split-button {\n    margin: 3px 0 2px 0;\n    border-radius: ${({ borderRadius }) => borderRadius};\n\n    &:hover {\n      box-shadow: 0 0 0 1px var(--wds-color-border) inset;\n    }\n    &:focus {\n      background: var(--wds-color-bg-focus);\n    }\n    &:active {\n      background: var(--wds-color-bg-focus);\n    }\n  }\n\n  .tox .tox-tbtn:focus:not(.tox-tbtn--disabled) {\n    background: var(--wds-color-bg-selected);\n  }\n\n  .tox .tox-tbtn:active:not(.tox-tbtn--disabled) {\n    background: var(--wds-color-bg-focus);\n  }\n\n  .tox .tox-split-button__chevron {\n    width: 24px;\n    padding-right: 0px;\n  }\n\n  .tox .tox-tbtn--enabled {\n    background: var(--wds-color-bg-focus);\n    color: var(--wds-color-text);\n\n    .tox-tbtn svg,\n    .tox-tbtn__icon-wrap svg,\n    #tox-icon-highlight-bg-color__color,\n    #tox-icon-text-color__color {\n      fill: ${(props) =>\n        props.isDisabled\n          ? \"var(--wds-color-icon-disabled)\"\n          : \"var(--wds-color-text)\"};\n    }\n  }\n\n  .tox .tox-toolbar__group {\n    height: 39px;\n    padding: 0 4px;\n  }\n\n  .tox .tox-tbtn--disabled svg,\n  .tox .tox-tbtn--disabled:hover svg,\n  .tox .tox-tbtn:disabled svg,\n  .tox .tox-tbtn:disabled:hover svg {\n    fill: var(--wds-color-icon-disabled);\n  }\n\n  ${labelLayoutStyles}\n\n  & .${LABEL_CONTAINER_CLASS} {\n    align-self: center;\n  }\n\n  .tox:not(.tox-tinymce-inline) .tox-editor-header {\n    padding: 0;\n  }\n\n  .tox .tox-edit-area::before,\n  .tox .tox-tbtn:focus::after,\n  .tox .tox-split-button:focus::after,\n  .tox-statusbar__help-text {\n    display: none;\n  }\n\n  .tox .tox-tbtn--bespoke {\n    background: #fff;\n  }\n\n  .tox .tox-tbtn--disabled,\n  .tox .tox-tbtn--disabled:hover,\n  .tox .tox-tbtn:disabled,\n  .tox .tox-tbtn:disabled:hover {\n    background: #fff0;\n  }\n`;\n\nconst GlobalStyles = createGlobalStyle`\n  .tox {\n    &&& .tox-collection--list .tox-collection__item--active {\n      background-color: #dee0e2;\n      color: #222f3e;\n    }\n\n    &&& .tox-menu.tox-collection.tox-collection--list {\n      padding: 0;\n    }\n\n    .tox-collection--toolbar .tox-collection__item--active:focus::after {\n      display: none;\n    }\n\n    && {\n      .tox-button, .tox-dialog { {\n        border-radius: 0px;\n      }\n    }\n  }\n`;\n\nexport const RichTextEditorInputWrapper = styled.div<{\n  isValid?: boolean;\n  borderRadius: string;\n  isDynamicHeightEnabled?: boolean;\n}>`\n  display: flex;\n  width: 100%;\n  min-width: 0;\n  height: 100%;\n  border-radius: ${({ borderRadius }) => borderRadius};\n\n  ${({ isDynamicHeightEnabled }) =>\n    isDynamicHeightEnabled ? \"&& { height: auto; min-height: 192px; }\" : \"\"};\n`;\n\nexport interface RichtextEditorComponentProps {\n  value?: string;\n  isMarkdown: boolean;\n  placeholder?: string;\n  widgetId: string;\n  isDisabled: boolean;\n  isVisible?: boolean;\n  compactMode: boolean;\n  isDynamicHeightEnabled: boolean;\n  isToolbarHidden: boolean;\n  borderRadius: string;\n  boxShadow?: string;\n  labelText: string;\n  labelPosition?: LabelPosition;\n  labelAlignment?: Alignment;\n  labelWidth?: number;\n  labelTextColor?: string;\n  labelTextSize?: TextSize;\n  labelTooltip?: string;\n  labelStyle?: string;\n  isValid?: boolean;\n  onValueChange: (valueAsString: string) => void;\n}\n\nfunction RichtextEditorComponent(props: RichtextEditorComponentProps) {\n  const {\n    compactMode,\n    isDisabled,\n    isDynamicHeightEnabled,\n    labelAlignment,\n    labelPosition,\n    labelStyle,\n    labelText,\n    labelTextColor,\n    labelTextSize,\n    labelTooltip,\n    labelWidth,\n  } = props;\n\n  const [editorValue, setEditorValue] = useState<string>(props.value as string);\n  const initialRender = useRef(true);\n\n  const toolbarConfig =\n    \"insertfile undo redo | blocks | bold italic underline backcolor forecolor | lineheight | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image | removeformat | table | print preview media | emoticons | code | help\";\n\n  const handleEditorChange = useCallback(\n    (newValue: string, editor: any) => {\n      // avoid updating value, when there is no actual change.\n      if (newValue !== editorValue) {\n        const isFocused = editor.hasFocus();\n        /**\n         * only change call the props.onValueChange when the editor is in focus.\n         * This prevents props.onValueChange from getting called whenever the defaultText is changed.\n         */\n        //\n        if (isFocused) {\n          setEditorValue(newValue);\n          props.onValueChange(newValue);\n        }\n      }\n    },\n    [props.onValueChange, editorValue],\n  );\n\n  // As this useEffect sets the initialRender.current value as false and order of hooks matter,\n  // we should always keep this useEffect logic at last part of component before return to make sure, initialRender.current value is consumed as expected in the component.\n  useEffect(() => {\n    if (!initialRender.current && editorValue !== props.value) {\n      setEditorValue(props.value as string);\n    } else {\n      initialRender.current = false;\n    }\n  }, [props.value]);\n\n  return (\n    <StyledRTEditor\n      borderRadius={props.borderRadius}\n      boxShadow={props.boxShadow}\n      className={`container-${props.widgetId} ${\n        props.isDisabled ? \"disabled\" : \"\"\n      }`}\n      compactMode={compactMode}\n      data-testid=\"rte-container\"\n      isDisabled={props.isDisabled}\n      isDynamicHeightEnabled={isDynamicHeightEnabled}\n      isValid={props.isValid}\n      labelPosition={labelPosition}\n    >\n      {labelText && (\n        <LabelWithTooltip\n          alignment={labelAlignment}\n          className={`rich-text-editor-label`}\n          color={labelTextColor}\n          compact={compactMode}\n          disabled={isDisabled}\n          fontSize={labelTextSize}\n          fontStyle={labelStyle}\n          helpText={labelTooltip}\n          isDynamicHeightEnabled={isDynamicHeightEnabled}\n          position={labelPosition}\n          text={labelText}\n          width={labelWidth}\n        />\n      )}\n      <RichTextEditorInputWrapper\n        borderRadius={props.borderRadius}\n        isDynamicHeightEnabled={isDynamicHeightEnabled}\n        isValid={props.isValid}\n      >\n        <Editor\n          disabled={props.isDisabled}\n          id={`rte-${props.widgetId}`}\n          init={{\n            height: isDynamicHeightEnabled ? \"auto\" : \"100%\",\n            menubar: false,\n            toolbar_mode: \"sliding\",\n            forced_root_block: \"p\",\n            branding: false,\n            resize: false,\n            browser_spellcheck: true,\n            content_style: `\n              ${cssVariables}\n              ${\n                props.isDisabled\n                  ? `* {\n                  color: var(--wds-color-text-disabled)\n                }`\n                  : \"\"\n              }`,\n            plugins: [\n              \"advlist\",\n              \"autolink\",\n              \"lists\",\n              \"link\",\n              \"image\",\n              \"charmap\",\n              \"preview\",\n              \"anchor\",\n              \"searchreplace\",\n              \"visualblocks\",\n              \"code\",\n              \"fullscreen\",\n              \"insertdatetime \",\n              \"media \",\n              \"table\",\n              \"code \",\n              \"help\",\n              \"emoticons\",\n              \"code\",\n            ],\n            contextmenu: \"link useBrowserSpellcheck image table\",\n            setup: function (editor) {\n              editor.ui.registry.addMenuItem(\"useBrowserSpellcheck\", {\n                text: `Use \"${\n                  isMacOs() ? \"Control\" : \"Ctrl\"\n                } + Right click\" to access spellchecker`,\n                onAction: function () {\n                  editor.notificationManager.open({\n                    text: `To access the spellchecker, hold the ${\n                      isMacOs() ? \"Control\" : \"Ctrl\"\n                    } key and right-click on the misspelt word.`,\n                    type: \"info\",\n                    timeout: 5000,\n                  });\n                },\n              });\n              editor.ui.registry.addContextMenu(\"useBrowserSpellcheck\", {\n                update: function () {\n                  return editor.selection.isCollapsed()\n                    ? [\"useBrowserSpellcheck\"]\n                    : [];\n                },\n              });\n            },\n          }}\n          key={`editor_${props.isToolbarHidden}_${props.isDisabled}`}\n          onEditorChange={handleEditorChange}\n          toolbar={props.isToolbarHidden ? false : toolbarConfig}\n          value={editorValue}\n        />\n      </RichTextEditorInputWrapper>\n      <GlobalStyles />\n    </StyledRTEditor>\n  );\n}\n\nexport default RichtextEditorComponent;\n","export default \":root {\\n  --wds-color-border: #e0dede;\\n  --wds-color-border-onaccent: rgba(161, 161, 161, 0.3);\\n  --wds-color-border-light: #fddddd;\\n  --wds-color-border-hover: #b3b3b3;\\n  --wds-color-border-disabled: #e0dede;\\n  --wds-color-border-danger: #d91921;\\n  --wds-color-border-danger-hover: #b90707;\\n  --wds-color-border-danger-focus: #b90707;\\n  --wds-color-border-danger-focus-light: #fedddd;\\n\\n  --wds-color-bg: #ffffff;\\n  --wds-color-bg-hover: #ebebeb;\\n  --wds-color-bg-selected: #ebebeb;\\n  --wds-color-bg-focus: #e3e3e3;\\n  --wds-color-bg-light: #ebebeb;\\n  --wds-color-bg-strong: #e0dede;\\n  --wds-color-bg-strong-hover: #b3b3b3;\\n  --wds-color-bg-disabled: #f3f3f3;\\n  --wds-color-bg-disabled-light: #e0dede;\\n  --wds-color-bg-disabled-strong: #a9a7a7;\\n  --wds-color-bg-danger: #d91921;\\n  --wds-color-bg-danger-hover: #b90707;\\n\\n  --wds-color-icon: #858282;\\n  --wds-color-icon-disabled: #a9a7a7;\\n  --wds-color-icon-hover: #4b4848;\\n\\n  --wds-color-text: #090707;\\n  --wds-color-text-danger: #d91921;\\n  --wds-color-text-light: #716e6e;\\n  --wds-color-text-disabled: #a9a7a7;\\n  --wds-color-text-disabled-light: #cac7c7;\\n}\\n\";"],"names":["StyledRTEditor","styled","_templateObject","_taggedTemplateLiteral","_ref","borderRadius","_ref2","boxShadow","concat","props","isDisabled","isValid","_ref3","_ref4","labelLayoutStyles","LABEL_CONTAINER_CLASS","GlobalStyles","createGlobalStyle","_templateObject2","RichTextEditorInputWrapper","_templateObject3","_ref5","_ref6","isDynamicHeightEnabled","compactMode","labelAlignment","labelPosition","labelStyle","labelText","labelTextColor","labelTextSize","labelTooltip","labelWidth","_useState","useState","value","_useState2","_slicedToArray","editorValue","setEditorValue","initialRender","useRef","handleEditorChange","useCallback","newValue","editor","hasFocus","onValueChange","useEffect","current","_jsxs","className","widgetId","children","_jsx","LabelWithTooltip","alignment","color","compact","disabled","fontSize","fontStyle","helpText","position","text","width","Editor","id","init","height","menubar","toolbar_mode","forced_root_block","branding","resize","browser_spellcheck","content_style","plugins","contextmenu","setup","ui","registry","addMenuItem","isMacOs","onAction","notificationManager","open","type","timeout","addContextMenu","update","selection","isCollapsed","onEditorChange","toolbar","isToolbarHidden"],"sourceRoot":""}