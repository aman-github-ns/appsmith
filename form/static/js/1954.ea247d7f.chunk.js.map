{"version":3,"file":"static/js/1954.ea247d7f.chunk.js","mappings":";4NAIaA,WAAYC,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,2UAqBnC,SAASC,EAAiBH,GAKxB,IAAAI,EAAgCC,EAAAA,UAAM,GAASC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAxCD,EAAAG,EAAA,GAAUE,EAAAF,EAAA,GAMjB,OAJAG,EAAAA,EAAAA,YAAU,WACRD,GAAA,EAAkB,GACjB,CAACR,EAAMU,cAGRL,EAAAA,cAACN,EAAU,CAAAY,UAAU,+BACnBN,EAAAA,cAAA,OACEO,IAAKZ,EAAMY,IACXD,UAAU,6CACVE,IAAKb,EAAMc,gBACXC,MAAO,CAAEC,WAAYb,EAAW,SAAW,aAE7CE,EAAAA,cAAA,OACEO,IAAKZ,EAAMY,IACXD,UAAU,4CACVM,OAAQ,WACNT,GAAA,EAAiB,EAEnBK,IAAKb,EAAMU,YACXK,MAAO,CAAEG,QAASf,EAAW,EAAI,KAIzC,oLC9CMgB,GAAYC,EAAAA,EAAAA,IAAU,kBAAM,+BAAO,IACnCC,GAAaD,EAAAA,EAAAA,IAAU,kBAC3B,+BAAO,IAGHE,EAASnB,EAAAA,GAAAA,IAAUF,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,ipEAiBAqB,EAAAA,GAAAA,GAAAA,WACFA,EAAAA,GAAAA,GAAAA,SACEA,EAAAA,GAAAA,GAAAA,WACGA,EAAAA,GAAAA,GAAAA,cA6BLA,EAAAA,GAAAA,GAAAA,SACEA,EAAAA,GAAAA,GAAAA,WACGA,EAAAA,GAAAA,GAAAA,cAoBfC,EAAAA,EAAAA,MAqBPC,GAActB,EAAAA,EAAAA,IAAOgB,EAAPhB,CAAiBuB,IAAAA,GAAAxB,EAAAA,EAAAA,GAAA,iCAI/ByB,EAAqBxB,EAAAA,GAAAA,IAAUyB,IAAAA,GAAA1B,EAAAA,EAAAA,GAAA,kHAQ/B2B,EAA0B1B,EAAAA,GAAAA,IAAU2B,IAAAA,GAAA5B,EAAAA,EAAAA,GAAA,8SAyB1C,SAAS6B,EAAM5B,GACb,IACEqB,EAKErB,EANE6B,QAEJT,EAIEpB,EALK8B,KAAAC,EAKL/B,EAJEgC,UACJf,OAAA,IAAAc,GAAYA,EACZH,EAEE5B,EAHeiC,gBAEjBC,EACElC,EAFamC,gBAAAC,GAUblC,EAAAA,EAAAA,UACF,CAAEmC,mBAAA,EAA0BR,QAAAR,EAASS,KAAAV,GACrCxB,EAAAA,UACA0C,EAAAA,aARAC,EAAAH,EADII,kBAEJC,EAAAL,EADiBM,cAEjBC,EAAAP,EADaQ,aAEbC,EAAAT,EADYU,WAEZC,EAAAX,EADUY,KAQZ,OACE3C,EAAAA,cAACc,EAAM,KACLd,EAAAA,cAAA,QAAA4C,OAAAC,OAAA,GAAWT,KACTpC,EAAAA,cACG,aAAAsC,EAAaQ,KAAI,SAACjD,EAAaN,GAAA,OAC9BS,EAAAA,cAAA,KAAA4C,OAAAC,OAAA,GAAQhD,EAAYkD,sBAAuB,CAAAC,IAAKzD,IAC7CM,EAAYoD,QAAQH,KAAI,SAACjD,EAAQN,GAAA,OAChCS,EAAAA,cACM,KAAA4C,OAAAC,OAAA,GAAAhD,EAAOqD,eACTrD,EAAOsD,qBAAqB,CAAEC,WAAA,KAC/B,CACDJ,IAAKzD,IAEJM,EAAOwD,OAAO,UACdxD,EAAOyD,SACNzD,EAAO0D,aACLvD,EAAAA,cAACa,EAAa,MAEdb,EAAAA,cAACW,EAAY,MAGfX,EAAAA,cAACiB,EAAW,eAOxBjB,EAAAA,cAAW,QAAA4C,OAAAC,OAAA,GAAAX,KACRtB,EACCZ,EAAAA,cAAA,MAAIG,UAAU,YACZH,EAAAA,cAAA,MAAIG,UAAU,YAAYqD,QAAS,MAAAxC,OAAA,EAAAA,EAASyC,QAC1CzD,EAAAA,cAACmB,EAAA,KACEI,GAGCvB,EAAAA,cAACR,EAAAA,EAAQ,CAAAkE,KAAMzD,EAAAA,GAAAA,SAKrByC,EAAKe,OAAS,EAChBf,EAAKI,KAAI,SAACjD,EAAKN,GAAA,OACbiD,EAAW3C,GAETG,EAAAA,cAAA,KAAA4C,OAAAC,OAAA,GAAQhD,EAAI8D,cAAa,CAAEX,IAAKzD,IAC7BM,EAAI+D,MAAMd,KAAI,SAACjD,EAAMN,GAAA,OAElBS,EAAAA,cAAA,KAAA4C,OAAAC,OAAA,GACMhD,EAAKgE,eAAc,iBACRtE,EACfyD,IAAKzD,IAEJM,EAAKwD,OAAO,gBAQzBrD,EAAAA,cAAA,MAAIG,UAAU,YACZH,EAAAA,cAAA,MAAIG,UAAU,YAAYqD,QAAS,MAAAxC,OAAA,EAAAA,EAASyC,QAC1CzD,EAAAA,cAACmB,EAAkB,KAChBU,GAGC7B,EAAAA,cAACqB,EAAuB,KAEtBrB,EAAAA,cAAA,OACEG,UAAU,gBACE,yDAcpC,kICtPaF,GAAqBN,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAoBF,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+DAMzCkB,EAAcjB,EAAAA,GAAAA,IAA2BuB,IAAAA,GAAAxB,EAAAA,EAAAA,GAAA,wIAG3B,SAAAoE,GAAG,OAAAA,EAAAC,GAAU,IAK3BvE,EAAgBG,EAAAA,GAAAA,IAAUyB,IAAAA,GAAA1B,EAAAA,EAAAA,GAAA,2HAO1BuC,EAAatC,EAAAA,GAAAA,IAAU2B,IAAAA,GAAA5B,EAAAA,EAAAA,GAAA,8GAOvBM,EAAcL,EAAAA,GAAAA,IAAUqE,IAAAA,GAAAtE,EAAAA,EAAAA,GAAA,gHAOxBH,EAAeI,EAAAA,GAAAA,IAAUsE,IAAAA,GAAAvE,EAAAA,EAAAA,GAAA,qHCpCzBuC,EAAA,GAAAiC,OAAgCnD,EAAAA,EAAA,uBAChCxB,EAAA,GAAA2E,OAAsCjC,EAAA,YACtCkC,EAAA,GAAAD,OAAuCjC,EAAA,aACvCtC,EAAA,GAAAuE,OAA2CC,EAAA,SAC3CtE,EAAA,GAAAqE,OAA6CC,EAAA,WCgB1D,SAASjC,EAAA4B,GAMP,IALA5B,EAAA4B,EADyBM,OAEzBC,EAAAP,EADMQ,YAENC,EAAAT,EADWU,OAEXC,EAAAX,EADMY,OAENC,EAAAb,EADMc,OAEN/C,EAAAiC,EADMV,MAGN,OACEvD,EAAAA,cAACN,EAAAA,GAAM,CAAAsF,KAAMF,GACX9E,EAAAA,cAACkB,EAAkB,CAACZ,UAAWF,GAC7BJ,EAAAA,cAACF,EAAA,CACCQ,UAAWS,EACXmD,IAAK7B,IAEPrC,EAAAA,cAACoB,EAAa,CAACd,UAAWU,GACxBhB,EAAAA,cAACmB,EAAU,CAACb,UAAWmC,GACrBzC,EAAAA,cAACG,EAAW,KACVH,EAAAA,cAACL,EAAAA,EAAK,CAAAsF,KAAK,aAAajD,GACvB4C,EACC5E,EAAAA,cAACc,EAAAA,EAAG,CAACoE,YAAA,EAAmBrB,KAAK,MAEvB,QACJ,MAEN7D,EAAAA,cAACL,EAAAA,EAAA,CAAKsF,KAAK,UAAUT,IAEvBxE,EAAAA,cAACoC,EAAY,CAAC9B,UAAWkB,GACtBkD,KAMb,CAEArC,EAAkB8C,YAAc,2KCtCnBzF,EAAkB,CAC7B0F,MAAO,QACPC,IAAK,wCCnBMjD,EAA6BtC,EAAAA,GAAAA,IAAUF,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+GAOvCF,EAA0BG,EAAAA,GAAAA,IAAUuB,IAAAA,GAAAxB,EAAAA,EAAAA,GAAA,4OAUpCkB,EAA2BjB,EAAAA,GAAAA,IAAmCyB,IAAAA,GAAA1B,EAAAA,EAAAA,GAAA,2EAC7D,SAAAG,GAAA,OAAWA,EAAMsF,WAAa,OAAS,UAKxCpE,GAAgBpB,EAAAA,EAAAA,IAAOE,EAAAA,EAAPF,CAAY2B,IAAAA,GAAA5B,EAAAA,EAAAA,GAAA,2CCxB5ByE,EAAA,GAAAD,OAA0BjC,EAAAA,EAAA,gBAC1B1C,EAAA,GAAA2E,OAAgCC,EAAA,YAChCpD,EAAA,GAAAmD,OAAiCjC,EAAAA,EAAA,iCCmBjCK,GAAqBvB,EAAAA,EAAAA,eAAsC,CACtEoE,YAAA,EACAC,iBAAkB,kBACT,QAIX,SAASf,EAAkBtD,GACzB,IAAAsE,EAAuEtE,EAAjEuE,cAAE9F,OAAA,IAAA6F,EAAgBrF,EAAAA,MAAgBqF,EAAOrE,EAAwBD,EAA1BwE,SAAYhG,EAAcwB,EAAhBZ,UAAAqF,GACd7F,EAAAA,EAAAA,YAAW2C,GAA5CrB,EAAAuE,EAAFJ,iBAAoBvE,EAAA2E,EAAFL,WAExB,OACEtF,EAAAA,cAACoC,EAAuB,CACtB9B,UAAWsF,IAAK9E,EAA4BpB,GAC5CmG,QAASzE,GAERzB,IAAkBQ,EAAAA,OACjBH,EAAAA,cAAC0B,EAAAA,EACC,CAAAoE,KAAM9E,EAAa,oBAAsB,qBACzC6C,KAAK,OAIR1C,EAEAxB,IAAkBQ,EAAAA,KACjBH,EAAAA,cAACI,EACC,CAAA0F,KAAM9E,EAAa,oBAAsB,qBACzC6C,KAAK,OAKf,CAEA,SAASrC,EAAmBN,GAC1B,IAAQvB,EAAwBuB,EAA1BwE,SAAYvE,EAAcD,EAAhBZ,UACRH,GAAeL,EAAAA,EAAAA,YAAW2C,GAA5B6C,WAEN,OACEtF,EAAAA,cAACN,EAAwB,CACvBY,UAAWsF,IAAK5E,EAA6BG,GAC7CmE,WAAYnF,GAEXR,EAGP,CAEA,SAAS0C,EAAYnB,GACnB,IAAQpB,EAA8CoB,EAAhDwE,SAAYvF,EAAoCe,EAAtCZ,UAAa8B,EAAyBlB,EAA3B6D,OAAU3E,EAAiBc,EAAnB6E,aAAAC,GACCrG,EAAAA,EAAAA,YAAWyC,GAAA6D,GAAA/F,EAAAA,EAAAA,GAAA8F,EAAA,GAAxCtG,EAAAuG,EAAA,GAAYnF,EAAAmF,EAAA,GAgBnB,OAdA9E,EAAAA,EAAAA,YAAU,gBACJiB,IAAA,IAAmBA,GACrBtB,EAAcsB,EACf,GACA,CAACA,IAWFpC,EAAAA,cAACyC,EAAmByD,SAAQ,CAC1BC,MAAO,CACLb,WAAA5F,EACA6F,iBAZmB,WACnBnF,GACFA,GAAcV,GAGhBoB,GAAepB,EAAW,IAUxBM,EAAAA,cAACoB,EAA0B,CACzBd,UAAWsF,IAAK7E,EAAsBZ,IAErCL,GAIT,CAEAuC,EAAY8C,YAAc,cAC1BX,EAAkBW,YAAc,oBAChC3D,EAAmB2D,YAAc,6JC3EpBiB,EAA2B,SACtC1G,EACAwB,GAEA,IAEIf,EAFIiC,EAA+C1C,EAAjD0C,EAAiBzC,EAAgCD,EAAlC2C,EAAUrC,EAAwBN,EAA1B4E,EACzBxD,EAAgBsB,EAGdiE,EAAsD,SAAC3G,EAAUwB,GACrE,IAAMkB,EAAOtB,EAEPK,EAASzB,EACTU,EAAUc,IAAUvB,GAAUA,EAAOyC,EAAMjB,GAAUiB,IAASjB,GAOpE,OALIf,GAAWJ,KACbc,EAASK,EACThB,EAAYiC,GAGP,CAACtB,EAAQV,EAASD,EAAU,EAWrC,MAAO,CAACe,EATyC,SAAAxB,GAAA,OAC/C2G,EAAsBnF,EAAQJ,EAAQX,GAAYT,EAAA,EAQb2G,EANU,SAAA3G,GAAA,MAAoB,CACnEoB,IACEpB,EACFS,EAAA,EAKc,ECjELT,EACO,qBAAX4G,QAEa,qBAAbC,SCDIrF,EAAOxB,EAAY4G,OAAS,CAAC,EAC7BlE,EAAUoE,KAAKC,IACf9G,EAAU6G,KAAKE,IACf1G,EAAYwG,KAAKG,MAIjBxG,GADUqG,KAAKI,IACT1F,EAAI2F,sBACV1F,EAAMD,EAAI4F,sBACV1G,EAAOc,EAAI6F,WACXjH,EAASoB,EAAI8F,aCVpBC,EAAa,SAAAvH,GAAA,MACyB,qBAAlCwB,EAAIxB,GACRwB,EAAIxB,QAAA,CACJ,EAEO2C,EAA8B4E,EAAgC,oBAC9DlG,EACXkG,EAAoC,wBACzBzF,EAA4ByF,EAA8B,kBAC1D3C,EAAU2C,EAAwD,kBCRzE3F,EAAkB5B,GAAawH,KAAKC,aAC1CC,EAAqCrE,OAAOsE,UAApC3F,EAAA0F,EAAFE,SAAYtG,EAAAoG,EAAAG,eACZtG,EAAU,oBAEHuG,EAAe,SAAA9H,GAAA,YAA+B,IAAAA,CAAQ,EAEtD+H,EAAU,SAAA/H,GAAA,OAAkC,OAARA,CAAQ,EAO5CgI,EAAY,SAAAhI,GAAA,MAA2C,kBAARA,CAAQ,EAEvDiI,EAAY,SAAAjI,GAAA,MAA2C,kBAARA,CAAQ,EAEvDkI,EAAa,SAAAlI,GAAA,MAA4C,mBAARA,CAAQ,EAEzDmI,EAAc,SAAAnI,GAAA,MAA4D,oBAARA,CAAQ,EAE1EoI,EAAoB,SAAApI,GAAA,OAA8BqI,MAAMD,QAAQpI,EAAA,EAEhEsI,EAAY,SAAAtI,GAAA,MACR,kBAARA,IAAqBoI,EAAQpI,KAAS+H,EAAO/H,EAAA,EAMzCuI,EAA4C,SAAAvI,GACvD,IAAMwB,IAAWxB,GAAOA,EAAIkE,OACtBxB,EAAsBsF,EAASxG,IAAWA,GAAU,GAAKA,EAAS,GAAK,EAE7E,SAAO4G,EAAQpI,KAAUmI,EAAWnI,IAAQ0C,OACxClB,EAAS,GAAK8G,EAAStI,KACrBwB,EAAS,KAAKxB,EAEX,EAOEwI,EAA0B,SAAAxI,GACrC,IAAKA,IAAQsI,EAAStI,IAAsB,WAtCzB,SAAAA,GAAA,OACnB8H,EAAY9H,IAAQ+H,EAAO/H,GAAA,GAAA2E,OACpB3E,GACHgC,EAASyG,KAAKzI,GAAK0I,QAAQnH,EAAS,MAAMoH,aAAA,CAmChBC,CAAK5I,GAAmB,OAAO,EAE7D,IAAIwB,EACEkB,EAAO,cACPzC,EAAOD,EAAI0C,GACXpC,EAAYL,GAAQA,EAAK0H,UACzBvG,EAAoBE,EAAemH,KAAKzI,EAAK0C,GAC7CjC,EAAmBH,GAAagB,EAAemH,KAAKnI,EAAW,iBAErE,GAAIL,IAASmB,IAAsBX,EACjC,OAAO,EAIT,IAAKe,KAAOxB,GAKZ,OAAO8H,EAAYtG,IAAQF,EAAemH,KAAKzI,EAAKwB,EAAI,EAO7CqH,EAAiB,SAAA7I,GAC5B,IAAMwB,EAAgBsH,YACtB,QAAO9I,IACHwB,EACExB,aAAewB,EACfxB,EAAI+I,WAAanH,EACd,EAOEoH,EAAa,SAAAhJ,GACxB,IAAMwB,EAAgByH,QACtB,QAAOjJ,IACHwB,EACExB,aAAewB,EACfxB,EAAI+I,WAAanH,EACd,ECrEK,SAAAsH,EACdlJ,EACAwB,GAEA,GAAI+G,EAAYvI,GACd,IAAK,IAAI0C,EAAI,EAAGA,EAAI1C,EAAOkE,SACc,IAAnC1C,EAASxB,EAAO0C,GAAIA,EAAG1C,GADM0C,UAK1B1C,GAETkJ,EAAK7F,OAAO8F,KAAKnJ,IAAU,SAAA0C,GAAA,OAAQlB,EAASxB,EAAO0C,GAAMA,EAAK1C,EAAA,IAEhE,OAAOA,CACT,CAQO,IAAMoJ,EAAU,SAAUpJ,EAAUwB,GAAA,OAAqBxB,EAAIqJ,QAAQ7H,IAAS,GAQxEmD,EAAS,SAAI3E,EAA2BwB,GAAA,OAAmCxB,EAAE2E,OAAOnD,EAAA,EAOpF8H,EAAO,SAAItJ,EAAYwB,EAAyBkB,GAI3D,OAHCA,GAAsBuF,EAASzG,KAAU+G,EAAY/G,GAElDxB,EAAMsJ,KAAK9H,GADX6G,MAAMV,UAAU2B,KAAKC,MAAMvJ,EAAOwB,GAE/BxB,CAAK,EAODwJ,EAAiB,SAAAxJ,GAAA,OAAgCqI,MAAMmB,KAAKxJ,GAAO,KAOnEyJ,EAAwB,SAAAzJ,GAAA,OAAyBoI,EAAQpI,GAASA,EAAQ,CAACA,EAAA,EAM3E0J,EAAgB,SAAA1J,GAAA,QAA+CA,IAAUA,EAAMkE,MAAA,EAO/EyF,EAAqC,SAAA3J,GAAA,OAAgBwJ,EAAK,IAAII,IAAI5J,GAAA,EAQlE6J,EAAkB,SAAC7J,EAAoBwB,EAAckB,GAGhEwG,EAAKlJ,GADU,SAAAA,GAAA,OAAoBA,GAAMA,EAAGuJ,WAAA,EAAiB/H,GAAQ,QAEpEkB,IAAU1C,EAAckE,OAAS,EAAE,EC1GzB5B,EAAgB,aAChBa,EAAkB,eAClBF,EAAiB,cACjB6G,EAAmB,gBACnBpI,GAAgB,aAChBqI,GAAiB,cACjBC,GAAkB,eAClB9D,GAAe,YACfrD,GAAe,YACfoH,GAAW,QACXC,GAAY,SACZC,GAAY,SACZpH,GAAa,UCEbqH,GAAQ,SACnBpK,EACAwB,EACAkB,EACAzC,GAEA,GAAID,GAAKwB,EAAG,CACV,IAAIlB,GAAS,EAQb,OAPA4I,EAAKxG,GAAQ,SAAAA,IACMzC,EAAeA,EAAaD,EAAE0C,IAAS1C,EAAE0C,OACzCzC,EAAeA,EAAauB,EAAEkB,IAASlB,EAAEkB,MAExDpC,GAAS,EACX,IAEKA,CACT,CACA,OAAO,CAAK,EASD+J,GAAU,SAAIrK,EAAWwB,GAAA,OAAc4I,GAAapK,EAAGwB,EAAG,CAAC,IAAK,OAQhE8I,GAAU,SAAItK,EAAWwB,GAAA,OAAc4I,GAAapK,EAAGwB,EAAG,CAAC,IAAK,OAQhE+I,GAAY,SAACvK,EAAUwB,GAAA,OAAa4I,GAAYpK,EAAGwB,EAAG,CAAC,IAAK,IAAK,IAAK,OCxDtEgJ,GAAO,aC+BPC,GAAO,SAClBzK,GAAA,QAAA0K,EAAAC,UAAAzG,OACG1C,EAAA,IAAA6G,MAAAqC,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAApJ,EAAAoJ,EAAA,GAAAD,UAAAC,GAAA,OACqB5K,EAAGyK,KAAAlB,MAAHvJ,EAAA,CAAQ,GAAA2E,OAAMnD,GAAA,EAO3BqJ,GAAoB,SAAA7K,GAC/B,IAAIwB,EACEkB,EAAS1C,EAAUU,EAAOe,EAC1BxB,EAAWD,EAAUI,EAASK,EACpC,MAAO,CACJ,SAAAH,GACCL,EAASuB,GAETA,EAAKkB,EAAOpC,EAAU6H,EAAWnI,GAAWA,IAAYA,EAAQ,EAElE,kBAAMC,EAASuB,EAAA,EAC+C,EAQrDsJ,GAAW,SACtB9K,EACAwB,GAEA,IAAIkB,EACAzC,EACAK,EACAc,EAAQoJ,GACZjG,EAA8C/C,GAAW,CAAC,EAAlDmB,EAAA4B,EAAF3C,EAAYP,EAAAkD,EAAFjD,EAAaQ,EAAAyC,EAAFuF,EAErBlF,EAA2B,SAAUpD,GACzCJ,IACAhB,EAAOsC,GACPA,EAAezC,OAAA,EACfmB,EAAQoJ,GAGRxK,EAAmBuJ,MAAMwB,KAAMvJ,IAG3BwJ,EACJ,SAAAhL,GAAA,OAEA8B,GAAgB7B,EAAgB6B,EAAa7B,EAAeD,GAAQA,CAAA,EAEhEiL,EAAQ,WAER7J,IAAUoJ,IACZ5F,EAAyBoG,EAAW1K,IAAqBA,EAC3D,EAGIsB,EAAc,WAElB,IAAM5B,EAAuCwJ,EAAKmB,WAC5CnJ,EAAe2G,EAAWxF,GAAYA,IAAaA,EAGzD,GAFmBqF,EAASxG,IAAiBA,GAAgB,EAE7C,CACd,IAAMmB,EAAewF,EAAW9G,GAAaA,IAAcA,EACrDS,EAAakG,EAASrF,IAAiBA,GAAgB,EACvDf,EAAeJ,EAAe,EAAId,EAAOe,EACzCO,EAAiBR,EAAe,EAAIpB,EAASK,EAE7Cc,EADoByJ,EAAWhL,IACIA,EACnCsC,EAAcsC,EAAyB6F,KAAK,EAAGlJ,GAMrDH,IAEA,IAAM+B,EAAYvB,EAAaU,EAAad,GAC5CJ,EAAQ,kBAAMY,EAAemB,EAAA,EAEzBrB,IAAeY,IACjBA,EAAehC,EAAKuK,EAAOtI,IAG7B1C,EAAgBK,EAAkBiB,CACpC,MACEqD,EAAyB5E,IAK7B,OAFA4B,EAAYF,EAASuJ,EAEdrJ,CAA4C,ECtHxCiG,GAAiB,SAAC7H,EAAUwB,GAAA,OACvC6B,OAAOsE,UAAUE,eAAeY,KAAKzI,EAAKwB,EAAA,EAM/B2H,GAAQ,SAAAnJ,GAAA,OAA6BA,EAAMqD,OAAO8F,KAAKnJ,GAAO,IAyB9DkL,GAAyB,SAAzBA,EACXlL,EACAwB,EACAkB,EACAzC,EACAK,EACAc,EACAX,GAEA,IAAMgB,EAAsB,CAACD,EAASkB,EAASzC,EAASK,EAASc,EAASX,GAyC1E,MAtCuB,kBAAXT,IAAuB+H,EAAO/H,IAAamI,EAAWnI,KAChEA,EAAS,CAAC,GAGZkJ,EAAKzH,GAAU,SAAAD,GAEb0H,EAAK1H,GAAQ,SAACkB,EAAGzC,GACf,IAAMK,EAAYkB,EAAOvB,GAIzB,GAAID,IAAWM,EACb,OAAO,EAGT,IAAMc,EAAcgH,EAAQ9H,GAG5B,GAAIA,GAAQkI,EAAclI,GAAO,CAC/B,IAAMkB,EAAMxB,EAAOC,GACfyC,EAAalB,EAGbJ,IAAgBgH,EAAQ5G,GAC1BkB,EAAQ,GACEtB,GAAgBoH,EAAchH,KACxCkB,EAAQ,CAAC,GAIX1C,EAAOC,GAAkBiL,EAAWxI,EAAOpC,EAC7C,MACEN,EAAOC,GAAkBmB,EAAcd,EAAK6K,QAAU7K,CACxD,GACA,IAIGN,CAAa,EAGToL,GAA4B,SAA5BA,EAAoDpL,EAAWwB,GAAA,OAC1E0H,EAAKgC,GAAW,CAAC,EAAGlL,IAAS,SAACA,EAAO0C,EAAKzC,QACpC,IAAAD,SACKC,EAAKyC,GACHlB,GAAQxB,GAASwI,EAAcxI,KACxCC,EAAKyC,GAA4B0I,EAA0BpL,EAAOwB,GACpE,KAOS6J,GAAiB,SAAArL,GAE5B,IAAK,IAAMwB,KAAQxB,EAAK,OAAO,EAC/B,OAAO,CAAI,ECrGAsL,GAAY,SAACtL,EAAawB,EAAalB,GAAA,OAClDoC,EAAQ1C,EAAKC,EAAQuB,EAAKlB,GAAA,ECHfiL,GAAqB,SAAAvL,GAAA,OAChCwJ,EAAK,IAAII,KAAKxB,EAAQpI,GAAUA,GAAUA,GAAU,IAAIwL,MAAM,MAAMC,QAAQ,SAAAzL,GAAA,OAAUA,CAAA,OAQ3E0L,GAAU,SAAC1L,EAA6BwB,GAAA,OACnDxB,GAAOA,EAAI2L,aAAanK,EAAA,EAQboK,GAAU,SAAC5L,EAA6BwB,GAAA,OACnDxB,GAAOA,EAAI6L,aAAarK,EAAA,EAObsK,GAAW,SACtB9L,EACAwB,EACAkB,GAEAwG,EAAKqC,GAAkB/J,IAAa,SAAAA,GAClCxB,GAAOA,EAAI+L,aAAavK,EAAUkB,GAAS,GAAG,GAC9C,EAQSsJ,GAAc,SAAChM,EAA6BwB,GACvD0H,EAAKqC,GAAkB/J,IAAa,SAAAA,GAAA,OAAaxB,GAAOA,EAAIiM,gBAAgBzK,EAAA,GAAU,EAG3E0K,GAAmB,SAAClM,EAA6BwB,GAC5D,IAAMkB,EAAa6I,GAAkBG,GAAQ1L,EAAKwB,IAC5CvB,EAAawK,GAAKqB,GAAU9L,EAAKwB,GACjC2K,EAAwB,SAACnM,EAA4BwB,GACzD,IAAMvB,EAAgB,IAAI2J,IAAIlH,GAE9B,OADAwG,EAAKqC,GAAkBvL,IAAmB,SAAAA,GAAA,OAAUC,EAAcuB,GAAWxB,EAAA,IACtEwJ,EAAKvJ,GAAemM,KAAK,IAAI,EAGtC,MAAO,CACLrC,EAAU,SAAA/J,GAAA,OAA4BC,EAAWkM,EAAsBnM,EAAc,YACrFgK,EAAO,SAAAhK,GAAA,OAAyBC,EAAWkM,EAAsBnM,EAAW,SAC5EkG,EAAO,SAAAlG,GACL,IAAMwB,EAAW+J,GAAkBvL,GACnC,OAAOwB,EAAS6K,QACd,SAACrM,EAASwB,GAAA,OAAUxB,GAAW0C,EAAW4J,SAAS9K,EAAA,GACnDA,EAAS0C,OAAS,EACnB,EAEJ,EASUqI,GAAkB,SAC7BvM,EACAwB,EACAkB,GAEAwJ,GAAiBlM,EAAKwB,GAAUuI,EAAQrH,EAAM,EASnC8J,GAAe,SAACxM,EAA6BwB,EAAkBkB,GAE1E,OADAwJ,GAAiBlM,EAAKwB,GAAUwI,EAAKtH,GAC9B+H,GAAK8B,GAAiBvM,EAAKwB,EAAUkB,EAAM,EAGvC+J,GAAqB,SAChCzM,EACAwB,EACAkB,EACAzC,IAECA,EAAMuM,GAAeD,IAAiBvM,EAAKwB,EAAUkB,EAAM,ECnGxDgK,GAA2B,SAAA1M,GAAA,OAA2BkM,GAAiBlM,EAAK,UAerE2M,GAAc,SAAC3M,EAAwBwB,GAClDkL,GAAwB1M,GAAK+J,EAAQvI,EAAU,EASpCoL,GAAW,SAAC5M,EAAwBwB,GAE/C,OADAkL,GAAwB1M,GAAKgK,EAAKxI,GAC3BiJ,GAAKkC,GAAa3M,EAAKwB,EAAU,ECtBpCqL,GAAO,SAAC7M,EAAkBwB,GAC9B,IAAMkB,EAAsB,GACtBzC,EAAUuB,EAAMwH,EAAUxH,IAAQA,EAAMqF,SAE9C,OAAO5G,EAAUqJ,EAAK5G,EAAKzC,EAAQ6M,iBAAiB9M,IAAa0C,CAAG,EAmBhEqK,GAAK,SAAC/M,EAAuBwB,GACjC,QAAIwH,EAAUhJ,IACLA,EAAIgN,QAAQxL,EAET,EAGRyL,GAAiB,SAAAjN,GAAA,OAA0B+M,GAAG/M,EAAK,SAsBnDkN,GAAY,SAAAlN,GAAA,OAChBA,EAAMwJ,EAAKxJ,EAAImN,YAAc,IAMzBC,GAAU,SAAApN,GAAA,OAA6CA,GAAOA,EAAIqN,aAAA,EAQlEC,GAAU,SAACtN,EAAuBwB,GAAA,OACtCwH,EAAUhJ,IAAQA,EAAIsN,QAAQ9L,EAAA,EAM1B+L,GAAqB,SAAAvN,GAAA,OAAoBA,GAAO6G,UAAU2G,aAAA,EAQ1DC,GAAc,SAClBzN,EACAwB,EACAkB,GAEA,IAAMzC,EAAyBqN,GAAQtN,EAAKwB,GACtClB,EAAyBN,GA5Ef,SAACA,EAAkBwB,GACnC,IAAMkB,EAAUlB,EAAMwH,EAAUxH,IAAQA,EAAMqF,SAE9C,OAAOnE,EAAUA,EAAQgL,cAAc1N,GAAY,IAAI,CAyEjB2N,CAAUjL,EAAsBzC,GAChEmB,EACJkM,GAAQhN,EAAwBkB,KAA0BvB,EAE5D,SAAOA,IAA0BK,KAC7BL,IAA2BD,GACzBM,IAA2BN,GAC1BoB,GACCkM,GAAQA,GAAQtN,EAAK0C,GAAuBlB,KAC1CvB,EACD,ECjGE2N,GAAkB,SAAlBA,EAAkB5N,GAC7B,GAAIuI,EAAYvI,GACdkJ,EAAKM,EAAKxJ,IAAS,SAAAA,GAAA,OAAM4N,EAAe5N,EAAA,SACnC,GAAIA,EAAO,CAChB,IAAMwB,EAAY4L,GAAOpN,GACzBwB,GAAaA,EAAUqM,YAAY7N,EACrC,GAUI8N,GAAS,SACb9N,EACAwB,EACAkB,GAEA,GAAIA,GAAgB1C,EAAW,CAC7B,IACIM,EADAL,EAA6BuB,EA2BjC,OAxBI+G,EAAY7F,IACdpC,EAAWuG,SAASkH,yBAGpB7E,EAAKxG,GAAe,SAAA1C,GACdA,IAAgBC,IAClBA,EAASD,EAAYgO,iBAEvB1N,EAAU2N,YAAYjO,EAAY,KAGpCM,EAAWoC,EAITlB,IACGvB,EAEMA,IAAWuB,IACpBvB,EAASA,EAAOiO,aAFhBjO,EAASD,EAAUmO,YAMvBnO,EAAUoO,aAAa9N,EAAUL,GAAU,MACpC,kBAAM2N,GAAelL,EAAA,CAC9B,CACA,OAAO8H,EAAI,EASA6D,GAAiB,SAACrO,EAA0BwB,GAAA,OACvDsM,GAAO9N,EAAM,KAAMwB,EAAA,EA0BR8M,GAAc,SAACtO,EAA0BwB,GAAA,OACpDsM,GAAOV,GAAOpN,GAAOA,GAAQA,EAAKkO,YAAa1M,EAAA,EC5FpC+M,GAAa,SAAAvO,GACxB,IAAMwB,EAAMqF,SAAS2H,cAAc,OAEnC,OADA1C,GAAStK,EAAK,QAASxB,GAChBwB,CAAG,EAOCiN,GAAa,SAAAzO,GACxB,IAAMwB,EAAa+M,KAGnB,OAFA/M,EAAWkN,UAAY1O,EAAK2O,OAErBzF,EAAKgE,GAAS1L,IAAc,SAAAxB,GAAA,OAAQ4N,GAAe5N,EAAA,GAAK,ECR3D4O,GAAqB,MAErBC,GAAY,SAAC7O,EAAoCwB,GAAA,OACrDxB,EAAc8O,iBAAiBtN,IAASxB,EAAcwB,IAAgB,IAElEuN,GAAqB,SAAA/O,GACzB,IAAMwB,EAASxB,GAAU,EACzB,OAAOgP,SAASxN,GAAUA,EAAS,CAAC,EAGhCyN,GAAuB,SAAAjP,GAAA,OAA2B+O,GAAkBG,WAAWlP,GAAS,MAEjFmP,GAAqB,SAAAnP,GAAA,SAAA2E,QACD,IAA3BoK,GAAkB/O,IAAcoP,QAAQ,SAEjCC,GAAiB,SAAArP,GAAA,SAAA2E,OAAsBoK,GAAkB/O,GAAA,OAEtD,SAAAsP,GAAUtP,EAAwBwB,GAChDxB,GACEkJ,EAAK1H,GAAQ,SAACA,EAA4BkB,GACxC,IACE,IAAMzC,EAAWD,EAAIgB,MACfV,EAAQ0H,EAASxG,GAAY6N,GAAc7N,IAAaA,GAAY,IAAM,GAE5EoN,GAAmBW,KAAK7M,GAC1BzC,EAASuP,YAAY9M,EAAMpC,GAE3BL,EAASyC,GAAepC,CAE5B,CAAE,MAAAL,GAAO,IAEf,UAYgBwP,GACdzP,EACA0C,EACAzC,GAEA,IAAMK,EAAiB2H,EAASvF,GAC5BtB,EAAwCd,EAAiB,GAAK,CAAC,EAEnE,GAAIN,EAAK,CACP,IAAMS,EAAgBe,EAAIkO,iBAAiB1P,EAAKC,IAAcD,EAAIgB,MAClEI,EAAkBd,EACduO,GAAUpO,EAAeiC,GACzBA,EAAO2J,QAAO,SAACrM,EAAQwB,GAErB,OADAxB,EAAOwB,GAAOqN,GAAUpO,EAAee,GAChCxB,CAAM,GACZoB,EACT,CACA,OAAOA,CACT,CAEO,ICvBHuO,GDuBSC,GAAqB,SAAA5P,GAAA,MACA,QAAhCyP,GAAUzP,EAAK,YAAiB,EAQrB6P,GAAqB,SAChC7P,EACAwB,EACAkB,GAEA,IAAMzC,EAAcuB,EAAA,GAAAmD,OAAoBnD,EAAA,KAAoB,GACtDlB,EAAcoC,EAAA,IAAAiC,OAAqBjC,GAAmB,GACtDtB,EAAA,GAAAuD,OAAS1E,EAAA,OAAA0E,OAAiBrE,GAC1BG,EAAA,GAAAkE,OAAW1E,EAAA,SAAA0E,OAAmBrE,GAC9BmB,EAAA,GAAAkD,OAAY1E,EAAA,UAAA0E,OAAoBrE,GAChCI,EAAA,GAAAiE,OAAU1E,EAAA,QAAA0E,OAAkBrE,GAC5BF,EAASqP,GAAUzP,EAAK,CAACoB,EAAKX,EAAOgB,EAAQf,IACnD,MAAO,CACLV,EAAGiP,GAAoB7O,EAAOgB,IAC9BX,EAAGwO,GAAoB7O,EAAOK,IAC9B6B,EAAG2M,GAAoB7O,EAAOqB,IAC9BA,EAAGwN,GAAoB7O,EAAOM,IAC/B,EAGUoP,GAA4B,SACvC9P,EACAwB,GAAA,kBAAAmD,OAGE2D,EAAStI,GAAA,IAAA2E,OAAa3E,EAAM6C,EAAA,KAAA8B,OAAK3E,EAAMiD,EAAA,QAAA0B,OAAUnD,EAAe,IAAM,SAAAmD,OAAO3E,EAAA,OElG3EoF,GAAc,CAClBjC,EAAG,EACHnB,EAAG,GAGC+N,GAA4B,SAChC/P,EACAwB,GAAA,OAEAA,EACI,CACE2B,EAAI3B,EAAA,GAAAmD,OAAe3E,EAAA,UACnBgC,EAAIR,EAAA,GAAAmD,OAAe3E,EAAA,YAErBoF,EAAA,EAKO4K,GAAc,SAAAhQ,GAAA,OACzB+P,GAA0B,QAAS/P,GAAawB,EAAA,EAMrCyO,GAAaxF,GAAKsF,GAAwC,UAQ1DG,GAAazF,GAAKsF,GAAwC,UAQ1DI,GAAa1F,GAAKsF,GAAwC,UAQ1DK,GAAkB,SAAApQ,GAC7B,IAAMwB,EAAW0N,WAAWO,GAAUzP,EAAKiK,MAAc,EACnDvH,EAAYwM,WAAWO,GAAUzP,EAAKkK,MAAe,EAC3D,MAAO,CACL/G,EAAG3B,EAAWlB,EAAUkB,GACxBQ,EAAGU,EAAYpC,EAAUoC,GAC1B,EAOU2N,GAAyB,SAAArQ,GAAA,OAA8BA,EAAIqQ,uBAAA,EAY3DC,GAAwB,SAAAtQ,GAAA,SAChCA,IAASA,EAAKkK,MAAclK,EAAKiK,IAAA,EAQzBsG,GAAkB,SAC7BvQ,EACAwB,GAEA,IAAMkB,EAAoB4N,GAAqBtQ,GAE/C,OAD0BsQ,GAAqB9O,IAClBkB,CAAiB,EChFnC8N,GAAsB,SACjCxQ,EACAwB,EACAkB,EACAzC,GAEAiJ,EAAKqC,GAAkB/J,IAAc,SAAAA,GACnCxB,EAAOwQ,oBAAoBhP,EAAWkB,EAA2BzC,EAAQ,GACzE,EAUSwQ,GAAmB,SAC9BzQ,EACAwB,EACAkB,EACAzC,GACgB,IAAAK,EACVc,EAAsC,OAA/Bd,EAAIL,GAAWA,EAAQgK,IAAQ3J,EACtCG,EAAWR,GAAWA,EAAQkK,IAAa,EAC3C1I,EAAQxB,GAAWA,EAAQ2O,IAAU,EACrClO,EAAyC,CAC7CgQ,QAAAtP,EACAuP,QAAAlQ,GAGF,OAAOgK,GACLZ,EACA0B,GAAkB/J,GAAY+B,KAAK,SAAA/B,GACjC,IAAMvB,EACJwB,EACK,SAAAnB,GACCkQ,GAAoBxQ,EAAQwB,EAAWvB,EAAeQ,GACtDiC,EAASpC,EAAI,EAEfoC,EAIN,OADA1C,EAAOyQ,iBAAiBjP,EAAWvB,EAAeS,GAC3C+J,GAAK+F,GAAqBxQ,EAAQwB,EAAWvB,EAAeQ,EAAQ,IAE9E,EAyBUmQ,GAAmB,SAAA5Q,GAAA,OAAqBA,EAAI4Q,iBAAA,EAM5CC,GAAkB,SAAA7Q,GAAA,OAAqBA,EAAI6Q,gBAAA,EC5FlD3L,GAAc,CAClBrC,EAAG,EACHI,EAAG,GAOQ6N,GAAuB,SAAA9Q,GAClC,IAAM0C,EAAO1C,GAAOqQ,GAAsBrQ,GAC1C,OAAO0C,EACH,CACEG,EAAGH,EAAKqO,KAAOvP,EAAIwP,QACnB/N,EAAGP,EAAKuO,IAAMzP,EAAI0P,SAEpBhM,EAAO,ECVAiM,GAAwB,SACnCnR,EACAwB,EACAkB,GAAA,OAEAA,EACIA,EAAkBlB,EACE,EAAjBxB,EACD0C,EAAkBhC,EAClBc,EAAiBxB,EACjBA,EACFA,CAAA,EAQOoR,GAAqB,SAChCpR,EACAwB,GAAA,MAC+B,CAC/B2P,GAAsB,EAAGnR,EAAgBwB,GACzC2P,GAAsBnR,EAAgBA,EAAgBwB,GAAA,EAU3C6P,GAAoB,SAC/BrR,EACAwB,EACAkB,GAAA,OAEA4I,GACE,EACA,EACA6F,GAAsBnR,EAAmBwB,EAAgBkB,GAAqBlB,GAC5E,IAQO8P,GAAkB,SAC7BtR,EACAwB,GAEA,IAAA+P,EAAiBvJ,EAASxG,GAAY,CAAEqB,EAAGrB,EAAUyB,EAAGzB,GAAaA,GAAY,CAAC,EAA1EkB,EAAA6O,EAAF1O,EAAK5C,EAAAsR,EAAFtO,EACT+E,EAAStF,KAAO1C,EAAIwR,WAAa9O,GACjCsF,EAAS/H,KAAOD,EAAIyR,UAAYxR,EAAE,EAQvByR,GAAmB,SAAA1R,GAAA,MAAoC,CAClE6C,EAAG7C,EAAIwR,WACPvO,EAAGjD,EAAIyR,YCxCHE,GAAiB,SACrB3R,EACAwB,GAEA0H,EAAKO,EAAkBjI,GAAWxB,EAAS,EAGhC4R,GACX,SAAA5R,GAEA,IAAMwB,EAAS,IAAIqQ,IAEbC,EAAsC,SAAC9R,EAAM0C,GACjD,GAAI1C,EAAM,CACR,IAAMC,EAAWuB,EAAOuQ,IAAI/R,GAC5B2R,IAAgB,SAAA3R,GACVC,GACFA,EAASD,EAAe,SAAW,SAASA,EAC9C,GACC0C,EACL,MACElB,EAAOwQ,SAAS,SAAAhS,GACdA,EAASiS,OAAO,IAElBzQ,EAAOyQ,OACT,EAGIC,EAAgC,SAAhCA,EACJlS,EACA0C,GAKA,GAAIuF,EAASjI,GAAuB,CAClC,IAAMC,EAAWuB,EAAOuQ,IAAI/R,IAAyB,IAAI4J,IAOzD,OANApI,EAAO2Q,IAAInS,EAAsBC,GAEjC0R,IAAgB,SAAA3R,GACdmI,EAAWnI,IAAiBC,EAASmS,IAAIpS,EAAa,GACrD0C,GAEI+H,GACLqH,EACA9R,EACA0C,EAEJ,CACIwF,EAAUxF,IAAmBA,GAC/BoP,IAGF,IAAM7R,EAAoBkJ,GAAKnJ,GACzBM,EAAyB,GAM/B,OALA4I,EAAKjJ,GAAoB,SAAAuB,GACvB,IAAMkB,EAAiB1C,EAAmDwB,GAC1EkB,GAAiB4G,EAAKhJ,EAAQ4R,EAAS1Q,EAAKkB,GAAe,IAGtD+H,GAAKZ,EAAiBvJ,EAAO,EAetC,OAFA4R,EAASlS,GAAyB,CAAC,GAE5B,CAACkS,EAAUJ,EAZ4B,SAAC9R,EAAM0C,GACnDwG,EAAKM,EAAKhI,EAAOuQ,IAAI/R,KAAS,SAAAA,GACxB0C,IAASgH,EAAahH,GACvB1C,EAA6DuJ,MAAM,EAAG7G,GAEtE1C,GACH,GACA,EAKwC,ECtCxCqS,GAAgB,SAAArS,GAAA,OACpBsS,KAAKC,UAAUvS,GAAO,SAACA,EAAGwB,GACxB,GAAI2G,EAAW3G,GACb,MAAM,EAER,OAAOA,CAAG,KAGRgR,GAAgB,SAAIxS,EAAUwB,GAAA,OAClCxB,EACO,GAAA2E,OAAAnD,GACAgK,MAAM,KACNa,QAAO,SAACrM,EAAGwB,GAAA,OAAUxB,GAAK6H,GAAe7H,EAAGwB,GAAQxB,EAAEwB,QAAA,CAAQ,GAAYxB,QAAA,CAC7E,EA8HOyS,GAAkC,CAC7CC,iBAAiB,EACjBC,8BAA8B,EAC9BC,OAAQ,CACNC,cAAe,CAAC,CAAC,MAAO,SACxB/H,SAAU,CAAC,EAAG,IACdgI,WAAY,KACZC,eAAgB,MAElBC,SAAU,CACRnQ,EAAG,SACHI,EAAG,UAELgQ,WAAY,CACVC,MAAO,gBACPjS,WAAY,OACZkS,SAAU,QACVC,cAAe,KACfC,iBAAiB,EACjBC,YAAY,EACZC,aAAa,EACbC,SAAU,CAAC,QAAS,QAAS,SAIpBC,GAAiB,SAAjBA,EAAqBzT,EAAgBwB,GAChD,IAAMkB,EAAuB,CAAC,EAgC9B,OA3BAwG,EAJoBvE,EAAOwE,GAAK3H,GAAa2H,GAAKnJ,KAI/B,SAAAC,GACjB,IAAMK,EAAkBN,EAAYC,GAC9BmB,EAAiBI,EAAWvB,GAElC,GAAIqI,EAAShI,IAAoBgI,EAASlH,GACxC8J,GAAYxI,EAAKzC,GAAa,CAAC,EAAWwT,EAAenT,EAAiBc,IAEtEiK,GAAc3I,EAAKzC,YACdyC,EAAKzC,QAET,GAAI4H,GAAerG,EAAYvB,IAAcmB,IAAmBd,EAAiB,CACtF,IAAIN,GAAS,EAEb,GAAIoI,EAAQ9H,IAAoB8H,EAAQhH,GACtC,IACMiR,GAAa/R,KAAqB+R,GAAajR,KACjDpB,GAAS,EAEb,CAAE,MAAAS,GAAO,CAGPT,IACF0C,EAAKzC,GAAamB,EAEtB,KAGKsB,CAAI,EAGAgR,GACX,SACE1T,EACAwB,EACAkB,GAAA,OAED,SAAAzC,GAAA,MACC,CAACuS,GAAcxS,EAASC,GAAOyC,QAAuC,IAA9B8P,GAAchR,EAAgBvB,GAAU,GC9R9E0T,GAAA,yBAGOC,GAAuB,iBACvBC,GAAA,GAAAlP,OAAyCiP,GAAA,qBAGzCE,GAAA,GAAAnP,OAA6BgP,GAAA,eAG7B7O,GAAoB6O,GACpB3O,GAAA,GAAAL,OAAgCG,GAAA,eAChCiP,GAAA,GAAApP,OAAgCG,GAAA,eAChCkP,GAA+B,kBAG/BC,GAAwB,WAIxBC,GAAA,GAAAvP,OAA2BgP,GAAA,aAC3BQ,GAA2B,UAC3BC,GAAmC,kBACnCC,GAAmCL,GAGnCM,GAAA,GAAA3P,OAA0BgP,GAAA,YAC1BY,GAAkCF,GAGlCG,GAAA,GAAA7P,OAA0BgP,GAAA,YAG1Bc,GAAwB,mBACxBC,GAAA,GAAA/P,OAAiC8P,GAAA,WACjCE,GAAA,GAAAhQ,OAAmC8P,GAAA,aAEnCG,IADA,GAAAjQ,OAAyCgQ,GAAA,WACzC,GAAAhQ,OAAuCgQ,GAAA,UAQvCE,IAPA,GAAAlQ,OAA4CiQ,GAAA,UAOvB,gBACrBE,GAAA,GAAAnQ,OAA2BkQ,GAAA,QAC3BE,GAAA,GAAApQ,OAAkCkQ,GAAA,eAClCG,GAAA,GAAArQ,OAAgCkQ,GAAA,aAChCI,GAAA,GAAAtQ,OAA6BkQ,GAAA,UAC7BK,GAAA,GAAAvQ,OAA8BkQ,GAAA,WAC9BM,GAAA,GAAAxQ,OAA+BkQ,GAAA,YAC/BO,GAAA,GAAAzQ,OAAkCkQ,GAAA,eAElCQ,GAAA,GAAA1Q,OAAmCkQ,GAAA,gBACnCS,GAAA,GAAA3Q,OAAgCkQ,GAAA,aAChCU,GAAA,GAAA5Q,OAAgCkQ,GAAA,cAChCW,GAAA,GAAA7Q,OAAsC4Q,GAAA,WACtCE,GAAA,GAAA9Q,OAA6BkQ,GAAA,UAC7Ba,GAAA,GAAA/Q,OAAwCsQ,GAAA,gBACxCU,GAAA,GAAAhR,OAAyCuQ,GAAA,gBC0DzCU,GAA8C,CAAC,EAG/CC,GAA2E,CAAC,EAe5EC,GAAgC,SAC3C9V,EACAwB,EACAkB,GAAA,OAMAyG,GAAKnJ,GAAQuD,KAAK,SAAAtD,GAChB,IAAA8V,EACE/V,EACAC,GAFcK,EAAAyV,EAARC,OAA4B5U,EAAA2U,EAAVE,SAG1BC,EAAgDxT,GAAgB,GAAAyT,GAAA3V,EAAAA,EAAAA,GAAA0V,EAAA,GAAzDzV,EAAA0V,EAAA,GAAa1U,EAAA0U,EAAA,GAAOzV,EAAAyV,EAAA,GACrB/V,EAAOsC,EAAetB,EAAad,EACzC,GAAIF,EAAM,CACR,IAAMJ,EAAW0C,EAEXtC,EAQAK,EAAcgB,EAAQD,GAEtBpB,EAIAoB,GACN,OAASd,GAAqBmV,IAA6B5V,GAAQD,CACrE,MAGSoW,GACX,SAAApW,GAAA,OAEA6V,GAA4B7V,EAAA,ECzJjBqW,GAAyB,yBCXzBC,GAAkC,SAACtW,EAAsCwB,GACpF,IAAQkB,EAA8BlB,EAAhC4D,EACNmR,EAAkFvW,EAChF,gCAAAwW,GAAAhW,EAAAA,EAAAA,GAAA+V,EAAA,GADKtW,EAAAuW,EAAA,GAAoClW,EAAAkW,EAAA,GAI3C,MAAO,CACLvW,GACEyC,EAA0BG,GAC1BH,EAA0BO,EAC5B3C,EACQ,EAGCmW,GAAqB,SAAAzW,GAAA,OACS,IAAzCA,EAAiBqJ,QAAQtG,GAAgB,EAQ9B2T,GAA2B,SACtC1W,EACAwB,GAEA,IAAQkB,EAAc1C,EAAhBiQ,EACA0G,EAAmB,SAAA3W,GACvB,IAAMC,EAAgBwP,GAAU/M,EAAW1C,GAO3C,MAAO,CAACC,EAFgD,YAHnBuB,EACjCA,EAAiBxB,GACjBC,GAMH,EAGH2W,EAA0CD,EAAgBzQ,IAAA2Q,GAAArW,EAAAA,EAAAA,GAAAoW,EAAA,GAAnD3W,EAAA4W,EAAA,GAAgBvW,EAAAuW,EAAA,GACvBC,EAA0CH,EAAgB9T,IAAAkU,GAAAvW,EAAAA,EAAAA,GAAAsW,EAAA,GAE1D,MAAO,CACL5G,EAAgB,CACdrN,EAAG5C,EACHgD,EALG8T,EAAA,IAOL5G,EAAiB,CACftN,EAAGvC,EACH2C,EATmB8T,EAAA,IAWtB,EAWUC,GAA2B,SACtChX,EACAwB,EACAkB,EACAzC,GAEA,IAAMK,EAAiBkB,EAAYqB,GAAKrB,EAAYyB,EAE9CgU,EAAuB,SAACjX,EAA4BwB,GACxD,IAAMkB,EAAkB+T,GAAkBzW,GACpCC,EAA6ByC,GAAmBpC,EAAiB,SAAW,GAC5Ec,EACHI,GAAmBkB,GAAmB1C,EAAS0I,QAAA,GAAA/D,OAAW5B,GAAA,KAAe,KAC1E9C,EAEF,MAAO,CACLuB,IAAoBkB,EAAkB1C,EAAW,GACjDyW,GAAkBrV,GAA2B,SAAWA,EACzD,EAGH8V,EAAsCD,EAAqBvU,EAAeG,EAAGrB,EAAYqB,GAAAsU,GAAA3W,EAAAA,EAAAA,GAAA0W,EAAA,GAAlF9V,EAAA+V,EAAA,GAAW1W,EAAA0W,EAAA,GAClBC,EAAsCH,EAAqBvU,EAAeO,EAAGzB,EAAYyB,GAAAoU,GAAA7W,EAAAA,EAAAA,GAAA4W,EAAA,GAAlF3V,EAAA4V,EAAA,GAAW3W,EAAA2W,EAAA,GAKlB,OAHApX,EAAiBiG,IAAgBzF,GAAoBgB,EAAYhB,EAAmBW,EACpFnB,EAAiB4C,IAAgBnC,GAAoBU,EAAYV,EAAmBe,EAE7EiV,GAAyB1W,EAAwBC,EAAiB,ECnE9DqX,GAA6B,6BClC7BC,GAA8B,wBZ8MrCC,GAAiB,WAIrB,OAHK7H,KACHA,GA3JsB,WACxB,IAAM8H,EAAyB,SAC7BzX,EACAwB,EACAkB,GAGA2L,GAAexH,SAAS6Q,KAAM1X,GAC9BqO,GAAexH,SAAS6Q,KAAM1X,GAE9B,IAAMC,EAAQiQ,GAAWlQ,GACnBM,EAAQ2P,GAAWjQ,GACnBoB,EAAQgP,GAAe5O,GAI7B,OAFAkB,GAASkL,GAAe5N,GAEjB,CACL6C,EAAGvC,EAAM0B,EAAI/B,EAAM+B,EAAIZ,EAAMY,EAC7BiB,EAAG3C,EAAM6C,EAAIlD,EAAMkD,EAAI/B,EAAM+B,EAC9B,EAiDGnD,EAAA,IAAA2E,OAAeiP,GAAA,oIAAAjP,OAAuJiP,GAAA,+CAAAjP,OAAkEkP,GAAA,qCAAAlP,OAAuEkP,GAAA,yBAAAlP,OAA2DkP,GAAA,qHAI1W5T,EAHSwO,GAAA,eAAA9J,OACEiP,GAAA,wBAAAjP,OAA2C3E,EAAA,mBAEtC,GAChBM,EAAcL,EAAOkO,WAC3BwJ,EAAmC/F,KAAAgG,GAAApX,EAAAA,EAAAA,GAAAmX,EAAA,GAA5BvW,EAAAwW,EAAA,GAAYnX,EAAAmX,EAAA,GACnBC,EAAsEnR,EACpE,CACEhE,EAAe+U,EAAuBxX,EAAQK,GAC9CqC,EAAQ2H,IAEVG,GAAKgN,EAAwBxX,EAAQK,GAAa,IAAAwX,GAAAtX,EAAAA,EAAAA,GAAAqX,EAAA,GAL7CpW,EAAAqW,EAAA,GAOPC,GAA+BrX,EAPQoX,EAAA,MAOhC1X,GAAwBI,EAAAA,EAAAA,GAAAuX,EAAA,GAAxB,GACDpV,EA7D6B,SAAA3C,GACjC,IAAIwB,GAAS,EACPkB,EAAckK,GAAS5M,EAAS6T,IACtC,IACErS,EAC8D,SAA5DiO,GAAUzP,EAAS,oBACsC,SAAzDyP,GAAUzP,EAAS,UAAW,sBAClC,CAAE,MAAAC,GAAO,CAET,OADAyC,IACOlB,CAAM,CAoDgBwW,CAA0B/X,GACnDoB,EAA2B,CAC/BwB,EAA8B,IAA3BzC,EAAqByC,EACxBI,EAA8B,IAA3B7C,EAAqB6C,GAEpBnB,EAA8C,CAClDmW,SAAU,CACRC,KAAM,KACNC,SAAUxV,EACVyV,SAAW,SAAApY,GAAA,OAAW2C,GAA0BsK,GAAcjN,IAAWA,CAAA,EACzEqY,SAAS,GAEXpF,WAAY,CACVqF,MAAM,GAERC,OAAQ,CACNC,0BAA0B,EAC1Bd,KAAM,OAGJ9V,EAAuBsJ,GAAW,CAAE,EAAEuH,IACtCzQ,EAAoByI,GACxBS,GACA,CAAa,EACbtJ,GAEIN,EAA2BmJ,GAC/BS,GACA,CAAoB,EACpBpJ,GAGIP,EAAW,CACfqS,EAAuBxT,EACvBgF,EAA2B/D,EAC3BsS,EAAyBhR,EACzBuR,IAAmBtP,EACnBuP,EAtF2B,SAC3BnU,EACAwB,GAEA8N,GAAUtP,GAAAyY,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACPvS,GAAeiE,IACftH,GAAesH,IAAA,YACL,QAEbmH,GAAgBtR,EAAW,CAAE6C,EAAG,IAEhC,IAAMH,EAAeoO,GAAoB9Q,GACnCC,EAAc6Q,GAAoBtP,GACxC8P,GAAgBtR,EAAW,CAAE6C,GAAI,MACjC,IAAMvC,EAAyBwQ,GAAoBtP,GACnD,MAAO,CAOLd,EAAGgC,EAAaG,IAAM5C,EAAY4C,EAOlCrB,EAAGvB,EAAY4C,IAAMvC,EAAuBuC,EAC7C,CAwDmB6V,CAAqBzY,EAAQK,GACjD8T,EAAoB3J,GAAKrJ,EAAU,KACnCiT,EAA2B/S,EAC3BiT,GAA4B,SAAAvU,GAAA,OAC1BkL,GAAWpJ,EAA6B9B,IACxCsB,GAAA,EACFkT,GAAoBxS,EACpByS,GAAqB,SAAAzU,GAAA,OACnBkL,GAAWtJ,EAAsB5B,IAAsBgC,GAAA,EACzD0S,GAA8BxJ,GAAW,CAAE,EAAEpJ,GAC7C6S,GAAuBzJ,GAAW,CAAE,EAAEtJ,IAoBxC,OAjBAoK,GAAY/L,EAAQ,SACpB2N,GAAe3N,GAGfuB,EAAIiP,iBAAiB,UAAU,WAC7B,IAAIzQ,EACJ,IAAK2C,KAA4BtB,EAAyBwB,IAAMxB,EAAyB4B,GAAI,CAC3F,IAAMzB,EAAyB4U,GAC7BkB,IAGFtX,KADewB,EAAyBA,EAAuBmX,IAAmBnO,IAClDjJ,EAAKE,EACvC,CAEAhB,EAAa,IAAK,CAACT,GAAsB,IAGpCuB,CAAG,CAKcqX,IAEjBjJ,EAAmB,Ea5GfkJ,GAAwB,SACnC7Y,EACAwB,GAAA,OACO2G,EAAW3G,GAASA,EAAM+H,MAAM,EAAGvJ,GAAQwB,CAAA,EAEvCsX,GAA8B,SACzC9Y,EACAwB,EACAkB,EACAzC,GAEA,IAAMK,EAAuBwH,EAAY7H,GACrCyC,EACAzC,EAKJ,OAJ+B4Y,GAC7B7Y,EACAM,IAE+BkB,EAAoC+H,MAAM,EAAGvJ,EAAK,EAGxE+Y,GAA+B,SAC1C/Y,EACAwB,EACAkB,EACAzC,GAEA,IAAMK,EAAwBwH,EAAY7H,GACtCyC,EACAzC,EACEmB,EAAyByX,GAC7B7Y,EACAM,GAEF,QACIc,IACDyH,EAAczH,GACXA,EACAI,EAAqC+H,MAAM,EAAGvJ,GAAM,EC7ItDgZ,GAAyD,IAAIC,QAuBtDC,GAAe,SAAAlZ,GAAA,OAC1BgZ,GAAkBjH,IAAI/R,EAAA,EC4HXmZ,GAAoB,SAC/BnZ,EACAwB,EACAkB,EACAzC,GAEA,IAAIK,GAAc,EAClB8Y,EAOKnZ,GAAoE,CAAC,EANxEmB,EAAAgY,EADIC,GAEJ5Y,EAAA2Y,EADWxE,GAEXnT,EAAA2X,EADwBE,GAExB5Y,EAAA0Y,EADmBG,GAEnBnZ,EAAAgZ,EADqBvE,GAErBxT,EAAA+X,EADmBtE,GAGfhT,EAA8BgJ,IAClC,kBAAMxK,GAAgBoC,GAAwC,KAC9D,CAAEd,EAAU,GAAIN,EAAW,KAE7BkY,EA3E+B,SAC/BxZ,EACAwB,EACAkB,GAEA,IAAIzC,GAAY,EACVK,IAAMoC,GAAqB,IAAIuW,QAI/BQ,EAAmD,SAAArY,GACvD,GAAId,GAAOoC,EAAoB,CAC7B,IAAMjC,EAAeiC,EAAmBa,KAAK,SAAA/B,GAC3C,IAAAkY,EAA+BlY,GAAQ,GAAAmY,GAAAnZ,EAAAA,EAAAA,GAAAkZ,EAAA,GAAhChX,EAAAiX,EAAA,GAAU1Z,EAAA0Z,EAAA,GAEjB,MAAO,CADU1Z,GAAcyC,GAAYtB,GAAeyL,IAAMnK,EAAU1C,GAAU,GAClEC,EAAoB,IAGxCiJ,EAAKzI,GAAe,SAAAiC,GAAA,OAClBwG,EAAKxG,EAAK,IAAK,SAAAtB,GACb,IAAMX,EAAaiC,EAAK,GAClBjB,EAAUnB,EAAIyR,IAAI3Q,IAAQ,GAGhC,GAFsBpB,EAAO4Z,SAASxY,IAEjBX,EAAY,CAC/B,IAAMT,EAAiByQ,GAAiBrP,EAAKX,GAAa,SAAAiC,GACpDzC,GACFD,IACAM,EAAIuZ,OAAOzY,IAEXI,EAASkB,EACX,IAEFpC,EAAI6R,IAAI/Q,EAAKkI,EAAK7H,EAASzB,GAC7B,MACE6J,EAAgBpI,GAChBnB,EAAIuZ,OAAOzY,EACb,MAGN,GAKF,OAFAqY,IAEO,CAtCS,WACdxZ,GAAY,CAAI,EAqCDwZ,EAAe,CA8BsCK,CACpE9Z,EACA8B,EACAL,GAAAsY,GAAAvZ,EAAAA,EAAAA,GAAAgZ,EAAA,GAHK5U,EAAAmV,EAAA,GAA2BnY,EAAAmY,EAAA,GAQ5BzY,EAA+Bb,GAA4B,GAC3Dc,EAAqBoD,EAFHvD,GAAe,GAEYE,GAC7C0Y,EAAmB,SACvB1Z,EACAc,GAEA,IAAKsI,EAAatI,GAAY,CAC5B,IAAMX,EAAqBL,GAAuBoK,GAC5C/I,EAAsBJ,GAAwBmJ,GAC9C7H,EAA4B,GAC5Bb,EAA+B,GACjC8C,GAAsD,EACtD5C,GAAkD,EA8DtD,GA3DAkH,EAAK9H,GAAY,SAAAsB,GACf,IACEpC,EAMEoC,EAPEuX,cAEI7Y,EAKNsB,EALFwX,OACA9Z,EAIEsC,EALoBkG,KAEtBvH,EAGEqB,EAJEyX,SAEJvY,EAEEc,EAHM0X,WAER7Y,EACEmB,EAFQ2X,aAGN/X,EAA4B,eAATlC,EACnB+C,EAA2B,cAAT/C,EAClB6C,EAAyBjD,IAAWoB,EACpC0I,EAAexH,GAAoBhC,EAEnCoB,EACHoI,GAAgB4B,GAAQtK,EAA+Bd,GAAiB,KAAQ,KAC7EyJ,EAAmBD,GAAgBzI,IAAaK,EAChDsI,EACJZ,EAAQ9H,EAA8BhB,IAAkByJ,EAG1D,GAAIvI,IAAsB2B,IAAoBF,GAAyB,CACrE,IAAMzB,EAAqBc,GAAoByH,EACzC3J,EACJoB,GACAd,GACAqM,GAAG3L,EAAgBV,GAIfkE,GAHgBxE,GACjBK,EAAmBW,EAAgBd,EAAee,EAAUK,IAC5DY,GAAoBd,KAELC,EAAoBiB,IAAYtC,EAAgBJ,EAAQC,GAE5EiJ,EAAKtH,GAAa,SAAA5B,GAAA,OAASsJ,EAAK3G,EAAmB3C,EAAA,IACnDkJ,EAAK3H,GAAe,SAAAvB,GAAA,OAASsJ,EAAK3G,EAAmB3C,EAAA,IAErDgC,EAAiBA,GAAkB4C,CAErC,EAGGpD,GACDyB,GACA8G,IACCtJ,EAAmBW,EAAgBd,EAAgBe,EAAUK,KAE9D4H,EAAKxH,EAAoBxB,GACzBsE,EAAqBA,GAAsBoF,EAC7C,IAIFpI,GAAkC,SAAA5B,GAAA,OAChC2J,EAAiBhH,GAAmB0J,QAAe,SAAC7K,EAAKkB,GAEvD,OADA4G,EAAK9H,EAAKqL,GAAK7M,EAAU0C,IAClBqK,GAAGrK,EAAM1C,GAAYsJ,EAAK9H,EAAKkB,GAAQlB,CAAG,GAChD,OAGDA,EAEF,OADClB,GAAe0B,GAAmBU,GAAwC,GACpE,EAAC,GAKV,IAAKgH,EAAa5H,IAAuB8C,EAAoB,CAC3D,IAAM5E,EAAO,CACX2J,EAAiB7H,GACjB8C,GAIF,OAFCtE,GAAgBoC,EAAuC6G,MAAM,EAAGvJ,GAE1DA,CACT,CACF,GAEIsC,EAAqC,IAAIK,EAC7C8H,GAAKuP,GAAkB,IAGzB,MAAO,CACL,WAWE,OAVA1X,EAAiBgY,QAAQta,EAAQ,CAC/B8S,YAAY,EACZyH,mBAAmB,EACnBC,gBAAiBjZ,EACjBkZ,QAASjZ,EACTkZ,UAAWlZ,EACXmZ,cAAenZ,IAEjBlB,GAAc,EAEP,WACDA,IACFsE,IACAtC,EAAiBsY,aACjBta,GAAc,EAChB,CACD,EAEH,WACE,GAAIA,EAEF,OADAwB,EAA4BJ,IACrBsY,GAAiB,EAAM1X,EAAiBuY,cACjD,EAEH,ECtPUC,GAAqB,SAChC9a,EACAwB,EACAkB,GAEA,IAAMzC,EAAe,QACrB8a,EAA6ErY,GAAW,CAAC,EAArEpC,EAAAya,EAAZhG,GAA6C3T,EAAA2Z,EAAT/F,GACtCvU,EACJ2V,GAAyDC,IAC/B5U,EAAsB+V,KAA1CrD,EACFzT,EAAoB+J,GAAKmF,GAAmB5P,GAClDgb,EAA+CtU,EAAqC,CAClFhE,GAAe,EACfkC,GAAqB,IAFhBxE,eAAA,GAKP,OAAO,WACL,IAAMsC,EAA6B,GAI7BrB,EAHeoN,GAAA,eAAA9J,OACJ8P,GAAA,kBAAA9P,OAAsCgQ,GAAA,mBAErB,GAC5B/P,EAAkBvD,EAAa8M,WAC/B8M,EACJ,SAAAjb,GAEA,IAAM0C,EAAuB1C,aAA8Bkb,oBACrD9Z,GAAqBsB,GAAwB0F,EAAQpI,GAEvDS,GAAO,EACPC,GAAS,EACTiC,GAAoB,EAGxB,GAAID,EAAsB,CACxB,IAAAyY,EAA8C/a,EAC5CJ,EAAmBob,aAAAC,GAAA7a,EAAAA,EAAAA,GAAA2a,EAAA,GADd3Z,EAAA6Z,EAAA,GAAoB3Y,EAAA2Y,EAAA,GAGrBpb,EAAgBqQ,GAAqB9O,GACrClB,EAAWiQ,GAAgB/O,EAAkBkB,GAKnDC,IAFAlC,IADAC,GADmBgC,GACGpC,KACHL,EAGpB,MAEI,GAAImB,EAAA,CACJuB,GADInC,EAAAA,EAAAA,GACiBR,EAAA,GAArB,QAIHU,GAAgC,IAAvBV,EAGX,GAAIM,GAA0BqC,EAAmB,CAC/C,IAAMnB,EAAMJ,EAAoBpB,EAAmB,GAAK4P,GAAkBvO,GAC1EiQ,GAAgBjQ,EAAc,CAC5BwB,EAAGsO,GAAsBlR,EAAcA,EAAcuB,GAAOC,GAC5DwB,EAAGhD,GAEP,CAEKQ,GACHe,EAAsB,CACpByT,GAAsB7T,EAAoBpB,OAAA,EAC1CkV,IAAe9T,EACf4T,GAAStU,GAEb,EAGF,GAAIoB,EAA2B,CAC7B,IAAM9B,EAAyB,IAAI8B,GAA2B,SAAA9B,GAAA,OAC5Dib,EAA2Bjb,EAAQsb,MAAA,IAErCtb,EAAuBsa,QAAQ1V,GAC/B0E,EAAK5G,GAAY,WACf1C,EAAuB4a,YAAY,GAEtC,KAAM,KAAIna,EAiBT,OAAO+J,GAhBP,IAAA+Q,EAAiD9a,EAC/CmE,EACAqW,EACA7Z,GAAAoa,GAAAhb,EAAAA,EAAAA,GAAA+a,EAAA,GAHKvb,EAAAwb,EAAA,GAAsBha,EAAAga,EAAA,GAK7BlS,EACE5G,EACAiC,EACE,CACEiI,GAASvL,EAAcqT,IACvBjE,GAAiBpP,EAAc,iBAAkBrB,IAEnDwB,IAON,GAAIlB,EAAwB,CAC1B,IAAAmb,EAAoC/U,EAClC,CACEhE,OAAA,GAEFhC,GAJKV,GAILQ,EAAAA,EAAAA,GAAAib,EAAA,GAJK,GAOPnS,EACE5G,EACA+N,GAAiBpP,EAAc,UAAW,SAAAG,GACxC,IAAMkB,EAA4B1C,IAClC0b,GAAAlb,EAAAA,EAAAA,GACEkC,EAAA,GADKzC,EAAAyb,EAAA,GAAqBpb,EAAAob,EAAA,GAA4Bta,EAAAsa,EAAA,GAEpDpb,IACFqM,GAAY/H,EAAiB,WAC7BgI,GAAShI,EAAiB3E,EAAsB,MAAQ,OAExDgb,EAA2B,GACvBhb,EACFK,EACAc,KAIJwP,GAAgBpP,EAAM,IAG5B,CAEA,OAAOiJ,GAAKZ,EAAiBP,EAAK5G,EAAY2L,GAAerO,EAAQqB,IAAe,CACrF,EC9JUsa,GAAwB,SACnC3b,EACAwB,GAEA,IAAIkB,EAKEzC,EAAkBsO,GVMc,uBULtCqN,EAAqClV,EAAY,CAC/ChE,GAAe,IADVpC,eAAA,GAGDub,EAAkC,SACtC7b,EACA0C,GAEA,GAAI1C,EAAa,CACf,IAAMC,EAAkBK,EAbD,SAAAN,GAAA,OACW,IAAnCA,EAA6BgC,GAC7BhC,EAA4C8b,gBAC5C9b,EAA4C+b,kBAAoB,EAUZC,CAAkBhc,IAErE,OADAQ,EAAAA,EAAAA,GAAmCP,EAAA,GAA1B,KAGNyC,GACDlB,EAAyBvB,IAAoB,CAACA,EAElD,GAEIgc,EAA+B,SACnCjc,EACAwB,GAAA,OACGqa,EAAgCra,EAAQ8Z,MAAOtb,EAAA,EAEpD,MAAO,CACL,WACE,IAAMwB,EAA6B,GAEnC,GAAIH,GACFqB,EAA+B,IAAIrB,EACjCoJ,GAAKwR,GAA8B,GACnC,CAAEC,KAAMlc,KAEmBsa,QAAQra,GACrCqJ,EAAK9H,GAAY,WACfkB,EAA8BkY,YAAY,QAEvC,CACL,IAAMuB,EAAgB,WACpB,IAAMnc,EAAUiQ,GAAWhQ,GAC3B4b,EAAgC7b,EAAQ,EAE1CsJ,EAAK9H,EAAYsZ,GAAmB7a,EAAiBkc,EAApCrB,IACjBqB,GACF,CAEA,OAAO1R,GAAKZ,EAAiBP,EAAK9H,EAAY6M,GAAerO,EAAQC,IAAkB,EAEzF,kBACEyC,GACAuZ,GAA6B,EAAMvZ,EAA6BmY,cAAA,EACnE,ECfUuB,GAAuB,SAClCpc,EACAwB,EACAkB,EACAzC,GAEA,IAAIK,EACAc,EACAX,EACAgB,EACAf,EACAN,EAEIuC,EAA4B6U,KAA9B7D,EAEAtS,EAAA,IAAAsD,OAAmBG,GAAA,KAInBF,EAAA,IAAAD,OAAuBuP,GAAA,KACvBtS,EAA0B,CAAC,YAC3BI,EAAiC,CAAC,OAAQ,OAAQ,QAClDV,EAAyB,CAAC,KAAM,QAAS,QAAS,QAEtDC,EAQEvB,EATEoV,GAEJ9S,EAOEtC,EARKqV,GAEPlS,EAMEnD,EAPGiQ,EAELhN,EAKEjD,EANOsV,GAETxL,EAIE9J,EALMuV,GAER7T,EAGE1B,EAJSyS,EAEX1I,EAEE/J,EAHewV,GAEjBxL,EACEhK,EAFe0V,GAIbxP,EAA6B,CACjCyP,IAAkB,EAClB7Q,EAAiB8K,GAAkBrO,IAE/BsB,EAAM2U,KACNvN,EAAyBmM,GAC7BkB,IAGF+E,EAAiC3V,EAC/B,CACE/D,EAAQ0H,GACR3H,EAAe,CAAES,EAAG,EAAGnB,EAAG,KAE5B,WACE,IAAM/B,EACJgK,GACAA,EAAuB/E,EACrBlF,EACAwB,EACA0E,EACArD,EACAH,GACA4Z,EAEEhc,EAAUyJ,EAAkBsK,IAC5BjT,GAAcM,GAAqBqI,EAAkBoK,IACrD1T,EAAeW,GAAcsQ,GAAgBvO,GAEnD6G,EAAwBqK,IACxB3S,GAAqBsI,EAAwBiK,IAAuB,GACpE,IAAMxS,EAAsBL,GAAcnB,GAAwBA,IAAuB,GAEnFS,EAAgByP,GAAWlN,GAC3B7C,EAAiB+P,GAAWhN,GAC5BR,EAAayN,GAAejN,GAQlC,OANA6G,EAAwBqK,GAAkC/T,GAC1DoB,GAAqBsI,EAAwBiK,IAC7CxS,GAAuBA,IAEvB6P,GAAgBnO,EAAW1C,GAEpB,CACL0C,EAAG/C,EAAe+C,EAAIzC,EAAcyC,EAAIR,EAAWQ,EACnDnB,EAAG5B,EAAe4B,EAAItB,EAAcsB,EAAIW,EAAWX,EACpD,IArCEkI,GAqCF1J,EAAAA,EAAAA,GAAA6b,EAAA,GArCE,GAyCDlS,EAA8BL,EAChC9H,EACA2C,EAAOrD,EAAwBU,GAE7Be,EAA8B+H,GAAS7K,EAAoB,CAC/D2B,EAAU,kBAAMtB,CAAA,EAChBgB,EAAW,kBAAMF,CAAA,EACjB0I,EAAA,SAAa9J,EAAMwB,GACjB,IAAOkB,GAAPlC,EAAAA,EAAAA,GAAkBR,EAAA,GAAX,GACAC,GAAPO,EAAAA,EAAAA,GAAkBgB,EAAA,GAAX,GACP,MAAO,CACLmD,EAAOwE,GAAKzG,GAAUyG,GAAKlJ,IAAUoM,QAAO,SAACrM,EAAKwB,GAEhD,OADAxB,EAAIwB,GAAOkB,EAAQlB,IAAgCvB,EAAQuB,GACpDxB,CAAG,GACT,CAAC,GAER,IAGIuc,EAAoC,SAAAvc,GACxC,GAAI0B,EAAmB,CACrB,IAAMF,EAAoBoO,GAAkBrO,GAC5C2J,GAAWlL,EAAa,CAAE4V,GAAmBxV,IAAuBoB,IACpE0J,GAAWhF,EAAO,CAAEpB,EAAiBtD,IACrCpB,EAAqBoB,CACvB,GAGIgb,EAA+B,SAAAxc,GACnCkJ,EAAKlJ,GAAc4B,GAA0B,SAAA5B,GAC3C,GAAIoJ,EAAQxH,EAAyB5B,GAAY,CAC/C,IAAMwB,EAAWkK,GAAQpJ,EAAOtC,GAC5BiI,EAASzG,GACXsK,GAAS3I,EAAWnD,EAAWwB,GAE/BwK,GAAY7I,EAAWnD,EAE3B,IACA,EAGEyc,EAAmB,SACvBzc,EACAwB,GAEA,IAAAkb,GAAAlc,EAAAA,EAAAA,GAAkDR,EAAA,GAA3C0C,EAAAga,EAAA,GACDtb,EAAyC,CAC7CyU,GAFsB6G,EAAA,IAQxB,OAHAxR,GAAWhF,EAAO,CAAEyP,GAAkBjT,KACrClB,GAAevB,EAAmBmB,GAE5BA,CAAW,EAGd+a,EAAgB,SAAhBQ,GAGJ,IAFA3c,EAAA2c,EAAAzH,GACA1T,EAAAmb,EAAA1H,GACAvS,EAAAia,EAAA3H,GAGM5T,IADsBpB,IAAiB0C,IAAYlB,IAK/BmB,EACpBI,EACA9C,EAEN2c,EAAgDpb,GAAwB,GAAAqb,GAAArc,EAAAA,EAAAA,GAAAoc,EAAA,GAAjEnc,EAAAoc,EAAA,GACDnc,EAAyC,CAC7CwU,GAAclV,GAAgB0C,EAC9BsS,GAAAtS,EACAkT,GAJqBiH,EAAA,IAOvBN,EAAiC7b,GAEjCc,GAAwB0J,GAAWhF,EAAO,CAAEpB,EAAiBrE,IAE7DW,EAASV,EAAY,EAGjBoc,EAAoB,SACxB9c,EACAwB,GAEA,IAAAub,EAA6B7S,IAApBxH,GAAoBlC,EAAAA,EAAAA,GAAAuc,EAAA,GAApB,GACHzc,EAAyC,CAC7C0c,GAAAta,GAUF,OAPA6Z,EAAiCjc,GAKjCoC,IAAqBlB,IAFJxB,EAA6BC,EAAqB8C,GAEtBzC,GAEtCA,CAAW,EAGd2c,EAAiB,SACrBjd,EACAwB,EACAkB,GAEA,IAAMzC,EAAyC,CAC7CoW,GAAe7U,GAWjB,OARA+a,EAAiCtc,GAE7BuB,IAAuBkB,EACzBK,EAA4B9C,GAClByB,GACV8a,EAA4Bxc,GAGvBC,CAAW,EAGZ2O,EAAuB/L,EAAzBuR,EACN8I,EAA0Dja,EACtD0Y,GAAsBrZ,EAAOma,GAC7B,GAAAU,GAAA3c,EAAAA,EAAAA,GAAA0c,EAAA,GAFG9X,EAAA+X,EAAA,GAA0BlN,EAAAkN,EAAA,GAI3BjN,GACHxO,GACDoZ,GAAmBxY,EAAO6Z,EAAe,CACvCnH,IAAS,EACTD,IAAY,IAGhBqI,EAAoEjE,GAClE7W,GACA,EACA2a,EACA,CACErI,GAA0BtT,EAC1B+X,GAAa1U,EAAOrD,EAAwBM,qBANzCsD,GAAAmY,GAAA,GAA+B5K,GAAA4K,GAAA,GAUhC1J,GACJjS,GACAI,GACA,IAAIA,GAA2B,SAAA9B,GAC7B,IAAMwB,EAAkBxB,EAAQA,EAAQkE,OAAS,GAAGkX,YACpDe,EAAc,CACZjH,IAAc,EACdF,GAASzE,GAAgB/O,EAAiBd,KAE5CA,EAAkBc,CAAe,IAGrC,MAAO,CACL,WAEEgb,IACA7I,IAAkCA,GAA+B2G,QAAQhY,GACzE,IAAMtC,EAAsBkQ,GAAyBA,IAC/C1O,EAAyB4D,GAA4BA,IACrD1C,EAA8BwC,KAC9BjF,EAAuB2O,GAAoB,SAAA5O,GAC/C,IAAAsd,EAA6BpT,IAApB1I,GAAoBhB,EAAAA,EAAAA,GAAA8c,EAAA,GAApB,GACTva,EAA4B,CAAEwa,GAAAvd,EAAuBgd,GAAAxb,GAAmB,IAG1E,OAAO,WACLmS,IAAkCA,GAA+BiH,aACjE5a,GAAuBA,IACvBwB,GAA0BA,IAC1BC,GAAkCA,IAClCiB,IACAzC,GAAsB,CACvB,EAEH,SAAAud,GAA+B,IAA5Bxd,EAAAwd,EAAAlG,GAAc9V,EAAAgc,EAAAC,GAAc/a,EAAA8a,EAAAjG,GACvBtX,EAAyC,CAAC,EAEhDyd,EAAyB1d,EAAa,yBAA/BU,GAA+BF,EAAAA,EAAAA,GAAAkd,EAAA,GAA/B,GACPC,EAAwC3d,EAAa,qBAAA4d,GAAApd,EAAAA,EAAAA,GAAAmd,EAAA,GAA9Cvd,EAAAwd,EAAA,GAAYjb,EAAAib,EAAA,GACnBC,EAA8C7d,EAAa,wBAAA8d,GAAAtd,EAAAA,EAAAA,GAAAqd,EAAA,GAApD/b,EAAAgc,EAAA,GAAelc,EAAAkc,EAAA,GACtBC,EAAyC/d,EAAa,mBAAAge,GAAAxd,EAAAA,EAAAA,GAAAud,EAAA,GAA/C/b,EAAAgc,EAAA,GAAe1c,EAAA0c,EAAA,GAEhB1b,EAAcd,GAAgBkB,EAIpC,GALuCd,GAAwBe,EAK3B,CAClClC,GAAiCA,IACjCgB,GAAkCA,IAElC,IAAAwc,EAA4B9E,GAC1BlW,GAAYE,GACZ,EACA2Z,EACA,CACEzD,GAAa1U,EAAOwF,EAA6B/J,GAAc,IAC/DkZ,GAAqBxX,EACrByX,GAAuBlY,EACvByT,GAAsB,SAAC9U,EAAUwB,GAC/B,IAAgBkB,EAAkC1C,EAA1Cka,OAAwBja,EAAkBD,EAApBia,cAK9B,QAHGzY,IAAkBvB,GAAkByB,IACjC+L,GAAY/K,EAAgBrB,EAAcuD,MAI5C0I,GAAQ5K,EAAA,IAAAiC,OAAoBkQ,QAvBL,SAAA7U,GAAA,OACjCmI,EAAWzH,IAAmBA,EAAeV,EAAA,CAuBnCke,CAA0Ble,EAAS,mBAjBtCA,EAAAme,EAAA,GAAW3c,EAAA2c,EAAA,GAuBlB1c,EAAiCzB,IACjCS,EAAgCe,CAClC,CAEA,GAAIF,EAEF,GADAyB,EAA4BrB,IACxB0G,EAAQpG,GAAgB,CAC1B,IAAMhC,EAAUgC,EAAc,GACxBR,EAAUQ,EAAc,GAC9B1B,EAAkB0H,EAAShI,IAAYA,EACvCoB,EAAmB4G,EAASxG,IAAYA,CAC1C,MAAWwG,EAAShG,IAClB1B,EAAkB0B,EAClBZ,GAAmB,IAEnBd,GAAkB,EAClBc,GAAmB,GAIvB,GAAIkB,EAAa,CACf,IAAMtC,EAAmByS,KACnBjR,EAAsByO,GAAyBA,IAC/CvN,EACJjC,GAAiCA,IAEnCT,GACEkL,GACEjL,EACAgd,EAAejd,EAAiB,GAAIA,EAAiB,GAAIsC,IAG7Dd,GACE0J,GAAWjL,EAAawc,EAAiBjb,EAAoB,GAAIc,IAEnEI,GACEwI,GAAWjL,EAAa6c,EAAkBpa,EAAoB,GAAIJ,GACtE,CAIA,OAFAia,EAAiCtc,GAE1BA,CAAW,EAEpBiG,EACD,ECzUUkY,GAAgC,SAC3Cpe,EACAwB,EACAkB,EACAzC,GAEA,IAAAoe,EAA0D7G,KAAlDlX,EAAA+d,EAAFhK,EAA6BjT,EAAAid,EAAFlK,EAEnB1S,EADgCnB,IAAtC2S,WACAqF,KAEN5X,EAOEc,EARE4T,GAEJhV,EAMEoB,EAPK6T,GAEP1S,EAKEnB,EANGyO,EAEL5O,EAIEG,EALO8c,GAETxc,EAGEN,EAJUmO,GAEZ/N,EAEEJ,EAHkBwX,GAEpBhX,EACER,EAFKiR,EAIKlR,IAD0BF,EAAe,CAAE,EAAGrB,GAApDiT,YAC+C,CAAC,GAAhDqF,KACFhW,EAAoB,IAAIuP,IACxB0M,EAAsB,SAAAve,GAAA,OAC1B4E,GACA,IAAIA,EAAQ,CACV4Z,OAAQ1c,EACR2c,KAAAze,KAEEmD,EAAkBob,EAAmB,KACrCtb,EAAkBsb,EAAmB,KACrCzU,EAAyBiP,GAG7B,CAACrY,EAASN,EAAOuC,IACjB,kBAAOX,GAAqBJ,EAAUlB,EAAUN,CAAA,GAChDqB,EACAF,GASImd,EAAgC,SACpC1e,EACAwB,GAEA,GAAIA,EAAoB,CACtB,IAAMkB,EAAO1C,EAAeiK,GAAWC,GAC/BjK,EAAoBuB,EAAtBmd,GAAUre,EAAYkB,EAAdod,GAERxd,EAAaiP,GAAsB/P,GAASoC,GAC5CjC,EAAY4P,GAAsBpQ,GAAQyC,GAEhD,OAAO4I,GAAU,EAAG,EAAGlK,EAAaX,GAAa,EACnD,CAEA,IAAMR,EAAOD,EAAe,IAAM,IAC1BM,EAAmCoC,EAArCmc,GAEApe,EAFqCiC,EAApBoc,GAEY7e,GAC7BwB,EAAiBnB,EAAgBL,GAEvC,OAAOqL,GAAU,EAAG,EAAG7K,GAAgBA,EAAegB,IAAmB,EAAE,EAgCvEsd,EAA2B,SAC/B/e,EACAwB,GAAA,OAEA0J,GACElL,EACAwB,EACI,CACEyQ,MAAO,CAAC,SAEV,CAAE,IAOJ+M,EAA2B,SAAAhf,GAC/BsC,EAAkB0P,SAAQ,SAACxQ,EAAgBkB,KACxB1C,GAAWoJ,EAAQK,EAAkBzJ,GAAW0C,MAE/DwG,EAAK1H,GAAkB,IAAK,SAAAxB,GAC1BA,GAAaA,EAAUuY,QAAQ,IAEjCjW,EAAkBuX,OAAOnX,GAC3B,GACA,EAUEuc,EAAsB,SAC1Bjf,EACAwB,EACAkB,EACAzC,GAEA,IAAMK,EAAmBgC,EAAkByP,IAAI/R,IAAY,GACrDoB,EAAkBd,EAAiBuM,MACtC,SAAA7M,GAAA,OAAcA,GAAaA,EAAUkf,WAAa1d,CAAA,IAGjDJ,EACFA,EAAgB+d,OAAS,IAAIC,eAAepf,EAAS0C,EAAW,CAAE2c,UAAApf,IAElEqC,EAAkB6P,IAChBnS,EACA2E,EAAOrE,EAAkB,CACvBN,EAAQsf,QAAQ5c,EAAW,CACzBwc,SAAA1d,EACA6d,UAAApf,MAIR,EAGIsf,EAAmC,SACvCvf,EACAwB,EACAkB,GAEA,IAAMzC,EAASyC,EAAMkK,GAAWD,GAChCzD,EAAKlJ,GAAsB,SAAAA,GACzBC,EAAOD,EAAmBwf,GAAYhe,EAAW,GACjD,EAEEie,EAAiB,SACrBzf,EACAwB,GAIA0H,EAAKlJ,GAAsB,SAAAA,GACzB,IAAA0f,EAAsBle,EAASxB,GAAA2f,GAAAnf,EAAAA,EAAAA,GAAAkf,EAAA,GAC/BpQ,GADOqQ,EAAA,GAAKA,EAAA,GACU,GACtB,EAEEC,EAAwC,SAC5C5f,EACAwB,GAEAie,EAAezf,GAAsB,SAAAA,GAEnC,MAAO,CADaA,EAAd4e,IAEJnG,EAAAA,EAAAA,GAAA,GAEGjX,EAAeyI,GAAWC,GAAYiF,GACrCuP,EAA8Bld,KAGnC,GACD,EAEEqe,EAAwC,SAC5C7f,EACAwB,GAEA,IAAQvB,EAAoByC,EAAtBmc,GACAve,EAAiBkB,EAAevB,EAAgB4C,EAAI5C,EAAgBgD,EACpE6c,EAAoB,SACxB9f,EACA0C,EACAzC,GAAA,OAEA6P,GACEX,GApIgC,SACpCnP,EACAwB,EACAkB,EACAzC,GAEA,IAAMK,EAAcoe,EAA8Bhc,EAAc1C,GAEhE,OACG,EAAIM,GACF,EAAIA,IACJL,EAAoB,EAAIuB,EAAgBA,IAAkB,CAAC,CA0H1Due,CACE/f,EACAqR,GAAkB3O,EAAmBpC,EAAgBL,GACrDuB,EACAvB,IAGJuB,EAAA,EAEJ,GAAI2B,GAAmBF,EACrBiG,EAAKlJ,GAAsB,SAAAA,GACzB,IAAQ0C,EAAwB1C,EAA1Bwf,GAAcvf,EAAYD,EAAd4e,GACZne,EACJe,GAAgBoO,GAAkBlN,IAAetB,EAEnD6d,EACEhf,EACAuB,EAAe2B,EAAkBF,EACjC8b,EACE,CACEiB,UAAW5O,GAAmB9Q,EAAgBG,GAAmB8C,KAAK,SAAA/B,GAAA,OACpEse,EAAkB9f,EAAWwB,EAAOf,EAAA,KAGxCA,GAEH,QAEE,CACL,IAAMiC,EAASgP,GAAgB5P,GAC/B2d,EAAezf,GAAsB,SAAAA,GACnC,IAAQC,EAAwBD,EAA1B4e,GAAWte,EAAeN,EAAjBwf,GACf,MAAO,CACLvf,EACA,CACE+f,UAAWF,EACT9f,EACAwB,EAAekB,EAAOG,EAAIH,EAAOO,EACjCzB,GAAgBoO,GAAkBtP,IAAec,IAGtD,GAEL,GAEI6e,EAA4B,SAAAjgB,GAAA,OAChCgC,IAAsBJ,GAAWwL,GAAOpN,KAAe2C,CAAA,EAEnDjB,EAA6B,GAC7BqI,EAA6C,GAC7CC,EAA2C,GAE3CkW,EAA2B,SAC/BlgB,EACAwB,EACAkB,GAEA,IAAMzC,EAAaiI,EAAUxF,GAEvBtB,GAAcnB,IAAcyC,IADZzC,GAAayC,IAElB6c,EAAiCxV,EAAsB/J,EAAWwB,GACnFJ,GAAeme,EAAiCvV,EAAoBhK,EAAWwB,EAAI,EAiF/E2e,EAAwB,SAAAngB,GAC5B,IAAMwB,EAAqBxB,EACvB+U,GACAC,GACEtS,EAAY6L,GAAA,GAAA5J,OAAakQ,GAAA,KAAAlQ,OAAsBnD,IAC/ClB,EAAQiO,GAAU0G,IAClB7T,EAASmN,GAAU2G,IACnBzU,EAAS,CACb+e,GAAY9c,EACZic,GAAQre,EACRse,GAASxd,GAiBX,OAdAkI,EAAKtJ,EAAe+J,EAAuBC,EAAoBvJ,GAC/D6I,EAAK5H,EAAY,CACf2M,GAAe3L,EAAWpC,GAC1B+N,GAAe/N,EAAOc,GACtBqJ,GAAKmD,GAAgBlL,GACrBsc,EACA/e,EACEQ,EACAyf,EACAL,EACA7f,KAIGS,CAAM,EAETyF,EAAuCuE,GAAK0V,GAAsB,GAClEtd,EAAqC4H,GAAK0V,GAAsB,GAWtE,OAHAja,IACArD,IAEO,CACL,CACEud,GA1HkC,WACpCR,EAAsC7V,GAAsB,GAC5D6V,EAAsC5V,EAAmB,EAyHvDqW,GAvHkC,WACpCR,EAAsC9V,GAAsB,GAC5D8V,EAAsC7V,EAAmB,EAsHvDsW,GApHqC,WACvC,GAAIte,EAAmB,CACrB,IAAQhC,EAAoB0C,EAAtBmc,GAEN,GAAI1b,GAAmBF,EACrBiG,EAAKvE,EAAOqF,EAAoBD,IAAuB,SAAAwW,GAAG,IAAA7d,EAAA6d,EAAAf,GACxD,GAAIS,EAAyBvd,GAAa,CACxC,IAAM8d,EAA+B,SACnCxgB,EACAC,EACAK,GAEA,IAAMG,EACJH,GAAgBsP,GAAkBlN,IAAetB,EACnD6d,EACEvc,EACA1C,EACA+e,EACE,CACEiB,UAAW5O,GAAmBnR,EAhB5B,GAgBsDQ,GAAmB8C,KACxE,SAAAvD,GAAA,OAAU8P,GAA0BT,GAAcrP,GAAQM,EAAA,KAG/DG,GAEF,MACD,EAGH+f,EAA6Brd,EAAiBnD,EAAgB6C,GAAG,GACjE2d,EAA6Bvd,EAAiBjD,EAAgBiD,EAChE,MACE+b,EAAwBtc,EAC1B,QAEG,CACL,IAAMlB,EAASkQ,GAAgB5P,GACzB2e,EAA0B,SAAA/d,GAC9B,IAAQzC,EAAeyC,EAAjB8c,GACAlf,EAAM2f,EAAyBhgB,IAAeA,EAC9CygB,EAAoB,SACxB1gB,EACAwB,EACAkB,GAEA,IACMpC,EAAKkB,EADK6P,GAAkBrR,EAAYwB,EAAoBkB,GAElE,OAAO2M,GAAc3M,GAAqBpC,EAAKA,EAAG,EAGpD,MAAO,CACLA,EACA,CACE0f,UAAW1f,EACPwP,GAA0B,CACxBjN,EAAG6d,EACDlf,EAAOqB,EACP7C,EAAgB6C,EAChB+M,GAAkB3P,IAAemB,GAEnC6B,EAAGyd,EAAkBlf,EAAOyB,EAAGjD,EAAgBiD,KAEjD,IAE+B,EAEzCwc,EAAe1V,EAAsB0W,GACrChB,EAAezV,EAAoByW,EACrC,CACF,GAgDEE,GAA2BT,EAC3BU,GAAa,CACX1M,EAAiB/Q,EACjB0d,GAAsB9W,EACtB+W,GAAQ5a,EACR6a,GAAQtW,GAAKgV,EAAgB1V,IAE/BiX,GAAW,CACT9M,EAAiBjR,EACjB4d,GAAsB7W,EACtB8W,GAAQje,EACRke,GAAQtW,GAAKgV,EAAgBzV,KA1BZ,WAIrB,OAHAqE,GAAevE,EAAwBC,EAAqB,GAAGyV,IAC/DnR,GAAevE,EAAwBE,EAAmB,GAAGwV,IAEtD/U,GAAKZ,EAAiBnI,EAAW,EA0BzC,ECncUuf,GAA8B,SACzCjhB,EACAwB,EACAkB,EACAzC,GAEA,IAAQmB,EACNI,EADI6T,GAAS5U,EACbe,EADWyO,EAAaxO,EACxBD,EADsBiR,EAAqBrS,EAC3CoB,EADyCmO,GAAwBhN,EACjEnB,EAD+D0f,GAGjE,OAAO,SACL1f,EACAH,EACAS,EACA8C,GAEA,IAAQhD,EAAgCJ,EAAlCge,GAAcxd,EAAoBR,EAAtBmd,GAAUrd,EAAYE,EAAdod,GAC1BuC,EAA0CtW,GAAiB,KAAAuW,GAAA5gB,EAAAA,EAAAA,GAAA2gB,EAAA,GAApD5f,EAAA6f,EAAA,GAAc9e,EAAA8e,EAAA,GACrBC,EACExW,KAAAyW,GAAA9gB,EAAAA,EAAAA,GAAA6gB,EAAA,GADKle,EAAAme,EAAA,GAAuCre,EAAAqe,EAAA,GAExCxX,EAAgCW,GACpC3I,EACA,CAACN,GACDoD,GAEIlD,IAAetB,EAAqBmhB,SAEpCxX,EAAA,SAAApF,OAAuBC,EAAe,IAAM,KAC5CoF,EAAiBpF,EAAeqF,GAAWC,GAC3ChE,EAAatB,EAAe,OAAS,MACrC/B,EAAQ+B,EAAe,IAAM,IAC7BuF,EAAQvF,EAAe,IAAM,IAE7B4c,EAAyB,SAAAxhB,GAAA,OAC7BA,EAAMyhB,aAAapY,QAAQW,IAAmB,GAwG5CjH,GAAgB,EAEpB,OAAO0H,GAAKZ,EAAiB,CAC3B4G,GAAiBnP,EAAS,2BAA4BrB,GACtDwQ,GAAiB7O,EAAY,gBAAgB,WAC3CP,EAAyBgU,IAA+B,EAAK,IAE/D5E,GAAiB7O,EAAY,8BAA8B,WACzDP,EAAyBgU,IAA+B,EAAM,KAG/D5T,GACCgP,GAAiB7O,EAAY,aAAa,WACxC,IAAM5B,EAAiBuN,MAErB3B,GAAQ5L,EAAgBkU,KACxBtI,GAAQ5L,EAAgB8E,KACxB9E,IAAmB6G,SAAS6Q,OAE5BhX,GAAK,WACHD,EAAUihB,OAAO,GAChB,GACL,IAGJjR,GACE7O,EACA,SACC,SAAA5B,GACC,IAAQwB,EAA8BxB,EAAhC2hB,OAAUjf,EAAsB1C,EAAxB4hB,OAAU3hB,EAAcD,EAAhB6hB,UAGlBngB,GAAcqB,GAA+B,IAAd9C,GAAmBmN,GAAOxL,KAAgBR,GAC3EhB,EAAqBmhB,SAAS,CAC5BxQ,KAAMvP,EACNyP,IAAKvO,EACLof,SAAU,WAId/e,GAAgB,EAChB1B,EAAyBoU,IAAyB,GAClDlU,GAAa,WACXwB,GAAgB,EAChB1B,EAAyBoU,GAAwB,IAGnD5E,GAAe7Q,EAAW,GAE5B,CAAEiK,GAAU,EAAOE,GAAU,IAG/BsG,GAAiBnP,EAAS,mBAAoB,SAAAtB,GAC5C,GAAIwhB,EAAsBxhB,GAAQ,EACJ,SAAtB+hB,IACJjY,IACA3G,EAAsC4e,EAAoB,CAE5DA,EACF,KAEFtR,GAAiBnP,EAAS,kCAAmC,SAAAtB,GACvDwhB,EAAsBxhB,KACxBiD,IACA6G,IACF,IAGF2G,GACE7O,EACA,YACA6I,GAAKgG,GAAkB9N,EAAc,QAASiO,GAAiB,CAC7DhC,GAAO,EACPzE,GAAU,IAEZ,CAAEA,GAAU,IAjLsB,WACpC,IAAM3I,EAA8B,0DAE9BwgB,EACJ,SAAChiB,EAAyBwB,GAAA,OAA2B,SAAAvB,GACnD,IAAQK,EAAoBoC,EAAtBmc,GACAzd,EAAkB6O,GAAWjO,GAAQa,GAASoN,GAAW3O,GAASuB,GAElEpB,EADsBD,EAAgBvB,EAAiBmB,EACpBd,EAAgB6J,GAEzDmH,GAAgBlR,GAAAqY,EAAAA,EAAAA,GAAA,GACbtO,EAAQnK,EAAkByB,GAC3B,GAGN,OAAOgP,GAAiBzO,EAAQ,eAAgB,SAAAU,GAC9C,IAAMzC,EACJqN,GAAQ5K,EAAiBwX,OAAA,IAAAvV,OAAoBuQ,OAAgC5T,EACzEb,EAAwBR,EAAeqB,EAAUU,EAEjDP,EAAmBzB,EAAQiT,WACzBvS,EAAmCgC,EAArCuf,OAAU5gB,EAA2BqB,EAA7Bwf,UAAapgB,EAAgBY,EAAlByf,YACjBvd,EAAanD,EAAf+R,SAQN,GALa,IAAX9S,GACAW,GACAI,EAAiBxB,EAAe,aAAe,iBAC9C2E,GAAY,IAAI0H,SAASxK,GAEH,CACvB,IAAM9B,GAAsBC,GAAgByC,EAAiB0f,SACvD3gB,EAAgBgJ,GAAK4F,GAAuB/O,GAC5CZ,EAAe+J,GAAK4F,GAAuBrO,GAC3CqgB,EAAkB,SAACriB,EAAsBwB,GAAA,OAC5CxB,GAAcyB,KAAiByE,IAAe1E,GAAad,KAAgBwF,EAAA,EACxE7E,EACJf,EAAU+P,GAAsBjQ,GAAsB4J,IACpDiG,GAAW7P,GAAsByC,IAAU,EACzCf,EAAqBkgB,EACzBtQ,GAAgBtR,GAAsB+J,IAAU,EAChD,EAAI9I,GAEAuD,EAAoBlC,EAAiBqH,GACrCnI,EAAaH,IACbF,EAAYb,IACZ4B,EAAeV,EAAWoI,GAC1B7G,EAAekf,EAAgBzgB,EAAYL,GAAae,EAAe,EACvEW,EAA6B2B,EAAoBrD,EAAU2E,GAC3D4D,EAAc7J,EAAe,EAAIgD,EAA6BE,EAC9Dmf,EAAyB,SAAAtiB,GAE7B6J,EAAgBI,GAChBxJ,EAAsB6hB,sBAAsBtiB,EAAeuiB,UAAU,EAQjEtY,EAAS,CANSuC,GACtBpL,EACA0D,Gb5HiC,oBakIjC2L,GAAiB9N,EAAcnB,EAA6B8gB,GAC5D7R,GAAiB9N,EAAc,eAAgB,SAAA3C,GAAA,OAAiB6Q,GAAe7Q,EAAA,GAAQ,CACrFiK,GAAU,IAEZwG,GAAiBzO,EAAQR,EAA6B8gB,GACtD7R,GAAiBzO,EAAQ,eAAgB,SAAAR,GACvC,IAAMkB,EAAmBlB,EAAiBuI,GAAenF,GAErD3E,GAAgBD,IAClB8B,EAAmBgI,EAAcpH,EACnC,KAMJ,GAFAjC,EAAsB+hB,kBAAkB9f,EAAiB6f,WAErDviB,EACF8B,EAAmBgI,QACd,IAAK7J,EAAc,CACxB,IAAMD,EAAqBoW,GACzBmB,IAGFvX,GACEsJ,EACEW,EACAjK,EACE8B,EACAugB,EACAvY,EACAxH,EACAW,GAGR,CACF,IACA,CAgFFwf,GACAngB,EACAW,GACA,CACH,EC/LUyf,GACX,SAAA1iB,GAEA,IAAM0C,EAAM8U,KACJvX,EAAuDyC,EAAzD2R,EAA6B/T,EAA4BoC,EAA9BiR,EACfvS,EAAwBnB,IAAlCgY,SAEAxX,EAIJW,EAJF8W,KACSzW,EAGPL,EAHF+W,QACUzX,EAERU,EAFFgX,SACShY,EACPgB,EADFiX,QAEI1V,EAAckG,EAAc7I,GAC5BqB,EAAiCsB,EAAc,CAAE,EAAG3C,EAE1D2iB,EADmCthB,EAA3B4W,UAMY,CAAC,EAJbrT,EAAA+d,EAANzK,KACStW,EAAA+gB,EAATxK,QACUnW,EAAA2gB,EAAVvK,SACS9W,EAAAqhB,EAATtK,QAGI9W,EAAgBoB,EAAc3C,EAASqB,EAA8B6Y,OACrE5X,EAAS2K,GAAc1L,GACvB4B,EAAa4J,GAAGxL,EAAe,YAC/B0B,EAAgB1B,EAAcqhB,cAC9B9Y,EAAa7G,EAAc4f,gBAC3BC,EAAoB,WAApB,OAA0B7f,EAAc8f,aAAevhB,CAAA,EACvDwhB,EAAY,SAAAhjB,GACZA,GAAoBA,EAAgC0hB,OACrD1hB,EAAgC0hB,OACnC,EAEIhgB,EAA8B+I,GAAKqO,GAAoC,CAACvX,IACxEwI,EAA+BU,GAAKsO,GAAqC,CAACxX,IAC1EyI,EAAeS,GAAK8D,GAAW,IAC/BrI,EAA0BuE,GAC9B/I,EACAsI,EACAtJ,GAEImC,EAAyB4H,GAC7BV,EACAC,EACA5J,GAEI6J,EAA0B/D,EAAwBlE,GAClDkI,EAAmBD,IAA4B1I,EAC/C4I,EAAuBD,GAAoB5H,EAC3CS,GAA0BmH,GAAoBrH,EAAuBvB,GAIrEsN,GAAqB1E,GAAoBD,IAA4BlH,EACrEqC,EAAkB+E,EAAuBL,EAAaG,EACtDgG,EAAqB9M,EACvBzB,EAA4BsI,EAAcvJ,EAA2BmE,GACpErD,EACC2O,EAAc/F,EAAuB/E,EAAkB6K,EACvDE,GACHjG,GACDH,EAA6BC,EAAcvI,EAA8BG,GACrEsD,GAAkB0J,GAAqB7L,EACvC0P,EAAoB,CAACvN,EAAgBE,EAAiB+K,EAAgBD,GAAa3M,KACtF,SAAAvD,GAAA,OAAQ6I,EAAc7I,KAASoN,GAAOpN,IAAQA,CAAA,IAE3CijB,EAAsB,SAAAjjB,GAAA,OAA6BA,GAAOoJ,EAAQqJ,EAAmBzS,EAAA,EACrF2T,EAAqCsP,EAAmB7d,GAC1D7D,EACA6D,EAEEwO,EAAgD,CACpDwB,GAAS7T,EACT8T,GAAOnF,EACPD,EAAW7K,EACX8d,GAAU/S,EACVmF,GAAUpQ,EACVyK,GAAsBxF,EAAuBL,EAAa1E,EAC1D+d,GAAqBhZ,EAAuBlH,EAAgBmC,EAC5Dge,GAA8B9gB,EAASwH,EAAa6J,EACpDuN,GAAcje,EACdsS,GAAapS,EACb6V,GAAS1W,EACTgc,GAAc3b,EACd8P,EAAmBvI,EACnBmZ,GAAYP,EACZtN,GAAoB,SAAAxV,GAAA,O3B7CI,SAC1BA,EACAwB,EACAkB,GAAA,OACYwJ,GAAiBlM,EAAKwB,GAAU0E,EAAKxD,EAAA,C2B0C7C4gB,CACEle,EACA8E,EAAmBpF,GAAoBoP,GACvClU,EAAA,EAEJ0V,GAAyB,SAAC1V,EAAoCwB,GAAA,OAC5DiL,GACErH,EACA8E,EAAmBpF,GAAoBoP,GACvClU,EACAwB,EAAA,GAGEqS,EAAkDD,EAApDwB,GAAWpB,EAAyCJ,EAA3CyB,GAASiH,EAAkC1I,EAApCsP,GAAYjP,EAAwBL,EAA1B3D,EAAakE,EAAaP,EAAf0B,GACrCjB,EAA4B,CAChC,WAEErI,GAAYgI,EAAO,CAAClP,GAAmBgP,KACvC9H,GAAY6H,EAASC,IACjBxR,GACF0J,GAAYlC,EAAY,CAACgK,GAAyBhP,IACpD,GAGEyP,EAA0BpR,GAAc8f,EAAmBjP,GAC7DS,GAAiBtR,EACjB0Q,EACA3G,GACE,CAACiH,EAAUF,EAAWqI,EAAUtI,EAAOH,GAAShH,MAC7C,SAAA7M,GAAA,OAAQA,IAAQijB,EAAmBjjB,EAAA,KAGtC0U,GAAcvK,EAAuB0J,EAAUM,GAAYF,EAC3DU,GAAUlK,GAAKZ,EAAiBwK,GA+FtC,MAAO,CAACT,EA9Fe,WACrB,IAAM5T,EAAS8iB,IACTthB,EAAgB+L,KAChBgW,EAAU,SAAAvjB,GACdqO,GAAejB,GAAOpN,GAAMkN,GAASlN,IACrC4N,GAAe5N,EAAI,EAGfwjB,EAA0B,SAAAxjB,GAAA,OAC9BA,EACIyQ,GACEzQ,EACA,+BACC,SAAAA,GACC4Q,GAAgB5Q,GAChBA,EAAMyjB,0BAA0B,GAElC,CACEtZ,GAAU,EACVF,GAAU,IAGdO,EAAA,EACA9H,EAAc,WACdzC,EAAayL,GAAQuI,EAAWvR,GAChCtB,EAA2BoiB,EAAuBhiB,GAkExD,OAjEAsK,GAASkI,EAAOlP,GAAmBoF,EAAmB,WAAa,QACnE4B,GAASwQ,EAAUhI,GAAsB,IACzCxI,GAASqI,EAAUK,GAAsB,IAEpCtK,IACH4B,GAASmI,EAAWC,GAAuB,IAC3CpI,GAASmI,EAAWvR,EAAazC,GAAc,MAC/CqC,GAAUkK,GAAa1C,EAAYhF,GdnNJ,ScuN7ByP,IACFjG,GAAYuF,EAASG,GAErB1K,EAAK+K,GAAY,WACf/F,GAAY0F,EAAOH,GACnBjG,GAAeoG,EAAM,KAIzB3F,GAAeqG,GAAaD,IAC5BpG,GAAe2F,EAAOsI,GACtBjO,GAAeiO,GAAYtI,GAAQ9J,GAAoB+J,GACvD5F,GAAe4F,EAAWE,GAE1B7K,EAAK+K,EAAY,CACfjT,EACA,WACE,IAAMpB,EAAmBuN,KACnB/L,EAA8BgiB,EAAuBxjB,GAC3DgM,GAAYsQ,EAAUhI,IACtBtI,GAAYmI,EAAUK,IACtBxI,GAAYiI,EAAW,CACrBjP,GACA+O,GACAG,KAEFjU,EACI6L,GAASmI,EAAWvR,EAAazC,GACjC+L,GAAYiI,EAAWvR,GAE3BugB,EAAmB9O,IAAaoP,EAAOpP,GACvC8O,EAAmBhP,IAAcsP,EAAOtP,GACxCgP,EAAmB3G,IAAaiH,EAAOjH,GACvC0G,EAAShjB,GACTwB,GAA6B,IAI7BlB,IAA4B4J,IAC9BsC,GAAayH,EAAWC,GAAuBE,IAC/C9K,EAAK+K,EAAY5J,GAAKuB,GAAaiI,EAAWC,MAIhD8O,EACG9Y,GAAoB1I,IAAkBD,GAAiBvB,EAAOiR,MAAQjR,EAEnEwB,EADAyS,GAGN7S,IAGAqT,GAAiB,EAEVE,EAAO,EAG4BA,GAAQ,ECzRzC+O,GACX,SADWC,GAAA,IACR3jB,EAAA2jB,EAAArO,GAAA,OACH,SAAAsO,GAA2C,IAAxCpiB,EAAAoiB,EAAAC,GAAuBnhB,EAAAkhB,EAAAE,GAAiB7jB,EAAA2jB,EAAArM,GACjCjX,GAA4BkB,GAAyB,CAAC,GAAxDqU,GACEzU,EAAqBsB,EAAvBiT,GACyB3V,IAAaM,GAA2BL,IAGrEqP,GAAUtP,GAAAyY,EAAAA,EAAAA,GAAA,GACPvO,GAAY9I,GAAoB,QAErC,GCMS2iB,GAA2D,SAA3DC,EAEX1jB,GAAA,IADEN,EAAAgkB,EAAA3O,GAAO7T,EAAAwiB,EAAAd,GAAUxgB,EAAAshB,EAAA/T,EAAWhQ,EAAA+jB,EAAAvR,EAG9BwR,EAAkDvd,EAChD,CACE/D,EAAQ4H,GACR7H,EAAemN,MAEjBpF,GAAKoF,GAAoB7P,EAAO,UAAW,KAAAkkB,GAAA1jB,EAAAA,EAAAA,GAAAyjB,EAAA,GALtC7iB,EAAA8iB,EAAA,GAAoBzjB,EAAAyjB,EAAA,GAQ3B,OAAO,SAAAC,GAAyD,IAAtDnkB,EAAAmkB,EAAA7M,GAAc7V,EAAA0iB,EAAAN,GAAuBnjB,EAAAyjB,EAAAL,GAAiB1jB,EAAA+jB,EAAA5M,GAC9D6M,EAAgC3jB,EAAoBL,GAAAikB,GAAA7jB,EAAAA,EAAAA,GAAA4jB,EAAA,GAA/CzhB,EAAA0hB,EAAA,GAAShjB,EAAAgjB,EAAA,GACNviB,EAA4B0V,KAA9B7D,EACN2Q,EAA8D7iB,GAAyB,CAAC,EAAhFmD,EAAA0f,EAAFpP,GAAgBtT,EAAA0iB,EAAFtH,GAAoBhb,EAAAsiB,EAAF1O,GAC9BtU,EAAoBZ,EAAtBoE,EACNyf,EAAkDvkB,EAAa,mBAAAwkB,GAAAhkB,EAAAA,EAAAA,GAAA+jB,EAAA,GAAxDhjB,EAAAijB,EAAA,GAAiBte,EAAAse,EAAA,GAGxB,GAAI5f,GAAgBvD,IAFIjB,GAAUwB,GAEI,KAAA6iB,EACRrjB,EAAmBhB,GAAAskB,GAAAlkB,EAAAA,EAAAA,GAAAikB,EAAA,GAA9C9hB,EAAA+hB,EAAA,GAASrjB,EAAAqjB,EAAA,GAGZ,IAAMxa,GACHjK,IAAsBiG,GAA0BlE,GAAqBX,GAExE,GAAI6I,EAAqB,CAEvB,IAAMlK,GAAmBuB,IAAqBC,IAAaM,EACrD7B,EAAoB0C,EAAQlC,EAAIkC,EAAQlB,EACxCL,EAAkBuB,EAAQ3C,EAAI2C,EAAQL,EAEtC7B,GAAAgY,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACH1O,GAAiB/J,IAAoBsB,GAAmBrB,EAAoB,GAC5E+J,GAAkBhK,GAAmBoB,EAAkB,GACvDM,GAAgB1B,GAAmBsB,GAAmBrB,EAAoB,SACtED,GAAmB2C,EAAQ3C,EAAI,WAC7BA,EAAmBsB,GAAmBqB,EAAQlC,EAAI,OAAU,UAC7DT,EAAmBsB,EAAkB,QAAUqB,EAAQlB,EAAK,GACjEwI,GAAWjK,GAAA,eAAA2E,OAAkC1E,EAAA,QAE1CwB,GAAAgX,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACHnW,EAAgBtC,EAAkB2C,EAAQ3C,EAAI,GAC9CmD,EAAkBnD,EAAkB2C,EAAQlC,EAAI,GAChDqJ,EAAmB9J,EAAkB2C,EAAQL,EAAI,GACjDW,EAAiBjD,EAAkB2C,EAAQlB,EAAI,GAIlD6N,GAAU9N,GAAYkB,EAAWjC,GACjC6O,GAAU5M,EAAWjB,GAErByJ,GAAW5K,EAAO,CAChB4iB,GAAUvgB,EACVgiB,IAAmB3kB,EACnBgF,EAAuBxD,EACnBC,EACAyJ,GAAW,CAAE,EAAEzK,EAAcgB,IAErC,CAEA,MAAO,CACLmjB,GAAsB1a,EACvB,CACF,ECzCU2a,GAA4D,SACvE7kB,EACAC,GAEA,IAAMK,EAAMkX,KAEVpW,EAOEpB,EAREqV,GAEJ5U,EAMET,EAPGkjB,GAELzhB,EAKEzB,EANMiQ,EAERvP,EAIEV,EALOyS,EAETrS,EAGEJ,EAJegZ,GAEjBrW,EAEE3C,EAHK0V,GAEPrU,EACErB,EAFqBqjB,GAGjBvhB,EAA4BxB,EAA9BqT,EACA/O,EAAuBxE,GAAWM,EAClCkB,EAAO6I,GAAK/H,EAAS,GAErBV,EAAiB,CACrBW,EAAQ0H,GACR3H,EAAe,CAAES,EAAG,EAAGnB,EAAG,IAEtBV,EAAiB,CACrBqB,EAAQ2H,GACR5H,EAAe,CAAEG,EAAGsH,GAAWlH,EAAGkH,KAE9B2a,EAAoB,SAAC9kB,EAAgC0C,GACzD,IAAMzC,EAAauB,EAAIujB,iBAAmB,IAAM,EAAI,EAAI,EAClDzkB,EAAS,CACb6C,EAAGvB,EAAK5B,EAAmBmD,EAAIT,EAAmBS,GAClDnB,EAAGJ,EAAK5B,EAAmBgC,EAAIU,EAAmBV,IAGpD,MAAO,CACLmB,EAAG7C,EAAO6C,EAAIlD,EAAaK,EAAO6C,EAAI,EACtCnB,EAAG1B,EAAO0B,EAAI/B,EAAaK,EAAO0B,EAAI,EACvC,EAGHgjB,EAAqDte,EACnD1E,EACAyI,GAAK2F,GAAgB3O,IAAAwjB,GAAAzkB,EAAAA,EAAAA,GAAAwkB,EAAA,GAFhBzjB,EAAA0jB,EAAA,GAAoB3iB,EAAA2iB,EAAA,GAI3BC,EAA2Exe,EAEzE1E,EAAgByI,GAAK0F,GAAY1O,IAAA0jB,GAAA3kB,EAAAA,EAAAA,GAAA0kB,EAAA,GAF5B/hB,EAAAgiB,EAAA,GAA+BliB,EAAAkiB,EAAA,GAGtCC,EACE1e,EAAwB1E,GAAAqjB,GAAA7kB,EAAAA,EAAAA,GAAA4kB,EAAA,GADnBtb,EAAAub,EAAA,GAA2B3jB,EAAA2jB,EAAA,GAElCC,EAA0D5e,EAAwB1E,GAAAujB,GAAA/kB,EAAAA,EAAAA,GAAA8kB,EAAA,GAA3Evb,EAAAwb,EAAA,GAAoBvb,EAAAub,EAAA,GAC3BC,EAAmC9e,EAA+BpF,GAA3D2I,GAA2DzJ,EAAAA,EAAAA,GAAAglB,EAAA,GAA3D,GAEDtb,EAAyBkM,GAC7BkB,IAGF,OAAO,SAAAmO,EAAAC,GAEH,IADAlkB,EAAAikB,EAAAnO,GAAclX,EAAAqlB,EAAA5B,GAAuB7hB,EAAAyjB,EAAA3B,GAAiBxiB,EAAAmkB,EAAAlO,GACtDpN,EAAAub,EAAAd,GAEFe,EACEvlB,GAAyB,CAAC,EADpB2C,EAAA4iB,EAAFzQ,GAAgBtG,EAAA+W,EAAF3I,GAAoB5X,EAAAugB,EAAF/P,GAAqB3F,EAAA0V,EAAFpI,GAYzDqI,EATE1b,GACAA,EAAuBhF,EACrBlF,EACAC,EACA+B,EACA1B,EACAkB,IAI2C,CAAC,EADxC0D,EAAA0gB,EAAF5R,EAAoBvB,EAAAmT,EAAFtJ,EAAwB3I,EAAAiS,EAAF3R,EAG9C4R,EACEvP,GAAgC9U,EAAclB,GAAAwlB,GAAAtlB,EAAAA,EAAAA,GAAAqlB,EAAA,GADzCjS,EAAAkS,EAAA,GAA8BjS,EAAAiS,EAAA,GAErCC,EAAoCvkB,EAAa,YAAAwkB,GAAAxlB,EAAAA,EAAAA,GAAAulB,EAAA,GAA1CjS,EAAAkS,EAAA,GAAU1J,EAAA0J,EAAA,GAEX/R,EACJlR,GACAoH,GACAyE,GACAxJ,GACA6K,GACA4D,EACI8E,EAAmBlC,GAAkB3C,EAASjR,GAC9CsR,EAAmBsC,GAAkB3C,EAAS7Q,GAC9CuR,EAAkBmE,GAAoBxE,EAExCM,EAAoBnS,EAAuBhB,GAC3CoT,GAA0BzR,EAAkC3B,GAC5DqT,GAAqBjT,EAA8BJ,GACnD+X,GAAoBrP,EAA4B1I,GAQpD,GAJIuS,GAAuC/R,GACzCa,EAAwByR,IAAmCR,GAGzDK,EAAuB,CACrBO,GACF7R,EAAwB0R,IAAkC,GAG5D,IAAA4R,GAAgExT,EAC5DA,EAZFmC,WAaE,GAAAsR,IAAA1lB,EAAAA,EAAAA,GAAAylB,GAAA,GAFGjmB,GAAAkmB,GAAA,GAAqB1kB,GAAA0kB,GAAA,GAI5BC,GAA6C1R,EAAoBlT,EAAmBD,GAAA8kB,IAAA5lB,EAAAA,EAAAA,GAAA2lB,GAAA,GAA7ElmB,GAAAmmB,GAAA,GAAc9lB,GAAA8lB,GAAA,GACrBC,GAAyD3R,GACvDvR,EAA8B7B,GAAAglB,IAAA9lB,EAAAA,EAAAA,GAAA6lB,GAAA,GADzBjlB,GAAAklB,GAAA,GAAoB7lB,GAAA6lB,GAAA,GAErB5lB,GAAqBwP,GAAWzO,GAChCrB,GAA6BgB,GAC7BU,GAA6BpB,GAEnCV,IAAuBA,MAIpBS,IAA6BH,IAAuBuT,IACrDrS,KACCoS,GACD1O,GACAA,EAAiB1D,GAAkCJ,GAAoBnB,IAMzE,IAAM+B,GAAkBgO,GAAW3O,KAC7BiB,GAA2B,CAC/Ba,EAAGvB,EAAKc,EAAQtB,GAAmB+B,EAAG/C,GAA2B+C,GAAKlD,GAAakD,GACnFnB,EAAGJ,EAAKc,EAAQtB,GAAmBY,EAAG5B,GAA2B4B,GAAK/B,GAAa+B,IAG/EiB,GAA2B,CAC/BE,EAAGvB,GACAgD,EACG5C,GAAgBmB,EAChBrB,GAA2BqB,EAAIvB,EAAKlB,GAAmByC,EAAI/B,GAAmB+B,IAChFlD,GAAakD,GAEjBnB,EAAGJ,GACAgD,EACG5C,GAAgBA,EAChBF,GAA2BE,EAAIJ,EAAKlB,GAAmBsB,EAAIZ,GAAmBY,IAChF/B,GAAa+B,IAInBqX,GAAoBtP,EAAmB9G,IACvC0R,GAAqB7K,EACnBgb,EAAkBxiB,GAA0BW,IAC5C3B,EAEJ,CAEA,IAAAilB,GAA4ClN,GAAAmN,IAAAhmB,EAAAA,EAAAA,GAAA+lB,GAAA,GAArCjN,GAAAkN,GAAA,GAAcjN,GAAAiN,GAAA,GACrBC,GAAgD9R,GAAA+R,IAAAlmB,EAAAA,EAAAA,GAAAimB,GAAA,GAAzCE,GAAAD,GAAA,GAAgB7R,GAAA6R,GAAA,GACvBE,GAAwDlS,GAAAmS,IAAArmB,EAAAA,EAAAA,GAAAomB,GAAA,GAAjD9R,GAAA+R,GAAA,GAAoB9R,GAAA8R,GAAA,GAC3BC,GAA4CrS,EAAAsS,IAAAvmB,EAAAA,EAAAA,GAAAsmB,GAAA,GAArC9R,GAAA+R,GAAA,GAAc9R,GAAA8R,GAAA,GACf7R,GAAc,CAClBrS,EAAG8jB,GAAexjB,EAAI,EACtBF,EAAG0jB,GAAe3kB,EAAI,GAElBmT,GACHwD,GAAoBxE,IAAqBe,GAAYrS,GAAKqS,GAAYjS,IACtE0V,GAAoBzD,GAAYrS,IAAMqS,GAAYjS,GAClDkR,GAAoBe,GAAYjS,IAAMiS,GAAYrS,EAarD,GAXEsH,GACA/E,GACA6K,GACAgF,IACAF,IACAwE,IACA1E,IACAyH,GACAzI,GACAI,EAEuB,CACvB,IAAMzS,GAA6B,CAAC,EAC9BkB,GAAwBsU,GAC5BhX,EACAkV,GACApB,EACAtS,IAGFmS,GACEA,EACEjR,GACAV,IACEkD,GACAA,EAAiBxC,GAAuBoS,GAAoBE,IAC9DxT,IAGAd,GACFoL,GAAS1K,EAAO4D,GAA4BxD,GAAc0E,KAC1D4F,GAAS1K,EAAO2S,GAA4BvS,GAAcqB,MAE1DyM,GAAU7N,EAAWD,GAEzB,CAEAiL,GAAmBrL,EAAO0D,GAAmBkP,GAA8BmB,IAC3E1I,GACEhM,EACA6T,GACAC,GACAY,IAEGzU,GACH+L,GACEhL,EACAyS,GACAG,GACAG,GAIJ,IAAAwS,GAA8C/c,EAC5CyM,GAAyB1W,GAAwBkQ,GAAA+W,IAAAzmB,EAAAA,EAAAA,GAAAwmB,GAAA,GAD5C3R,GAAA4R,GAAA,GAAe3R,GAAA2R,GAAA,GAiBtB,OAbA/b,GAAWjL,EAAqB,CAC9BiQ,EAAgBmF,GAChByJ,GAAe,CACbjc,EAAGyW,GAAanW,EAChBF,EAAGqW,GAAatX,GAElB6c,GAAiB,CACfhc,EAAG8jB,GAAexjB,EAClBF,EAAG0jB,GAAe3kB,GAEpBklB,GAAchS,KAGT,CACLiS,GAAuB7R,GACvB8R,GAAsB7N,GACtB8N,GAAwBxS,GACzB,CACF,EC3NUyS,GAAe,SAC1BtnB,EACAwB,EACAkB,EACAzC,GAEA,IAAMK,EAAmBoT,GAAkBlS,EAAS,CAAE,GACtD+lB,ECPmC,SAAAvnB,GACnC,IAAAwnB,EAAsD9E,GAA6B1iB,GAAAynB,GAAAjnB,EAAAA,EAAAA,GAAAgnB,EAAA,GAA5EhmB,EAAAimB,EAAA,GAAU/kB,EAAA+kB,EAAA,GAAyBxnB,EAAAwnB,EAAA,GACpCnnB,EAA6B,CACjC4iB,GAAU,CACRljB,EAAG,EACHS,EAAG,EACH6B,EAAG,EACHb,EAAG,GAELkjB,IAAkB,EAClB3f,GAAAyT,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACG1O,GAAiB,GACjBC,GAAkB,GAClBtI,GAAgB,GAChBY,EAAgB,GAChBa,EAAkB,GAClB2G,EAAmB,GACnB7G,EAAiB,GAEpB6b,GAAe,CAAEjc,EAAG,EAAGI,EAAG,GAC1B4b,GAAiB,CAAEhc,EAAG,EAAGI,EAAG,GAC5BiN,EAAgB,CACdrN,EAAGsH,GACHlH,EAAGkH,IAEL+c,GAAc,CACZrkB,GAAG,EACHI,GAAG,IAGC7B,EAA0CI,EAA5C4T,GAAW3U,EAAiCe,EAAnCyO,EAAaxO,EAAsBD,EAAxBiR,EAC1BiV,EAA+DlQ,KAAvD9W,EAAAgnB,EAAF/T,EAA2BvT,EAAAsnB,EAAFtiB,EACzBzC,GACHjC,IAA4BN,EAA0ByC,GAAKzC,EAA0B6C,GAElF5B,EAA2C,CAC/CqiB,GAA2BliB,GAC3BuiB,GAA2BviB,EAAUlB,GACrCukB,GAA4BrjB,EAAUlB,IAGxC,MAAO,CACLoC,EACC,SAAA1C,GACC,IAAMwB,EAAyC,CAAC,EAE1CvB,EADqB0C,GACgB+O,GAAgBjR,GAErDH,EAAkBmB,EACpB+K,GAAa/L,EAAWqE,GAAmBmP,IAC3CzJ,GAWJ,OATAtB,EAAK7H,GAAiB,SAAAqB,GACpBwI,GAAW1J,EAAakB,EAAc1C,EAAYwB,IAAgB,CAAC,EAAE,IAGvElB,IAEAgR,GAAgB7Q,EAAWR,IAC1BwB,GAAqB6P,GAAgBlQ,EAAS,GAExCI,CAAW,EAEpBlB,EACAkB,EACAvB,EACD,CDrDG0nB,CAAqB3nB,GAAA4nB,GAAApnB,EAAAA,EAAAA,GAAA+mB,EAAA,GALvBnmB,EAAAwmB,EAAA,GACAnnB,EAAAmnB,EAAA,GACAnmB,EAAAmmB,EAAA,GACAlnB,EAAAknB,EAAA,GACAxnB,EAAAwnB,EAAA,GAEFC,EAA0EzL,GACxE1b,EACAe,EACAnB,GACC,SAAAN,GAEC4S,EAAO,CAAC,EAAG5S,EAAqB,IAAA8nB,GAAAtnB,EAAAA,EAAAA,GAAAqnB,EAAA,GAN7BllB,EAAAmlB,EAAA,GAAsBzmB,EAAAymB,EAAA,GAAsBhmB,EAAAgmB,EAAA,GASnDC,EExDmC,SACnC/nB,EACAwB,EACAkB,EACAzC,EACAK,EACAc,GAEA,IAAIX,EACAgB,EACAf,EACAN,EACAuC,EACAtB,EAAyCmJ,GACzC1I,EAAwB,EAGtBkmB,EAA0B,SAAAhoB,GAAA,MAA8C,UAAtBA,EAAMmiB,WAAgB,EAE9E8F,EAAkEpd,KAAAqd,GAAA1nB,EAAAA,EAAAA,GAAAynB,EAAA,GAA3DrjB,EAAAsjB,EAAA,GAA6BtmB,EAAAsmB,EAAA,GACpCC,EACEtd,GAAiB,KAAAud,GAAA5nB,EAAAA,EAAAA,GAAA2nB,EAAA,GADZnmB,EAAAomB,EAAA,GAAmC9mB,EAAA8mB,EAAA,GAE1CC,EAA8Dxd,GAAiB,KAAAyd,GAAA9nB,EAAAA,EAAAA,GAAA6nB,EAAA,GAAxE9mB,EAAA+mB,EAAA,GAAwBhmB,EAAAgmB,EAAA,GAC/BC,EAAgD1d,IAAiB,kBAAM/I,CAAA,IAAA0mB,GAAAhoB,EAAAA,EAAAA,GAAA+nB,EAAA,GAAhEplB,EAAAqlB,EAAA,GAAiBvlB,EAAAulB,EAAA,GACxBC,EAAmCrK,GACjCpe,EACAM,EACAL,EACAghB,GACEzf,EACAlB,EACAL,GACC,SAAAD,GAAA,OACCgoB,EAAuBhoB,IAEvB0oB,GAAA,KAAAC,GAAAnoB,EAAAA,EAAAA,GAAAioB,EAAA,GAXC3e,EAAA6e,EAAA,GAAUjnB,EAAAinB,EAAA,GAcT5e,EAAwCzJ,EAA1C+U,GAASrL,EAAiC1J,EAAnC6iB,GAAuBjd,EAAY5F,EAAd0Y,GAEhCnW,EAIEiH,EALE6W,GAEJ1W,EAGEH,EAJuBsW,GAEzBlW,EAEEJ,EAH4BuW,GAE9BlW,EACEL,EAF4BwW,GAG1BsI,EAA2B,SAAC5oB,EAAyBwB,GAEzD,GADAyB,IACIjD,EACF6C,EAA0B2S,QACrB,CACL,IAAMxV,EAAOyK,GAAK5H,EAA2B2S,IAAkC,GAC3E1T,EAAwB,IAAMN,EAChC2B,EAAgBnD,GAEhBA,GAEJ,GAEI0oB,EAA6C,YAC7ChoB,EAAmBD,EAAeL,KACpCwoB,GAAyB,GACzB5mB,GAAkC,WAChC4mB,GAAyB,EAAM,IAEnC,EAEIC,EAA4B,SAAA7oB,GAChC6C,EAA0B0S,GAA4BvV,GAAK,GAC3D6C,EAA0B0S,GAA4BvV,GAAK,EAAM,EAE7D8oB,EAAoB,SAAA9oB,GACpBgoB,EAAuBhoB,KACzBS,EAAcC,EACdA,GAAmBkoB,GAAyB,GAC9C,EAEI7lB,EAA6B,CACjCE,EACA3B,EACAgB,EACAV,EACA,kBAAMP,GAAA,EAENoP,GAAiB1G,EAAO,cAAe+e,EAAkB,CAAEla,GAAO,IAClE6B,GAAiB1G,EAAO,eAAgB+e,GACxCrY,GAAiB1G,EAAO,gBAAiB,SAAA/J,GACnCgoB,EAAuBhoB,KACzBS,GAAc,EACdC,GAAmBkoB,GAAyB,GAC9C,IAEFnY,GAAiB1G,EAAO,eAAgB,SAAA/J,GACtCgoB,EAAuBhoB,IACrByB,GACAinB,GAA4C,IAEhDjY,GAAiBzG,EAAqB,UAAW,SAAAhK,GAC/C4E,GAA4B,WAC1BsF,IACAwe,GAA4C,IAG9CtnB,EAASpB,GAETmK,GAAmC,KAIvC,MAAO,CACL,kBAAMM,GAAKZ,EAAiBP,EAAKvG,EAAYrB,KAAA,EAC7C,SAAAqnB,GAAgD,IAA7C/oB,EAAA+oB,EAAAzR,GAAc9V,EAAAunB,EAAAxR,GAAQjX,EAAAyoB,EAAAlF,GACvBmF,EAD8CD,EAAAE,IAEnB,CAAC,EADpBxoB,EAAAuoB,EAAF5B,GAAwBxiB,EAAAokB,EAAF3B,GAA0BzlB,EAAAonB,EAAF7B,GAEpD+B,EAAuC5oB,GAAyB,CAAC,EAAzD0B,EAAAknB,EAAFtT,GAAqBtU,EAAA4nB,EAAFlU,GACjB1S,EAAoBI,EAAtBoC,EACE3B,EAA8BqU,KAAhCpS,EACEnC,EAAiChD,EAAnCiQ,EAAkBpG,EAAiB7J,EAAnBinB,GACtBiC,EACEnpB,EAAa,gCAAAopB,GAAA5oB,EAAAA,EAAAA,GAAA2oB,EAAA,GADRznB,EAAA0nB,EAAA,GAAoCrf,EAAAqf,EAAA,GAE3CC,EAA8BrpB,EAAa,oBAAAspB,GAAA9oB,EAAAA,EAAAA,GAAA6oB,EAAA,GAApCtmB,EAAAumB,EAAA,GAAO1a,EAAA0a,EAAA,GACdC,EAAwCvpB,EAAa,yBAAAwpB,GAAAhpB,EAAAA,EAAAA,GAAA+oB,EAAA,GAA9CnkB,EAAAokB,EAAA,GAAYvZ,EAAAuZ,EAAA,GACnBC,EAAoCzpB,EAAa,uBAAA0pB,GAAAlpB,EAAAA,EAAAA,GAAAipB,EAAA,GAA1CvZ,EAAAwZ,EAAA,GAAUvZ,EAAAuZ,EAAA,GACjBC,EAAkD3pB,EAAa,8BAAA4pB,GAAAppB,EAAAA,EAAAA,GAAAmpB,EAAA,GAAxDzkB,EAAA0kB,EAAA,GAAiBnX,EAAAmX,EAAA,GACxBC,EAAwB7pB,EAAa,4BAA9B2T,IAA8BnT,EAAAA,EAAAA,GAAAqpB,EAAA,GAA9B,GACPC,GAAwC9pB,EAAa,yBAAA+pB,IAAAvpB,EAAAA,EAAAA,GAAAspB,GAAA,GAA9ClW,GAAAmW,GAAA,GAAYlW,GAAAkW,GAAA,GACnBC,GAA0ChqB,EAAa,0BAAAiqB,IAAAzpB,EAAAA,EAAAA,GAAAwpB,GAAA,GAAhDlW,GAAAmW,GAAA,GAAanlB,GAAAmlB,GAAA,GACpBC,GAAoClqB,EAAa,YAAAmqB,IAAA3pB,EAAAA,EAAAA,GAAA0pB,GAAA,GAA1CllB,GAAAmlB,GAAA,GAAUpW,GAAAoW,GAAA,GACXnW,GAAgB1S,IAAYE,EAC5B8a,GAAcxS,EAAajH,GAAKiH,EAAa7G,EAC7CgR,GACJxT,GAAwBmE,GAA0B5C,GAAqBR,EACnEmX,GAAmB/W,GAAyBqO,GAAqB8D,GACjEG,GACJxS,GACAyB,EAA0BN,GAC1BM,EAA0BF,EAEtBmnB,GAAyB,SAC7BpqB,EACAwB,EACAkB,GAEA,IAAMzC,EACJD,EAAiBsM,SAAS,YACV,YAAflH,GAA4C,SAAfA,GAA2C,WAAlB5D,GAIzD,OAFAqB,EAA0BsS,GAA2BlV,EAAWyC,GAEzDzC,CAAS,EAsDlB,GAnDA6B,EAAwB6R,GAEpBK,KACE9O,GAAmBoX,IACrBuM,GAAyB,GACzBxnB,IACAE,GAAuB,WACrBF,EAAyCoP,GACvCzG,EACA,SACAS,GAAKoe,GAA0B,GAC/B,CACEja,GAAO,GAEV,KAGHia,GAAyB,IAIzB9e,GACFlH,EpB5KmC,gBoB4KoBqR,IAGrDtF,IACF/L,EAA0BF,GAC1BE,EAA0BE,GAAO,GAEjCJ,EAAYI,GAGV0P,IAA2BvN,GAC7B2jB,GAAyB,GAGvB1Y,IACF1O,EAA8B,SAAbyO,EACjBxP,EAA+B,UAAbwP,EAElB0Y,EADAxoB,EAA+B,UAAb8P,GACwB,IAGxC2D,IACFhR,EAA0B8S,GAAqC/B,IAG7D9O,IACFjC,EAA0B6S,GAAoC5B,IAG5D6E,GAAkB,CACpB,IAAM3Y,GAAWoqB,GAAuBplB,GAASnC,EAAGI,EAAeJ,GAAG,GAChErB,GAAW4oB,GAAuBplB,GAAS/B,EAAGA,EAAeA,GAAG,GAGtEJ,EAA0BuS,KAFRpV,IAAYwB,IAGhC,CAEIyS,KAEFhK,IACAC,IACAC,IAEAtH,EAA0ByS,IAA6BxL,EAAajH,GAAG,GACvEA,EAA0ByS,IAA6BxL,EAAa7G,GAAG,GACvEJ,EAA0BiS,GAAuBxS,IAAoB4D,GACvE,EAEF,CAAC,EACD4D,EACD,CFtKCugB,CACErqB,EACAwB,EACAM,EACAL,EACAf,EACAT,GAAAqqB,GAAA9pB,EAAAA,EAAAA,GAAAunB,EAAA,GAPGnjB,EAAA0lB,EAAA,GAAuB1oB,EAAA0oB,EAAA,GAAyBtoB,EAAAsoB,EAAA,GAUjDC,EAAwB,SAAAvqB,GAAA,OAC5BmJ,GAAKnJ,GAAOwqB,MAAM,SAAAhpB,GAAA,QAAUxB,EAAMwB,EAAA,KAE9BoR,EAAS,SACb5S,EACAC,GAEA,IACmBK,EAIfN,EAJFyqB,GACQrpB,EAGNpB,EAHFuX,GACA9V,EAEEzB,EAHcyd,GAEhB/c,EACEV,EAFU0qB,GAGRtqB,EAAkBE,GAAqB,CAAC,EACxCqC,IAAWvB,EACXwD,EAAqC,CACzC0S,GAAc5D,GAAkBlS,EAASpB,EAAiBuC,GAC1D8nB,GAAArqB,EACAmX,GAAA5U,GAGF,GAAIjC,EAEF,OADAkB,EAAsBgD,IACf,EAGT,IAAM5C,EACJ/B,GACAoB,EACE6J,GAAW,CAAC,EAAGtG,EAAmB,CAChC6Y,GAAAhc,KAIAH,EAAiBb,EACrByK,GAAW,CAAC,EAAGtG,EAAmB,CAChCkf,GAAiBhiB,EACjB+hB,GAAuB7hB,KAG3BJ,EACEsJ,GAAW,CAAE,EAAEtG,EAAmB,CAChCif,GAAuB7hB,EACvBinB,GAAuB3nB,KAI3B,IAAMC,EAAuBgpB,EAAqBvoB,GAC5CM,EAAuBioB,EAAqBjpB,GAC5C6B,EACJ5B,GAAwBe,IAAyB+I,GAAcjL,IAAoBuC,EAQrF,OANAQ,GACET,EAAU1C,EAAY,CACpB6jB,GAAuB7hB,EACvBinB,GAAuB3nB,IAGpB6B,CAAO,EAGhB,MAAO,CACL,WACE,IAAQnD,EAA4CU,EAA9C0iB,GAAgC5hB,EAAcd,EAAhBuP,EAC9BvN,EAAgBgP,GAAgB1R,GAChCC,EAAa,CAAC0C,IAAwBvB,IAAwBwD,KAIpE,OAFA0M,GAAgB9P,EAAWkB,GAEpB+H,GAAKZ,EAAiB5J,EAAW,EAE1C2S,EACA,iBAAO,CACL+X,GAAsB7oB,EACtB8oB,GAAsBnpB,IAExB,CACEopB,GAAyBnqB,EACzBoqB,GAA0B9oB,GAE5B5B,EACD,EG6GU2qB,GAA6C,SAA7CA,EACX/qB,EACAwB,EACAkB,GAEA,IAAQzC,EAAuBuX,KAAzBhD,GACAlU,EAAkBuI,EAAc7I,GAChCoB,EAAiBd,EAAkBN,EAASA,EAAOka,OACnDzZ,EAAoByY,GAAY9X,GACtC,GAAII,IAAYf,EAAmB,CACjC,IAAIA,GAAY,EACVgB,EAA6B,GAC7Bf,EAAsE,CAAC,EACvEsqB,EAAmB,SAAAhrB,GACvB,IAAMwB,EAA6B4J,GAA0BpL,GAAY,GACnE0C,EAAiB0T,GC/SoB,+BDkT3C,OAAO1T,EACHA,EAAelB,GAA4B,GAC3CA,CAA0B,EAE1BpB,EAAkC8K,GACtC,CAAE,EACFjL,IACA+qB,EAAgBxpB,IAElBypB,EACErZ,KAAAsZ,GAAA1qB,EAAAA,EAAAA,GAAAyqB,EAAA,GADKtoB,EAAAuoB,EAAA,GAAgB7pB,EAAA6pB,EAAA,GAAoBppB,EAAAopB,EAAA,GAE3CC,EACEvZ,GAAuBlP,GAAA0oB,GAAA5qB,EAAAA,EAAAA,GAAA2qB,EAAA,GADlBvmB,EAAAwmB,EAAA,GAAkBxpB,EAAAwpB,EAAA,GAAsBppB,EAAAopB,EAAA,GAEzCC,EAA0C,SAACrrB,EAAMwB,GACrDQ,EAAqBhC,EAAMwB,GAC3BM,EAAmB9B,EAAMwB,EAAK,EAEhC8pB,EACEhE,GACEtnB,EACAI,GACA,SAAAmrB,EAAAC,GAAuD,IAApDxrB,EAAAurB,EAAAd,GAAiBjpB,EAAA+pB,EAAAhU,GAAY7U,EAAA8oB,EAAA3H,GAAuB5jB,EAAAurB,EAAAvC,GAEnD3oB,EAMEoC,EAPEwS,GAEJ9T,EAKEsB,EANUkT,GAEZnV,EAIEiC,EALemT,GAEjBpU,EAGEiB,EAJqBsa,GAEvBtc,EAEEgC,EAHc2T,GAEhBjW,EACEsC,EAFWsS,GAIPrS,EACN1C,EADImnB,GAAwB/lB,EAC5BpB,EAD0BonB,GAA0BvlB,EACpD7B,EADkDknB,GAGpDkE,EAAa,UAAW,CAEtBvhB,EACA,CACE2hB,YAAa,CACXC,cAAeprB,EACfqrB,mBAAoBvqB,EACpBwqB,yBAA0BnrB,EAC1BorB,sBAAuBlpB,EACvBmpB,wBAAyBzqB,EACzB0qB,uBAAwBjqB,EACxBkqB,kBAAmBvqB,EACnBwqB,eAAgBvrB,EAChBwrB,SAAU9rB,GAEZ+rB,eAAgBnsB,GAAmB,CAAE,EACrCosB,QAAS5qB,IAEX,IAGH,SAAAxB,GAAA,OAAgBqrB,EAAa,SAAU,CAACvhB,EAAU9J,GAAA,IAAAqsB,GAAA7rB,EAAAA,EAAAA,GAAA8qB,EAAA,GAtChDhqB,EAAA+qB,EAAA,GAAiB9qB,EAAA8qB,EAAA,GAAc/pB,EAAA+pB,EAAA,GAAalpB,EAAAkpB,EAAA,GAAgBppB,EAAAopB,EAAA,GAyC7DC,EAAW,SAAAtsB,IdtWU,SAAAA,GAC7BgZ,GAAkBa,OAAO7Z,EAAO,CcsW5BusB,CAAenrB,GACfyI,EAAgBpI,GAEhBhB,GAAY,EAGZ4qB,EAAa,YAAa,CAACvhB,EAAU9J,IACrCqB,IACAO,GAAsB,EAGlBkI,EAA8B,CAClC0iB,QAAA,SAAQxsB,EAA6BwB,GACnC,GAAIxB,EAAY,CACd,IAAM0C,EAAOlB,EAAOvB,IAAuB,CAAC,EACtCK,EAAiBmT,GACrBrT,EACA8K,GAAWxI,EAAMsoB,EAAgBhrB,KAE9BqL,GAAc/K,KACjB4K,GAAW9K,EAAgBE,GAC3BiB,EAAa,CAAEkpB,GAAiBnqB,IAEpC,CACA,OAAO4K,GAAW,CAAC,EAAG9K,EACvB,EACDqsB,GAAI7nB,EACJ8nB,IAAK,SAAC1sB,EAAMwB,GACVxB,GAAQwB,GAAYI,EAAqB5B,EAAMwB,EAAS,EAE1DmrB,MAAA,WACE,IAAAC,EAAuDtqB,IAA/CtC,EAAA4sB,EAAFjC,GAAwBnpB,EAAAorB,EAAFhC,GACpBloB,EAAoB1C,EAAtB8E,EAEJ7E,EAMEuB,EAPEsd,GAEJxe,EAKEkB,EANWqd,GAEbzd,EAIEI,EALa0O,EAEfzO,EAGED,EAJY0lB,GAEdxmB,EAEEc,EAHU0hB,GAEZ9iB,EACEoB,EAFMmjB,GAGV,OAAOzZ,GACL,CAAC,EACD,CACE2hB,aAAc5sB,EACd6sB,eAAgBxsB,EAChBysB,cAAe3rB,EACf4rB,YAAavrB,EACb0W,QAASzX,EACTgS,gBAAiBtS,EACjB6sB,aAAcvqB,EACdwqB,UAAAzsB,GAGL,EACDwX,SAAA,WACE,IAAAkV,EAQIhqB,EAAe0nB,GAPjB7qB,EAAAmtB,EADI/X,GAEJ5T,EAAA2rB,EADO9X,GAEP3S,EAAAyqB,EADKjK,GAELjjB,EAAAktB,EADQld,EAER3P,EAAA6sB,EADS7X,GAETlU,EAAA+rB,EADQxd,GAERlP,EAAA0sB,EADoBhK,GAGtBiK,EAAmCjqB,EAAe2nB,GAA1CrpB,EAAA2rB,EAAFxM,GAAelgB,EAAA0sB,EAAFpM,GACbqM,EACJ,SAAArtB,GAEA,IAAQwB,EAAgCxB,EAAlC4e,GAAWlc,EAAuB1C,EAAzB2e,GACf,MAAO,CACL2O,UAFsCttB,EAAjBwf,GAGrB+N,MAAO7qB,EACP8qB,OAAQhsB,EACT,EAEGisB,EACJ,SAAAztB,GAEA,IAAQwB,EAAiCxB,EAAnC6gB,GAAwBne,EAAW1C,EAAb8gB,GACtB7gB,EAAsBotB,EAA4B7rB,EAAqB,IAE7E,OAAO0J,GAAW,CAAE,EAAEjL,EAAqB,CACzCytB,MAAO,WACL,IAAM1tB,EAASqtB,EAA4B3qB,KAE3C,OADAnB,EAAa,CAAEmpB,IAAiB,IACzB1qB,CAAM,GAEf,EAEJ,OAAOkL,GACL,CAAC,EACD,CACEgP,OAAQla,EACRkY,KAAM1W,EACN2W,QAASzV,GAAYzC,EACrBmY,SAAUnY,EACVoY,QAAS/X,GAAYL,EACrB0tB,oBAAqBvsB,EACrBwsB,mBAAoBntB,EACpBotB,oBAAqBJ,EAAgChsB,GACrDqsB,kBAAmBL,EAAgC/sB,IAGxD,EACDkS,OAAS,SAAA5S,GAAA,OAAqBuB,EAAa,CAAEgW,GAAAvX,EAAQyd,IAAc,KACnE6O,QAAS7hB,GAAK6hB,GAAS,GACvByB,OAAmC,SAAA/tB,GAAA,OACjCU,EAA8ByI,GAAKnJ,GAAQ,MAiB/C,OAZAsJ,EAAK7H,EAAY,CAACwB,IdheK,SAACjD,EAAiBwB,GAC3CwX,GAAkB7G,IAAInS,EAAQwB,EAAW,CckevCwsB,CAAY5sB,EAAgB0I,GAG5BgM,GAA8BF,GAAemV,EAAmB,CAC9DjhB,EACAnH,EACAjC,If/V8B,SAClCV,EACAwB,GAEA,IAAAysB,EAA2CzsB,GAA6B,CAAC,EAAjEkB,EAAAurB,EAAFzV,yBAA4BvY,EAAAguB,EAAFvW,KAChCwW,EACE1W,KADMlX,EAAA4tB,EAAF9oB,EAA6BhE,EAAA8sB,EAAFva,EAEjCwa,GACE1tB,EAH0DytB,EAAF7Z,KAG5BkE,OADI9W,EAAA0sB,EAA1B3V,yBAAiE9X,EAAAytB,EAANzW,KAG7DtX,EACJ,MAAAsC,EAAAA,EAA4BjB,EACxBkB,EAAmCmF,EAAY7H,GAAQS,EAAcT,EAErEoB,GACHf,EAA0BuC,GAAKvC,EAA0B2C,IAC1D7C,EACI0B,EACJ9B,IACC+H,EAAOpF,IACHvB,EACDuB,GAEN,QAAStB,KAAmCS,CAA6B,Ce4UrEssB,CACEjrB,EAAe0nB,GAAwB7R,IACtC1Y,GAAmBN,EAAOuY,SAG7B+T,GAAQ,GACDxiB,IAGTR,EAAK7H,EAAYH,KAEjB+pB,EAAa,cAAe,CAACvhB,IAE7BA,EAAS8I,QAAO,GAET9I,EACT,CACA,OAAOrJ,CAAkB,EAG3BsqB,GAAkBgD,OAAU,SAAA/tB,GAC1B,IAAMwB,EAAQ4G,EAAQpI,GAChB0C,EACJlB,EAAQxB,EAAU,CAACA,GACfC,EAASyC,EAAaa,KACzB,SAAAvD,GAAA,OAAW8V,GAA8B9V,EAAQ+qB,IAAmB,MAGvE,OpBlZyB,SAAA/qB,GACzBkJ,EAAKlJ,GAAc,SAAAA,GAAA,OACjBkJ,EAAKlJ,GAAQ,SAACwB,EAAGkB,GACfkT,GAAclT,GAAO1C,EAAO0C,EAAI,MAEnC,CoB4YD2rB,CAAW3rB,GACJlB,EAAQvB,EAAUA,EAAO,EAAU,EAE5C8qB,GAAkBuD,MAAS,SAAAtuB,GACzB,IAAMwB,EAAYxB,GAAeA,EAAiCiY,SAC5DvV,EAAWyF,EAAW3G,IAAcA,IAC1C,OAAOgH,EAAc9F,MAAewW,GAAYxW,EAASwX,OAAO,EAElE6Q,GAAkBwD,IAAM,WACtB,IAAAC,EAYIhX,KAXFxX,EAAAwuB,EADI5a,EAEJpS,EAAAgtB,EADqBppB,EAErB1C,EAAA8rB,EADyB7a,EAEzB1T,EAAAuuB,EADuBra,EAEvB7T,EAAAkuB,EADkBta,EAElB9S,EAAAotB,EADe9Z,GAEfjU,EAAA+tB,EAD4B7Z,GAE5BlT,EAAA+sB,EADqBna,EAErB3T,EAAA8tB,EADyBja,GAEzBnU,EAAAouB,EADyBha,GAEzB7R,EAAA6rB,EADkB/Z,GAGpB,OAAOvJ,GACL,CAAC,EACD,CACEujB,eAAgBzuB,EAChB0uB,mBAAoBltB,EACpBmtB,iBAAkBjsB,EAClBksB,kBAAmB3uB,EACnB4uB,eAAgBvuB,EAChBwuB,4BAA6B1tB,EAC7B2tB,qBAAsBtuB,EAEtBuuB,yBAA0BvtB,EAC1BwtB,yBAA0BvuB,EAC1BwuB,kBAAmB9uB,EACnB+uB,kBAAmBxsB,GAEtB,2DE1hBGmH,GAAc,WAEd,UAAOlD,OAAW,IAAa,CAGjC,IAAMpF,EAAO,WAAO,EACb,OAACA,EAAMA,EAChB,CAGI,IAAAC,EACAiB,EACE1C,EAAM4G,OACNxF,EAAmD,mBAA5BpB,EAAIovB,oBAC3BhvB,EAAMJ,EAAIoH,sBACV1G,EAAMV,EAAImH,qBACV1G,EAAQW,EAAgBpB,EAAIovB,oBAAsBhvB,EAClDuC,EAAQvB,EAAgBpB,EAAIqvB,mBAAqB3uB,EACjDT,EAAQ,WACZ0C,EAAMlB,GACNf,EAAIgC,EAAK,EAGJ,OACL,SAAClB,EAAUlB,GACHL,IACGwB,EAAAhB,EACPW,EACI,WACQnB,IAENyC,EAAQtC,EAAIoB,EAAQ,EAEtBA,EACe,iBAAZlB,EAAuBA,EAAU,CAAEgvB,QAAS,MAEvD,EACArvB,EAEJ,EASa8T,GAAuB,SAClCtS,GAEA,IAAA8C,EAAmC9C,GAAU,CAAC,EAAtCiB,EAAA6B,EAAAioB,QAASxsB,EAAAuE,EAAAgrB,OAAQnuB,EAAAmD,EAAAirB,MAAAC,GACWvpB,EAAAA,EAAAA,SAAe4D,GAAa,IAAE4lB,GAAAlvB,EAAAA,EAAAA,GAAAivB,EAAA,GAA3DrvB,EAAAsvB,EAAA,GAAchvB,EAAWgvB,EAAA,GAC1BjvB,GAAcY,EAAAA,EAAAA,QAAiD,MAC/DsB,GAAWtB,EAAAA,EAAAA,QAAOD,GAClBnB,GAAaoB,EAAAA,EAAAA,QAAOqB,GACpBlB,GAAYH,EAAAA,EAAAA,QAAOrB,GAEzB,OAAAsB,EAAAA,EAAAA,YAAU,WACRqB,EAASgtB,QAAUvuB,CAAA,GAClB,CAACA,KAEJE,EAAAA,EAAAA,YAAU,WACF,IAAWhB,EAAaG,EAAtBkvB,QAER1vB,EAAW0vB,QAAUjtB,EAEjByH,GAAkBmkB,MAAMhuB,IAC1BA,EAASksB,QAAQ9pB,GAAW,CAAC,GAAG,EAClC,GACC,CAACA,KAEJpB,EAAAA,EAAAA,YAAU,WACF,IAAWhB,EAAaG,EAAtBkvB,QAERnuB,EAAUmuB,QAAU3vB,EAEhBmK,GAAkBmkB,MAAMhuB,IAC1BA,EAASmsB,GAAGzsB,GAAU,CAAC,GAAG,EAC5B,GACC,CAACA,KAEJsB,EAAAA,EAAAA,YACE,kBAAM,iBACQZ,IACZ,OAAAJ,EAAAG,EAAYkvB,UAAZrvB,EAAqBgsB,SACvB,IACA,KAGKpmB,EAAAA,EAAAA,UACL,iBAAM,CACJ,SAAC5F,GAEC,IAAMsB,EAAkBnB,EAAYkvB,QAChC,IAAAxlB,GAAkBmkB,MAAM1sB,GAAxB,CAIJ,IAAME,EAAYa,EAASgtB,QACrB1sB,EAAchD,EAAW0vB,SAAW,CAAC,EACrCrtB,EAAad,EAAUmuB,SAAW,CAAC,EACnCjuB,EAAO,WAAP,OACHjB,EAAYkvB,QAAUxlB,GAAkB7J,EAAQ2C,EAAaX,EAAU,EAEtER,EACF1B,EAAasB,EAAMI,GAEdJ,GAZC,CAcV,EACA,kBAAMjB,EAAYkvB,OAAA,EACpB,GACA,GAEJ,OCxC+C5sB,EAAAA,EAAAA,aAnEZ,SACjCtB,EACAiB,GAEM,IAAAktB,EAAkEnuB,EAAhEouB,QAAA7vB,OAAA,IAAA4vB,EAAU,MAAAA,EAAOxuB,EAA+CK,EAA/C+qB,QAASpsB,EAAsCqB,EAAtC8tB,OAAQ7uB,EAA8Be,EAA9B+tB,MAAO/uB,EAAuBgB,EAAvBuE,SAAarD,GAAAmtB,EAAAA,EAAAA,GAAUruB,EAAAsuB,IAClE9vB,EAAMD,EACNwB,GAAaH,EAAAA,EAAAA,QAAsB,MACnCf,GAAce,EAAAA,EAAAA,QAAuB,MAAI2uB,EACdjc,GAAqB,CAAEyY,QAAAprB,EAASmuB,OAAAnvB,EAAQovB,MAAA9uB,IAAOuvB,GAAAzvB,EAAAA,EAAAA,GAAAwvB,EAAA,GAAzEpuB,EAAAquB,EAAA,GAAYnuB,EAAUmuB,EAAA,GAE7B,OAAA3uB,EAAAA,EAAAA,YAAU,WACF,IAAW2B,EAAQzB,EAAjBmuB,QACSrtB,EAAgBhC,EAAzBqvB,QAGR,GAAK1sB,EAAL,CAOA,OAAArB,EACc,SAAZ5B,EACI,CACEka,OALOjX,EAMPsV,OAAQ,CACNb,KAAM,OAGV,CACEwC,OAXOjX,EAYPgV,SAAU,CACRG,SAAU9V,EACV+V,QAAS/V,KAKZ,iBAAM,cAAA6N,EAAArO,UAAA,EAAAqO,EAAcmc,SAAA,CAvBnB,CAuB2B,GAClC,CAAC1qB,EAAY5B,KAEhBgK,EAAAA,EAAAA,qBACEtH,GACA,iBACS,CACLwtB,WAAApuB,EACAquB,WAAY,kBAAM3uB,EAAWmuB,OAAA,KAGjC,IAACxsB,EAAAA,cAKAlD,GAAAmwB,EAAAA,EAAAA,GAAA,CAAI,oCAAkC,GAAGC,IAAK7uB,GAAgBmB,GAChD,SAAZ3C,EACCS,EAAA0C,EAAAA,cAEC,MAAI,mCAAgC,GAAGktB,IAAK/vB,GAC1CG,GAKX,yBC5FA,SAAST,GAAWA,GACZ,IAAAoB,GAAMd,EAAAA,EAAAA,QAAuB,MAC3BI,EAAuDV,EAAzDgG,SAAYtE,EAA6C1B,EAA/CY,UAAaY,EAAkCxB,EAApCwsB,QAAA8D,EAAoCtwB,EAA3BmE,KAAE7C,OAAA,IAAAgvB,EAAO,KAAAA,EAAShuB,GAAI7B,EAAAA,EAAAA,GAAKT,EAAzD,2CACAqB,EACJgC,OAAAC,OAAA,CAAA2P,WAAY,CACVC,MAAO,sBACPC,SAAU,WAET3R,GAAA+uB,EAEgB7tB,GAAqB,CAAE8pB,QAASnrB,IAA9CsB,GAA8CnC,EAAAA,EAAAA,GAAA+vB,EAAA,GAA9C,GAMP,OAJA9uB,EAAAA,EAAAA,YAAU,WACJL,EAAIuuB,SAAShtB,EAAWvB,EAAIuuB,QAAQ,GACvC,CAAChtB,IAGF1C,EAAAA,cAAA,MAAAoD,OAAAC,OAAA,CACE1C,UAAWR,KACT,CACE,YAAsB,OAATkB,GAEfI,GAEF2uB,IAAKjvB,GACDkB,GAEH5B,EAGP,CAEAV,GAAWyF,YAAc,oCCnCzB,IAgBI+qB,EAAS,SAAUC,GAGtB,IAAIC,EAAO,0CACPC,EAAW,EAGXC,EAAmB,CAAC,EAGpBhsB,EAAI,CAsBPisB,OAAQJ,EAAMD,OAASC,EAAMD,MAAMK,OAsBnCC,4BAA6BL,EAAMD,OAASC,EAAMD,MAAMM,4BAWxDC,KAAM,CACLC,OAAQ,SAASA,EAAOC,GACvB,OAAIA,aAAkBC,EACd,IAAIA,EAAMD,EAAOroB,KAAMooB,EAAOC,EAAO5Y,SAAU4Y,EAAOE,OACnD9oB,MAAMD,QAAQ6oB,GACjBA,EAAO1tB,IAAIytB,GAEXC,EAAOvoB,QAAQ,KAAM,SAASA,QAAQ,KAAM,QAAQA,QAAQ,UAAW,IAEhF,EAkBAE,KAAM,SAAUlG,GACf,OAAOW,OAAOsE,UAAUC,SAASa,KAAK/F,GAAGyI,MAAM,GAAI,EACpD,EAQAimB,MAAO,SAAUC,GAIhB,OAHKA,EAAU,MACdhuB,OAAOiuB,eAAeD,EAAK,OAAQ,CAAE5qB,QAASkqB,IAExCU,EAAU,IAClB,EAYA3D,MAAO,SAAS6D,EAAU7uB,EAAG8uB,GAG5B,IAAI9D,EAAW+D,EACf,OAHAD,EAAUA,GAAW,CAAC,EAGd5sB,EAAEmsB,KAAKnoB,KAAKlG,IACnB,IAAK,SAEJ,GADA+uB,EAAK7sB,EAAEmsB,KAAKK,MAAM1uB,GACd8uB,EAAQC,GACX,OAAOD,EAAQC,GAKhB,IAAK,IAAIhuB,KAHTiqB,EAA4C,CAAC,EAC7C8D,EAAQC,GAAM/D,EAEEhrB,EACXA,EAAEmF,eAAepE,KACpBiqB,EAAMjqB,GAAO8tB,EAAU7uB,EAAEe,GAAM+tB,IAIjC,OAA2B9D,EAE5B,IAAK,QAEJ,OADA+D,EAAK7sB,EAAEmsB,KAAKK,MAAM1uB,GACd8uB,EAAQC,GACJD,EAAQC,IAEhB/D,EAAQ,GACR8D,EAAQC,GAAM/D,EAEd,EAA8C1b,SAAQ,SAAUpQ,EAAGlB,GAClEgtB,EAAMhtB,GAAK6wB,EAAU3vB,EAAG4vB,EACzB,IAE2B9D,GAE5B,QACC,OAAOhrB,EAEV,EAUAgvB,YAAa,SAAU7B,GACtB,KAAOA,GAAS,CACf,IAAInuB,EAAIgvB,EAAKiB,KAAK9B,EAAQjvB,WAC1B,GAAIc,EACH,OAAOA,EAAE,GAAGiH,cAEbknB,EAAUA,EAAQxiB,aACnB,CACA,MAAO,MACR,EASAukB,YAAa,SAAU/B,EAASgC,GAG/BhC,EAAQjvB,UAAYivB,EAAQjvB,UAAU8H,QAAQopB,OAAOpB,EAAM,MAAO,IAIlEb,EAAQkC,UAAU3f,IAAI,YAAcyf,EACrC,EASAG,cAAe,WACd,GAAwB,qBAAbnrB,SACV,OAAO,KAER,GAAI,kBAAmBA,SACtB,OAA2BA,SAASmrB,cAOrC,IACC,MAAM,IAAIC,KACX,CAAE,MAAOC,GAQR,IAAIpxB,GAAO,qCAAqC6wB,KAAKO,EAAIC,QAAU,IAAI,GACvE,GAAIrxB,EAAK,CACR,IAAIsxB,EAAUvrB,SAASwrB,qBAAqB,UAC5C,IAAK,IAAI3xB,KAAK0xB,EACb,GAAIA,EAAQ1xB,GAAGI,KAAOA,EACrB,OAAOsxB,EAAQ1xB,EAGlB,CACA,OAAO,IACR,CACD,EAqBA4xB,SAAU,SAAUzC,EAASjvB,EAAW2xB,GAGvC,IAFA,IAAIC,EAAK,MAAQ5xB,EAEVivB,GAAS,CACf,IAAIkC,EAAYlC,EAAQkC,UACxB,GAAIA,EAAUnY,SAAShZ,GACtB,OAAO,EAER,GAAImxB,EAAUnY,SAAS4Y,GACtB,OAAO,EAER3C,EAAUA,EAAQxiB,aACnB,CACA,QAASklB,CACV,GAUDE,UAAW,CAIVC,MAAO9B,EACP+B,UAAW/B,EACXgC,KAAMhC,EACNiC,IAAKjC,EA8BLkC,OAAQ,SAAUrB,EAAIsB,GACrB,IAAIrC,EAAO9rB,EAAEmsB,KAAKrD,MAAM9oB,EAAE6tB,UAAUhB,IAEpC,IAAK,IAAIhuB,KAAOsvB,EACfrC,EAAKjtB,GAAOsvB,EAAMtvB,GAGnB,OAAOitB,CACR,EA6EAtiB,aAAc,SAAU4kB,EAAQllB,EAAQmlB,EAAQ/W,GAE/C,IAAIgX,GADJhX,EAAOA,GAA4BtX,EAAW,WAC3BouB,GAEfG,EAAM,CAAC,EAEX,IAAK,IAAIC,KAASF,EACjB,GAAIA,EAAQrrB,eAAeurB,GAAQ,CAElC,GAAIA,GAAStlB,EACZ,IAAK,IAAIulB,KAAYJ,EAChBA,EAAOprB,eAAewrB,KACzBF,EAAIE,GAAYJ,EAAOI,IAMrBJ,EAAOprB,eAAeurB,KAC1BD,EAAIC,GAASF,EAAQE,GAEvB,CAGD,IAAIE,EAAMpX,EAAK8W,GAUf,OATA9W,EAAK8W,GAAUG,EAGfvuB,EAAE6tB,UAAUc,IAAI3uB,EAAE6tB,WAAW,SAAUhvB,EAAKgD,GACvCA,IAAU6sB,GAAO7vB,GAAOuvB,IAC3BjoB,KAAKtH,GAAO0vB,EAEd,IAEOA,CACR,EAGAI,IAAK,SAASA,EAAI7wB,EAAG8wB,EAAU5qB,EAAM4oB,GACpCA,EAAUA,GAAW,CAAC,EAEtB,IAAIJ,EAAQxsB,EAAEmsB,KAAKK,MAEnB,IAAK,IAAI1wB,KAAKgC,EACb,GAAIA,EAAEmF,eAAenH,GAAI,CACxB8yB,EAAS/qB,KAAK/F,EAAGhC,EAAGgC,EAAEhC,GAAIkI,GAAQlI,GAElC,IAAI+yB,EAAW/wB,EAAEhC,GACbgzB,EAAe9uB,EAAEmsB,KAAKnoB,KAAK6qB,GAEV,WAAjBC,GAA8BlC,EAAQJ,EAAMqC,IAGpB,UAAjBC,GAA6BlC,EAAQJ,EAAMqC,MACrDjC,EAAQJ,EAAMqC,KAAa,EAC3BF,EAAIE,EAAUD,EAAU9yB,EAAG8wB,KAJ3BA,EAAQJ,EAAMqC,KAAa,EAC3BF,EAAIE,EAAUD,EAAU,KAAMhC,GAKhC,CAEF,GAGDmC,QAAS,CAAC,EAcVC,aAAc,SAAUC,EAAOL,GAC9B5uB,EAAEkvB,kBAAkBjtB,SAAUgtB,EAAOL,EACtC,EAiBAM,kBAAmB,SAAUC,EAAWF,EAAOL,GAC9C,IAAIjF,EAAM,CACTiF,SAAUA,EACVO,UAAWA,EACXC,SAAU,oGAGXpvB,EAAEqvB,MAAMC,IAAI,sBAAuB3F,GAEnCA,EAAItW,SAAW5P,MAAMV,UAAUwD,MAAM5B,MAAMglB,EAAIwF,UAAUjnB,iBAAiByhB,EAAIyF,WAE9EpvB,EAAEqvB,MAAMC,IAAI,gCAAiC3F,GAE7C,IAAK,IAAWsB,EAAPnvB,EAAI,EAAamvB,EAAUtB,EAAItW,SAASvX,MAChDkE,EAAEuvB,iBAAiBtE,GAAmB,IAAVgE,EAAgBtF,EAAIiF,SAElD,EA8BAW,iBAAkB,SAAUtE,EAASgE,EAAOL,GAE3C,IAAI3B,EAAWjtB,EAAEmsB,KAAKW,YAAY7B,GAC9BqD,EAAUtuB,EAAE6tB,UAAUZ,GAG1BjtB,EAAEmsB,KAAKa,YAAY/B,EAASgC,GAG5B,IAAIzkB,EAASyiB,EAAQxiB,cACjBD,GAA4C,QAAlCA,EAAOgnB,SAASzrB,eAC7B/D,EAAEmsB,KAAKa,YAAYxkB,EAAQykB,GAG5B,IAEItD,EAAM,CACTsB,QAASA,EACTgC,SAAUA,EACVqB,QAASA,EACTmB,KANUxE,EAAQyE,aASnB,SAASC,EAAsBC,GAC9BjG,EAAIiG,gBAAkBA,EAEtB5vB,EAAEqvB,MAAMC,IAAI,gBAAiB3F,GAE7BA,EAAIsB,QAAQnhB,UAAY6f,EAAIiG,gBAE5B5vB,EAAEqvB,MAAMC,IAAI,kBAAmB3F,GAC/B3pB,EAAEqvB,MAAMC,IAAI,WAAY3F,GACxBiF,GAAYA,EAAS/qB,KAAK8lB,EAAIsB,QAC/B,CAUA,GARAjrB,EAAEqvB,MAAMC,IAAI,sBAAuB3F,IAGnCnhB,EAASmhB,EAAIsB,QAAQxiB,gBAC2B,QAAlCD,EAAOgnB,SAASzrB,gBAA4ByE,EAAOvB,aAAa,aAC7EuB,EAAOrB,aAAa,WAAY,MAG5BwiB,EAAI8F,KAGR,OAFAzvB,EAAEqvB,MAAMC,IAAI,WAAY3F,QACxBiF,GAAYA,EAAS/qB,KAAK8lB,EAAIsB,UAM/B,GAFAjrB,EAAEqvB,MAAMC,IAAI,mBAAoB3F,GAE3BA,EAAI2E,QAKT,GAAIW,GAASpD,EAAMgE,OAAQ,CAC1B,IAAIC,EAAS,IAAID,OAAO7vB,EAAE+vB,UAE1BD,EAAOE,UAAY,SAAUC,GAC5BN,EAAsBM,EAAI3yB,KAC3B,EAEAwyB,EAAOI,YAAYxiB,KAAKC,UAAU,CACjCsf,SAAUtD,EAAIsD,SACdwC,KAAM9F,EAAI8F,KACVU,gBAAgB,IAElB,MACCR,EAAsB3vB,EAAEowB,UAAUzG,EAAI8F,KAAM9F,EAAI2E,QAAS3E,EAAIsD,gBAjB7D0C,EAAsB3vB,EAAEmsB,KAAKC,OAAOzC,EAAI8F,MAmB1C,EAsBAW,UAAW,SAAUpC,EAAMM,EAASrB,GACnC,IAAItD,EAAM,CACT8F,KAAMzB,EACNM,QAASA,EACTrB,SAAUA,GAGX,GADAjtB,EAAEqvB,MAAMC,IAAI,kBAAmB3F,IAC1BA,EAAI2E,QACR,MAAM,IAAIjB,MAAM,iBAAmB1D,EAAIsD,SAAW,qBAInD,OAFAtD,EAAI0C,OAASrsB,EAAEqwB,SAAS1G,EAAI8F,KAAM9F,EAAI2E,SACtCtuB,EAAEqvB,MAAMC,IAAI,iBAAkB3F,GACvB2C,EAAM3e,UAAU3N,EAAEmsB,KAAKC,OAAOzC,EAAI0C,QAAS1C,EAAIsD,SACvD,EA0BAoD,SAAU,SAAUrC,EAAMM,GACzB,IAAIgC,EAAOhC,EAAQgC,KACnB,GAAIA,EAAM,CACT,IAAK,IAAI9B,KAAS8B,EACjBhC,EAAQE,GAAS8B,EAAK9B,UAGhBF,EAAQgC,IAChB,CAEA,IAAIC,EAAY,IAAIC,EAKpB,OAJAC,EAASF,EAAWA,EAAUG,KAAM1C,GAEpC2C,EAAa3C,EAAMuC,EAAWjC,EAASiC,EAAUG,KAAM,GAyazD,SAAiBE,GAChB,IAAIC,EAAQ,GACRC,EAAOF,EAAKF,KAAKK,KACrB,KAAOD,IAASF,EAAKI,MACpBH,EAAMnsB,KAAKosB,EAAKjvB,OAChBivB,EAAOA,EAAKC,KAEb,OAAOF,CACR,CA/aSI,CAAQV,EAChB,EAOAlB,MAAO,CACN6B,IAAK,CAAC,EAcN1jB,IAAK,SAAUhM,EAAMotB,GACpB,IAAIS,EAAQrvB,EAAEqvB,MAAM6B,IAEpB7B,EAAM7tB,GAAQ6tB,EAAM7tB,IAAS,GAE7B6tB,EAAM7tB,GAAMkD,KAAKkqB,EAClB,EAWAU,IAAK,SAAU9tB,EAAMmoB,GACpB,IAAIwH,EAAYnxB,EAAEqvB,MAAM6B,IAAI1vB,GAE5B,GAAK2vB,GAAcA,EAAU7xB,OAI7B,IAAK,IAAWsvB,EAAP9yB,EAAI,EAAc8yB,EAAWuC,EAAUr1B,MAC/C8yB,EAASjF,EAEX,GAGD2C,MAAOA,GAqBR,SAASA,EAAMtoB,EAAMyP,EAAS8Y,EAAO6E,GAUpCjrB,KAAKnC,KAAOA,EASZmC,KAAKsN,QAAUA,EAQftN,KAAKomB,MAAQA,EAEbpmB,KAAK7G,OAAqC,GAA3B8xB,GAAc,IAAI9xB,MAClC,CA6EA,SAAS+xB,EAAaC,EAASC,EAAKvD,EAAMwD,GACzCF,EAAQG,UAAYF,EACpB,IAAIG,EAAQJ,EAAQvE,KAAKiB,GACzB,GAAI0D,GAASF,GAAcE,EAAM,GAAI,CAEpC,IAAIC,EAAmBD,EAAM,GAAGpyB,OAChCoyB,EAAME,OAASD,EACfD,EAAM,GAAKA,EAAM,GAAGnrB,MAAMorB,EAC3B,CACA,OAAOD,CACR,CAgBA,SAASf,EAAa3C,EAAMuC,EAAWjC,EAASuD,EAAWC,EAAUC,GACpE,IAAK,IAAIvD,KAASF,EACjB,GAAKA,EAAQrrB,eAAeurB,IAAWF,EAAQE,GAA/C,CAIA,IAAIwD,EAAW1D,EAAQE,GACvBwD,EAAWvuB,MAAMD,QAAQwuB,GAAYA,EAAW,CAACA,GAEjD,IAAK,IAAI5xB,EAAI,EAAGA,EAAI4xB,EAAS1yB,SAAUc,EAAG,CACzC,GAAI2xB,GAAWA,EAAQE,OAASzD,EAAQ,IAAMpuB,EAC7C,OAGD,IAAI8xB,EAAaF,EAAS5xB,GACtBguB,EAAS8D,EAAW9D,OACpBoD,IAAeU,EAAWV,WAC1BW,IAAWD,EAAWC,OACtB5F,EAAQ2F,EAAW3F,MAEvB,GAAI4F,IAAWD,EAAWZ,QAAQc,OAAQ,CAEzC,IAAIC,EAAQH,EAAWZ,QAAQtuB,WAAW0uB,MAAM,aAAa,GAC7DQ,EAAWZ,QAAUpE,OAAOgF,EAAWZ,QAAQ1X,OAAQyY,EAAQ,IAChE,CAKA,IAFA,IAAIf,EAAUY,EAAWZ,SAAWY,EAG/BI,EAAcT,EAAUd,KAAMQ,EAAMO,EACxCQ,IAAgB/B,EAAUS,QAItBe,GAAWR,GAAOQ,EAAQQ,OAH9BhB,GAAOe,EAAYzwB,MAAMvC,OAAQgzB,EAAcA,EAAYvB,KAC1D,CAMD,IAAIyB,EAAMF,EAAYzwB,MAEtB,GAAI0uB,EAAUjxB,OAAS0uB,EAAK1uB,OAE3B,OAGD,KAAIkzB,aAAelG,GAAnB,CAIA,IACIoF,EADAe,EAAc,EAGlB,GAAIN,EAAQ,CAEX,KADAT,EAAQL,EAAaC,EAASC,EAAKvD,EAAMwD,KAC3BE,EAAME,OAAS5D,EAAK1uB,OACjC,MAGD,IAAIsF,EAAO8sB,EAAME,MACbc,EAAKhB,EAAME,MAAQF,EAAM,GAAGpyB,OAC5B5C,EAAI60B,EAIR,IADA70B,GAAK41B,EAAYzwB,MAAMvC,OAChBsF,GAAQlI,GAEdA,IADA41B,EAAcA,EAAYvB,MACTlvB,MAAMvC,OAOxB,GAHAiyB,EADA70B,GAAK41B,EAAYzwB,MAAMvC,OAInBgzB,EAAYzwB,iBAAiByqB,EAChC,SAID,IACC,IAAIhhB,EAAIgnB,EACRhnB,IAAMilB,EAAUS,OAASt0B,EAAIg2B,GAAyB,kBAAZpnB,EAAEzJ,OAC5CyJ,EAAIA,EAAEylB,KAEN0B,IACA/1B,GAAK4O,EAAEzJ,MAAMvC,OAEdmzB,IAGAD,EAAMxE,EAAKznB,MAAMgrB,EAAK70B,GACtBg1B,EAAME,OAASL,CAChB,MAEC,KADAG,EAAQL,EAAaC,EAAS,EAAGkB,EAAKhB,IAErC,SAKE5sB,EAAO8sB,EAAME,MAAjB,IACIe,EAAWjB,EAAM,GACjBxoB,EAASspB,EAAIjsB,MAAM,EAAG3B,GACtBguB,EAAQJ,EAAIjsB,MAAM3B,EAAO+tB,EAASrzB,QAElCizB,EAAQhB,EAAMiB,EAAIlzB,OAClByyB,GAAWQ,EAAQR,EAAQQ,QAC9BR,EAAQQ,MAAQA,GAGjB,IAAIM,EAAaP,EAAYQ,KAgB7B,GAdI5pB,IACH2pB,EAAapC,EAASF,EAAWsC,EAAY3pB,GAC7CqoB,GAAOroB,EAAO5J,QAGfyzB,EAAYxC,EAAWsC,EAAYJ,GAGnCH,EAAc7B,EAASF,EAAWsC,EADpB,IAAIvG,EAAMkC,EAAOJ,EAASpuB,EAAEqwB,SAASsC,EAAUvE,GAAUuE,EAAUpG,EAAOoG,IAGpFC,GACHnC,EAASF,EAAW+B,EAAaM,GAG9BH,EAAc,EAAG,CAKpB,IAAIO,EAAgB,CACnBf,MAAOzD,EAAQ,IAAMpuB,EACrBmyB,MAAOA,GAER5B,EAAa3C,EAAMuC,EAAWjC,EAASgE,EAAYQ,KAAMvB,EAAKyB,GAG1DjB,GAAWiB,EAAcT,MAAQR,EAAQQ,QAC5CR,EAAQQ,MAAQS,EAAcT,MAEhC,CA7FA,CA8FD,CACD,CA3IA,CA6IF,CAeA,SAAS/B,IAER,IAAIE,EAAO,CAAE7uB,MAAO,KAAMixB,KAAM,KAAM/B,KAAM,MAExCC,EAAO,CAAEnvB,MAAO,KAAMixB,KAAMpC,EAAMK,KAAM,MAC5CL,EAAKK,KAAOC,EAGZ7qB,KAAKuqB,KAAOA,EAEZvqB,KAAK6qB,KAAOA,EACZ7qB,KAAK7G,OAAS,CACf,CAWA,SAASmxB,EAASG,EAAME,EAAMjvB,GAE7B,IAAIkvB,EAAOD,EAAKC,KAEZkC,EAAU,CAAEpxB,MAAOA,EAAOixB,KAAMhC,EAAMC,KAAMA,GAKhD,OAJAD,EAAKC,KAAOkC,EACZlC,EAAK+B,KAAOG,EACZrC,EAAKtxB,SAEE2zB,CACR,CASA,SAASF,EAAYnC,EAAME,EAAMoC,GAEhC,IADA,IAAInC,EAAOD,EAAKC,KACPj1B,EAAI,EAAGA,EAAIo3B,GAASnC,IAASH,EAAKI,KAAMl1B,IAChDi1B,EAAOA,EAAKA,KAEbD,EAAKC,KAAOA,EACZA,EAAK+B,KAAOhC,EACZF,EAAKtxB,QAAUxD,CAChB,CAiBA,GA3XA+vB,EAAMD,MAAQ5rB,EA+EdssB,EAAM3e,UAAY,SAASA,EAAU7P,EAAGmvB,GACvC,GAAgB,iBAALnvB,EACV,OAAOA,EAER,GAAI2F,MAAMD,QAAQ1F,GAAI,CACrB,IAAIzC,EAAI,GAIR,OAHAyC,EAAEsP,SAAQ,SAAU1R,GACnBL,GAAKsS,EAAUjS,EAAGuxB,EACnB,IACO5xB,CACR,CAEA,IAAIsuB,EAAM,CACT3lB,KAAMlG,EAAEkG,KACRyP,QAAS9F,EAAU7P,EAAE2V,QAASwZ,GAC9BkG,IAAK,OACLC,QAAS,CAAC,QAASt1B,EAAEkG,MACrBkK,WAAY,CAAC,EACb+e,SAAUA,GAGPoG,EAAUv1B,EAAEyuB,MACZ8G,IACC5vB,MAAMD,QAAQ6vB,GACjB5vB,MAAMV,UAAU2B,KAAKC,MAAMglB,EAAIyJ,QAASC,GAExC1J,EAAIyJ,QAAQ1uB,KAAK2uB,IAInBrzB,EAAEqvB,MAAMC,IAAI,OAAQ3F,GAEpB,IAAIzb,EAAa,GACjB,IAAK,IAAI1M,KAAQmoB,EAAIzb,WACpBA,GAAc,IAAM1M,EAAO,MAAQmoB,EAAIzb,WAAW1M,IAAS,IAAIsC,QAAQ,KAAM,UAAY,IAG1F,MAAO,IAAM6lB,EAAIwJ,IAAM,WAAaxJ,EAAIyJ,QAAQ5rB,KAAK,KAAO,IAAM0G,EAAa,IAAMyb,EAAIlW,QAAU,KAAOkW,EAAIwJ,IAAM,GACrH,GAsQKtH,EAAM5pB,SACV,OAAK4pB,EAAMhgB,kBAKN7L,EAAEksB,6BAENL,EAAMhgB,iBAAiB,WAAW,SAAUokB,GAC3C,IAAIqD,EAAU5lB,KAAK6lB,MAAMtD,EAAI3yB,MACzBwuB,EAAOwH,EAAQrG,SACfwC,EAAO6D,EAAQ7D,KACfU,EAAiBmD,EAAQnD,eAE7BtE,EAAMqE,YAAYlwB,EAAEowB,UAAUX,EAAMzvB,EAAE6tB,UAAU/B,GAAOA,IACnDqE,GACHtE,EAAM2H,OAER,IAAG,GAGGxzB,GAlBCA,EAsBT,IAAIyzB,EAASzzB,EAAEmsB,KAAKiB,gBAUpB,SAASsG,IACH1zB,EAAEisB,QACNjsB,EAAEgvB,cAEJ,CAEA,GAdIyE,IACHzzB,EAAE+vB,SAAW0D,EAAOv3B,IAEhBu3B,EAAOxsB,aAAa,iBACvBjH,EAAEisB,QAAS,KAURjsB,EAAEisB,OAAQ,CAOd,IAAI0H,EAAa1xB,SAAS0xB,WACP,YAAfA,GAA2C,gBAAfA,GAAgCF,GAAUA,EAAO7I,MAChF3oB,SAAS4J,iBAAiB,mBAAoB6nB,GAE1C1xB,OAAOQ,sBACVR,OAAOQ,sBAAsBkxB,GAE7B1xB,OAAOS,WAAWixB,EAAgC,GAGrD,CAEA,OAAO1zB,CAER,CAlqCa,CAhBkB,qBAAXgC,OACjBA,OAE6B,qBAAtB4xB,mBAAqCC,gBAAgBD,kBAC1DC,KACA,CAAC,GA+qC+BC,EAAOC,UAC3CD,EAAOC,QAAUnI,GAII,qBAAXwG,EAAAA,IACVA,EAAAA,EAAOxG,MAAQA,GAyDhBA,EAAMiC,UAAUmG,OAAS,CACxB,QAAW,CACV1C,QAAS,8BACTa,QAAQ,GAET,OAAU,CACTb,QAAS,iBACTa,QAAQ,GAET,QAAW,CAEVb,QAAS,uHACTa,QAAQ,EACR/D,OAAQ,CACP,kBAAmB,CAClBkD,QAAS,6BACTE,YAAY,EACZW,QAAQ,EACR/D,OAAQ,MAET,OAAU,CACTkD,QAAS,kBACTa,QAAQ,GAET,YAAe,eACf,cAAe,YACf,KAAQ,eAGV,MAAS,CACRb,QAAS,4BACTa,QAAQ,GAET,IAAO,CACNb,QAAS,uHACTa,QAAQ,EACR/D,OAAQ,CACP,IAAO,CACNkD,QAAS,iBACTlD,OAAQ,CACP,YAAe,QACf,UAAa,iBAGf,eAAgB,GAChB,aAAc,CACbkD,QAAS,qCACTlD,OAAQ,CACP,YAAe,CACd,CACCkD,QAAS,KACT/E,MAAO,eAER,SAIH,YAAe,OACf,YAAa,CACZ+E,QAAS,YACTlD,OAAQ,CACP,UAAa,mBAMjB,OAAU,CACT,CACCkD,QAAS,kBACT/E,MAAO,gBAER,uBAIFX,EAAMiC,UAAUmG,OAAY,IAAE5F,OAAO,cAAcA,OAAe,OACjExC,EAAMiC,UAAUmG,OAAe,OAChCpI,EAAMiC,UAAUmG,OAAgB,QAAE5F,OAAO,mBAAmBA,OAASxC,EAAMiC,UAAUmG,OAGrFpI,EAAMyD,MAAM7hB,IAAI,QAAQ,SAAUmc,GAEhB,WAAbA,EAAI3lB,OACP2lB,EAAIzb,WAAkB,MAAIyb,EAAIlW,QAAQ3P,QAAQ,QAAS,KAEzD,IAEArF,OAAOiuB,eAAed,EAAMiC,UAAUmG,OAAOb,IAAK,aAAc,CAY/DtxB,MAAO,SAAoBoyB,EAASnI,GACnC,IAAIoI,EAAsB,CAAC,EAC3BA,EAAoB,YAAcpI,GAAQ,CACzCwF,QAAS,oCACTE,YAAY,EACZpD,OAAQxC,EAAMiC,UAAU/B,IAEzBoI,EAA2B,MAAI,uBAE/B,IAAI9F,EAAS,CACZ,iBAAkB,CACjBkD,QAAS,4BACTlD,OAAQ8F,IAGV9F,EAAO,YAActC,GAAQ,CAC5BwF,QAAS,UACTlD,OAAQxC,EAAMiC,UAAU/B,IAGzB,IAAIqI,EAAM,CAAC,EACXA,EAAIF,GAAW,CACd3C,QAASpE,OAAO,wFAAwFtT,OAAO9V,QAAQ,OAAO,WAAc,OAAOmwB,CAAS,IAAI,KAChKzC,YAAY,EACZW,QAAQ,EACR/D,OAAQA,GAGTxC,EAAMiC,UAAUrkB,aAAa,SAAU,QAAS2qB,EACjD,IAED11B,OAAOiuB,eAAed,EAAMiC,UAAUmG,OAAOb,IAAK,eAAgB,CAYjEtxB,MAAO,SAAUuyB,EAAUtI,GAC1BF,EAAMiC,UAAUmG,OAAOb,IAAI/E,OAAO,gBAAgB1pB,KAAK,CACtD4sB,QAASpE,OACR,aAAatT,OAAS,MAAQwa,EAAW,IAAM,iDAAiDxa,OAChG,KAED4X,YAAY,EACZpD,OAAQ,CACP,YAAa,WACb,aAAc,CACbkD,QAAS,WACTlD,OAAQ,CACP,MAAS,CACRkD,QAAS,yCACTE,YAAY,EACZjF,MAAO,CAACT,EAAM,YAAcA,GAC5BsC,OAAQxC,EAAMiC,UAAU/B,IAEzB,YAAe,CACd,CACCwF,QAAS,KACT/E,MAAO,eAER,WAMN,IAGDX,EAAMiC,UAAUwG,KAAOzI,EAAMiC,UAAUmG,OACvCpI,EAAMiC,UAAUyG,OAAS1I,EAAMiC,UAAUmG,OACzCpI,EAAMiC,UAAU0G,IAAM3I,EAAMiC,UAAUmG,OAEtCpI,EAAMiC,UAAU2G,IAAM5I,EAAMiC,UAAUK,OAAO,SAAU,CAAC,GACxDtC,EAAMiC,UAAU4G,KAAO7I,EAAMiC,UAAU2G,IACvC5I,EAAMiC,UAAU6G,KAAO9I,EAAMiC,UAAU2G,IACvC5I,EAAMiC,UAAU8G,IAAM/I,EAAMiC,UAAU2G,IAOrC,SAAU5I,GAEV,IAAIgJ,EAAS,8EAEbhJ,EAAMiC,UAAUgH,IAAM,CACrB,QAAW,mBACX,OAAU,CACTvD,QAAS,iDACTlD,OAAQ,CACP,KAAQ,WACR,6BAA8B,CAC7BkD,QAAS,4FACTE,YAAY,EACZjF,MAAO,YAER,QAAW,CACV+E,QAAS,yCACTE,YAAY,KAKf,IAAO,CAENF,QAASpE,OAAO,eAAiB0H,EAAOhb,OAAS,IAAM,8BAA8BA,OAAS,OAAQ,KACtGuY,QAAQ,EACR/D,OAAQ,CACP,SAAY,QACZ,YAAe,UACf,OAAU,CACTkD,QAASpE,OAAO,IAAM0H,EAAOhb,OAAS,KACtC2S,MAAO,SAIV,SAAY,CACX+E,QAASpE,OAAO,qDAAuD0H,EAAOhb,OAAS,iBACvF4X,YAAY,GAEb,OAAU,CACTF,QAASsD,EACTzC,QAAQ,GAET,SAAY,CACXb,QAAS,oFACTE,YAAY,GAEb,UAAa,gBACb,SAAY,CACXF,QAAS,kCACTE,YAAY,GAEb,YAAe,aAGhB5F,EAAMiC,UAAUgH,IAAY,OAAEzG,OAAOkC,KAAO1E,EAAMiC,UAAUgH,IAE5D,IAAIb,EAASpI,EAAMiC,UAAUmG,OACzBA,IACHA,EAAOb,IAAI2B,WAAW,QAAS,OAC/Bd,EAAOb,IAAI4B,aAAa,QAAS,OAGlC,CA/DA,CA+DCnJ,GAOFA,EAAMiC,UAAUmH,MAAQ,CACvB,QAAW,CACV,CACC1D,QAAS,kCACTE,YAAY,EACZW,QAAQ,GAET,CACCb,QAAS,mBACTE,YAAY,EACZW,QAAQ,IAGV,OAAU,CACTb,QAAS,iDACTa,QAAQ,GAET,aAAc,CACbb,QAAS,2FACTE,YAAY,EACZpD,OAAQ,CACP,YAAe,UAGjB,QAAW,6GACX,QAAW,qBACX,SAAY,cACZ,OAAU,4DACV,SAAY,+CACZ,YAAe,iBAQhBxC,EAAMiC,UAAUoH,WAAarJ,EAAMiC,UAAUK,OAAO,QAAS,CAC5D,aAAc,CACbtC,EAAMiC,UAAUmH,MAAM,cACtB,CACC1D,QAAS,0GACTE,YAAY,IAGd,QAAW,CACV,CACCF,QAAS,uBACTE,YAAY,GAEb,CACCF,QAAS,mdACTE,YAAY,IAId,SAAY,oGACZ,OAAU,CACTF,QAASpE,OACR,aAAatT,OACb,MAGC,eAAeA,OACf,IAEA,0BAA0BA,OAC1B,IAEA,4BAA4BA,OAC5B,IAEA,sCAAsCA,OACtC,IAEA,gBAAgBA,OAChB,IAEA,oFAAoFA,OAErF,IACA,YAAYA,QAEb4X,YAAY,GAEb,SAAY,8FAGb5F,EAAMiC,UAAUoH,WAAW,cAAc,GAAG3D,QAAU,uEAEtD1F,EAAMiC,UAAUrkB,aAAa,aAAc,UAAW,CACrD,MAAS,CAER8nB,QAAS,yLACTE,YAAY,EACZW,QAAQ,EACR/D,OAAQ,CACP,eAAgB,CACfkD,QAAS,4BACTE,YAAY,EACZjF,MAAO,iBACP6B,OAAQxC,EAAMiC,UAAUqH,OAEzB,kBAAmB,UACnB,cAAe,aAIjB,oBAAqB,CACpB5D,QAAS,gMACT/E,MAAO,YAER,UAAa,CACZ,CACC+E,QAAS,sIACTE,YAAY,EACZpD,OAAQxC,EAAMiC,UAAUoH,YAEzB,CACC3D,QAAS,qFACTE,YAAY,EACZpD,OAAQxC,EAAMiC,UAAUoH,YAEzB,CACC3D,QAAS,kEACTE,YAAY,EACZpD,OAAQxC,EAAMiC,UAAUoH,YAEzB,CACC3D,QAAS,8eACTE,YAAY,EACZpD,OAAQxC,EAAMiC,UAAUoH,aAG1B,SAAY,8BAGbrJ,EAAMiC,UAAUrkB,aAAa,aAAc,SAAU,CACpD,SAAY,CACX8nB,QAAS,QACTa,QAAQ,EACR5F,MAAO,WAER,kBAAmB,CAClB+E,QAAS,2EACTa,QAAQ,EACR/D,OAAQ,CACP,uBAAwB,CACvBkD,QAAS,QACT/E,MAAO,UAER,cAAiB,CAChB+E,QAAS,mEACTE,YAAY,EACZpD,OAAQ,CACP,4BAA6B,CAC5BkD,QAAS,YACT/E,MAAO,eAER+D,KAAM1E,EAAMiC,UAAUoH,aAGxB,OAAU,YAGZ,kBAAmB,CAClB3D,QAAS,4EACTE,YAAY,EACZW,QAAQ,EACR5F,MAAO,cAITX,EAAMiC,UAAUrkB,aAAa,aAAc,WAAY,CACtD,mBAAoB,CACnB8nB,QAAS,oFACTE,YAAY,EACZjF,MAAO,cAILX,EAAMiC,UAAUmG,SACnBpI,EAAMiC,UAAUmG,OAAOb,IAAI2B,WAAW,SAAU,cAIhDlJ,EAAMiC,UAAUmG,OAAOb,IAAI4B,aAC1B,yNAAyNnb,OACzN,eAIFgS,EAAMiC,UAAUsH,GAAKvJ,EAAMiC,UAAUoH,WAOpC,WAEA,GAAqB,qBAAVrJ,GAA6C,qBAAb3pB,SAA3C,CAKKoC,QAAQtB,UAAUqF,UACtB/D,QAAQtB,UAAUqF,QAAU/D,QAAQtB,UAAUqyB,mBAAqB/wB,QAAQtB,UAAUsyB,uBAGtF,IAMIC,EAAa,CAChB,GAAM,aACN,GAAM,SACN,GAAM,OACN,IAAO,aACP,KAAQ,aACR,GAAM,OACN,IAAO,QACP,EAAK,IACL,IAAO,SAGJC,EAAc,kBACdC,EAAiB,UACjBC,EAAgB,SAGhBC,EAAW,sBAAwBH,EAAc,KAAOE,EAA7C,YACDF,EAAc,KAAOC,EAAiB,MAsDpD5J,EAAMyD,MAAM7hB,IAAI,uBAAuB,SAAUmc,GAChDA,EAAIyF,UAAY,KAAOsG,CACxB,IAEA9J,EAAMyD,MAAM7hB,IAAI,uBAAuB,SAAUmc,GAChD,IAAIgM,EAAqChM,EAAIsB,QAC7C,GAAI0K,EAAIvtB,QAAQstB,GAAW,CAC1B/L,EAAI8F,KAAO,GAEXkG,EAAIxuB,aAAaouB,EAAaC,GAG9B,IAAI/F,EAAOkG,EAAItsB,YAAYpH,SAAS2H,cAAc,SAClD6lB,EAAKC,YA3Fe,gBA6FpB,IAAIxzB,EAAMy5B,EAAI5uB,aAAa,YAEvBkmB,EAAWtD,EAAIsD,SACnB,GAAiB,SAAbA,EAAqB,CAGxB,IAAI2I,GAAa,WAAW7I,KAAK7wB,IAAQ,CAAC,CAAE,SAAS,GACrD+wB,EAAWqI,EAAWM,IAAcA,CACrC,CAGAhK,EAAMO,KAAKa,YAAYyC,EAAMxC,GAC7BrB,EAAMO,KAAKa,YAAY2I,EAAK1I,GAG5B,IAAI4I,EAAajK,EAAMmD,QAAQ8G,WAC3BA,GACHA,EAAWC,cAAc7I,GA7E5B,SAAkB/wB,EAAK65B,EAASC,GAC/B,IAAIC,EAAM,IAAIC,eACdD,EAAIv1B,KAAK,MAAOxE,GAAK,GACrB+5B,EAAIE,mBAAqB,WACF,GAAlBF,EAAItC,aACHsC,EAAIG,OAAS,KAAOH,EAAII,aAC3BN,EAAQE,EAAII,cAERJ,EAAIG,QAAU,IACjBJ,EAxCG,gBAwCmBC,EAAIG,OAxCD,yBAwCSH,EAAIK,YAEtCN,EAxCuB,iDA4C3B,EACAC,EAAIM,KAAK,KACV,CAgEEC,CACCt6B,GACA,SAAU8xB,GAET2H,EAAIxuB,aAAaouB,EAAaE,GAG9B,IAAIgB,EA7DR,SAAoBA,GACnB,IAAI35B,EAAI,wCAAwCiwB,KAAK0J,GAAS,IAC9D,GAAI35B,EAAG,CACN,IAAI45B,EAAQC,OAAO75B,EAAE,IACjB85B,EAAQ95B,EAAE,GACV+5B,EAAM/5B,EAAE,GAEZ,OAAK85B,EAGAC,EAGE,CAACH,EAAOC,OAAOE,IAFd,CAACH,OAAOI,GAHR,CAACJ,EAAOA,EAMjB,CAED,CA6CgBK,CAAWpB,EAAI5uB,aAAa,eACxC,GAAI0vB,EAAO,CACV,IAAIO,EAAQhJ,EAAKpnB,MAAM,aAGnB8vB,EAAQD,EAAM,GACdI,EAAkB,MAAZJ,EAAM,GAAaO,EAAM13B,OAASm3B,EAAM,GAE9CC,EAAQ,IAAKA,GAASM,EAAM13B,QAChCo3B,EAAQx0B,KAAKC,IAAI,EAAGD,KAAKE,IAAIs0B,EAAQ,EAAGM,EAAM13B,SAC1Cu3B,EAAM,IAAKA,GAAOG,EAAM13B,QAC5Bu3B,EAAM30B,KAAKC,IAAI,EAAGD,KAAKE,IAAIy0B,EAAKG,EAAM13B,SAEtC0uB,EAAOgJ,EAAMzwB,MAAMmwB,EAAOG,GAAKrvB,KAAK,MAG/BmuB,EAAI1uB,aAAa,eACrB0uB,EAAIxuB,aAAa,aAAc8vB,OAAOP,EAAQ,GAEhD,CAGAjH,EAAKC,YAAc1B,EACnBpC,EAAM2D,iBAAiBE,EACxB,IACA,SAAUuG,GAETL,EAAIxuB,aAAaouB,EA/HD,UAiIhB9F,EAAKC,YAAcsG,CACpB,GAEF,CACD,IAEApK,EAAMmD,QAAQmI,cAAgB,CAQ7B9G,UAAW,SAAmBjB,GAG7B,IAFA,IAEgBlE,EAFZ5X,GAAY8b,GAAaltB,UAAUiG,iBAAiBwtB,GAE/C55B,EAAI,EAAamvB,EAAU5X,EAASvX,MAC5C8vB,EAAM2D,iBAAiBtE,EAEzB,GAGD,IAAIkM,GAAS,EAEbvL,EAAMsL,cAAgB,WAChBC,IACJC,QAAQC,KAAK,2FACbF,GAAS,GAEVvL,EAAMmD,QAAQmI,cAAc9G,UAAUzrB,MAAMwB,KAAMJ,UACnD,CA5LA,CA8LA,CAlMA,2EClsDD,ECFe,SAA2BpG,GACxC,IAAI23B,EAAQ33B,EAAK23B,MACbC,EAAQ53B,EAAK43B,MACjB,OAAO,SAAUC,EAAMC,GACrB,OAAO,SAAU1P,GACf,IAAI2P,EAAsBD,GAAgB,SAAU1P,GAClD,OAAOuP,EAAMvP,EAAO,OACtB,EAEA,OAAOuP,EAAMI,EAAoB3P,GAAQyP,EAAO,YAAcD,CAChE,CACF,CACF,CDVA,SAAiCzJ","sources":["../node_modules/design-system-old/src/ProgressiveImage/index.tsx","../node_modules/design-system-old/src/Table/index.tsx","../node_modules/design-system/src/AnnouncementModal/AnnouncementModal.styles.tsx","../node_modules/design-system/src/AnnouncementModal/AnnouncementModal.constants.ts","../node_modules/design-system/src/AnnouncementModal/AnnouncementModal.tsx","../node_modules/design-system/src/Collapsible/Collapsible.types.ts","../node_modules/design-system/src/Collapsible/Collapsible.styles.tsx","../node_modules/design-system/src/Collapsible/Collapsible.constants.ts","../node_modules/design-system/src/Collapsible/Collapsible.tsx","../node_modules/src/support/cache.ts","../node_modules/src/support/compatibility/isBrowser.ts","../node_modules/src/support/utils/alias.ts","../node_modules/src/support/compatibility/apis.ts","../node_modules/src/support/utils/types.ts","../node_modules/src/support/utils/array.ts","../node_modules/src/support/utils/strings.ts","../node_modules/src/support/utils/equal.ts","../node_modules/src/support/utils/noop.ts","../node_modules/src/support/utils/function.ts","../node_modules/src/support/utils/object.ts","../node_modules/src/support/utils/math.ts","../node_modules/src/support/dom/attribute.ts","../node_modules/src/support/dom/class.ts","../node_modules/src/support/dom/traversal.ts","../node_modules/src/support/dom/manipulation.ts","../node_modules/src/support/dom/create.ts","../node_modules/src/support/dom/style.ts","../node_modules/src/environment.ts","../node_modules/src/support/dom/dimensions.ts","../node_modules/src/support/dom/events.ts","../node_modules/src/support/dom/offset.ts","../node_modules/src/support/dom/scroll.ts","../node_modules/src/support/eventListeners.ts","../node_modules/src/options.ts","../node_modules/src/classnames.ts","../node_modules/src/plugins/plugins.ts","../node_modules/src/plugins/sizeObserverPlugin/sizeObserverPlugin.ts","../node_modules/src/setups/structureSetup/structureSetup.utils.ts","../node_modules/src/plugins/scrollbarsHidingPlugin/scrollbarsHidingPlugin.ts","../node_modules/src/plugins/clickScrollPlugin/clickScrollPlugin.ts","../node_modules/src/initialization.ts","../node_modules/src/instances.ts","../node_modules/src/observers/domObserver.ts","../node_modules/src/observers/sizeObserver.ts","../node_modules/src/observers/trinsicObserver.ts","../node_modules/src/setups/observersSetup/observersSetup.ts","../node_modules/src/setups/scrollbarsSetup/scrollbarsSetup.elements.ts","../node_modules/src/setups/scrollbarsSetup/scrollbarsSetup.events.ts","../node_modules/src/setups/structureSetup/structureSetup.elements.ts","../node_modules/src/setups/structureSetup/updateSegments/trinsicUpdateSegment.ts","../node_modules/src/setups/structureSetup/updateSegments/paddingUpdateSegment.ts","../node_modules/src/setups/structureSetup/updateSegments/overflowUpdateSegment.ts","../node_modules/src/setups/setups.ts","../node_modules/src/setups/structureSetup/structureSetup.ts","../node_modules/src/setups/scrollbarsSetup/scrollbarsSetup.ts","../node_modules/src/overlayscrollbars.ts","../node_modules/src/plugins/optionsValidationPlugin/optionsValidationPlugin.ts","../node_modules/src/useOverlayScrollbars.ts","../node_modules/src/OverlayScrollbarsComponent.tsx","../node_modules/design-system/src/ScrollArea/ScrollArea.tsx","../node_modules/prismjs/prism.js","../node_modules/redux-form/es/getFormMeta.js","../node_modules/redux-form/es/selectors/getFormMeta.js"],"sourcesContent":["import React from \"react\";\nimport { useEffect } from \"react\";\nimport styled from \"styled-components\";\n\nexport const Container = styled.div`\n  position: relative;\n  .progressive-image {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n  }\n  .progressive-image--full {\n    transition: opacity 300ms ease 0ms;\n  }\n  .progressive-image--thumb {\n    filter: blur(2px);\n    transition: visibility 0ms ease 300ms;\n  }\n`;\n\n/**\n * Use a tiny blurred image (thumbnail) until the actual image is fetched\n */\nfunction ProgressiveImage(props: {\n  thumbnailSource?: string;\n  imageSource?: string;\n  alt?: string;\n}) {\n  const [isLoaded, setIsLoaded] = React.useState(false);\n\n  useEffect(() => {\n    setIsLoaded(false);\n  }, [props.imageSource]);\n\n  return (\n    <Container className=\"container-progressive-image\">\n      <img\n        alt={props.alt}\n        className=\"progressive-image progressive-image--thumb\"\n        src={props.thumbnailSource}\n        style={{ visibility: isLoaded ? \"hidden\" : \"visible\" }}\n      />\n      <img\n        alt={props.alt}\n        className=\"progressive-image progressive-image--full\"\n        onLoad={() => {\n          setIsLoaded(true);\n        }}\n        src={props.imageSource}\n        style={{ opacity: isLoaded ? 1 : 0 }}\n      />\n    </Container>\n  );\n}\nexport default ProgressiveImage;\n","import { useTable, useSortBy, useExpanded } from \"react-table\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Classes } from \"Constants/classes\";\nimport { typography } from \"Constants/typography\";\nimport Spinner from \"Spinner\";\nimport { IconSize } from \"Icon\";\nimport { importSvg } from \"Utils/icon-loadables\";\n\nconst DownArrow = importSvg(() => import(\"../assets/icons/ads/down_arrow.svg\"));\nconst UpperArrow = importSvg(() =>\n  import(\"../assets/icons/ads/upper_arrow.svg\"),\n);\n\nconst Styles = styled.div`\n  table {\n    border-spacing: 0;\n    width: 100%;\n\n    thead {\n      position: sticky;\n      top: 0;\n      z-index: 1;\n\n      tr {\n        background-color: var(--ads-v2-color-bg-subtle);\n\n        th {\n          padding: var(--ads-spaces-5) var(--ads-spaces-9);\n          text-align: left;\n          color: var(--ads-v2-color-fg);\n          font-weight: ${typography.h6.fontWeight};\n          font-size: ${typography.h6.fontSize}px;\n          line-height: ${typography.h6.lineHeight}px;\n          letter-spacing: ${typography.h6.letterSpacing}px;\n          border-bottom: 1px solid var(--ads-v2-color-border);\n\n          svg {\n            margin-left: var(--ads-spaces-2);\n            margin-bottom: calc(var(--ads-spaces-0) + 1px);\n            width: 6px;\n            height: 4px;\n            display: initial;\n          }\n\n          &:hover {\n            color: var(--ads-v2-color-fg-emphasis);\n            cursor: pointer;\n            svg {\n              path {\n                fill: var(var(--ads-v2-color-fg));\n              }\n            }\n          }\n        }\n      }\n    }\n\n    tbody {\n      tr {\n        td {\n          padding: var(--ads-spaces-4) var(--ads-spaces-9);\n          color: var(--ads-v2-color-fg);\n          font-size: ${typography.p1.fontSize}px;\n          line-height: ${typography.p1.lineHeight}px;\n          letter-spacing: ${typography.p1.letterSpacing}px;\n          font-weight: normal;\n          border-bottom: 1px solid var(--ads-v2-color-border);\n\n          &:first-child {\n            color: var(--ads-v2-color-fg);\n            font-weight: var(--ads-font-weight-normal);\n          }\n\n          &.no-border {\n            border: none;\n\n            .no-data-title {\n              color: var(--ads-v2-color-fg);\n            }\n          }\n        }\n\n        &:hover:not(.no-hover) {\n          background-color: var(--ads-v2-color-bg-subtle);\n          .${Classes.ICON} {\n            path {\n              fill: var(--ads-v2-color-fg);\n            }\n          }\n          td {\n            color: var(--ads-v2-color-fg);\n\n            &:first-child {\n              color: var(--ads-v2-color-fg);\n            }\n            &.no-border {\n              background-color: var(--ads-v2-color-bg-muted);\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst HiddenArrow = styled(DownArrow)`\n  visibility: hidden;\n`;\n\nconst CentralizedWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 250px;\n`;\n\nconst TableColumnEmptyWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  img {\n    width: 156px;\n    margin-top: 16px;\n  }\n  .no-data-title {\n    font-weight: 500;\n    font-size: 14px;\n    line-height: 16px;\n    letter-spacing: 0.04em;\n    color: #ffffff;\n    margin-top: 23px;\n  }\n`;\nexport interface TableProps {\n  data: any[];\n  columns: any[];\n  isLoading?: boolean;\n  loaderComponent?: JSX.Element;\n  noDataComponent?: JSX.Element;\n}\n\nfunction Table(props: TableProps) {\n  const {\n    columns,\n    data,\n    isLoading = false,\n    loaderComponent,\n    noDataComponent,\n  } = props;\n\n  const {\n    getTableBodyProps,\n    getTableProps,\n    headerGroups,\n    prepareRow,\n    rows,\n  } = useTable(\n    { autoResetExpanded: false, columns, data },\n    useSortBy,\n    useExpanded,\n  );\n\n  return (\n    <Styles>\n      <table {...getTableProps()}>\n        <thead>\n          {headerGroups.map((headerGroup, index: number) => (\n            <tr {...headerGroup.getHeaderGroupProps()} key={index}>\n              {headerGroup.headers.map((column, index: number) => (\n                <th\n                  {...column.getHeaderProps(\n                    column.getSortByToggleProps({ title: undefined }),\n                  )}\n                  key={index}\n                >\n                  {column.render(\"Header\")}\n                  {column.isSorted ? (\n                    column.isSortedDesc ? (\n                      <UpperArrow />\n                    ) : (\n                      <DownArrow />\n                    )\n                  ) : (\n                    <HiddenArrow />\n                  )}\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {isLoading ? (\n            <tr className=\"no-hover\">\n              <td className=\"no-border\" colSpan={columns?.length}>\n                <CentralizedWrapper>\n                  {loaderComponent ? (\n                    loaderComponent\n                  ) : (\n                    <Spinner size={IconSize.XXL} />\n                  )}\n                </CentralizedWrapper>\n              </td>\n            </tr>\n          ) : rows.length > 0 ? (\n            rows.map((row, index) => {\n              prepareRow(row);\n              return (\n                <tr {...row.getRowProps()} key={index}>\n                  {row.cells.map((cell, index) => {\n                    return (\n                      <td\n                        {...cell.getCellProps()}\n                        data-colindex={index}\n                        key={index}\n                      >\n                        {cell.render(\"Cell\")}\n                      </td>\n                    );\n                  })}\n                </tr>\n              );\n            })\n          ) : (\n            <tr className=\"no-hover\">\n              <td className=\"no-border\" colSpan={columns?.length}>\n                <CentralizedWrapper>\n                  {noDataComponent ? (\n                    noDataComponent\n                  ) : (\n                    <TableColumnEmptyWrapper>\n                      {/*<img alt=\"No data\" src={NoDataImage} />*/}\n                      <div\n                        className=\"no-data-title\"\n                        data-testid=\"t--no-data-title\"\n                      >\n                        No data found\n                      </div>\n                    </TableColumnEmptyWrapper>\n                  )}\n                </CentralizedWrapper>\n              </td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n    </Styles>\n  );\n}\n\nexport default Table;\n","import styled from \"styled-components\";\nimport { ModalContent } from \"Modal\";\n\nexport const StyledModalContent = styled(ModalContent)`\n  padding: 0;\n  width: 400px;\n  overflow: hidden;\n`;\n\nexport const BannerImage = styled.div<{ url: string }>`\n  height: 350px;\n  width: 100%;\n  background-image: url(\"${({ url }) => url}\");\n  background-position: center;\n  background-size: cover;\n`;\n\nexport const BannerContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: var(--ads-v2-spaces-9);\n  gap: var(--ads-v2-spaces-7);\n`;\n\nexport const BannerData = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n  gap: var(--ads-v2-spaces-3);\n`;\n\nexport const BannerTitle = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: var(--ads-v2-spaces-3);\n`;\n\nexport const BannerFooter = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: var(--ads-v2-spaces-3);\n`;\n","import { CLASS_NAME_PREFIX } from \"__config__/constants\";\n\nexport const AnnouncementModalClassName = `${CLASS_NAME_PREFIX}-announcement-modal`;\nexport const AnnouncementModalBannerClassName = `${AnnouncementModalClassName}__banner`;\nexport const AnnouncementModalContentClassName = `${AnnouncementModalClassName}__content`;\nexport const AnnouncementModalContentDataClassName = `${AnnouncementModalContentClassName}-data`;\nexport const AnnouncementModalContentFooterClassName = `${AnnouncementModalContentClassName}-footer`;\n","import React from \"react\";\nimport { Modal } from \"Modal\";\n\nimport { AnnouncementModalProps } from \"./AnnouncementModal.types\";\nimport {\n  StyledModalContent,\n  BannerImage,\n  BannerContent,\n  BannerData,\n  BannerTitle,\n  BannerFooter,\n} from \"./AnnouncementModal.styles\";\nimport { Text } from \"Text\";\nimport { Tag } from \"Tag\";\nimport {\n  AnnouncementModalBannerClassName,\n  AnnouncementModalClassName,\n  AnnouncementModalContentClassName,\n  AnnouncementModalContentDataClassName,\n  AnnouncementModalContentFooterClassName,\n} from \"./AnnouncementModal.constants\";\n\nfunction AnnouncementModal({\n  banner,\n  description,\n  footer,\n  isBeta,\n  isOpen,\n  title,\n}: AnnouncementModalProps) {\n  return (\n    <Modal open={isOpen}>\n      <StyledModalContent className={AnnouncementModalClassName}>\n        <BannerImage\n          className={AnnouncementModalBannerClassName}\n          url={banner}\n        />\n        <BannerContent className={AnnouncementModalContentClassName}>\n          <BannerData className={AnnouncementModalContentDataClassName}>\n            <BannerTitle>\n              <Text kind=\"heading-m\">{title}</Text>\n              {isBeta ? (\n                <Tag isClosable={false} size=\"md\">\n                  Beta\n                </Tag>\n              ) : null}\n            </BannerTitle>\n            <Text kind=\"body-m\">{description}</Text>\n          </BannerData>\n          <BannerFooter className={AnnouncementModalContentFooterClassName}>\n            {footer}\n          </BannerFooter>\n        </BannerContent>\n      </StyledModalContent>\n    </Modal>\n  );\n}\n\nAnnouncementModal.displayName = \"AnnouncementModal\";\n\nexport { AnnouncementModal };\n","export type CollapsibleProps = {\n  /**\n   * Both header and content of the collapsible will go here.\n   */\n  children: React.ReactNode;\n  /** The open state of the collapsible. */\n  isOpen?: boolean;\n  /** Callback for when the collapsible is opened or closed. */\n  onOpenChange?: (isOpen: boolean) => void;\n  /* (try not to) pass addition classes here. */\n  className?: string;\n};\n\nexport type CollapsibleContentProps = {\n  /** Content to be displayed when the component is expanded. */\n  children: React.ReactNode;\n  /* (try not to) pass addition classes here. */\n  className?: string;\n};\n\nexport const ARROW_POSITIONS = {\n  START: \"start\",\n  END: \"end\",\n} as const;\n\nexport type ArrowPositions =\n  typeof ARROW_POSITIONS[keyof typeof ARROW_POSITIONS];\n\nexport type CollapsibleHeaderProps = {\n  /**\n   * Any React Node that will go in the header.\n   * Clicking on this will toggle the collapsible.\n   */\n  children: React.ReactNode;\n  /* (try not to) pass addition classes here. */\n  className?: string;\n  /** Position of the arrow icons. Defaults to \"start\" */\n  arrowPosition?: ArrowPositions;\n} & React.HTMLAttributes<HTMLDivElement>;\n\nexport type CollapsibleContextType = {\n  isExpanded: boolean;\n  handleOpenChange: () => void;\n};\n","import { Icon } from \"Icon\";\nimport styled from \"styled-components\";\n\nexport const StyledCollapsibleContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: max-content;\n  gap: var(--ads-v2-spaces-2);\n`;\n\nexport const StyledCollapsibleHeader = styled.div`\n  cursor: pointer;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  gap: var(--ads-v2-spaces-2);\n  padding: var(--ads-v2-spaces-2) var(--ads-v2-spaces-0);\n  color: var(--ads-v2-colors-content-label-default-fg);\n`;\n\nexport const StyledCollapsibleContent = styled.div<{ isExpanded: boolean }>`\n  display: ${(props) => (props.isExpanded ? \"flex\" : \"none\")};\n  overflow: hidden;\n  flex-direction: column;\n`;\n\nexport const StyledEndIcon = styled(Icon)`\n  margin-left: auto;\n`;\n","import { CLASS_NAME_PREFIX } from \"__config__/constants\";\n\nexport const CollapsibleClassName = `${CLASS_NAME_PREFIX}-collapsible`;\nexport const CollapsibleHeaderClassName = `${CollapsibleClassName}__header`;\nexport const CollapsibleContentClassName = `${CLASS_NAME_PREFIX}__content`;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport {\n  CollapsibleHeaderProps,\n  CollapsibleContentProps,\n  CollapsibleProps,\n  CollapsibleContextType,\n  ARROW_POSITIONS,\n} from \"./Collapsible.types\";\nimport {\n  StyledCollapsibleContainer,\n  StyledCollapsibleContent,\n  StyledCollapsibleHeader,\n  StyledEndIcon,\n} from \"./Collapsible.styles\";\nimport {\n  CollapsibleClassName,\n  CollapsibleContentClassName,\n  CollapsibleHeaderClassName,\n} from \"./Collapsible.constants\";\nimport { Icon } from \"Icon\";\nimport { createContext } from \"react\";\nimport clsx from \"classnames\";\n\nexport const CollapsibleContext = createContext<CollapsibleContextType>({\n  isExpanded: false,\n  handleOpenChange: () => {\n    return null;\n  },\n});\n\nfunction CollapsibleHeader(props: CollapsibleHeaderProps) {\n  const { arrowPosition = ARROW_POSITIONS.START, children, className } = props;\n  const { handleOpenChange, isExpanded } = useContext(CollapsibleContext);\n\n  return (\n    <StyledCollapsibleHeader\n      className={clsx(CollapsibleHeaderClassName, className)}\n      onClick={handleOpenChange}\n    >\n      {arrowPosition === ARROW_POSITIONS.START && (\n        <Icon\n          name={isExpanded ? \"arrow-down-s-line\" : \"arrow-right-s-line\"}\n          size=\"md\"\n        />\n      )}\n\n      {children}\n\n      {arrowPosition === ARROW_POSITIONS.END && (\n        <StyledEndIcon\n          name={isExpanded ? \"arrow-down-s-line\" : \"arrow-right-s-line\"}\n          size=\"md\"\n        />\n      )}\n    </StyledCollapsibleHeader>\n  );\n}\n\nfunction CollapsibleContent(props: CollapsibleContentProps) {\n  const { children, className } = props;\n  const { isExpanded } = useContext(CollapsibleContext);\n\n  return (\n    <StyledCollapsibleContent\n      className={clsx(CollapsibleContentClassName, className)}\n      isExpanded={isExpanded}\n    >\n      {children}\n    </StyledCollapsibleContent>\n  );\n}\n\nfunction Collapsible(props: CollapsibleProps) {\n  const { children, className, isOpen, onOpenChange } = props;\n  const [isExpanded, setIsExpanded] = useState(!!isOpen);\n\n  useEffect(() => {\n    if (isOpen === true || isOpen === false) {\n      setIsExpanded(isOpen);\n    }\n  }, [isOpen]);\n\n  const handleOpenChange = () => {\n    if (onOpenChange) {\n      onOpenChange(!isExpanded);\n    }\n\n    setIsExpanded(!isExpanded);\n  };\n\n  return (\n    <CollapsibleContext.Provider\n      value={{\n        isExpanded,\n        handleOpenChange,\n      }}\n    >\n      <StyledCollapsibleContainer\n        className={clsx(CollapsibleClassName, className)}\n      >\n        {children}\n      </StyledCollapsibleContainer>\n    </CollapsibleContext.Provider>\n  );\n}\n\nCollapsible.displayName = \"Collapsible\";\nCollapsibleHeader.displayName = \"CollapsibleHeader\";\nCollapsibleContent.displayName = \"CollapsibleContent\";\n\nexport { Collapsible, CollapsibleHeader, CollapsibleContent };\n","export interface CacheOptions<Value> {\n  // initial value of _value.\n  _initialValue: Value;\n  // Custom comparison function if shallow compare isn't enough. Returns true if nothing changed.\n  _equal?: EqualCachePropFunction<Value>;\n  // If true always updates _value and _previous, otherwise they update only when they changed.\n  _alwaysUpdateValues?: boolean;\n}\n\nexport type CacheValues<T> = [value: T, changed: boolean, previous?: T];\n\nexport type EqualCachePropFunction<Value> = (currentVal: Value, newVal: Value) => boolean;\n\nexport type CacheUpdater<Value> = (current: Value, previous?: Value) => Value;\n\nexport type UpdateCacheContextual<Value> = (newValue: Value, force?: boolean) => CacheValues<Value>;\n\nexport type UpdateCache<Value> = (force?: boolean) => CacheValues<Value>;\n\nexport type GetCurrentCache<Value> = (force?: boolean) => CacheValues<Value>;\n\nexport type Cache<Value> = [UpdateCache<Value>, GetCurrentCache<Value>];\n\nexport type CacheContextual<Value> = [UpdateCacheContextual<Value>, GetCurrentCache<Value>];\n\ntype CreateCache = {\n  <Value>(options: CacheOptions<Value>): CacheContextual<Value>;\n  <Value>(options: CacheOptions<Value>, update: CacheUpdater<Value>): Cache<Value>;\n  <Value>(options: CacheOptions<Value>, update?: CacheUpdater<Value>):\n    | CacheContextual<Value>\n    | Cache<Value>;\n};\n\nexport const createCache: CreateCache = <Value>(\n  options: CacheOptions<Value>,\n  update?: CacheUpdater<Value>\n): CacheContextual<Value> | Cache<Value> => {\n  const { _initialValue, _equal, _alwaysUpdateValues } = options;\n  let _value: Value = _initialValue;\n  let _previous: Value | undefined;\n\n  const cacheUpdateContextual: UpdateCacheContextual<Value> = (newValue, force?) => {\n    const curr = _value;\n\n    const newVal = newValue;\n    const changed = force || (_equal ? !_equal(curr, newVal) : curr !== newVal);\n\n    if (changed || _alwaysUpdateValues) {\n      _value = newVal;\n      _previous = curr;\n    }\n\n    return [_value, changed, _previous];\n  };\n  const cacheUpdateIsolated: UpdateCache<Value> = (force?) =>\n    cacheUpdateContextual(update!(_value, _previous), force);\n\n  const getCurrentCache: GetCurrentCache<Value> = (force?: boolean) => [\n    _value,\n    !!force, // changed\n    _previous,\n  ];\n\n  return [update ? cacheUpdateIsolated : cacheUpdateContextual, getCurrentCache] as\n    | CacheContextual<Value>\n    | Cache<Value>;\n};\n","export const isBrowser =\r\n  typeof window !== 'undefined' &&\r\n  // deno has the global `window` defined, so additionally check for document\r\n  typeof document !== 'undefined';\r\n","import { isBrowser } from '../compatibility/isBrowser';\r\n\r\nexport const wnd = (isBrowser ? window : {}) as typeof window;\r\nexport const mathMax = Math.max;\r\nexport const mathMin = Math.min;\r\nexport const mathRound = Math.round;\r\nexport const mathFloor = Math.floor;\r\nexport const mathCeil = Math.ceil;\r\nexport const mathAbs = Math.abs;\r\nexport const cAF = wnd.cancelAnimationFrame;\r\nexport const rAF = wnd.requestAnimationFrame;\r\nexport const setT = wnd.setTimeout;\r\nexport const clearT = wnd.clearTimeout;\r\n","import { wnd } from '../utils/alias';\r\n\r\nconst getApi = <T>(name: string) =>\r\n  (typeof wnd[name as keyof typeof wnd] !== 'undefined'\r\n    ? wnd[name as keyof typeof wnd]\r\n    : undefined) as T;\r\n\r\nexport const MutationObserverConstructor = getApi<typeof MutationObserver>('MutationObserver');\r\nexport const IntersectionObserverConstructor =\r\n  getApi<typeof IntersectionObserver>('IntersectionObserver');\r\nexport const ResizeObserverConstructor = getApi<typeof ResizeObserver>('ResizeObserver');\r\nexport const scrollT = getApi<new (constructor: unknown) => AnimationTimeline>('ScrollTimeline');\r\n","import type { PlainObject } from '~/typings';\r\nimport { isBrowser } from '../compatibility/isBrowser';\r\n\r\nconst ElementNodeType = isBrowser && Node.ELEMENT_NODE;\r\nconst { toString, hasOwnProperty } = Object.prototype;\r\nconst typeRgx = /^\\[object (.+)\\]$/;\r\n\r\nexport const isUndefined = (obj: any): obj is undefined => obj === undefined;\r\n\r\nexport const isNull = (obj: any): obj is null => obj === null;\r\n\r\nexport const type = (obj: any): string =>\r\n  isUndefined(obj) || isNull(obj)\r\n    ? `${obj}`\r\n    : toString.call(obj).replace(typeRgx, '$1').toLowerCase();\r\n\r\nexport const isNumber = (obj: any): obj is number => typeof obj === 'number';\r\n\r\nexport const isString = (obj: any): obj is string => typeof obj === 'string';\r\n\r\nexport const isBoolean = (obj: any): obj is boolean => typeof obj === 'boolean';\r\n\r\nexport const isFunction = (obj: any): obj is (...args: any[]) => any => typeof obj === 'function';\r\n\r\nexport const isArray = <T = any>(obj: any): obj is Array<T> => Array.isArray(obj);\r\n\r\nexport const isObject = (obj: any): obj is object =>\r\n  typeof obj === 'object' && !isArray(obj) && !isNull(obj);\r\n\r\n/**\r\n * Returns true if the given object is array like, false otherwise.\r\n * @param obj The Object\r\n */\r\nexport const isArrayLike = <T extends PlainObject = any>(obj: any): obj is ArrayLike<T> => {\r\n  const length = !!obj && obj.length;\r\n  const lengthCorrectFormat = isNumber(length) && length > -1 && length % 1 == 0; // eslint-disable-line eqeqeq\r\n\r\n  return isArray(obj) || (!isFunction(obj) && lengthCorrectFormat)\r\n    ? length > 0 && isObject(obj)\r\n      ? length - 1 in obj\r\n      : true\r\n    : false;\r\n};\r\n\r\n/**\r\n * Returns true if the given object is a \"plain\" (e.g. { key: value }) object, false otherwise.\r\n * @param obj The Object.\r\n */\r\nexport const isPlainObject = <T = any>(obj: any): obj is PlainObject<T> => {\r\n  if (!obj || !isObject(obj) || type(obj) !== 'object') return false;\r\n\r\n  let key;\r\n  const cstr = 'constructor';\r\n  const ctor = obj[cstr];\r\n  const ctorProto = ctor && ctor.prototype;\r\n  const hasOwnConstructor = hasOwnProperty.call(obj, cstr);\r\n  const hasIsPrototypeOf = ctorProto && hasOwnProperty.call(ctorProto, 'isPrototypeOf');\r\n\r\n  if (ctor && !hasOwnConstructor && !hasIsPrototypeOf) {\r\n    return false;\r\n  }\r\n\r\n  /* eslint-disable no-restricted-syntax */\r\n  for (key in obj) {\r\n    /**/\r\n  }\r\n  /* eslint-enable */\r\n\r\n  return isUndefined(key) || hasOwnProperty.call(obj, key);\r\n};\r\n\r\n/**\r\n * Checks whether the given object is a HTMLElement.\r\n * @param obj The object which shall be checked.\r\n */\r\nexport const isHTMLElement = (obj: any): obj is HTMLElement => {\r\n  const instanceofObj = HTMLElement;\r\n  return obj\r\n    ? instanceofObj\r\n      ? obj instanceof instanceofObj\r\n      : obj.nodeType === ElementNodeType\r\n    : false;\r\n};\r\n\r\n/**\r\n * Checks whether the given object is a Element.\r\n * @param obj The object which shall be checked.\r\n */\r\nexport const isElement = (obj: any): obj is Element => {\r\n  const instanceofObj = Element;\r\n  return obj\r\n    ? instanceofObj\r\n      ? obj instanceof instanceofObj\r\n      : obj.nodeType === ElementNodeType\r\n    : false;\r\n};\r\n","import type { PlainObject } from '~/typings';\r\nimport { isArray, isArrayLike, isString } from './types';\r\n\r\ntype RunEachItem = ((...args: any) => any | any[]) | false | null | undefined;\r\n\r\nexport function each<T extends Array<unknown> | ReadonlyArray<unknown>>(\r\n  array: T,\r\n  callback: (\r\n    value: T extends Array<infer V> | ReadonlyArray<infer V> ? V : never,\r\n    index: number,\r\n    source: T\r\n  ) => boolean | unknown\r\n): T;\r\nexport function each<T extends ArrayLike<unknown>>(\r\n  arrayLikeObject: T,\r\n  callback: (\r\n    value: T extends ArrayLike<infer V> ? V : never,\r\n    index: number,\r\n    source: T\r\n  ) => boolean | unknown\r\n): T;\r\nexport function each<T extends PlainObject>(\r\n  obj: T,\r\n  callback: (value: any, key: string, source: T) => boolean | unknown\r\n): T;\r\nexport function each(\r\n  source: Array<unknown> | ArrayLike<unknown> | ReadonlyArray<unknown> | PlainObject,\r\n  callback: (value: any, indexOrKey: any, source: any) => boolean | unknown\r\n): Array<unknown> | ArrayLike<unknown> | ReadonlyArray<unknown> | Set<unknown> | PlainObject {\r\n  if (isArrayLike(source)) {\r\n    for (let i = 0; i < source.length; i++) {\r\n      if (callback(source[i], i, source) === false) {\r\n        break;\r\n      }\r\n    }\r\n  } else if (source) {\r\n    // cant use support func keys here due to circular dep\r\n    each(Object.keys(source), (key) => callback(source[key], key, source));\r\n  }\r\n  return source;\r\n}\r\n\r\n/**\r\n * Returns true when the passed item is in the passed array and false otherwise.\r\n * @param arr The array.\r\n * @param item The item.\r\n * @returns Whether the item is in the array.\r\n */\r\nexport const inArray = <T = any>(arr: T[], item: T): boolean => arr.indexOf(item) >= 0;\r\n\r\n/**\r\n * Concats two arrays and returns an new array without modifying any of the passed arrays.\r\n * @param a Array A.\r\n * @param b Array B.\r\n * @returns A new array which has the entries of both arrays.\r\n */\r\nexport const concat = <T>(a: T[] | ReadonlyArray<T>, b: T[] | ReadonlyArray<T>): T[] => a.concat(b);\r\n\r\n/**\r\n * Pushesh all given items into the given array and returns it.\r\n * @param array The array the items shall be pushed into.\r\n * @param items The items which shall be pushed into the array.\r\n */\r\nexport const push = <T>(array: T[], items: T | ArrayLike<T>, arrayIsSingleItem?: boolean): T[] => {\r\n  !arrayIsSingleItem && !isString(items) && isArrayLike(items)\r\n    ? Array.prototype.push.apply(array, items as T[])\r\n    : array.push(items as T);\r\n  return array;\r\n};\r\n\r\n/**\r\n * Creates a shallow-copied Array instance from an array-like or iterable object.\r\n * @param arr The object from which the array instance shall be created.\r\n */\r\nexport const from = <T = any>(arr?: ArrayLike<T> | Set<T>) => Array.from(arr || []);\r\n\r\n/**\r\n * Creates an array if the passed value is not an array, or returns the value if it is.\r\n * @param value The value.\r\n * @returns An array which represents the passed value(s).\r\n */\r\nexport const createOrKeepArray = <T>(value: T | T[]): T[] => (isArray(value) ? value : [value]);\r\n\r\n/**\r\n * Check whether the passed array is empty.\r\n * @param array The array which shall be checked.\r\n */\r\nexport const isEmptyArray = (array: any[] | null | undefined): boolean => !!array && !array.length;\r\n\r\n/**\r\n * Deduplicates all items of the array.\r\n * @param array The array to be deduplicated.\r\n * @returns The deduplicated array.\r\n */\r\nexport const deduplicateArray = <T extends any[]>(array: T): T => from(new Set(array)) as T;\r\n\r\n/**\r\n * Calls all functions in the passed array/set of functions.\r\n * @param arr The array filled with function which shall be called.\r\n * @param args The args with which each function is called.\r\n * @param keep True when the Set / array should not be cleared afterwards, false otherwise.\r\n */\r\nexport const runEachAndClear = (arr: RunEachItem[], args?: any[], keep?: boolean): void => {\r\n  // eslint-disable-next-line prefer-spread\r\n  const runFn = (fn: RunEachItem) => fn && fn.apply(undefined, args || []);\r\n  each(arr, runFn);\r\n  !keep && ((arr as any[]).length = 0);\r\n};\r\n","export const strPaddingTop = 'paddingTop';\r\nexport const strPaddingRight = 'paddingRight';\r\nexport const strPaddingLeft = 'paddingLeft';\r\nexport const strPaddingBottom = 'paddingBottom';\r\nexport const strMarginLeft = 'marginLeft';\r\nexport const strMarginRight = 'marginRight';\r\nexport const strMarginBottom = 'marginBottom';\r\nexport const strOverflowX = 'overflowX';\r\nexport const strOverflowY = 'overflowY';\r\nexport const strWidth = 'width';\r\nexport const strHeight = 'height';\r\nexport const strHidden = 'hidden';\r\nexport const strVisible = 'visible';\r\n","import type { WH } from '../dom/dimensions';\r\nimport type { XY } from '../dom/offset';\r\nimport type { TRBL } from '../dom/style';\r\nimport type { PlainObject } from '~/typings';\r\nimport { each } from './array';\r\nimport { mathRound } from './alias';\r\nimport { strHeight, strWidth } from './strings';\r\n\r\n/**\r\n * Compares two objects and returns true if all values of the passed prop names are identical, false otherwise or if one of the two object is falsy.\r\n * @param a Object a.\r\n * @param b Object b.\r\n * @param props The props which shall be compared.\r\n */\r\nexport const equal = <T extends PlainObject>(\r\n  a: T | undefined,\r\n  b: T | undefined,\r\n  props: Array<keyof T>,\r\n  propMutation?: ((value: any) => any) | null | false\r\n): boolean => {\r\n  if (a && b) {\r\n    let result = true;\r\n    each(props, (prop) => {\r\n      const compareA = propMutation ? propMutation(a[prop]) : a[prop];\r\n      const compareB = propMutation ? propMutation(b[prop]) : b[prop];\r\n      if (compareA !== compareB) {\r\n        result = false;\r\n      }\r\n    });\r\n    return result;\r\n  }\r\n  return false;\r\n};\r\n\r\n/**\r\n * Compares object a with object b and returns true if both have the same property values, false otherwise.\r\n * Also returns false if one of the objects is undefined or null.\r\n * @param a Object a.\r\n * @param b Object b.\r\n */\r\nexport const equalWH = <T>(a?: WH<T>, b?: WH<T>) => equal<WH<T>>(a, b, ['w', 'h']);\r\n\r\n/**\r\n * Compares object a with object b and returns true if both have the same property values, false otherwise.\r\n * Also returns false if one of the objects is undefined or null.\r\n * @param a Object a.\r\n * @param b Object b.\r\n */\r\nexport const equalXY = <T>(a?: XY<T>, b?: XY<T>) => equal<XY<T>>(a, b, ['x', 'y']);\r\n\r\n/**\r\n * Compares object a with object b and returns true if both have the same property values, false otherwise.\r\n * Also returns false if one of the objects is undefined or null.\r\n * @param a Object a.\r\n * @param b Object b.\r\n */\r\nexport const equalTRBL = (a?: TRBL, b?: TRBL) => equal<TRBL>(a, b, ['t', 'r', 'b', 'l']);\r\n\r\n/**\r\n * Compares two DOM Rects for their equality of their width and height properties\r\n * Also returns false if one of the DOM Rects is undefined or null.\r\n * @param a DOM Rect a.\r\n * @param b DOM Rect b.\r\n * @param round Whether the values should be rounded.\r\n */\r\nexport const equalBCRWH = (a?: DOMRect, b?: DOMRect, round?: boolean) =>\r\n  equal<DOMRect>(a, b, [strWidth, strHeight], round && ((value) => mathRound(value)));\r\n","export const noop = () => {}; // eslint-disable-line\r\n","import { isNumber, isFunction } from './types';\r\nimport { from } from './array';\r\nimport { rAF, cAF, setT, clearT } from './alias';\r\nimport { noop } from './noop';\r\n\r\ntype DebounceTiming = number | false | null | undefined;\r\n\r\nexport interface DebounceOptions<FunctionToDebounce extends (...args: any) => any> {\r\n  /**\r\n   * The timeout for debouncing. If null, no debounce is applied.\r\n   */\r\n  _timeout?: DebounceTiming | (() => DebounceTiming);\r\n  /**\r\n   * A maximum amount of ms. before the function will be called even with debounce.\r\n   */\r\n  _maxDelay?: DebounceTiming | (() => DebounceTiming);\r\n  /**\r\n   * Function which merges parameters for each canceled debounce.\r\n   * If parameters can't be merged the function will return null, otherwise it returns the merged parameters.\r\n   */\r\n  _mergeParams?: (\r\n    prev: Parameters<FunctionToDebounce>,\r\n    curr: Parameters<FunctionToDebounce>\r\n  ) => Parameters<FunctionToDebounce> | false | null | undefined;\r\n}\r\n\r\nexport interface Debounced<FunctionToDebounce extends (...args: any) => any> {\r\n  (...args: Parameters<FunctionToDebounce>): ReturnType<FunctionToDebounce>;\r\n  _flush(): void;\r\n}\r\n\r\nexport const bind = <A extends any[], B extends any[], R>(\r\n  fn: (...args: [...A, ...B]) => R,\r\n  ...args: A\r\n): ((...args: B) => R) => fn.bind(0, ...args);\r\n\r\n/**\r\n * Creates a timeout and cleartimeout tuple. The timeout function always clears the previously created timeout before it runs.\r\n * @param timeout The timeout in ms. If no timeout (or 0) is passed requestAnimationFrame is used instead of setTimeout.\r\n * @returns A tuple with the timeout function as the first value and the clearTimeout function as the second value.\r\n */\r\nexport const selfClearTimeout = (timeout?: number | (() => number)) => {\r\n  let id: number;\r\n  const setTFn = timeout ? setT : rAF!;\r\n  const clearTFn = timeout ? clearT : cAF!;\r\n  return [\r\n    (callback: () => any) => {\r\n      clearTFn(id);\r\n      // @ts-ignore\r\n      id = setTFn(callback, isFunction(timeout) ? timeout() : timeout);\r\n    },\r\n    () => clearTFn(id),\r\n  ] as [timeout: (callback: () => any) => void, clear: () => void];\r\n};\r\n\r\n/**\r\n * Debounces the given function either with a timeout or a animation frame.\r\n * @param functionToDebounce The function which shall be debounced.\r\n * @param options Options for debouncing.\r\n */\r\nexport const debounce = <FunctionToDebounce extends (...args: any) => any>(\r\n  functionToDebounce: FunctionToDebounce,\r\n  options?: DebounceOptions<FunctionToDebounce>\r\n): Debounced<FunctionToDebounce> => {\r\n  let maxTimeoutId: number | undefined;\r\n  let prevArguments: Parameters<FunctionToDebounce> | null | undefined;\r\n  let latestArguments: Parameters<FunctionToDebounce> | null | undefined;\r\n  let clear = noop;\r\n  const { _timeout, _maxDelay, _mergeParams } = options || {};\r\n\r\n  const invokeFunctionToDebounce = function (args: IArguments) {\r\n    clear();\r\n    clearT(maxTimeoutId);\r\n    maxTimeoutId = prevArguments = undefined;\r\n    clear = noop;\r\n    // eslint-disable-next-line\r\n    // @ts-ignore\r\n    functionToDebounce.apply(this, args);\r\n  };\r\n\r\n  const mergeParms = (\r\n    curr: Parameters<FunctionToDebounce>\r\n  ): Parameters<FunctionToDebounce> | false | null | undefined =>\r\n    _mergeParams && prevArguments ? _mergeParams(prevArguments, curr) : curr;\r\n\r\n  const flush = () => {\r\n    /* istanbul ignore next */\r\n    if (clear !== noop) {\r\n      invokeFunctionToDebounce(mergeParms(latestArguments!) || latestArguments!);\r\n    }\r\n  };\r\n\r\n  const debouncedFn = function () {\r\n    // eslint-disable-next-line prefer-rest-params\r\n    const args: Parameters<FunctionToDebounce> = from(arguments) as Parameters<FunctionToDebounce>;\r\n    const finalTimeout = isFunction(_timeout) ? _timeout() : _timeout;\r\n    const hasTimeout = isNumber(finalTimeout) && finalTimeout >= 0;\r\n\r\n    if (hasTimeout) {\r\n      const finalMaxWait = isFunction(_maxDelay) ? _maxDelay() : _maxDelay;\r\n      const hasMaxWait = isNumber(finalMaxWait) && finalMaxWait >= 0;\r\n      const setTimeoutFn = finalTimeout > 0 ? setT : rAF!;\r\n      const clearTimeoutFn = finalTimeout > 0 ? clearT : cAF!;\r\n      const mergeParamsResult = mergeParms(args);\r\n      const invokedArgs = mergeParamsResult || args;\r\n      const boundInvoke = invokeFunctionToDebounce.bind(0, invokedArgs);\r\n\r\n      // if (!mergeParamsResult) {\r\n      //   invokeFunctionToDebounce(prevArguments || args);\r\n      // }\r\n\r\n      clear();\r\n      // @ts-ignore\r\n      const timeoutId = setTimeoutFn(boundInvoke, finalTimeout);\r\n      clear = () => clearTimeoutFn(timeoutId);\r\n\r\n      if (hasMaxWait && !maxTimeoutId) {\r\n        maxTimeoutId = setT(flush, finalMaxWait as number);\r\n      }\r\n\r\n      prevArguments = latestArguments = invokedArgs;\r\n    } else {\r\n      invokeFunctionToDebounce(args);\r\n    }\r\n  };\r\n  debouncedFn._flush = flush;\r\n\r\n  return debouncedFn as Debounced<FunctionToDebounce>;\r\n};\r\n","import type { PlainObject } from '~/typings';\r\nimport { isArray, isFunction, isPlainObject, isNull } from './types';\r\nimport { each } from './array';\r\n\r\n/**\r\n * Determines whether the passed object has a property with the passed name.\r\n * @param obj The object.\r\n * @param prop The name of the property.\r\n */\r\nexport const hasOwnProperty = (obj: any, prop: string | number | symbol): boolean =>\r\n  Object.prototype.hasOwnProperty.call(obj, prop);\r\n\r\n/**\r\n * Returns the names of the enumerable string properties and methods of an object.\r\n * @param obj The object of which the properties shall be returned.\r\n */\r\nexport const keys = (obj: any): Array<string> => (obj ? Object.keys(obj) : []);\r\n\r\ntype AssignDeep = {\r\n  <T, U>(target: T, object1: U): T & U;\r\n  <T, U, V>(target: T, object1: U, object2: V): T & U & V;\r\n  <T, U, V, W>(target: T, object1: U, object2: V, object3: W): T & U & V & W;\r\n  <T, U, V, W, X>(target: T, object1: U, object2: V, object3: W, object4: X): T & U & V & W & X;\r\n  <T, U, V, W, X, Y>(target: T, object1: U, object2: V, object3: W, object4: X, object5: Y): T &\r\n    U &\r\n    V &\r\n    W &\r\n    X &\r\n    Y;\r\n  <T, U, V, W, X, Y, Z>(\r\n    target: T,\r\n    object1?: U,\r\n    object2?: V,\r\n    object3?: W,\r\n    object4?: X,\r\n    object5?: Y,\r\n    object6?: Z\r\n  ): T & U & V & W & X & Y & Z;\r\n};\r\n\r\n// https://github.com/jquery/jquery/blob/master/src/core.js#L116\r\nexport const assignDeep: AssignDeep = <T, U, V, W, X, Y, Z>(\r\n  target: T,\r\n  object1?: U,\r\n  object2?: V,\r\n  object3?: W,\r\n  object4?: X,\r\n  object5?: Y,\r\n  object6?: Z\r\n): T & U & V & W & X & Y & Z => {\r\n  const sources: Array<any> = [object1, object2, object3, object4, object5, object6];\r\n\r\n  // Handle case when target is a string or something (possible in deep copy)\r\n  if ((typeof target !== 'object' || isNull(target)) && !isFunction(target)) {\r\n    target = {} as T;\r\n  }\r\n\r\n  each(sources, (source) => {\r\n    // Extend the base object\r\n    each(source, (_, key) => {\r\n      const copy: any = source[key];\r\n\r\n      // Prevent Object.prototype pollution\r\n      // Prevent never-ending loop\r\n      if (target === copy) {\r\n        return true;\r\n      }\r\n\r\n      const copyIsArray = isArray(copy);\r\n\r\n      // Recurse if we're merging plain objects or arrays\r\n      if (copy && isPlainObject(copy)) {\r\n        const src = target[key as keyof T];\r\n        let clone: any = src;\r\n\r\n        // Ensure proper type for the source value\r\n        if (copyIsArray && !isArray(src)) {\r\n          clone = [];\r\n        } else if (!copyIsArray && !isPlainObject(src)) {\r\n          clone = {};\r\n        }\r\n\r\n        // Never move original objects, clone them\r\n        target[key as keyof T] = assignDeep(clone, copy) as any;\r\n      } else {\r\n        target[key as keyof T] = copyIsArray ? copy.slice() : copy;\r\n      }\r\n    });\r\n  });\r\n\r\n  // Return the modified object\r\n  return target as any;\r\n};\r\n\r\nexport const removeUndefinedProperties = <T extends PlainObject>(target: T, deep?: boolean): T =>\r\n  each(assignDeep({}, target), (value, key, copy) => {\r\n    if (value === undefined) {\r\n      delete copy[key];\r\n    } else if (deep && value && isPlainObject(value)) {\r\n      copy[key as keyof typeof copy] = removeUndefinedProperties(value, deep) as any;\r\n    }\r\n  });\r\n\r\n/**\r\n * Returns true if the given object is empty, false otherwise.\r\n * @param obj The Object.\r\n */\r\nexport const isEmptyObject = (obj: any): boolean => {\r\n  // eslint-disable-next-line no-restricted-syntax, no-unreachable-loop, guard-for-in\r\n  for (const name in obj) return false;\r\n  return true;\r\n  /* eslint-enable */\r\n};\r\n","import { mathMax, mathMin } from './alias';\r\n\r\n/**\r\n * Caps the passed number between the `min` and `max` bounds.\r\n * @param min The min bound.\r\n * @param max The max bound.\r\n * @param number The number to be capped.\r\n * @returns The capped number between min and max.\r\n */\r\nexport const capNumber = (min: number, max: number, number: number) =>\r\n  mathMax(min, mathMin(max, number));\r\n","import type { HTMLElementTarget } from './types';\r\nimport { bind, each, from, isArray } from '../utils';\r\n\r\nexport type AttributeElementTarget = HTMLElementTarget | Element;\r\n\r\nexport type DomTokens = string | string[] | false | null | undefined | void;\r\n\r\nexport const getDomTokensArray = (tokens: DomTokens) =>\r\n  from(new Set((isArray(tokens) ? tokens : (tokens || '').split(' ')).filter((token) => token)));\r\n\r\n/**\r\n * Gets a attribute with the given attribute of the given element.\r\n * @param elm The element of which the attribute shall be get.\r\n * @param attrName The attribute name which shall be get.\r\n * @returns The attribute value or `null` when the attribute is not set or `false` if the element is undefined.\r\n */\r\nexport const getAttr = (elm: AttributeElementTarget, attrName: string) =>\r\n  elm && elm.getAttribute(attrName);\r\n\r\n/**\r\n * Returns whether the given attribute exists on the given element.\r\n * @param elm The element.\r\n * @param attrName The attribute.\r\n * @returns A Truthy value indicates a present attrubte.\r\n */\r\nexport const hasAttr = (elm: AttributeElementTarget, attrName: string) =>\r\n  elm && elm.hasAttribute(attrName);\r\n\r\n/**\r\n * Sets the given attributes to the given element.\r\n * @param elm The element of which the attributes shall be removed.\r\n * @param attrName The attribute names separated by a space.\r\n */\r\nexport const setAttrs = (\r\n  elm: AttributeElementTarget,\r\n  attrNames: string | string[],\r\n  value: string | false | null | undefined\r\n) => {\r\n  each(getDomTokensArray(attrNames), (attrName) => {\r\n    elm && elm.setAttribute(attrName, value || '');\r\n  });\r\n};\r\n\r\n/**\r\n * Removes the given attributes from the given element.\r\n * @param elm The element of which the attribute shall be removed.\r\n * @param attrName The attribute names separated by a space.\r\n */\r\nexport const removeAttrs = (elm: AttributeElementTarget, attrNames: string | string[]): void => {\r\n  each(getDomTokensArray(attrNames), (attrName) => elm && elm.removeAttribute(attrName));\r\n};\r\n\r\nexport const domTokenListAttr = (elm: AttributeElementTarget, attrName: string) => {\r\n  const initialArr = getDomTokensArray(getAttr(elm, attrName));\r\n  const setElmAttr = bind(setAttrs, elm, attrName);\r\n  const domTokenListOperation = (operationTokens: DomTokens, operation: 'add' | 'delete') => {\r\n    const initialArrSet = new Set(initialArr);\r\n    each(getDomTokensArray(operationTokens), (token) => initialArrSet[operation](token));\r\n    return from(initialArrSet).join(' ');\r\n  };\r\n\r\n  return {\r\n    _remove: (removeTokens: DomTokens) => setElmAttr(domTokenListOperation(removeTokens, 'delete')),\r\n    _add: (addTokens: DomTokens) => setElmAttr(domTokenListOperation(addTokens, 'add')),\r\n    _has: (hasTokens: DomTokens) => {\r\n      const tokenSet = getDomTokensArray(hasTokens);\r\n      return tokenSet.reduce(\r\n        (boolean, token) => boolean && initialArr.includes(token),\r\n        tokenSet.length > 0\r\n      );\r\n    },\r\n  };\r\n};\r\n\r\n/**\r\n * Treats the given attribute like the \"class\" attribute and removes the given value from it.\r\n * @param elm The element.\r\n * @param attrName The attributeName to which the value shall be removed.\r\n * @param value The value which shall be removed.\r\n */\r\nexport const removeAttrClass = (\r\n  elm: AttributeElementTarget,\r\n  attrName: string,\r\n  value: DomTokens\r\n) => {\r\n  domTokenListAttr(elm, attrName)._remove(value);\r\n};\r\n\r\n/**\r\n * Treats the given attribute like the \"class\" attribute and adds value to it.\r\n * @param elm The element.\r\n * @param attrName The attributeName to which the value shall be added.\r\n * @param value The value which shall be added.\r\n */\r\nexport const addAttrClass = (elm: AttributeElementTarget, attrName: string, value: DomTokens) => {\r\n  domTokenListAttr(elm, attrName)._add(value);\r\n  return bind(removeAttrClass, elm, attrName, value);\r\n};\r\n\r\nexport const addRemoveAttrClass = (\r\n  elm: AttributeElementTarget,\r\n  attrName: string,\r\n  value: DomTokens,\r\n  add?: boolean\r\n) => {\r\n  (add ? addAttrClass : removeAttrClass)(elm, attrName, value);\r\n};\r\n\r\n/**\r\n * Treats the given attribute like the \"class\" attribute and checks if the given value is in it.\r\n * @param elm The element.\r\n * @param attrName The attributeName from which the content shall be checked.\r\n * @param value The value.\r\n * @returns True if the given attribute has the value in it, false otherwise.\r\n */\r\nexport const hasAttrClass = (\r\n  elm: AttributeElementTarget,\r\n  attrName: string,\r\n  value: DomTokens\r\n): boolean => domTokenListAttr(elm, attrName)._has(value);\r\n","import type { HTMLElementTarget } from './types';\r\nimport type { DomTokens } from './attribute';\r\nimport { each, from } from '../utils/array';\r\nimport { bind } from '../utils/function';\r\nimport { domTokenListAttr } from './attribute';\r\n\r\nconst createDomTokenListClass = (elm: HTMLElementTarget) => domTokenListAttr(elm, 'class');\r\n\r\n/**\r\n * Check whether the given element has the given class name(s).\r\n * @param elm The element.\r\n * @param className The class name(s).\r\n */\r\nexport const hasClass = (elm: HTMLElementTarget, className: DomTokens): boolean =>\r\n  createDomTokenListClass(elm)._has(className);\r\n\r\n/**\r\n * Removes the given class name(s) from the given element.\r\n * @param elm The element.\r\n * @param className The class name(s) which shall be removed. (separated by spaces)\r\n */\r\nexport const removeClass = (elm: HTMLElementTarget, className: DomTokens): void => {\r\n  createDomTokenListClass(elm)._remove(className);\r\n};\r\n\r\n/**\r\n * Adds the given class name(s) to the given element.\r\n * @param elm The element.\r\n * @param className The class name(s) which shall be added. (separated by spaces)\r\n * @returns A function which removes the added class name(s).\r\n */\r\nexport const addClass = (elm: HTMLElementTarget, className: DomTokens): (() => void) => {\r\n  createDomTokenListClass(elm)._add(className);\r\n  return bind(removeClass, elm, className);\r\n};\r\n\r\n/**\r\n * Takes two className strings, compares them and returns the difference as array.\r\n * @param classNameA ClassName A.\r\n * @param classNameB ClassName B.\r\n */\r\nexport const diffClass = (classNameA: string, classNameB: string) => {\r\n  const set = new Set<string>(classNameA ? classNameA.split(' ') : []);\r\n\r\n  each(classNameB ? classNameB.split(' ') : [], (className) => {\r\n    set.has(className) ? set.delete(className) : set.add(className);\r\n  });\r\n\r\n  return from(set);\r\n};\r\n","import { isElement } from '../utils/types';\r\nimport { push, from } from '../utils/array';\r\n\r\ntype InputElementType = Node | Element | false | null | undefined;\r\ntype OutputElementType = Node | Element | false | null | undefined;\r\n\r\n/**\r\n * Find all elements with the passed selector, outgoing (and including) the passed element or the document if no element was provided.\r\n * @param selector The selector which has to be searched by.\r\n * @param elm The element from which the search shall be outgoing.\r\n */\r\nconst find = (selector: string, elm?: InputElementType): Element[] => {\r\n  const arr: Array<Element> = [];\r\n  const rootElm = elm ? isElement(elm) && elm : document;\r\n\r\n  return rootElm ? push(arr, rootElm.querySelectorAll(selector)) : arr;\r\n};\r\n\r\n/**\r\n * Find the first element with the passed selector, outgoing (and including) the passed element or the document if no element was provided.\r\n * @param selector The selector which has to be searched by.\r\n * @param elm The element from which the search shall be outgoing.\r\n */\r\nconst findFirst = (selector: string, elm?: InputElementType): OutputElementType => {\r\n  const rootElm = elm ? isElement(elm) && elm : document;\r\n\r\n  return rootElm ? rootElm.querySelector(selector) : null;\r\n};\r\n\r\n/**\r\n * Determines whether the passed element is matching with the passed selector.\r\n * @param elm The element which has to be compared with the passed selector.\r\n * @param selector The selector which has to be compared with the passed element. Additional selectors: ':visible' and ':hidden'.\r\n */\r\nconst is = (elm: InputElementType, selector: string): boolean => {\r\n  if (isElement(elm)) {\r\n    return elm.matches(selector);\r\n  }\r\n  return false;\r\n};\r\n\r\nconst isBodyElement = (elm: InputElementType) => is(elm, 'body'); // don't do targetElement === ownerDocument.body in case initialization happens in memory\r\n\r\n/**\r\n * Returns the children (no text-nodes or comments) of the passed element which are matching the passed selector. An empty array is returned if the passed element is null.\r\n * @param elm The element of which the children shall be returned.\r\n * @param selector The selector which must match with the children elements.\r\n */\r\nconst children = (elm: InputElementType, selector?: string): ReadonlyArray<Element> => {\r\n  const childs: Array<Element> = [];\r\n\r\n  return isElement(elm)\r\n    ? push(\r\n        childs,\r\n        from(elm.children).filter((child) => (selector ? is(child, selector) : child))\r\n      )\r\n    : childs;\r\n};\r\n\r\n/**\r\n * Returns the childNodes (incl. text-nodes or comments etc.) of the passed element. An empty array is returned if the passed element is null.\r\n * @param elm The element of which the childNodes shall be returned.\r\n */\r\nconst contents = (elm: InputElementType): ReadonlyArray<ChildNode> =>\r\n  elm ? from(elm.childNodes) : [];\r\n\r\n/**\r\n * Returns the parent element of the passed element, or null if the passed element is null.\r\n * @param elm The element of which the parent element shall be returned.\r\n */\r\nconst parent = (elm: InputElementType): OutputElementType => elm && elm.parentElement;\r\n\r\n/**\r\n * Returns the closest element to the passed element which matches the given selector.\r\n * @param elm The element.\r\n * @param selector The selector.\r\n * @returns The closest element to the passed element which matches the given selector.\r\n */\r\nconst closest = (elm: InputElementType, selector: string): OutputElementType =>\r\n  isElement(elm) && elm.closest(selector);\r\n\r\n/**\r\n * Gets the focused element of the passed or default document.\r\n * @returns The focused element of the passed document.\r\n */\r\nconst getFocusedElement = (doc?: Document) => (doc || document).activeElement;\r\n\r\n/**\r\n * Determines whether the given element lies between two selectors in the DOM.\r\n * @param elm The element.\r\n * @param highBoundarySelector The high boundary selector.\r\n * @param deepBoundarySelector The deep boundary selector.\r\n */\r\nconst liesBetween = (\r\n  elm: InputElementType,\r\n  highBoundarySelector: string,\r\n  deepBoundarySelector: string\r\n): boolean => {\r\n  const closestHighBoundaryElm = closest(elm, highBoundarySelector);\r\n  const closestDeepBoundaryElm = elm && findFirst(deepBoundarySelector, closestHighBoundaryElm);\r\n  const deepBoundaryIsValid =\r\n    closest(closestDeepBoundaryElm, highBoundarySelector) === closestHighBoundaryElm;\r\n\r\n  return closestHighBoundaryElm && closestDeepBoundaryElm\r\n    ? closestHighBoundaryElm === elm ||\r\n        closestDeepBoundaryElm === elm ||\r\n        (deepBoundaryIsValid &&\r\n          closest(closest(elm, deepBoundarySelector), highBoundarySelector) !==\r\n            closestHighBoundaryElm)\r\n    : false;\r\n};\r\n\r\nexport {\r\n  find,\r\n  findFirst,\r\n  is,\r\n  isBodyElement,\r\n  children,\r\n  contents,\r\n  parent,\r\n  liesBetween,\r\n  closest,\r\n  getFocusedElement,\r\n};\r\n","import { isArrayLike } from '../utils/types';\r\nimport { each, from } from '../utils/array';\r\nimport { noop } from '../utils/noop';\r\nimport { parent } from './traversal';\r\n\r\ntype ManipulationTarget = Node | false | null | undefined;\r\ntype NodeCollection = ArrayLike<Node> | ManipulationTarget;\r\n\r\n/**\r\n * Removes the given Nodes from their parent.\r\n * @param nodes The Nodes which shall be removed.\r\n */\r\nexport const removeElements = (nodes: NodeCollection): void => {\r\n  if (isArrayLike(nodes)) {\r\n    each(from(nodes), (e) => removeElements(e));\r\n  } else if (nodes) {\r\n    const parentElm = parent(nodes);\r\n    parentElm && parentElm.removeChild(nodes);\r\n  }\r\n};\r\n\r\n/**\r\n * Inserts Nodes before the given preferredAnchor element.\r\n * @param parentElm The parent of the preferredAnchor element or the element which shall be the parent of the inserted Nodes.\r\n * @param preferredAnchor The element before which the Nodes shall be inserted or null if the elements shall be appended at the end.\r\n * @param insertedElms The Nodes which shall be inserted.\r\n * @returns A function which removes the inserted nodes.\r\n */\r\nconst before = (\r\n  parentElm: ManipulationTarget,\r\n  preferredAnchor: ManipulationTarget,\r\n  insertedElms: NodeCollection\r\n): (() => void) => {\r\n  if (insertedElms && parentElm) {\r\n    let anchor: ManipulationTarget = preferredAnchor;\r\n    let fragment: DocumentFragment | Node | null | undefined;\r\n\r\n    if (isArrayLike(insertedElms)) {\r\n      fragment = document.createDocumentFragment();\r\n\r\n      // append all insertedElms to the fragment and if one of these is the anchor, change the anchor\r\n      each(insertedElms, (insertedElm) => {\r\n        if (insertedElm === anchor) {\r\n          anchor = insertedElm.previousSibling;\r\n        }\r\n        fragment!.appendChild(insertedElm);\r\n      });\r\n    } else {\r\n      fragment = insertedElms;\r\n    }\r\n\r\n    // if the preferred anchor isn't null set it to a valid anchor\r\n    if (preferredAnchor) {\r\n      if (!anchor) {\r\n        anchor = parentElm.firstChild;\r\n      } else if (anchor !== preferredAnchor) {\r\n        anchor = anchor.nextSibling;\r\n      }\r\n    }\r\n\r\n    parentElm.insertBefore(fragment, anchor || null);\r\n    return () => removeElements(insertedElms);\r\n  }\r\n  return noop;\r\n};\r\n\r\n/**\r\n * Appends the given children at the end of the given Node.\r\n * @param node The Node to which the children shall be appended.\r\n * @param children The Nodes which shall be appended.\r\n * @returns A function which removes the inserted nodes.\r\n */\r\nexport const appendChildren = (node: ManipulationTarget, children: NodeCollection) =>\r\n  before(node, null, children);\r\n\r\n/**\r\n * Prepends the given children at the start of the given Node.\r\n * @param node The Node to which the children shall be prepended.\r\n * @param children The Nodes which shall be prepended.\r\n * @returns A function which removes the inserted nodes.\r\n */\r\nexport const prependChildren = (node: ManipulationTarget, children: NodeCollection) =>\r\n  before(node, node && node.firstChild, children);\r\n\r\n/**\r\n * Inserts the given Nodes before the given Node.\r\n * @param node The Node before which the given Nodes shall be inserted.\r\n * @param insertedNodes The Nodes which shall be inserted.\r\n * @returns A function which removes the inserted nodes.\r\n */\r\nexport const insertBefore = (node: ManipulationTarget, insertedNodes: NodeCollection) =>\r\n  before(parent(node), node, insertedNodes);\r\n\r\n/**\r\n * Inserts the given Nodes after the given Node.\r\n * @param node The Node after which the given Nodes shall be inserted.\r\n * @param insertedNodes The Nodes which shall be inserted.\r\n * @returns A function which removes the inserted nodes.\r\n */\r\nexport const insertAfter = (node: ManipulationTarget, insertedNodes: NodeCollection) =>\r\n  before(parent(node), node && node.nextSibling, insertedNodes);\r\n","import { each } from '../utils/array';\r\nimport { setAttrs } from './attribute';\r\nimport { contents } from './traversal';\r\nimport { removeElements } from './manipulation';\r\n\r\n/**\r\n * Creates a div DOM node.\r\n */\r\nexport const createDiv = (classNames?: string): HTMLDivElement => {\r\n  const div = document.createElement('div');\r\n  setAttrs(div, 'class', classNames);\r\n  return div;\r\n};\r\n\r\n/**\r\n * Creates DOM nodes modeled after the passed html string and returns the root dom nodes as a array.\r\n * @param html The html string after which the DOM nodes shall be created.\r\n */\r\nexport const createDOM = (html: string): ReadonlyArray<Node> => {\r\n  const createdDiv = createDiv();\r\n  createdDiv.innerHTML = html.trim();\r\n\r\n  return each(contents(createdDiv), (elm) => removeElements(elm));\r\n};\r\n","import type { PlainObject, StyleObject, StyleObjectKey, StyleObjectValue } from '~/typings';\r\nimport type { XY } from './offset';\r\nimport type { HTMLElementTarget } from './types';\r\nimport { wnd } from '../utils/alias';\r\nimport { each } from '../utils/array';\r\nimport { isString, isNumber, isObject } from '../utils/types';\r\n\r\nexport interface TRBL {\r\n  t: number;\r\n  r: number;\r\n  b: number;\r\n  l: number;\r\n}\r\n\r\nconst customCssPropRegex = /^--/;\r\n\r\nconst getCSSVal = (computedStyle: CSSStyleDeclaration, prop: StyleObjectKey): string =>\r\n  computedStyle.getPropertyValue(prop) || computedStyle[prop as any] || '';\r\n\r\nconst validFiniteNumber = (number: number) => {\r\n  const notNaN = number || 0;\r\n  return isFinite(notNaN) ? notNaN : 0;\r\n};\r\n\r\nconst parseToZeroOrNumber = (value?: string): number => validFiniteNumber(parseFloat(value || ''));\r\n\r\nexport const ratioToCssPercent = (ratio: number) =>\r\n  `${(validFiniteNumber(ratio) * 100).toFixed(3)}%`;\r\n\r\nexport const numberToCssPx = (number: number) => `${validFiniteNumber(number)}px`;\r\n\r\nexport function setStyles(elm: HTMLElementTarget, styles: StyleObject): void {\r\n  elm &&\r\n    each(styles, (rawValue: StyleObjectValue, name) => {\r\n      try {\r\n        const elmStyle = elm.style;\r\n        const value = isNumber(rawValue) ? numberToCssPx(rawValue) : (rawValue || '') + '';\r\n\r\n        if (customCssPropRegex.test(name)) {\r\n          elmStyle.setProperty(name, value);\r\n        } else {\r\n          elmStyle[name as any] = value;\r\n        }\r\n      } catch {}\r\n    });\r\n}\r\n\r\nexport function getStyles(\r\n  elm: HTMLElementTarget,\r\n  styles: Array<StyleObjectKey>,\r\n  pseudoElm?: string | null | undefined\r\n): Partial<Record<StyleObjectKey, string>>;\r\nexport function getStyles(\r\n  elm: HTMLElementTarget,\r\n  styles: StyleObjectKey,\r\n  pseudoElm?: string | null | undefined\r\n): string;\r\nexport function getStyles(\r\n  elm: HTMLElementTarget,\r\n  styles: Array<StyleObjectKey> | StyleObjectKey,\r\n  pseudoElm?: string | null | undefined\r\n): Partial<Record<StyleObjectKey, string>> | string {\r\n  const getSingleStyle = isString(styles);\r\n  let getStylesResult: string | PlainObject = getSingleStyle ? '' : {};\r\n\r\n  if (elm) {\r\n    const computedStyle = wnd.getComputedStyle(elm, pseudoElm) || elm.style;\r\n    getStylesResult = getSingleStyle\r\n      ? getCSSVal(computedStyle, styles)\r\n      : styles.reduce((result, key) => {\r\n          result[key] = getCSSVal(computedStyle, key);\r\n          return result;\r\n        }, getStylesResult as PlainObject);\r\n  }\r\n  return getStylesResult;\r\n}\r\n\r\nexport const getDirectionIsRTL = (elm: HTMLElementTarget): boolean =>\r\n  getStyles(elm, 'direction') === 'rtl';\r\n\r\n/**\r\n * Returns the top right bottom left values of the passed css property.\r\n * @param elm The element of which the values shall be returned.\r\n * @param propertyPrefix The css property prefix. (e.g. \"border\")\r\n * @param propertySuffix The css property suffix. (e.g. \"width\")\r\n */\r\nexport const topRightBottomLeft = (\r\n  elm?: HTMLElementTarget,\r\n  propertyPrefix?: string,\r\n  propertySuffix?: string\r\n): TRBL => {\r\n  const finalPrefix = propertyPrefix ? `${propertyPrefix}-` : '';\r\n  const finalSuffix = propertySuffix ? `-${propertySuffix}` : '';\r\n  const top = `${finalPrefix}top${finalSuffix}` as StyleObjectKey;\r\n  const right = `${finalPrefix}right${finalSuffix}` as StyleObjectKey;\r\n  const bottom = `${finalPrefix}bottom${finalSuffix}` as StyleObjectKey;\r\n  const left = `${finalPrefix}left${finalSuffix}` as StyleObjectKey;\r\n  const result = getStyles(elm, [top, right, bottom, left]);\r\n  return {\r\n    t: parseToZeroOrNumber(result[top]),\r\n    r: parseToZeroOrNumber(result[right]),\r\n    b: parseToZeroOrNumber(result[bottom]),\r\n    l: parseToZeroOrNumber(result[left]),\r\n  };\r\n};\r\n\r\nexport const getTrasformTranslateValue = (\r\n  value: string | number | XY<string | number>,\r\n  isHorizontal?: boolean\r\n) =>\r\n  `translate${\r\n    isObject(value) ? `(${value.x},${value.y})` : `${isHorizontal ? 'X' : 'Y'}(${value})`\r\n  }`;\r\n","import {\r\n  createDOM,\r\n  addClass,\r\n  appendChildren,\r\n  fractionalSize,\r\n  clientSize,\r\n  absoluteCoordinates,\r\n  offsetSize,\r\n  removeAttrs,\r\n  removeElements,\r\n  assignDeep,\r\n  createCache,\r\n  equalXY,\r\n  createEventListenerHub,\r\n  scrollT,\r\n  bind,\r\n  wnd,\r\n  noop,\r\n  scrollElementTo,\r\n  strHidden,\r\n  strOverflowX,\r\n  strOverflowY,\r\n  getStyles,\r\n  setStyles,\r\n  isBodyElement,\r\n} from '~/support';\r\nimport { classNameEnvironment, classNameEnvironmentScrollbarHidden } from '~/classnames';\r\nimport { defaultOptions } from '~/options';\r\nimport { getStaticPluginModuleInstance, scrollbarsHidingPluginName } from '~/plugins';\r\nimport type { XY, EventListener } from '~/support';\r\nimport type { Options, PartialOptions } from '~/options';\r\nimport type { ScrollbarsHidingPlugin } from '~/plugins';\r\nimport type { Initialization, PartialInitialization } from '~/initialization';\r\nimport type { StyleObjectKey } from './typings';\r\n\r\ntype EnvironmentEventArgs = {\r\n  r: [scrollbarSizeChanged?: boolean];\r\n};\r\n\r\nexport interface Env {\r\n  readonly _nativeScrollbarsSize: XY;\r\n  readonly _nativeScrollbarsOverlaid: XY<boolean>;\r\n  readonly _nativeScrollbarsHiding: boolean;\r\n  readonly _rtlScrollBehavior: { n: boolean; i: boolean };\r\n  readonly _scrollTimeline: boolean;\r\n  readonly _staticDefaultInitialization: Initialization;\r\n  readonly _staticDefaultOptions: Options;\r\n  _addResizeListener(listener: EventListener<EnvironmentEventArgs, 'r'>): () => void;\r\n  _getDefaultInitialization(): Initialization;\r\n  _setDefaultInitialization(newInitialization: PartialInitialization): Initialization;\r\n  _getDefaultOptions(): Options;\r\n  _setDefaultOptions(newDefaultOptions: PartialOptions): Options;\r\n}\r\n\r\nlet environmentInstance: Env;\r\n\r\nconst createEnvironment = (): Env => {\r\n  const getNativeScrollbarSize = (\r\n    measureElm: HTMLElement,\r\n    measureElmChild: HTMLElement,\r\n    clear?: boolean\r\n  ): XY => {\r\n    // fix weird safari issue where getComputedStyle returns all empty styles by appending twice\r\n    appendChildren(document.body, measureElm);\r\n    appendChildren(document.body, measureElm);\r\n\r\n    const cSize = clientSize(measureElm);\r\n    const oSize = offsetSize(measureElm);\r\n    const fSize = fractionalSize(measureElmChild);\r\n\r\n    clear && removeElements(measureElm);\r\n\r\n    return {\r\n      x: oSize.h - cSize.h + fSize.h,\r\n      y: oSize.w - cSize.w + fSize.w,\r\n    };\r\n  };\r\n\r\n  const getNativeScrollbarsHiding = (testElm: HTMLElement): boolean => {\r\n    let result = false;\r\n    const revertClass = addClass(testElm, classNameEnvironmentScrollbarHidden);\r\n    try {\r\n      result =\r\n        getStyles(testElm, 'scrollbar-width' as StyleObjectKey) === 'none' ||\r\n        getStyles(testElm, 'display', '::-webkit-scrollbar') === 'none';\r\n    } catch {}\r\n    revertClass();\r\n    return result;\r\n  };\r\n\r\n  const getRtlScrollBehavior = (\r\n    parentElm: HTMLElement,\r\n    childElm: HTMLElement\r\n  ): { i: boolean; n: boolean } => {\r\n    setStyles(parentElm, {\r\n      [strOverflowX]: strHidden,\r\n      [strOverflowY]: strHidden,\r\n      direction: 'rtl',\r\n    });\r\n    scrollElementTo(parentElm, { x: 0 });\r\n\r\n    const parentOffset = absoluteCoordinates(parentElm);\r\n    const childOffset = absoluteCoordinates(childElm);\r\n    scrollElementTo(parentElm, { x: -999 }); // https://github.com/KingSora/OverlayScrollbars/issues/187\r\n    const childOffsetAfterScroll = absoluteCoordinates(childElm);\r\n    return {\r\n      /**\r\n       * origin direction = determines if the zero scroll position is on the left or right side\r\n       * 'i' means 'invert' (i === true means that the axis must be inverted to be correct)\r\n       * true = on the left side\r\n       * false = on the right side\r\n       */\r\n      i: parentOffset.x === childOffset.x,\r\n      /**\r\n       * negative = determines if the maximum scroll is positive or negative\r\n       * 'n' means 'negate' (n === true means that the axis must be negated to be correct)\r\n       * true = negative\r\n       * false = positive\r\n       */\r\n      n: childOffset.x !== childOffsetAfterScroll.x,\r\n    };\r\n  };\r\n\r\n  // changes to this styles need to be reflected in the \"hide native scrollbars\" section of the structure styles\r\n  const envStyle = `.${classNameEnvironment}{scroll-behavior:auto!important;position:fixed;opacity:0;visibility:hidden;overflow:scroll;height:200px;width:200px;z-index:-1}.${classNameEnvironment} div{width:200%;height:200%;margin:10px 0}.${classNameEnvironmentScrollbarHidden}{scrollbar-width:none!important}.${classNameEnvironmentScrollbarHidden}::-webkit-scrollbar,.${classNameEnvironmentScrollbarHidden}::-webkit-scrollbar-corner{appearance:none!important;display:none!important;width:0!important;height:0!important}`;\r\n  const envDOM = createDOM(\r\n    `<div class=\"${classNameEnvironment}\"><div></div><style>${envStyle}</style></div>`\r\n  );\r\n  const envElm = envDOM[0] as HTMLElement;\r\n  const envChildElm = envElm.firstChild as HTMLElement;\r\n  const [addEvent, , triggerEvent] = createEventListenerHub<EnvironmentEventArgs>();\r\n  const [updateNativeScrollbarSizeCache, getNativeScrollbarSizeCache] = createCache(\r\n    {\r\n      _initialValue: getNativeScrollbarSize(envElm, envChildElm),\r\n      _equal: equalXY,\r\n    },\r\n    bind(getNativeScrollbarSize, envElm, envChildElm, true)\r\n  );\r\n  const [nativeScrollbarsSize] = getNativeScrollbarSizeCache();\r\n  const nativeScrollbarsHiding = getNativeScrollbarsHiding(envElm);\r\n  const nativeScrollbarsOverlaid = {\r\n    x: nativeScrollbarsSize.x === 0,\r\n    y: nativeScrollbarsSize.y === 0,\r\n  };\r\n  const staticDefaultInitialization: Initialization = {\r\n    elements: {\r\n      host: null,\r\n      padding: !nativeScrollbarsHiding,\r\n      viewport: (target) => nativeScrollbarsHiding && isBodyElement(target) && target,\r\n      content: false,\r\n    },\r\n    scrollbars: {\r\n      slot: true,\r\n    },\r\n    cancel: {\r\n      nativeScrollbarsOverlaid: false,\r\n      body: null,\r\n    },\r\n  };\r\n  const staticDefaultOptions = assignDeep({}, defaultOptions);\r\n  const getDefaultOptions = bind(\r\n    assignDeep as typeof assignDeep<Options, Options>,\r\n    {} as Options,\r\n    staticDefaultOptions\r\n  );\r\n  const getDefaultInitialization = bind(\r\n    assignDeep as typeof assignDeep<Initialization, Initialization>,\r\n    {} as Initialization,\r\n    staticDefaultInitialization\r\n  );\r\n\r\n  const env: Env = {\r\n    _nativeScrollbarsSize: nativeScrollbarsSize,\r\n    _nativeScrollbarsOverlaid: nativeScrollbarsOverlaid,\r\n    _nativeScrollbarsHiding: nativeScrollbarsHiding,\r\n    _scrollTimeline: !!scrollT,\r\n    _rtlScrollBehavior: getRtlScrollBehavior(envElm, envChildElm),\r\n    _addResizeListener: bind(addEvent, 'r'),\r\n    _getDefaultInitialization: getDefaultInitialization,\r\n    _setDefaultInitialization: (newInitializationStrategy) =>\r\n      assignDeep(staticDefaultInitialization, newInitializationStrategy) &&\r\n      getDefaultInitialization(),\r\n    _getDefaultOptions: getDefaultOptions,\r\n    _setDefaultOptions: (newDefaultOptions) =>\r\n      assignDeep(staticDefaultOptions, newDefaultOptions) && getDefaultOptions(),\r\n    _staticDefaultInitialization: assignDeep({}, staticDefaultInitialization),\r\n    _staticDefaultOptions: assignDeep({}, staticDefaultOptions),\r\n  };\r\n\r\n  removeAttrs(envElm, 'style');\r\n  removeElements(envElm);\r\n\r\n  // needed in case content has css viewport units\r\n  wnd.addEventListener('resize', () => {\r\n    let scrollbarSizeChanged;\r\n    if (!nativeScrollbarsHiding && (!nativeScrollbarsOverlaid.x || !nativeScrollbarsOverlaid.y)) {\r\n      const scrollbarsHidingPlugin = getStaticPluginModuleInstance<typeof ScrollbarsHidingPlugin>(\r\n        scrollbarsHidingPluginName\r\n      );\r\n      const zoomFn = scrollbarsHidingPlugin ? scrollbarsHidingPlugin._envWindowZoom() : noop;\r\n      scrollbarSizeChanged = !!zoomFn(env, updateNativeScrollbarSizeCache);\r\n    }\r\n\r\n    triggerEvent('r', [scrollbarSizeChanged]);\r\n  });\r\n\r\n  return env;\r\n};\r\n\r\nconst getEnvironment = (): Env => {\r\n  if (!environmentInstance) {\r\n    environmentInstance = createEnvironment();\r\n  }\r\n  return environmentInstance;\r\n};\r\n\r\nexport { getEnvironment };\r\n","import type { HTMLElementTarget } from './types';\r\nimport { getStyles } from './style';\r\nimport { mathRound, wnd } from '../utils/alias';\r\nimport { bind } from '../utils/function';\r\nimport { strHeight, strWidth } from '../utils/strings';\r\n\r\nexport interface WH<T = number> {\r\n  w: T;\r\n  h: T;\r\n}\r\n\r\nconst elementHasDimensions = (elm: HTMLElement): boolean =>\r\n  !!(elm.offsetWidth || elm.offsetHeight || elm.getClientRects().length);\r\nconst zeroObj: WH = {\r\n  w: 0,\r\n  h: 0,\r\n};\r\n\r\nconst getElmWidthHeightProperty = <E extends HTMLElement | Window>(\r\n  property: E extends HTMLElement ? 'client' | 'offset' | 'scroll' : 'inner',\r\n  elm: E | false | null | undefined\r\n): Readonly<WH> =>\r\n  elm\r\n    ? {\r\n        w: (elm as any)[`${property}Width`],\r\n        h: (elm as any)[`${property}Height`],\r\n      }\r\n    : zeroObj;\r\n\r\n/**\r\n * Returns the window inner- width and height.\r\n */\r\nexport const windowSize = (customWnd?: Window): Readonly<WH> =>\r\n  getElmWidthHeightProperty('inner', customWnd || wnd);\r\n\r\n/**\r\n * Returns the scroll- width and height of the passed element. If the element is null the width and height values are 0.\r\n * @param elm The element of which the scroll- width and height shall be returned.\r\n */\r\nexport const offsetSize = bind(getElmWidthHeightProperty<HTMLElement>, 'offset') satisfies (\r\n  elm: HTMLElementTarget\r\n) => Readonly<WH>;\r\n\r\n/**\r\n * Returns the client- width and height of the passed element. If the element is null the width and height values are 0.\r\n * @param elm The element of which the client- width and height shall be returned.\r\n */\r\nexport const clientSize = bind(getElmWidthHeightProperty<HTMLElement>, 'client') satisfies (\r\n  elm: HTMLElementTarget\r\n) => Readonly<WH>;\r\n\r\n/**\r\n * Returns the client- width and height of the passed element. If the element is null the width and height values are 0.\r\n * @param elm The element of which the client- width and height shall be returned.\r\n */\r\nexport const scrollSize = bind(getElmWidthHeightProperty<HTMLElement>, 'scroll') satisfies (\r\n  elm: HTMLElementTarget\r\n) => Readonly<WH>;\r\n\r\n/**\r\n * Returns the fractional- width and height of the passed element. If the element is null the width and height values are 0.\r\n * @param elm The element of which the fractional- width and height shall be returned.\r\n */\r\nexport const fractionalSize = (elm: HTMLElementTarget): Readonly<WH> => {\r\n  const cssWidth = parseFloat(getStyles(elm, strWidth)) || 0;\r\n  const cssHeight = parseFloat(getStyles(elm, strHeight)) || 0;\r\n  return {\r\n    w: cssWidth - mathRound(cssWidth),\r\n    h: cssHeight - mathRound(cssHeight),\r\n  };\r\n};\r\n\r\n/**\r\n * Returns the BoundingClientRect of the passed element.\r\n * @param elm The element of which the BoundingClientRect shall be returned.\r\n */\r\nexport const getBoundingClientRect = (elm: HTMLElement): DOMRect => elm.getBoundingClientRect();\r\n\r\n/**\r\n * Determines whether the passed element has any dimensions.\r\n * @param elm The element.\r\n */\r\nexport const hasDimensions = (elm: HTMLElementTarget): boolean =>\r\n  !!elm && elementHasDimensions(elm);\r\n\r\n/**\r\n * Determines whether the passed DOM Rect has any dimensions.\r\n */\r\nexport const domRectHasDimensions = (rect?: DOMRectReadOnly | false | null) =>\r\n  !!(rect && (rect[strHeight] || rect[strWidth]));\r\n\r\n/**\r\n * Determines whether current DOM Rect has appeared according the the previous dom rect..\r\n * @param currContentRect The current DOM Rect.\r\n * @param prevContentRect The previous DOM Rect.\r\n * @returns Whether the dom rect appeared.\r\n */\r\nexport const domRectAppeared = (\r\n  currContentRect: DOMRectReadOnly | false | null | undefined,\r\n  prevContentRect: DOMRectReadOnly | false | null | undefined\r\n) => {\r\n  const rectHasDimensions = domRectHasDimensions(currContentRect);\r\n  const rectHadDimensions = domRectHasDimensions(prevContentRect);\r\n  return !rectHadDimensions && rectHasDimensions;\r\n};\r\n","import type { DomTokens } from './attribute';\r\nimport { each, runEachAndClear } from '../utils/array';\r\nimport { bind } from '../utils/function';\r\nimport { keys } from '../utils';\r\nimport { getDomTokensArray } from './attribute';\r\n\r\nexport interface EventListenerOptions {\r\n  _capture?: boolean;\r\n  _passive?: boolean;\r\n  _once?: boolean;\r\n}\r\n\r\nexport type EventListenerMap = {\r\n  [eventNames: string]: (event: Event) => any;\r\n};\r\n\r\n/**\r\n * Removes the passed event listener for the passed event names with the passed options.\r\n * @param target The element from which the listener shall be removed.\r\n * @param eventNames The eventsnames for which the listener shall be removed.\r\n * @param listener The listener which shall be removed.\r\n * @param capture The options of the removed listener.\r\n */\r\nexport const removeEventListener = <T extends Event = Event>(\r\n  target: EventTarget,\r\n  eventNames: DomTokens,\r\n  listener: (event: T) => any,\r\n  capture?: boolean\r\n): void => {\r\n  each(getDomTokensArray(eventNames), (eventName) => {\r\n    target.removeEventListener(eventName, listener as EventListener, capture);\r\n  });\r\n};\r\n\r\n/**\r\n * Adds the passed event listener for the passed event names with the passed options.\r\n * @param target The element to which the listener shall be added.\r\n * @param eventNames The eventsnames for which the listener shall be called.\r\n * @param listener The listener which is called on the eventnames.\r\n * @param options The options of the added listener.\r\n */\r\nexport const addEventListener = <T extends Event = Event>(\r\n  target: EventTarget,\r\n  eventNames: DomTokens,\r\n  listener: (event: T) => any,\r\n  options?: EventListenerOptions\r\n): (() => void) => {\r\n  const passive = (options && options._passive) ?? true;\r\n  const capture = (options && options._capture) || false;\r\n  const once = (options && options._once) || false;\r\n  const nativeOptions: AddEventListenerOptions = {\r\n    passive,\r\n    capture,\r\n  };\r\n\r\n  return bind(\r\n    runEachAndClear,\r\n    getDomTokensArray(eventNames).map((eventName) => {\r\n      const finalListener = (\r\n        once\r\n          ? (evt: T) => {\r\n              removeEventListener(target, eventName, finalListener, capture);\r\n              listener(evt);\r\n            }\r\n          : listener\r\n      ) as EventListener;\r\n\r\n      target.addEventListener(eventName, finalListener, nativeOptions);\r\n      return bind(removeEventListener, target, eventName, finalListener, capture);\r\n    })\r\n  );\r\n};\r\n\r\n/**\r\n * Adds the passed event listeners for the passed event names with the passed options.\r\n * @param target The element to which the listener shall be added.\r\n * @param eventListenerMap A map which descirbes the event names and event listeners to be added.\r\n * @param options The options of the added listeners.\r\n */\r\nexport const addEventListeners = (\r\n  target: EventTarget,\r\n  eventListenerMap: EventListenerMap,\r\n  options?: EventListenerOptions\r\n): (() => void) =>\r\n  bind(\r\n    runEachAndClear,\r\n    keys(eventListenerMap).map((eventNames) =>\r\n      addEventListener(target, eventNames, eventListenerMap[eventNames], options)\r\n    )\r\n  );\r\n\r\n/**\r\n * Shorthand for the stopPropagation event Method.\r\n * @param evt The event of which the stopPropagation method shall be called.\r\n */\r\nexport const stopPropagation = (evt: Event): void => evt.stopPropagation();\r\n\r\n/**\r\n * Shorthand for the preventDefault event Method.\r\n * @param evt The event of which the preventDefault method shall be called.\r\n */\r\nexport const preventDefault = (evt: Event): void => evt.preventDefault();\r\n\r\n/**\r\n * Shorthand for the stopPropagation and preventDefault event Method.\r\n * @param evt The event of which the stopPropagation and preventDefault methods shall be called.\r\n */\r\nexport const stopAndPrevent = (evt: Event): void =>\r\n  (stopPropagation(evt) as undefined) || (preventDefault(evt) as undefined);\r\n","import type { HTMLElementTarget } from './types';\r\nimport { getBoundingClientRect } from './dimensions';\r\nimport { wnd } from '../utils/alias';\r\n\r\nexport interface XY<T = number> {\r\n  x: T;\r\n  y: T;\r\n}\r\n\r\nconst zeroObj: XY = {\r\n  x: 0,\r\n  y: 0,\r\n};\r\n\r\n/**\r\n * Returns the offset- left and top coordinates of the passed element relative to the document. If the element is null the top and left values are 0.\r\n * @param elm The element of which the offset- top and left coordinates shall be returned.\r\n */\r\nexport const absoluteCoordinates = (elm: HTMLElementTarget): Readonly<XY> => {\r\n  const rect = elm && getBoundingClientRect(elm);\r\n  return rect\r\n    ? {\r\n        x: rect.left + wnd.scrollX,\r\n        y: rect.top + wnd.scrollY,\r\n      }\r\n    : zeroObj;\r\n};\r\n\r\n/**\r\n * Returns the offset- left and top coordinates of the passed element. If the element is null the top and left values are 0.\r\n * @param elm The element of which the offset- top and left coordinates shall be returned.\r\n */\r\nexport const offsetCoordinates = (elm: HTMLElementTarget): Readonly<XY> =>\r\n  elm\r\n    ? {\r\n        x: elm.offsetLeft,\r\n        y: elm.offsetTop,\r\n      }\r\n    : zeroObj;\r\n","import type { Env } from '~/environment';\r\nimport type { XY } from './offset';\r\nimport { capNumber, isNumber } from '../utils';\r\n\r\nexport type RTLScrollBehavior = Env['_rtlScrollBehavior'] | false | null | undefined;\r\n\r\n/**\r\n * Transforms a normalized scroll position to a RTL compatilbe scroll position value or vice versa (depending on the input format).\r\n * @param scrollPosition The scroll position value.\r\n * @param overflowAmount The (normalized) overflow amount value.\r\n * @param rtlScrollBehavior The RTL scroll behavior or `falsy` if the rtl scroll behavior doesn't apply.\r\n * @returns The input scroll position, just converted.\r\n * If the input `scrollPosition` is normalized the raw (RTL Compatible) format is returned.\r\n * If the input `scrollPosition` is raw (RTL Compatible) the normalized format is returned.\r\n */\r\nexport const convertScrollPosition = (\r\n  scrollPosition: number,\r\n  overflowAmount: number,\r\n  rtlScrollBehavior?: RTLScrollBehavior\r\n) =>\r\n  rtlScrollBehavior\r\n    ? rtlScrollBehavior.n\r\n      ? -scrollPosition + 0 // +0 avoids negative zero (-0) as a result\r\n      : rtlScrollBehavior.i\r\n      ? overflowAmount - scrollPosition\r\n      : scrollPosition\r\n    : scrollPosition;\r\n\r\n/**\r\n * Gets the raw (RTL compatilbe) scroll boundaries from the normalized overflow amount.\r\n * @param overflowAmount The normalzed overflow amount value.\r\n * @param rtlScrollBehavior The RTL scroll behavior or `falsy` if the rtl scroll behavior doesn't apply.\r\n * @returns The raw (RTL compatible) scroll boundaries. (min value will scroll to start (0%) and max will scroll to end (100%))\r\n */\r\nexport const getRawScrollBounds = (\r\n  overflowAmount: number,\r\n  rtlScrollBehavior?: RTLScrollBehavior\r\n): [min: number, max: number] => [\r\n  convertScrollPosition(0, overflowAmount, rtlScrollBehavior),\r\n  convertScrollPosition(overflowAmount, overflowAmount, rtlScrollBehavior),\r\n];\r\n\r\n/**\r\n * Gets the scroll ratio of the current raw (RTL compatilbe) scroll position.\r\n * @param rawScrollPosition The raw (RTL compatible) scroll position.\r\n * @param overflowAmount The normalized overflow amount.\r\n * @param rtlScrollBehavior The RTL scroll behavior or `falsy` if the rtl scroll behavior doesn't apply.\r\n * @returns The scroll ratio of the current scroll position 0..1.\r\n */\r\nexport const getRawScrollRatio = (\r\n  rawScrollPosition: number,\r\n  overflowAmount: number,\r\n  rtlScrollBehavior?: RTLScrollBehavior\r\n) =>\r\n  capNumber(\r\n    0,\r\n    1,\r\n    convertScrollPosition(rawScrollPosition, overflowAmount, rtlScrollBehavior) / overflowAmount ||\r\n      0\r\n  );\r\n\r\n/**\r\n * Scroll the passed element to the passed position.\r\n * @param elm The element to be scrolled.\r\n * @param position The scroll position.\r\n */\r\nexport const scrollElementTo = (\r\n  elm: HTMLElement,\r\n  position: Partial<XY> | number | false | null | undefined\r\n): void => {\r\n  const { x, y } = isNumber(position) ? { x: position, y: position } : position || {};\r\n  isNumber(x) && (elm.scrollLeft = x);\r\n  isNumber(y) && (elm.scrollTop = y);\r\n};\r\n\r\n/**\r\n * Scroll the passed element to the passed position.\r\n * @param elm The element to be scrolled.\r\n * @param position The scroll position.\r\n */\r\nexport const getElmentScroll = (elm: HTMLElement): Readonly<XY> => ({\r\n  x: elm.scrollLeft,\r\n  y: elm.scrollTop,\r\n});\r\n","import { isBoolean, isFunction, isString } from './utils/types';\r\nimport { keys } from './utils/object';\r\nimport { each, push, from, isEmptyArray, runEachAndClear, createOrKeepArray } from './utils/array';\r\nimport { bind } from './utils/function';\r\n\r\nexport type EventListener<EventArgs extends Record<string, any[]>, N extends keyof EventArgs> = (\r\n  ...args: EventArgs[N]\r\n) => void;\r\n\r\nexport type EventListeners<EventArgs extends Record<string, any[]>> = {\r\n  [K in keyof EventArgs]?: EventListener<EventArgs, K> | EventListener<EventArgs, K>[] | null;\r\n};\r\n\r\nexport type RemoveEvent<EventArgs extends Record<string, any[]>> = {\r\n  <N extends keyof EventArgs>(name?: N, listener?: EventListener<EventArgs, N>): void;\r\n  <N extends keyof EventArgs>(name?: N, listener?: EventListener<EventArgs, N>[]): void;\r\n  <N extends keyof EventArgs>(\r\n    name?: N,\r\n    listener?: EventListener<EventArgs, N> | EventListener<EventArgs, N>[]\r\n  ): void;\r\n};\r\n\r\nexport type AddEvent<EventArgs extends Record<string, any[]>> = {\r\n  (eventListeners: EventListeners<EventArgs>, pure?: boolean): () => void;\r\n  <N extends keyof EventArgs>(name: N, listener: EventListener<EventArgs, N>): () => void;\r\n  <N extends keyof EventArgs>(name: N, listener: EventListener<EventArgs, N>[]): () => void;\r\n  <N extends keyof EventArgs>(\r\n    nameOrEventListeners: N | EventListeners<EventArgs>,\r\n    listener?: EventListener<EventArgs, N> | EventListener<EventArgs, N>[] | boolean\r\n  ): () => void;\r\n};\r\n\r\nexport type TriggerEvent<EventArgs extends Record<string, any[]>> = {\r\n  <N extends keyof EventArgs>(name: N, args: EventArgs[N]): void;\r\n};\r\n\r\nexport type EventListenerHub<EventArgs extends Record<string, any[]>> = [\r\n  AddEvent<EventArgs>,\r\n  RemoveEvent<EventArgs>,\r\n  TriggerEvent<EventArgs>\r\n];\r\n\r\nconst manageListener = <EventArgs extends Record<string, any[]>, N extends keyof EventArgs>(\r\n  callback: (listener?: EventListener<EventArgs, N>) => void,\r\n  listener?: EventListener<EventArgs, N> | EventListener<EventArgs, N>[]\r\n) => {\r\n  each(createOrKeepArray(listener), callback);\r\n};\r\n\r\nexport const createEventListenerHub = <EventArgs extends Record<string, any[]>>(\r\n  initialEventListeners?: EventListeners<EventArgs>\r\n): EventListenerHub<EventArgs> => {\r\n  const events = new Map<keyof EventArgs, Set<EventListener<EventArgs, keyof EventArgs>>>();\r\n\r\n  const removeEvent: RemoveEvent<EventArgs> = (name, listener) => {\r\n    if (name) {\r\n      const eventSet = events.get(name);\r\n      manageListener((currListener) => {\r\n        if (eventSet) {\r\n          eventSet[currListener ? 'delete' : 'clear'](currListener! as any);\r\n        }\r\n      }, listener);\r\n    } else {\r\n      events.forEach((eventSet) => {\r\n        eventSet.clear();\r\n      });\r\n      events.clear();\r\n    }\r\n  };\r\n\r\n  const addEvent: AddEvent<EventArgs> = (\r\n    nameOrEventListeners: keyof EventArgs | EventListeners<EventArgs>,\r\n    listenerOrPure?:\r\n      | EventListener<EventArgs, keyof EventArgs>\r\n      | EventListener<EventArgs, keyof EventArgs>[]\r\n      | boolean\r\n  ) => {\r\n    if (isString(nameOrEventListeners)) {\r\n      const eventSet = events.get(nameOrEventListeners) || new Set();\r\n      events.set(nameOrEventListeners, eventSet);\r\n\r\n      manageListener((currListener) => {\r\n        isFunction(currListener) && eventSet.add(currListener);\r\n      }, listenerOrPure as Exclude<typeof listenerOrPure, boolean>);\r\n\r\n      return bind(\r\n        removeEvent,\r\n        nameOrEventListeners,\r\n        listenerOrPure as Exclude<typeof listenerOrPure, boolean>\r\n      );\r\n    }\r\n    if (isBoolean(listenerOrPure) && listenerOrPure) {\r\n      removeEvent();\r\n    }\r\n\r\n    const eventListenerKeys = keys(nameOrEventListeners) as (keyof EventListeners<EventArgs>)[];\r\n    const offFns: (() => void)[] = [];\r\n    each(eventListenerKeys, (key) => {\r\n      const eventListener = (nameOrEventListeners as EventListeners<EventArgs>)[key];\r\n      eventListener && push(offFns, addEvent(key, eventListener));\r\n    });\r\n\r\n    return bind(runEachAndClear, offFns);\r\n  };\r\n\r\n  const triggerEvent: TriggerEvent<EventArgs> = (name, args) => {\r\n    each(from(events.get(name)), (event) => {\r\n      if (args && !isEmptyArray(args)) {\r\n        (event as (...eventArgs: EventArgs[keyof EventArgs]) => void).apply(0, args);\r\n      } else {\r\n        (event as () => void)();\r\n      }\r\n    });\r\n  };\r\n\r\n  addEvent(initialEventListeners || {});\r\n\r\n  return [addEvent, removeEvent, triggerEvent];\r\n};\r\n","import {\r\n  assignDeep,\r\n  each,\r\n  isObject,\r\n  keys,\r\n  isArray,\r\n  hasOwnProperty,\r\n  isFunction,\r\n  isEmptyObject,\r\n  concat,\r\n} from '~/support';\r\nimport type { DeepPartial, DeepReadonly } from '~/typings';\r\n\r\nexport type OptionsField = string;\r\n\r\nexport type OptionsPrimitiveValue =\r\n  | boolean\r\n  | number\r\n  | string\r\n  | Array<any>\r\n  | ReadonlyArray<any>\r\n  | [any]\r\n  | [any, ...any[]]\r\n  | ((this: any, ...args: any[]) => any)\r\n  | null;\r\n\r\nexport type OptionsObject = {\r\n  [field: OptionsField]: OptionsPrimitiveValue | OptionsObject;\r\n};\r\n\r\ntype OptionsObjectFieldNameTuples<T> = T extends OptionsPrimitiveValue\r\n  ? []\r\n  : {\r\n      [K in Extract<keyof T, OptionsField>]: [K, ...OptionsObjectFieldNameTuples<T[K]>];\r\n    }[Extract<keyof T, OptionsField>];\r\n\r\ntype JoinOptionsObjectFieldTuples<\r\n  T extends OptionsField[],\r\n  IncompletePath extends boolean = false\r\n> = T extends [infer F]\r\n  ? F\r\n  : T extends [infer F, ...infer R]\r\n  ? F extends OptionsField\r\n    ?\r\n        | (IncompletePath extends true ? F : never)\r\n        | `${F}.${JoinOptionsObjectFieldTuples<Extract<R, OptionsField[]>>}`\r\n    : never\r\n  : OptionsField;\r\n\r\ntype SplitJoinedOptionsObjectFieldTuples<S extends string> = string extends S\r\n  ? OptionsField[]\r\n  : S extends ''\r\n  ? []\r\n  : S extends `${infer T}.${infer U}`\r\n  ? [T, ...SplitJoinedOptionsObjectFieldTuples<U>]\r\n  : [S];\r\n\r\ntype OptionsObjectFieldTuplesType<O, T extends OptionsField[]> = T extends [infer F]\r\n  ? F extends keyof O\r\n    ? O[F]\r\n    : never\r\n  : T extends [infer F, ...infer R]\r\n  ? F extends keyof O\r\n    ? O[F] extends OptionsPrimitiveValue\r\n      ? O[F]\r\n      : OptionsObjectFieldTuplesType<O[F], Extract<R, OptionsField[]>>\r\n    : never\r\n  : never;\r\n\r\ntype OptionsObjectFieldPath<O extends OptionsObject> = JoinOptionsObjectFieldTuples<\r\n  OptionsObjectFieldNameTuples<O>,\r\n  true\r\n>;\r\n\r\ntype OptionsObjectFieldPathType<\r\n  O extends OptionsObject,\r\n  P extends string\r\n> = OptionsObjectFieldTuplesType<O, SplitJoinedOptionsObjectFieldTuples<P>>;\r\n\r\nconst opsStringify = (value: any) =>\r\n  JSON.stringify(value, (_, val) => {\r\n    if (isFunction(val)) {\r\n      throw 0;\r\n    }\r\n    return val;\r\n  });\r\n\r\nconst getPropByPath = <T>(obj: any, path: string): T =>\r\n  obj\r\n    ? `${path}`\r\n        .split('.')\r\n        .reduce((o, prop) => (o && hasOwnProperty(o, prop) ? o[prop] : undefined), obj)\r\n    : undefined;\r\n\r\n/**\r\n * The overflow behavior of an axis.\r\n */\r\nexport type OverflowBehavior =\r\n  /** No scrolling is possible and the content is clipped. */\r\n  | 'hidden'\r\n  /** No scrolling is possible and the content isn't clipped. */\r\n  | 'visible'\r\n  /** Scrolling is possible if there is an overflow. */\r\n  | 'scroll'\r\n  /**\r\n   * If the other axis has no overflow the behavior is similar to `visible`.\r\n   * If the other axis has overflow the behavior is similar to `hidden`.\r\n   */\r\n  | 'visible-hidden'\r\n  /**\r\n   * If the other axis has no overflow the behavior is similar to `visible`.\r\n   * If the other axis has overflow the behavior is similar to `scroll`.\r\n   */\r\n  | 'visible-scroll';\r\n\r\n/**\r\n * The scrollbars visibility behavior.\r\n */\r\nexport type ScrollbarsVisibilityBehavior =\r\n  /** The scrollbars are always visible. */\r\n  | 'visible'\r\n  /** The scrollbars are always hidden. */\r\n  | 'hidden'\r\n  /** The scrollbars are only visibile if there is overflow. */\r\n  | 'auto';\r\n\r\n/**\r\n * The scrollbars auto hide behavior\r\n */\r\nexport type ScrollbarsAutoHideBehavior =\r\n  /** The scrollbars are never hidden automatically. */\r\n  | 'never'\r\n  /** The scrollbars are hidden unless the user scrolls. */\r\n  | 'scroll'\r\n  /** The scrollbars are hidden unless the pointer moves in the host element or the user scrolls. */\r\n  | 'move'\r\n  /** The scrollbars are hidden if the pointer leaves the host element or unless the user scrolls. */\r\n  | 'leave';\r\n\r\n/**\r\n * The options of a OverlayScrollbars instance.\r\n */\r\nexport type Options = {\r\n  /** Whether the padding shall be absolute. */\r\n  paddingAbsolute: boolean;\r\n  /** Whether to show the native scrollbars. Has only an effect it the native scrollbars are overlaid. */\r\n  showNativeOverlaidScrollbars: boolean;\r\n  /** Customizes the automatic update behavior. */\r\n  update: {\r\n    /**\r\n     * The given Event(s) from the elements with the given selector(s) will trigger an update.\r\n     * Useful for everything the MutationObserver and ResizeObserver can't detect\r\n     * e.g.: and Images `load` event or the `transitionend` / `animationend` events.\r\n     */\r\n    elementEvents: Array<[elementSelector: string, eventNames: string]> | null;\r\n    /**\r\n     * The debounce which is used to detect content changes.\r\n     * If a tuple is provided you can customize the `timeout` and the `maxWait` in milliseconds.\r\n     * If a single number customizes only the `timeout`.\r\n     *\r\n     * If the `timeout` is `0`, a debounce still exists. (its executed via `requestAnimationFrame`).\r\n     */\r\n    debounce: [timeout: number, maxWait: number] | number | null;\r\n    /**\r\n     * HTML attributes which will trigger an update if they're changed.\r\n     * Basic attributes like `id`, `class`, `style` etc. are always observed and doesn't have to be added explicitly.\r\n     */\r\n    attributes: string[] | null;\r\n    /**\r\n     * A function which makes it possible to ignore a content mutation or null if nothing shall be ignored.\r\n     * @param mutation The MutationRecord from the MutationObserver.\r\n     * @returns A Truthy value if the mutation shall be ignored, a falsy value otherwise.\r\n     */\r\n    ignoreMutation: ((mutation: MutationRecord) => any) | null;\r\n  };\r\n  /** Customizes the overflow behavior per axis. */\r\n  overflow: {\r\n    /** The overflow behavior of the horizontal (x) axis. */\r\n    x: OverflowBehavior;\r\n    /** The overflow behavior of the vertical (y) axis. */\r\n    y: OverflowBehavior;\r\n  };\r\n  /** Customizes appearance of the scrollbars. */\r\n  scrollbars: {\r\n    /**\r\n     * The scrollbars theme.\r\n     * The theme value will be added as `class` to all `scrollbar` elements of the instance.\r\n     */\r\n    theme: string | null;\r\n    /** The scrollbars visibility behavior. */\r\n    visibility: ScrollbarsVisibilityBehavior;\r\n    /** The scrollbars auto hide behavior. */\r\n    autoHide: ScrollbarsAutoHideBehavior;\r\n    /** The scrollbars auto hide delay in milliseconds. */\r\n    autoHideDelay: number;\r\n    /** Whether the scrollbars auto hide behavior is suspended until a scroll happened. */\r\n    autoHideSuspend: boolean;\r\n    /** Whether its possible to drag the handle of a scrollbar to scroll the viewport. */\r\n    dragScroll: boolean;\r\n    /** Whether its possible to click the track of a scrollbar to scroll the viewport. */\r\n    clickScroll: boolean;\r\n    /**\r\n     * An array of pointer types which shall be supported.\r\n     * Common pointer types are: `mouse`, `pen` and `touch`.\r\n     * https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent/pointerType\r\n     */\r\n    pointers: string[] | null;\r\n  };\r\n};\r\n\r\nexport type ReadonlyOptions = DeepReadonly<Options>;\r\n\r\nexport type PartialOptions = DeepPartial<Options>;\r\n\r\nexport type OptionsCheckFn<O extends OptionsObject> = <P extends OptionsObjectFieldPath<O>>(\r\n  path: P\r\n) => [value: OptionsObjectFieldPathType<O, P>, changed: boolean];\r\n\r\nexport const defaultOptions: ReadonlyOptions = {\r\n  paddingAbsolute: false,\r\n  showNativeOverlaidScrollbars: false,\r\n  update: {\r\n    elementEvents: [['img', 'load']],\r\n    debounce: [0, 33],\r\n    attributes: null,\r\n    ignoreMutation: null,\r\n  },\r\n  overflow: {\r\n    x: 'scroll',\r\n    y: 'scroll',\r\n  },\r\n  scrollbars: {\r\n    theme: 'os-theme-dark',\r\n    visibility: 'auto',\r\n    autoHide: 'never',\r\n    autoHideDelay: 1300,\r\n    autoHideSuspend: false,\r\n    dragScroll: true,\r\n    clickScroll: false,\r\n    pointers: ['mouse', 'touch', 'pen'],\r\n  },\r\n} satisfies OptionsObject & Options;\r\n\r\nexport const getOptionsDiff = <T>(currOptions: T, newOptions: DeepPartial<T>): DeepPartial<T> => {\r\n  const diff: DeepPartial<T> = {};\r\n  const optionsKeys = concat(keys(newOptions), keys(currOptions)) as Array<\r\n    keyof T & keyof DeepPartial<T>\r\n  >;\r\n\r\n  each(optionsKeys, (optionKey) => {\r\n    const currOptionValue = currOptions[optionKey];\r\n    const newOptionValue = newOptions[optionKey];\r\n\r\n    if (isObject(currOptionValue) && isObject(newOptionValue)) {\r\n      assignDeep((diff[optionKey] = {} as any), getOptionsDiff(currOptionValue, newOptionValue));\r\n      // delete empty nested objects\r\n      if (isEmptyObject(diff[optionKey])) {\r\n        delete diff[optionKey];\r\n      }\r\n    } else if (hasOwnProperty(newOptions, optionKey) && newOptionValue !== currOptionValue) {\r\n      let isDiff = true;\r\n\r\n      if (isArray(currOptionValue) || isArray(newOptionValue)) {\r\n        try {\r\n          if (opsStringify(currOptionValue) === opsStringify(newOptionValue)) {\r\n            isDiff = false;\r\n          }\r\n        } catch {}\r\n      }\r\n\r\n      if (isDiff) {\r\n        diff[optionKey] = newOptionValue;\r\n      }\r\n    }\r\n  });\r\n\r\n  return diff;\r\n};\r\n\r\nexport const createOptionCheck =\r\n  <T extends OptionsObject>(\r\n    options: T,\r\n    changedOptions: DeepPartial<T>,\r\n    force?: boolean\r\n  ): OptionsCheckFn<T> =>\r\n  (path) =>\r\n    [getPropByPath(options, path), force || getPropByPath(changedOptions, path) !== undefined];\r\n","const dataAttributePrefix = `data-overlayscrollbars`;\r\n\r\n// environment\r\nexport const classNameEnvironment = 'os-environment';\r\nexport const classNameEnvironmentScrollbarHidden = `${classNameEnvironment}-scrollbar-hidden`;\r\n\r\n// initialize\r\nexport const dataAttributeInitialize = `${dataAttributePrefix}-initialize`;\r\n\r\n// host\r\nexport const dataAttributeHost = dataAttributePrefix;\r\nexport const dataAttributeHostOverflowX = `${dataAttributeHost}-overflow-x`;\r\nexport const dataAttributeHostOverflowY = `${dataAttributeHost}-overflow-y`;\r\nexport const dataValueHostOverflowVisible = 'overflowVisible';\r\nexport const dataValueHostScrollbarHidden = 'scrollbarHidden';\r\nexport const dataValueHostScrollbarPressed = 'scrollbarPressed';\r\nexport const dataValueHostUpdating = 'updating';\r\nexport const dataValueHostHtmlBody = 'body';\r\n\r\n// viewport\r\nexport const dataAttributeViewport = `${dataAttributePrefix}-viewport`;\r\nexport const dataValueViewportArrange = 'arrange';\r\nexport const dataValueViewportScrollbarHidden = 'scrollbarHidden';\r\nexport const dataValueViewportOverflowVisible = dataValueHostOverflowVisible;\r\n\r\n// padding\r\nexport const dataAttributePadding = `${dataAttributePrefix}-padding`;\r\nexport const dataValuePaddingOverflowVisible = dataValueViewportOverflowVisible;\r\n\r\n// content\r\nexport const dataAttributeContent = `${dataAttributePrefix}-content`;\r\n\r\n// size observer\r\nexport const classNameSizeObserver = 'os-size-observer';\r\nexport const classNameSizeObserverAppear = `${classNameSizeObserver}-appear`;\r\nexport const classNameSizeObserverListener = `${classNameSizeObserver}-listener`;\r\nexport const classNameSizeObserverListenerScroll = `${classNameSizeObserverListener}-scroll`;\r\nexport const classNameSizeObserverListenerItem = `${classNameSizeObserverListener}-item`;\r\nexport const classNameSizeObserverListenerItemFinal = `${classNameSizeObserverListenerItem}-final`;\r\n\r\n// trinsic observer\r\nexport const classNameTrinsicObserver = 'os-trinsic-observer';\r\n\r\n// scrollbars\r\nexport const classNameScrollbarThemeNone = 'os-theme-none';\r\nexport const classNameScrollbar = 'os-scrollbar';\r\nexport const classNameScrollbarRtl = `${classNameScrollbar}-rtl`;\r\nexport const classNameScrollbarHorizontal = `${classNameScrollbar}-horizontal`;\r\nexport const classNameScrollbarVertical = `${classNameScrollbar}-vertical`;\r\nexport const classNameScrollbarTrack = `${classNameScrollbar}-track`;\r\nexport const classNameScrollbarHandle = `${classNameScrollbar}-handle`;\r\nexport const classNameScrollbarVisible = `${classNameScrollbar}-visible`;\r\nexport const classNameScrollbarCornerless = `${classNameScrollbar}-cornerless`;\r\nexport const classNameScrollbarTransitionless = `${classNameScrollbar}-transitionless`;\r\nexport const classNameScrollbarInteraction = `${classNameScrollbar}-interaction`;\r\nexport const classNameScrollbarUnusable = `${classNameScrollbar}-unusable`;\r\nexport const classNameScrollbarAutoHide = `${classNameScrollbar}-auto-hide`;\r\nexport const classNameScrollbarAutoHideHidden = `${classNameScrollbarAutoHide}-hidden`;\r\nexport const classNameScrollbarWheel = `${classNameScrollbar}-wheel`;\r\nexport const classNameScrollbarTrackInteractive = `${classNameScrollbarTrack}-interactive`;\r\nexport const classNameScrollbarHandleInteractive = `${classNameScrollbarHandle}-interactive`;\r\n","import { each, keys } from '~/support';\r\nimport type { OverlayScrollbars, OverlayScrollbarsStatic } from '~/overlayscrollbars';\r\nimport type { EventListener, EventListenerArgs, EventListeners } from '..';\r\n\r\nexport type PluginModuleInstance = Record<string | number | symbol, any>;\r\n\r\nexport type InstancePluginEvent = {\r\n  /**\r\n   * Adds event listeners to the instance.\r\n   * @param eventListeners An object which contains the added listeners.\r\n   * @returns Returns a function which removes the added listeners.\r\n   */\r\n  (eventListeners: EventListeners): () => void;\r\n  /**\r\n   * Adds a single event listener to the instance.\r\n   * @param name The name of the event.\r\n   * @param listener The listener which is invoked on that event.\r\n   * @returns Returns a function which removes the added listeners.\r\n   */\r\n  <N extends keyof EventListenerArgs>(name: N, listener: EventListener<N>): () => void;\r\n  /**\r\n   * Adds multiple event listeners to the instance.\r\n   * @param name The name of the event.\r\n   * @param listener The listeners which are invoked on that event.\r\n   * @returns Returns a function which removes the added listeners.\r\n   */\r\n  <N extends keyof EventListenerArgs>(name: N, listener: EventListener<N>[]): () => void;\r\n};\r\n\r\n/**\r\n * Describes a OverlayScrollbars plugin module.\r\n * Plugin modules must be side-effect free and deterministic. (same input produces same output)\r\n */\r\nexport type PluginModule<\r\n  S extends PluginModuleInstance | void = PluginModuleInstance | void,\r\n  I extends PluginModuleInstance | void = PluginModuleInstance | void\r\n> = (S extends PluginModuleInstance\r\n  ? {\r\n      /**\r\n       * Creates a plugin which is bound to the static object.\r\n       * The function will be called once with the static object as soon as the plugin is registered.\r\n       * The plugin can add new methods or fields to the passed static object.\r\n       * @param osStatic The static object the plugin is bound to.\r\n       * @returns The plugins instance object or a falsy value if the plugin doesn't need any instance object.\r\n       */\r\n      static: (osStatic: OverlayScrollbarsStatic) => S | void;\r\n    }\r\n  : object) &\r\n  (I extends PluginModuleInstance\r\n    ? {\r\n        /**\r\n         * Creates a A plugin which is bound to an instance.\r\n         * The function will be called each time a new instance is created.\r\n         * The plugin can add new methods or fields to the passed instance object.\r\n         * @param osInstance The instance object the plugin is bound to.\r\n         * @param event A function which adds events to the instance which can't be removed from outside the plugin. (instance events added with the `on` function can be removed with the optional `pure` parameter)\r\n         * @param osStatic The static object the plugin is bound to.\r\n         * @returns The plugins instance object or a falsy value if the plugin doesn't need any instance object.\r\n         */\r\n        instance: (\r\n          osInstance: OverlayScrollbars,\r\n          event: InstancePluginEvent,\r\n          osStatic: OverlayScrollbarsStatic\r\n        ) => I | void;\r\n      }\r\n    : object);\r\n\r\n/**\r\n * Describes a OverlayScrollbar plugin.\r\n */\r\nexport type Plugin<\r\n  Name extends string = string,\r\n  S extends PluginModuleInstance | void = PluginModuleInstance | void,\r\n  I extends PluginModuleInstance | void = PluginModuleInstance | void\r\n> = {\r\n  /** The field is the plugins name. Plugin names must be globally unique, please choose wisely. */\r\n  [pluginName in Name]: PluginModule<S, I>;\r\n};\r\n\r\n/**\r\n * Describes a OverlayScrollbar plugin which has only a static module.\r\n */\r\nexport type StaticPlugin<\r\n  Name extends string = string,\r\n  T extends PluginModuleInstance = PluginModuleInstance\r\n> = Plugin<Name, T, void>;\r\n\r\n/**\r\n * Describes a OverlayScrollbar plugin which has only a instance module.\r\n */\r\nexport type InstancePlugin<\r\n  Name extends string = string,\r\n  T extends PluginModuleInstance = PluginModuleInstance\r\n> = Plugin<Name, void, T>;\r\n\r\n/**\r\n * Infers the type of the static modules instance of the passed plugin.\r\n */\r\nexport type InferStaticPluginModuleInstance<T extends StaticPlugin> = T extends StaticPlugin<\r\n  infer Name\r\n>\r\n  ? T[Name]['static'] extends (...args: any[]) => any\r\n    ? ReturnType<T[Name]['static']>\r\n    : void\r\n  : void;\r\n\r\n/**\r\n * Infers the type of the instance modules instance of the passed plugin.\r\n */\r\nexport type InferInstancePluginModuleInstance<T extends InstancePlugin> = T extends InstancePlugin<\r\n  infer Name\r\n>\r\n  ? T[Name]['instance'] extends (...args: any[]) => any\r\n    ? ReturnType<T[Name]['instance']>\r\n    : void\r\n  : void;\r\n\r\n/** All registered plugin modules. */\r\nexport const pluginModules: Record<string, PluginModule> = {};\r\n\r\n/** All static plugin module instances. */\r\nexport const staticPluginModuleInstances: Record<string, PluginModuleInstance | void> = {};\r\n\r\n/**\r\n * Adds plugins.\r\n * @param addedPlugin The plugin(s) to add.\r\n * @returns The added plugin modules of the registered plugins.\r\n */\r\nexport const addPlugins = (addedPlugin: Plugin[]) => {\r\n  each(addedPlugin, (plugin) =>\r\n    each(plugin, (_, key) => {\r\n      pluginModules[key] = plugin[key];\r\n    })\r\n  );\r\n};\r\n\r\nexport const registerPluginModuleInstances = (\r\n  plugin: Plugin,\r\n  staticObj: OverlayScrollbarsStatic,\r\n  instanceInfo?: [\r\n    instanceObj: OverlayScrollbars,\r\n    event: InstancePluginEvent,\r\n    instancePluginMap?: Record<string, PluginModuleInstance>\r\n  ]\r\n): Array<PluginModuleInstance | void> =>\r\n  keys(plugin).map((name) => {\r\n    const { static: osStatic, instance: osInstance } = (\r\n      plugin as Plugin<string, PluginModuleInstance, PluginModuleInstance>\r\n    )[name];\r\n    const [instanceObj, event, instancePluginMap] = instanceInfo || [];\r\n    const ctor = instanceInfo ? osInstance : osStatic;\r\n    if (ctor) {\r\n      const instance = instanceInfo\r\n        ? (\r\n            ctor as Extract<\r\n              typeof ctor,\r\n              (\r\n                osInstance: OverlayScrollbars,\r\n                event: InstancePluginEvent,\r\n                osStatic: OverlayScrollbarsStatic\r\n              ) => PluginModuleInstance | void\r\n            >\r\n          )(instanceObj!, event!, staticObj)\r\n        : (\r\n            ctor as Extract<\r\n              typeof ctor,\r\n              (osStatic: OverlayScrollbarsStatic) => PluginModuleInstance | void\r\n            >\r\n          )(staticObj);\r\n      return ((instancePluginMap || staticPluginModuleInstances)[name] = instance);\r\n    }\r\n  });\r\n\r\nexport const getStaticPluginModuleInstance = <T extends StaticPlugin>(\r\n  pluginModuleName: T extends StaticPlugin<infer N> ? N : never\r\n): InferStaticPluginModuleInstance<T> | undefined =>\r\n  staticPluginModuleInstances[pluginModuleName] as InferStaticPluginModuleInstance<T> | undefined;\r\n","import {\r\n  createDOM,\r\n  appendChildren,\r\n  offsetSize,\r\n  addEventListener,\r\n  addClass,\r\n  equalWH,\r\n  cAF,\r\n  rAF,\r\n  stopPropagation,\r\n  bind,\r\n  scrollElementTo,\r\n  strWidth,\r\n  strHeight,\r\n  setStyles,\r\n} from '~/support';\r\nimport {\r\n  classNameSizeObserverListenerScroll,\r\n  classNameSizeObserverListenerItem,\r\n  classNameSizeObserverListenerItemFinal,\r\n} from '~/classnames';\r\nimport type { StaticPlugin } from '../plugins';\r\n\r\nexport const sizeObserverPluginName = '__osSizeObserverPlugin';\r\n\r\nexport const SizeObserverPlugin = /* @__PURE__ */ (() => ({\r\n  [sizeObserverPluginName]: {\r\n    static:\r\n      () =>\r\n      (\r\n        listenerElement: HTMLElement,\r\n        onSizeChangedCallback: (appear: boolean) => any,\r\n        observeAppearChange: boolean | null | undefined\r\n      ): [appearCallback: () => void, offFns: (() => any)[]] => {\r\n        const scrollAmount = 3333333;\r\n        const scrollEventName = 'scroll';\r\n        const observerElementChildren = createDOM(\r\n          `<div class=\"${classNameSizeObserverListenerItem}\" dir=\"ltr\"><div class=\"${classNameSizeObserverListenerItem}\"><div class=\"${classNameSizeObserverListenerItemFinal}\"></div></div><div class=\"${classNameSizeObserverListenerItem}\"><div class=\"${classNameSizeObserverListenerItemFinal}\" style=\"width: 200%; height: 200%\"></div></div></div>`\r\n        );\r\n        const observerElementChildrenRoot = observerElementChildren[0] as HTMLElement;\r\n        const shrinkElement = observerElementChildrenRoot.lastChild as HTMLElement;\r\n        const expandElement = observerElementChildrenRoot.firstChild as HTMLElement;\r\n        const expandElementChild = expandElement?.firstChild as HTMLElement;\r\n\r\n        let cacheSize = offsetSize(observerElementChildrenRoot);\r\n        let currSize = cacheSize;\r\n        let isDirty = false;\r\n        let rAFId: number;\r\n\r\n        const reset = () => {\r\n          scrollElementTo(expandElement, scrollAmount);\r\n          scrollElementTo(shrinkElement, scrollAmount);\r\n        };\r\n        const onResized = (appear?: unknown) => {\r\n          rAFId = 0;\r\n          if (isDirty) {\r\n            cacheSize = currSize;\r\n            onSizeChangedCallback(appear === true);\r\n          }\r\n        };\r\n        const onScroll = (scrollEvent?: Event | false) => {\r\n          currSize = offsetSize(observerElementChildrenRoot);\r\n          isDirty = !scrollEvent || !equalWH(currSize, cacheSize);\r\n\r\n          if (scrollEvent) {\r\n            stopPropagation(scrollEvent);\r\n\r\n            if (isDirty && !rAFId) {\r\n              cAF!(rAFId);\r\n              rAFId = rAF!(onResized);\r\n            }\r\n          } else {\r\n            onResized(scrollEvent === false);\r\n          }\r\n\r\n          reset();\r\n        };\r\n        const destroyFns = [\r\n          appendChildren(listenerElement, observerElementChildren),\r\n          addEventListener(expandElement, scrollEventName, onScroll),\r\n          addEventListener(shrinkElement, scrollEventName, onScroll),\r\n        ];\r\n\r\n        addClass(listenerElement, classNameSizeObserverListenerScroll);\r\n\r\n        // lets assume that the divs will never be that large and a constant value is enough\r\n        setStyles(expandElementChild, {\r\n          [strWidth]: scrollAmount,\r\n          [strHeight]: scrollAmount,\r\n        });\r\n\r\n        rAF!(reset);\r\n\r\n        return [observeAppearChange ? bind(onScroll, false) : reset, destroyFns];\r\n      },\r\n  },\r\n}))() satisfies StaticPlugin<typeof sizeObserverPluginName>;\r\n","import { getStyles, strOverflowX, strOverflowY, strVisible } from '~/support';\r\nimport type { Env } from '~/environment';\r\nimport type { XY } from '~/support';\r\nimport type { Options, OptionsCheckFn, OverflowBehavior } from '~/options';\r\nimport type { OverflowStyle, StyleObject, StyleObjectKey } from '~/typings';\r\nimport type { StructureSetupElementsObj } from './structureSetup.elements';\r\n\r\nexport interface ViewportOverflowState {\r\n  _overflowScroll: XY<boolean>;\r\n  _overflowStyle: XY<OverflowStyle>;\r\n}\r\n\r\nexport const getShowNativeOverlaidScrollbars = (checkOption: OptionsCheckFn<Options>, env: Env) => {\r\n  const { _nativeScrollbarsOverlaid } = env;\r\n  const [showNativeOverlaidScrollbarsOption, showNativeOverlaidScrollbarsChanged] = checkOption(\r\n    'showNativeOverlaidScrollbars'\r\n  );\r\n\r\n  return [\r\n    showNativeOverlaidScrollbarsOption &&\r\n      _nativeScrollbarsOverlaid.x &&\r\n      _nativeScrollbarsOverlaid.y,\r\n    showNativeOverlaidScrollbarsChanged,\r\n  ] as const;\r\n};\r\n\r\nexport const overflowIsVisible = (overflowBehavior: string) =>\r\n  overflowBehavior.indexOf(strVisible) === 0;\r\n\r\n/**\r\n * Gets the current overflow state of the viewport.\r\n * @param showNativeOverlaidScrollbars Whether native overlaid scrollbars are shown instead of hidden.\r\n * @param viewportStyleObj The viewport style object where the overflow scroll property can be read of, or undefined if shall be determined.\r\n * @returns A object which contains informations about the current overflow state.\r\n */\r\nexport const getViewportOverflowState = (\r\n  structureSetupElements: StructureSetupElementsObj,\r\n  viewportStyleObj?: StyleObject\r\n): ViewportOverflowState => {\r\n  const { _viewport } = structureSetupElements;\r\n  const getStatePerAxis = (styleKey: StyleObjectKey) => {\r\n    const overflowStyle = getStyles(_viewport, styleKey);\r\n    // can't do something like \"viewportStyleObj && viewportStyleObj[styleKey] || overflowStyle\" here!\r\n    const objectPrefferedOverflowStyle = viewportStyleObj\r\n      ? viewportStyleObj[styleKey]\r\n      : overflowStyle;\r\n    const overflowScroll = objectPrefferedOverflowStyle === 'scroll';\r\n\r\n    return [overflowStyle, overflowScroll] as [\r\n      overflowStyle: OverflowStyle,\r\n      overflowScroll: boolean\r\n    ];\r\n  };\r\n\r\n  const [xOverflowStyle, xOverflowScroll] = getStatePerAxis(strOverflowX);\r\n  const [yOverflowStyle, yOverflowScroll] = getStatePerAxis(strOverflowY);\r\n\r\n  return {\r\n    _overflowStyle: {\r\n      x: xOverflowStyle,\r\n      y: yOverflowStyle,\r\n    },\r\n    _overflowScroll: {\r\n      x: xOverflowScroll,\r\n      y: yOverflowScroll,\r\n    },\r\n  };\r\n};\r\n\r\n/**\r\n * Sets the overflow property of the viewport and calculates the a overflow state according to the new parameters.\r\n * @param showNativeOverlaidScrollbars Whether to show natively overlaid scrollbars.\r\n * @param overflowAmount The overflow amount.\r\n * @param overflow The overflow behavior according to the options.\r\n * @param viewportStyleObj The viewport style object to which the overflow style shall be applied.\r\n * @returns A object which represents the newly set overflow state.\r\n */\r\nexport const setViewportOverflowState = (\r\n  structureSetupElements: StructureSetupElementsObj,\r\n  hasOverflow: XY<boolean>,\r\n  overflowOption: XY<OverflowBehavior>,\r\n  viewportStyleObj: StyleObject\r\n): ViewportOverflowState => {\r\n  const hasAnyOverflow = hasOverflow.x || hasOverflow.y;\r\n\r\n  const setAxisOverflowStyle = (behavior: OverflowBehavior, hasOverflowAxis: boolean) => {\r\n    const overflowVisible = overflowIsVisible(behavior);\r\n    const fallbackVisibilityBehavior = overflowVisible && hasAnyOverflow ? 'hidden' : '';\r\n    const overflowVisibleBehavior =\r\n      (hasOverflowAxis && overflowVisible && behavior.replace(`${strVisible}-`, '')) ||\r\n      fallbackVisibilityBehavior;\r\n\r\n    return [\r\n      hasOverflowAxis && !overflowVisible ? behavior : '',\r\n      overflowIsVisible(overflowVisibleBehavior) ? 'hidden' : overflowVisibleBehavior,\r\n    ];\r\n  };\r\n\r\n  const [overflowX, visibleBehaviorX] = setAxisOverflowStyle(overflowOption.x, hasOverflow.x);\r\n  const [overflowY, visibleBehaviorY] = setAxisOverflowStyle(overflowOption.y, hasOverflow.y);\r\n\r\n  viewportStyleObj[strOverflowX] = visibleBehaviorX && overflowY ? visibleBehaviorX : overflowX;\r\n  viewportStyleObj[strOverflowY] = visibleBehaviorY && overflowX ? visibleBehaviorY : overflowY;\r\n\r\n  return getViewportOverflowState(structureSetupElements, viewportStyleObj);\r\n};\r\n","import {\r\n  keys,\r\n  noop,\r\n  each,\r\n  assignDeep,\r\n  windowSize,\r\n  wnd,\r\n  mathAbs,\r\n  mathRound,\r\n  strMarginBottom,\r\n  strMarginLeft,\r\n  strMarginRight,\r\n  strPaddingBottom,\r\n  strPaddingLeft,\r\n  strPaddingRight,\r\n  strPaddingTop,\r\n  getStyles,\r\n  setStyles,\r\n  addAttrClass,\r\n  removeAttrClass,\r\n  strWidth,\r\n} from '~/support';\r\nimport { dataValueViewportArrange, dataAttributeViewport } from '~/classnames';\r\nimport {\r\n  getShowNativeOverlaidScrollbars,\r\n  getViewportOverflowState,\r\n} from '~/setups/structureSetup/structureSetup.utils';\r\nimport type { ObserversSetupState } from '~/setups';\r\nimport type { Options, OptionsCheckFn } from '~/options';\r\nimport type { StructureSetupElementsObj } from '~/setups/structureSetup/structureSetup.elements';\r\nimport type { ViewportOverflowState } from '~/setups/structureSetup/structureSetup.utils';\r\nimport type { Env } from '~/environment';\r\nimport type { UpdateCache, WH, XY } from '~/support';\r\nimport type { StyleObject, StyleObjectKey } from '~/typings';\r\nimport type { StructureSetupState } from '~/setups/structureSetup';\r\nimport type { StaticPlugin } from '~/plugins';\r\n\r\nexport const scrollbarsHidingPluginName = '__osScrollbarsHidingPlugin';\r\n\r\nexport const ScrollbarsHidingPlugin = /* @__PURE__ */ (() => ({\r\n  [scrollbarsHidingPluginName]: {\r\n    static: () => ({\r\n      _viewportArrangement: (\r\n        structureSetupElements: StructureSetupElementsObj,\r\n        structureSetupState: StructureSetupState,\r\n        observersSetupState: ObserversSetupState,\r\n        env: Env,\r\n        checkOptions: OptionsCheckFn<Options>\r\n      ) => {\r\n        const { _viewportIsTarget, _viewport } = structureSetupElements;\r\n        const { _nativeScrollbarsHiding, _nativeScrollbarsOverlaid, _nativeScrollbarsSize } = env;\r\n        const doViewportArrange =\r\n          !_viewportIsTarget &&\r\n          !_nativeScrollbarsHiding &&\r\n          (_nativeScrollbarsOverlaid.x || _nativeScrollbarsOverlaid.y);\r\n        const [showNativeOverlaidScrollbars] = getShowNativeOverlaidScrollbars(checkOptions, env);\r\n\r\n        const _getViewportOverflowHideOffset = (viewportOverflowState: ViewportOverflowState) => {\r\n          const { _overflowScroll } = viewportOverflowState;\r\n          const arrangeHideOffset =\r\n            _nativeScrollbarsHiding || showNativeOverlaidScrollbars ? 0 : 42;\r\n\r\n          const getHideOffsetPerAxis = (\r\n            isOverlaid: boolean,\r\n            overflowScroll: boolean,\r\n            nativeScrollbarSize: number\r\n          ) => {\r\n            const nonScrollbarStylingHideOffset = isOverlaid\r\n              ? arrangeHideOffset\r\n              : nativeScrollbarSize;\r\n            const scrollbarsHideOffset =\r\n              overflowScroll && !_nativeScrollbarsHiding ? nonScrollbarStylingHideOffset : 0;\r\n            const scrollbarsHideOffsetArrange = isOverlaid && !!arrangeHideOffset;\r\n\r\n            return [scrollbarsHideOffset, scrollbarsHideOffsetArrange] as const;\r\n          };\r\n\r\n          const [xScrollbarsHideOffset, xScrollbarsHideOffsetArrange] = getHideOffsetPerAxis(\r\n            _nativeScrollbarsOverlaid.x,\r\n            _overflowScroll.x,\r\n            _nativeScrollbarsSize.x\r\n          );\r\n          const [yScrollbarsHideOffset, yScrollbarsHideOffsetArrange] = getHideOffsetPerAxis(\r\n            _nativeScrollbarsOverlaid.y,\r\n            _overflowScroll.y,\r\n            _nativeScrollbarsSize.y\r\n          );\r\n\r\n          return {\r\n            _scrollbarsHideOffset: {\r\n              x: xScrollbarsHideOffset,\r\n              y: yScrollbarsHideOffset,\r\n            },\r\n            _scrollbarsHideOffsetArrange: {\r\n              x: xScrollbarsHideOffsetArrange,\r\n              y: yScrollbarsHideOffsetArrange,\r\n            },\r\n          };\r\n        };\r\n\r\n        /**\r\n         * Hides the native scrollbars according to the passed parameters.\r\n         * @param viewportOverflowState The viewport overflow state.\r\n         * @param directionIsRTL Whether the direction is RTL or not.\r\n         * @param viewportArrange Whether special styles related to the viewport arrange strategy shall be applied.\r\n         * @param viewportStyleObj The viewport style object to which the needed styles shall be applied.\r\n         */\r\n        const _hideNativeScrollbars = (\r\n          viewportOverflowState: ViewportOverflowState,\r\n          { _directionIsRTL }: ObserversSetupState,\r\n          viewportArrange: boolean,\r\n          viewportStyleObj: StyleObject\r\n        ): void => {\r\n          assignDeep(viewportStyleObj, {\r\n            [strMarginRight]: 0,\r\n            [strMarginBottom]: 0,\r\n            [strMarginLeft]: 0,\r\n          });\r\n          if (!_viewportIsTarget) {\r\n            const { _scrollbarsHideOffset, _scrollbarsHideOffsetArrange } =\r\n              _getViewportOverflowHideOffset(viewportOverflowState);\r\n            const { x: arrangeX, y: arrangeY } = _scrollbarsHideOffsetArrange;\r\n            const { x: hideOffsetX, y: hideOffsetY } = _scrollbarsHideOffset;\r\n            const { _viewportPaddingStyle } = structureSetupState;\r\n            const horizontalMarginKey: keyof StyleObject = _directionIsRTL\r\n              ? strMarginLeft\r\n              : strMarginRight;\r\n            const viewportHorizontalPaddingKey: keyof StyleObject = _directionIsRTL\r\n              ? strPaddingLeft\r\n              : strPaddingRight;\r\n            const horizontalMarginValue = _viewportPaddingStyle[horizontalMarginKey] as number;\r\n            const verticalMarginValue = _viewportPaddingStyle[strMarginBottom] as number;\r\n            const horizontalPaddingValue = _viewportPaddingStyle[\r\n              viewportHorizontalPaddingKey\r\n            ] as number;\r\n            const verticalPaddingValue = _viewportPaddingStyle[strPaddingBottom] as number;\r\n\r\n            // horizontal\r\n            viewportStyleObj[strWidth] = `calc(100% + ${\r\n              hideOffsetY + horizontalMarginValue * -1\r\n            }px)`;\r\n            viewportStyleObj[horizontalMarginKey] = -hideOffsetY + horizontalMarginValue;\r\n\r\n            // vertical\r\n            viewportStyleObj[strMarginBottom] = -hideOffsetX + verticalMarginValue;\r\n\r\n            // viewport arrange additional styles\r\n            if (viewportArrange) {\r\n              viewportStyleObj[viewportHorizontalPaddingKey] =\r\n                horizontalPaddingValue + (arrangeY ? hideOffsetY : 0);\r\n              viewportStyleObj[strPaddingBottom] =\r\n                verticalPaddingValue + (arrangeX ? hideOffsetX : 0);\r\n            }\r\n          }\r\n        };\r\n\r\n        /**\r\n         * Sets the styles of the viewport arrange element.\r\n         * @param viewportOverflowState The viewport overflow state according to which the scrollbars shall be hidden.\r\n         * @param viewportScrollSize The content scroll size.\r\n         * @param directionIsRTL Whether the direction is RTL or not.\r\n         * @returns A boolean which indicates whether the viewport arrange element was adjusted.\r\n         */\r\n        const _arrangeViewport = (\r\n          viewportOverflowState: ViewportOverflowState,\r\n          viewportScrollSize: WH<number>,\r\n          sizeFraction: WH<number>\r\n        ) => {\r\n          if (doViewportArrange) {\r\n            const { _viewportPaddingStyle } = structureSetupState;\r\n            const { _scrollbarsHideOffset, _scrollbarsHideOffsetArrange } =\r\n              _getViewportOverflowHideOffset(viewportOverflowState);\r\n            const { x: arrangeX, y: arrangeY } = _scrollbarsHideOffsetArrange;\r\n            const { x: hideOffsetX, y: hideOffsetY } = _scrollbarsHideOffset;\r\n            const { _directionIsRTL } = observersSetupState;\r\n            const viewportArrangeHorizontalPaddingKey: keyof StyleObject = _directionIsRTL\r\n              ? strPaddingRight\r\n              : strPaddingLeft;\r\n            const viewportArrangeHorizontalPaddingValue = _viewportPaddingStyle[\r\n              viewportArrangeHorizontalPaddingKey\r\n            ] as number;\r\n            const viewportArrangeVerticalPaddingValue = _viewportPaddingStyle.paddingTop as number;\r\n            const fractionalContentWidth = viewportScrollSize.w + sizeFraction.w;\r\n            const fractionalContenHeight = viewportScrollSize.h + sizeFraction.h;\r\n            const arrangeSize = {\r\n              w:\r\n                hideOffsetY && arrangeY\r\n                  ? `${\r\n                      hideOffsetY + fractionalContentWidth - viewportArrangeHorizontalPaddingValue\r\n                    }px`\r\n                  : '',\r\n              h:\r\n                hideOffsetX && arrangeX\r\n                  ? `${\r\n                      hideOffsetX + fractionalContenHeight - viewportArrangeVerticalPaddingValue\r\n                    }px`\r\n                  : '',\r\n            };\r\n\r\n            setStyles(_viewport, {\r\n              '--os-vaw': arrangeSize.w,\r\n              '--os-vah': arrangeSize.h,\r\n            });\r\n          }\r\n\r\n          return doViewportArrange;\r\n        };\r\n\r\n        /**\r\n         * Removes all styles applied because of the viewport arrange strategy.\r\n         * @param showNativeOverlaidScrollbars Whether native overlaid scrollbars are shown instead of hidden.\r\n         * @param directionIsRTL Whether the direction is RTL or not.\r\n         * @param viewportOverflowState The currentviewport overflow state or undefined if it has to be determined.\r\n         * @returns A object with a function which applies all the removed styles and the determined viewport vverflow state.\r\n         */\r\n        const _undoViewportArrange = (viewportOverflowState?: ViewportOverflowState) => {\r\n          if (doViewportArrange) {\r\n            const finalViewportOverflowState =\r\n              viewportOverflowState || getViewportOverflowState(structureSetupElements);\r\n            const { _viewportPaddingStyle: viewportPaddingStyle } = structureSetupState;\r\n            const { _scrollbarsHideOffsetArrange } = _getViewportOverflowHideOffset(\r\n              finalViewportOverflowState\r\n            );\r\n            const { x: arrangeX, y: arrangeY } = _scrollbarsHideOffsetArrange;\r\n            const finalPaddingStyle: StyleObject = {};\r\n            const assignProps = (props: string[]) =>\r\n              each(props, (prop) => {\r\n                finalPaddingStyle[prop as StyleObjectKey] =\r\n                  viewportPaddingStyle[prop as StyleObjectKey];\r\n              });\r\n\r\n            if (arrangeX) {\r\n              assignProps([strMarginBottom, strPaddingTop, strPaddingBottom]);\r\n            }\r\n\r\n            if (arrangeY) {\r\n              assignProps([strMarginLeft, strMarginRight, strPaddingLeft, strPaddingRight]);\r\n            }\r\n\r\n            const prevStyle = getStyles(_viewport, keys(finalPaddingStyle) as StyleObjectKey[]);\r\n            removeAttrClass(_viewport, dataAttributeViewport, dataValueViewportArrange);\r\n\r\n            setStyles(_viewport, finalPaddingStyle);\r\n\r\n            return [\r\n              () => {\r\n                _hideNativeScrollbars(\r\n                  finalViewportOverflowState,\r\n                  observersSetupState,\r\n                  doViewportArrange,\r\n                  prevStyle\r\n                );\r\n                setStyles(_viewport, prevStyle);\r\n                addAttrClass(_viewport, dataAttributeViewport, dataValueViewportArrange);\r\n              },\r\n              finalViewportOverflowState,\r\n            ] as const;\r\n          }\r\n          return [noop] as const;\r\n        };\r\n\r\n        return {\r\n          _getViewportOverflowHideOffset,\r\n          _arrangeViewport,\r\n          _undoViewportArrange,\r\n          _hideNativeScrollbars,\r\n        };\r\n      },\r\n      _envWindowZoom: () => {\r\n        let size = { w: 0, h: 0 };\r\n        let dpr = 0;\r\n        const getWindowDPR = (): number => {\r\n          const screen = wnd.screen;\r\n          // eslint-disable-next-line\r\n          // @ts-ignore\r\n          const dDPI = screen.deviceXDPI || 0;\r\n          // eslint-disable-next-line\r\n          // @ts-ignore\r\n          const sDPI = screen.logicalXDPI || 1;\r\n          return wnd.devicePixelRatio || dDPI / sDPI;\r\n        };\r\n        const diffBiggerThanOne = (valOne: number, valTwo: number): boolean => {\r\n          const absValOne = mathAbs(valOne);\r\n          const absValTwo = mathAbs(valTwo);\r\n          return !(\r\n            absValOne === absValTwo ||\r\n            absValOne + 1 === absValTwo ||\r\n            absValOne - 1 === absValTwo\r\n          );\r\n        };\r\n\r\n        return (\r\n          envInstance: Env,\r\n          updateNativeScrollbarSizeCache: UpdateCache<XY<number>>\r\n        ): boolean | undefined => {\r\n          const sizeNew = windowSize();\r\n          const deltaSize = {\r\n            w: sizeNew.w - size.w,\r\n            h: sizeNew.h - size.h,\r\n          };\r\n\r\n          if (deltaSize.w === 0 && deltaSize.h === 0) {\r\n            return;\r\n          }\r\n\r\n          const deltaAbsSize = {\r\n            w: mathAbs(deltaSize.w),\r\n            h: mathAbs(deltaSize.h),\r\n          };\r\n          const deltaAbsRatio = {\r\n            w: mathAbs(mathRound(sizeNew.w / (size.w / 100.0))),\r\n            h: mathAbs(mathRound(sizeNew.h / (size.h / 100.0))),\r\n          };\r\n          const dprNew = getWindowDPR();\r\n          const deltaIsBigger = deltaAbsSize.w > 2 && deltaAbsSize.h > 2;\r\n          const difference = !diffBiggerThanOne(deltaAbsRatio.w, deltaAbsRatio.h);\r\n          const dprChanged = dprNew !== dpr && dprNew > 0;\r\n          const isZoom = deltaIsBigger && difference && dprChanged;\r\n          let scrollbarSizeChanged;\r\n          let scrollbarSize;\r\n\r\n          if (isZoom) {\r\n            [scrollbarSize, scrollbarSizeChanged] = updateNativeScrollbarSizeCache();\r\n\r\n            assignDeep(envInstance._nativeScrollbarsSize, scrollbarSize); // keep the object same!\r\n          }\r\n\r\n          size = sizeNew;\r\n          dpr = dprNew;\r\n\r\n          return scrollbarSizeChanged;\r\n        };\r\n      },\r\n    }),\r\n  },\r\n}))() satisfies StaticPlugin<typeof scrollbarsHidingPluginName>;\r\n","import { animateNumber, noop, setT } from '~/support';\r\nimport type { StaticPlugin } from '~/plugins';\r\n\r\nexport const clickScrollPluginModuleName = '__osClickScrollPlugin';\r\n\r\nexport const ClickScrollPlugin = /* @__PURE__ */ (() => ({\r\n  [clickScrollPluginModuleName]: {\r\n    static:\r\n      () =>\r\n      (\r\n        moveHandleRelative: (deltaMovement: number) => void,\r\n        getHandleOffset: (handleRect?: DOMRect, trackRect?: DOMRect) => number,\r\n        startOffset: number,\r\n        handleLength: number,\r\n        relativeTrackPointerOffset: number\r\n      ): (() => void) => {\r\n        // click scroll animation\r\n        let iteration = 0;\r\n        let clear = noop;\r\n        const animateClickScroll = (clickScrollProgress: number) => {\r\n          clear = animateNumber(\r\n            clickScrollProgress,\r\n            clickScrollProgress + handleLength * Math.sign(startOffset),\r\n            133,\r\n            (animationProgress, _, animationCompleted) => {\r\n              moveHandleRelative(animationProgress);\r\n              const handleStartBound = getHandleOffset();\r\n              const handleEndBound = handleStartBound + handleLength;\r\n              const mouseBetweenHandleBounds =\r\n                relativeTrackPointerOffset >= handleStartBound &&\r\n                relativeTrackPointerOffset <= handleEndBound;\r\n\r\n              if (animationCompleted && !mouseBetweenHandleBounds) {\r\n                if (iteration) {\r\n                  animateClickScroll(animationProgress);\r\n                } else {\r\n                  const firstIterationPauseTimeout = setT(() => {\r\n                    animateClickScroll(animationProgress);\r\n                  }, 222);\r\n                  clear = () => {\r\n                    clearTimeout(firstIterationPauseTimeout);\r\n                  };\r\n                }\r\n                iteration++;\r\n              }\r\n            }\r\n          );\r\n        };\r\n\r\n        animateClickScroll(0);\r\n\r\n        return () => clear();\r\n      },\r\n  },\r\n}))() satisfies StaticPlugin<typeof clickScrollPluginModuleName>;\r\n","import { isFunction, isHTMLElement, isNull, isUndefined } from '~/support';\r\nimport { getEnvironment } from '~/environment';\r\nimport type { DeepPartial } from '~/typings';\r\n\r\ntype FallbackStaticInitializtationElement<Args extends any[]> = Extract<\r\n  StaticInitializationElement<Args>,\r\n  (...args: Args) => any\r\n> extends (...args: infer P) => any\r\n  ? (...args: P) => HTMLElement\r\n  : never;\r\ntype FallbackDynamicInitializtationElement<Args extends any[]> = Extract<\r\n  DynamicInitializationElement<Args>,\r\n  (...args: Args) => any\r\n> extends (...args: infer P) => any\r\n  ? (...args: P) => HTMLElement\r\n  : never;\r\n\r\nexport type StaticInitialization = HTMLElement | false | null;\r\nexport type DynamicInitialization = HTMLElement | boolean | null;\r\n\r\n/**\r\n * Static elements are elements which MUST be present in the final DOM.\r\n * If an `HTMLElement` is passed the passed element will be taken as the repsective element.\r\n * With `false`, `null` or `undefined` an appropriate element is generated automatically.\r\n */\r\nexport type StaticInitializationElement<Args extends any[]> =\r\n  /** A function which returns the the StaticInitialization value. */\r\n  | ((...args: Args) => StaticInitialization)\r\n  /** The StaticInitialization value. */\r\n  | StaticInitialization;\r\n\r\n/**\r\n * Dynamic elements are elements which CAN be present in the final DOM.\r\n * If an `HTMLElement`is passed the passed element will be taken as the repsective element.\r\n * With `true` an appropriate element is generated automatically.\r\n * With `false`, `null` or `undefined` the element won't be in the DOM.\r\n */\r\nexport type DynamicInitializationElement<Args extends any[]> =\r\n  /** A function which returns the the DynamicInitialization value. */\r\n  | ((...args: Args) => DynamicInitialization)\r\n  /** The DynamicInitialization value. */\r\n  | DynamicInitialization;\r\n\r\n/**\r\n * Describes how a OverlayScrollbar instance should initialize.\r\n */\r\nexport type Initialization = {\r\n  /**\r\n   * Customizes which elements are generated and used.\r\n   * If a function is passed to any of the fields, it receives the `target` element as its argument.\r\n   * Any passed function should be a \"pure\" function. (same input produces same output)\r\n   */\r\n  elements: {\r\n    /**\r\n     * Assign a custom element as the host element.\r\n     * Only relevant if the target element is a Textarea.\r\n     */\r\n    host: StaticInitializationElement<[target: InitializationTargetElement]>;\r\n    /** Assign a custom element as the viewport element. */\r\n    viewport: StaticInitializationElement<[target: InitializationTargetElement]>;\r\n    /** Assign a custom element as the padding element or force the element not to be generated. */\r\n    padding: DynamicInitializationElement<[target: InitializationTargetElement]>;\r\n    /** Assign a custom element as the content element or force the element not to be generated. */\r\n    content: DynamicInitializationElement<[target: InitializationTargetElement]>;\r\n  };\r\n  /**\r\n   * Customizes elements related to the scrollbars.\r\n   * If a function is passed, it receives the `target`, `host` and `viewport` element as arguments.\r\n   */\r\n  scrollbars: {\r\n    slot: DynamicInitializationElement<\r\n      [target: InitializationTargetElement, host: HTMLElement, viewport: HTMLElement]\r\n    >;\r\n  };\r\n  /**\r\n   * Customizes the cancelation behavior.\r\n   */\r\n  cancel: {\r\n    /** Whether the initialization shall be canceled if the native scrollbars are overlaid. */\r\n    nativeScrollbarsOverlaid: boolean;\r\n    /**\r\n     * Whether the initialization shall be canceled if its applied to a body element.\r\n     * With `true` an initialization is always canceled, with `false` its never canceled.\r\n     * With `null` the initialization will only be canceled when the initialization would affect the browsers functionality. (window.scrollTo, mobile browser behavior etc.)\r\n     */\r\n    body: boolean | null;\r\n  };\r\n};\r\n\r\nexport type PartialInitialization = DeepPartial<Initialization>;\r\n\r\n/** The initialization target element. */\r\nexport type InitializationTargetElement = HTMLElement; // | HTMLTextAreaElement;\r\n\r\n/**\r\n * The initialization target object.\r\n * OverlayScrollbars({ target: myElement }) is equivalent to OverlayScrollbars(myElement).\r\n */\r\nexport type InitializationTargetObject = PartialInitialization & {\r\n  target: InitializationTargetElement;\r\n};\r\n\r\n/** The initialization target. */\r\nexport type InitializationTarget = InitializationTargetElement | InitializationTargetObject;\r\n\r\nexport const resolveInitialization = <T extends StaticInitialization | DynamicInitialization>(\r\n  args: any,\r\n  value: any\r\n): T => (isFunction(value) ? value.apply(0, args) : value);\r\n\r\nexport const staticInitializationElement = <Args extends any[]>(\r\n  args: Args,\r\n  fallbackStaticInitializationElement: FallbackStaticInitializtationElement<Args>,\r\n  defaultStaticInitializationElement: StaticInitializationElement<Args>,\r\n  staticInitializationElementValue?: StaticInitializationElement<Args>\r\n): HTMLElement => {\r\n  const staticInitialization = isUndefined(staticInitializationElementValue)\r\n    ? defaultStaticInitializationElement\r\n    : staticInitializationElementValue;\r\n  const resolvedInitialization = resolveInitialization<StaticInitialization>(\r\n    args,\r\n    staticInitialization\r\n  );\r\n  return resolvedInitialization || fallbackStaticInitializationElement.apply(0, args);\r\n};\r\n\r\nexport const dynamicInitializationElement = <Args extends any[]>(\r\n  args: Args,\r\n  fallbackDynamicInitializationElement: FallbackDynamicInitializtationElement<Args>,\r\n  defaultDynamicInitializationElement: DynamicInitializationElement<Args>,\r\n  dynamicInitializationElementValue?: DynamicInitializationElement<Args>\r\n): HTMLElement | false => {\r\n  const dynamicInitialization = isUndefined(dynamicInitializationElementValue)\r\n    ? defaultDynamicInitializationElement\r\n    : dynamicInitializationElementValue;\r\n  const resolvedInitialization = resolveInitialization<DynamicInitialization>(\r\n    args,\r\n    dynamicInitialization\r\n  );\r\n  return (\r\n    !!resolvedInitialization &&\r\n    (isHTMLElement(resolvedInitialization)\r\n      ? resolvedInitialization\r\n      : fallbackDynamicInitializationElement.apply(0, args))\r\n  );\r\n};\r\n\r\nexport const cancelInitialization = (\r\n  isBody: boolean,\r\n  cancelInitializationValue?: DeepPartial<Initialization['cancel']> | false | null | undefined\r\n): boolean => {\r\n  const { nativeScrollbarsOverlaid, body } = cancelInitializationValue || {};\r\n  const { _nativeScrollbarsOverlaid, _nativeScrollbarsHiding, _getDefaultInitialization } =\r\n    getEnvironment();\r\n  const { nativeScrollbarsOverlaid: defaultNativeScrollbarsOverlaid, body: defaultbody } =\r\n    _getDefaultInitialization().cancel;\r\n\r\n  const resolvedNativeScrollbarsOverlaid =\r\n    nativeScrollbarsOverlaid ?? defaultNativeScrollbarsOverlaid;\r\n  const resolvedDocumentScrollingElement = isUndefined(body) ? defaultbody : body;\r\n\r\n  const finalNativeScrollbarsOverlaid =\r\n    (_nativeScrollbarsOverlaid.x || _nativeScrollbarsOverlaid.y) &&\r\n    resolvedNativeScrollbarsOverlaid;\r\n  const finalDocumentScrollingElement =\r\n    isBody &&\r\n    (isNull(resolvedDocumentScrollingElement)\r\n      ? !_nativeScrollbarsHiding\r\n      : resolvedDocumentScrollingElement);\r\n\r\n  return !!finalNativeScrollbarsOverlaid || !!finalDocumentScrollingElement;\r\n};\r\n","import type { OverlayScrollbars } from '~/overlayscrollbars';\n\nconst targetInstanceMap: WeakMap<Element, OverlayScrollbars> = new WeakMap();\n\n/**\n * Adds the given OverlayScrollbars instance to the given element.\n * @param target The element which is the target of the OverlayScrollbars instance.\n * @param osInstance The OverlayScrollbars instance.\n */\nexport const addInstance = (target: Element, osInstance: OverlayScrollbars): void => {\n  targetInstanceMap.set(target, osInstance);\n};\n\n/**\n * Removes a OverlayScrollbars instance from the given element.\n * @param target The element from which its OverlayScrollbars instance shall be removed.\n */\nexport const removeInstance = (target: Element): void => {\n  targetInstanceMap.delete(target);\n};\n\n/**\n * Gets the OverlayScrollbars from the given element or undefined if it doesn't have one.\n * @param target The element of which its OverlayScrollbars instance shall be get.\n */\nexport const getInstance = (target: Element): OverlayScrollbars | undefined =>\n  targetInstanceMap.get(target);\n","import {\r\n  each,\r\n  noop,\r\n  debounce,\r\n  MutationObserverConstructor,\r\n  addEventListener,\r\n  is,\r\n  find,\r\n  push,\r\n  runEachAndClear,\r\n  bind,\r\n  isEmptyArray,\r\n  deduplicateArray,\r\n  inArray,\r\n  concat,\r\n  getAttr,\r\n} from '~/support';\r\n\r\ntype DOMContentObserverCallback = (contentChangedThroughEvent: boolean) => any;\r\n\r\ntype DOMTargetObserverCallback = (targetChangedAttrs: string[], targetStyleChanged: boolean) => any;\r\n\r\ninterface DOMObserverOptionsBase {\r\n  _attributes?: string[];\r\n  /**\r\n   * A function which can ignore a changed attribute if it returns true.\r\n   * for DOMTargetObserver this applies to the changes to the observed target\r\n   * for DOMContentObserver this applies to changes to nested targets -> nested targets are elements which match the \"_nestedTargetSelector\" selector\r\n   */\r\n  _ignoreTargetChange?: DOMObserverIgnoreTargetChange;\r\n}\r\n\r\ninterface DOMContentObserverOptions extends DOMObserverOptionsBase {\r\n  _eventContentChange?: DOMObserverEventContentChange; // [selector, eventname(s) | function returning eventname(s)] -> eventnames divided by whitespaces\r\n  _nestedTargetSelector?: string;\r\n  _ignoreContentChange?: DOMObserverIgnoreContentChange; // function which will prevent marking certain dom changes as content change if it returns true\r\n}\r\n\r\ninterface DOMTargetObserverOptions extends DOMObserverOptionsBase {\r\n  /**\r\n   * Marks certain attributes as style changing, should be a subset of the _attributes prop.\r\n   * Used to set the \"targetStyleChanged\" param in the DOMTargetObserverCallback.\r\n   */\r\n  _styleChangingAttributes?: string[];\r\n}\r\n\r\ntype ContentChangeArrayItem = [selector?: string, eventNames?: string] | null | undefined;\r\n\r\nexport type DOMObserverEventContentChange =\r\n  | Array<ContentChangeArrayItem>\r\n  | false\r\n  | null\r\n  | undefined;\r\n\r\nexport type DOMObserverIgnoreContentChange = (\r\n  mutation: MutationRecord,\r\n  isNestedTarget: boolean,\r\n  domObserverTarget: HTMLElement,\r\n  domObserverOptions?: DOMContentObserverOptions\r\n) => boolean;\r\n\r\nexport type DOMObserverIgnoreTargetChange = (\r\n  target: Node,\r\n  attributeName: string,\r\n  oldAttributeValue: string | null,\r\n  newAttributeValue: string | null\r\n) => boolean;\r\n\r\nexport type DOMObserverCallback<ContentObserver extends boolean> = ContentObserver extends true\r\n  ? DOMContentObserverCallback\r\n  : DOMTargetObserverCallback;\r\n\r\nexport type DOMObserverOptions<ContentObserver extends boolean> = ContentObserver extends true\r\n  ? DOMContentObserverOptions\r\n  : DOMTargetObserverOptions;\r\n\r\nexport type DOMObserver<ContentObserver extends boolean> = [\r\n  construct: () => () => void,\r\n  update: () => void | false | Parameters<DOMObserverCallback<ContentObserver>>\r\n];\r\n\r\ntype EventContentChangeUpdateElement = (\r\n  getElements?: (selector: string) => Node[],\r\n  removed?: boolean\r\n) => void;\r\ntype EventContentChange = [destroy: () => void, updateElements: EventContentChangeUpdateElement];\r\n\r\n/**\r\n * Creates a set of helper functions to observe events of elements inside the target element.\r\n * @param target The target element of which the children elements shall be observed. (not only direct children but also nested ones)\r\n * @param eventContentChange The event content change array. (array of tuples: selector and eventname(s))\r\n * @param callback Callback which is called if one of the elements emits the corresponding event.\r\n * @returns A object which contains a set of helper functions to destroy and update the observation of elements.\r\n */\r\nconst createEventContentChange = (\r\n  target: HTMLElement,\r\n  callback: (...args: any) => any,\r\n  eventContentChange?: DOMObserverEventContentChange\r\n): EventContentChange => {\r\n  let destroyed = false;\r\n  const map = eventContentChange ? new WeakMap<Node, (() => any)[]>() : false; // weak map to prevent memory leak for detached elements\r\n  const destroy = () => {\r\n    destroyed = true;\r\n  };\r\n  const updateElements: EventContentChangeUpdateElement = (getElements) => {\r\n    if (map && eventContentChange) {\r\n      const eventElmList = eventContentChange.map((item) => {\r\n        const [selector, eventNames] = item || [];\r\n        const elements = eventNames && selector ? (getElements || find)(selector, target) : [];\r\n        return [elements, eventNames] as const;\r\n      });\r\n\r\n      each(eventElmList, (item) =>\r\n        each(item[0], (elm) => {\r\n          const eventNames = item[1];\r\n          const entries = map.get(elm) || [];\r\n          const isTargetChild = target.contains(elm);\r\n\r\n          if (isTargetChild && eventNames) {\r\n            const removeListener = addEventListener(elm, eventNames, (event: Event) => {\r\n              if (destroyed) {\r\n                removeListener();\r\n                map.delete(elm);\r\n              } else {\r\n                callback(event);\r\n              }\r\n            });\r\n            map.set(elm, push(entries, removeListener));\r\n          } else {\r\n            runEachAndClear(entries);\r\n            map.delete(elm);\r\n          }\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  updateElements();\r\n\r\n  return [destroy, updateElements];\r\n};\r\n\r\n/**\r\n * Creates a DOM observer which observes DOM changes to either the target element or its children.\r\n * @param target The element which shall be observed.\r\n * @param isContentObserver Whether this observer is just observing the target or just the targets children. (not only direct children but also nested ones)\r\n * @param callback The callback which gets called if a change was detected.\r\n * @param options The options for DOM change detection.\r\n * @returns A object which represents the instance of the DOM observer.\r\n */\r\nexport const createDOMObserver = <ContentObserver extends boolean>(\r\n  target: HTMLElement,\r\n  isContentObserver: ContentObserver,\r\n  callback: DOMObserverCallback<ContentObserver>,\r\n  options?: DOMObserverOptions<ContentObserver>\r\n): DOMObserver<ContentObserver> => {\r\n  let isConnected = false;\r\n  const {\r\n    _attributes,\r\n    _styleChangingAttributes,\r\n    _eventContentChange,\r\n    _nestedTargetSelector,\r\n    _ignoreTargetChange,\r\n    _ignoreContentChange,\r\n  } = (options as DOMContentObserverOptions & DOMTargetObserverOptions) || {};\r\n  const debouncedEventContentChange = debounce(\r\n    () => isConnected && (callback as DOMContentObserverCallback)(true),\r\n    { _timeout: 33, _maxDelay: 99 }\r\n  );\r\n  const [destroyEventContentChange, updateEventContentChangeElements] = createEventContentChange(\r\n    target,\r\n    debouncedEventContentChange,\r\n    _eventContentChange\r\n  );\r\n\r\n  // MutationObserver\r\n  const finalAttributes = _attributes || [];\r\n  const finalStyleChangingAttributes = _styleChangingAttributes || [];\r\n  const observedAttributes = concat(finalAttributes, finalStyleChangingAttributes);\r\n  const observerCallback = (\r\n    fromRecords: boolean,\r\n    mutations: MutationRecord[]\r\n  ): void | Parameters<DOMObserverCallback<ContentObserver>> => {\r\n    if (!isEmptyArray(mutations)) {\r\n      const ignoreTargetChange = _ignoreTargetChange || noop;\r\n      const ignoreContentChange = _ignoreContentChange || noop;\r\n      const totalChangedNodes: Node[] = [];\r\n      const targetChangedAttrs: string[] = [];\r\n      let targetStyleChanged: boolean | '' | null | undefined = false;\r\n      let contentChanged: boolean | '' | null | undefined = false;\r\n      let childListChanged: boolean | '' | null | undefined = false;\r\n\r\n      each(mutations, (mutation) => {\r\n        const {\r\n          attributeName,\r\n          target: mutationTarget,\r\n          type,\r\n          oldValue,\r\n          addedNodes,\r\n          removedNodes,\r\n        } = mutation;\r\n        const isAttributesType = type === 'attributes';\r\n        const isChildListType = type === 'childList';\r\n        const targetIsMutationTarget = target === mutationTarget;\r\n        const isAttrChange = isAttributesType && attributeName;\r\n        // isAttrChange check needed, otherwise mutationTarget might not be a valid HTMLElement\r\n        const attributeValue =\r\n          (isAttrChange && getAttr(mutationTarget as HTMLElement, attributeName || '')) || null;\r\n        const attributeChanged = isAttrChange && oldValue !== attributeValue;\r\n        const styleChangingAttrChanged =\r\n          inArray(finalStyleChangingAttributes, attributeName) && attributeChanged;\r\n\r\n        // if is content observer and something changed in children\r\n        if (isContentObserver && (isChildListType || !targetIsMutationTarget)) {\r\n          const contentAttrChanged = isAttributesType && attributeChanged;\r\n          const isNestedTarget =\r\n            contentAttrChanged &&\r\n            _nestedTargetSelector &&\r\n            is(mutationTarget, _nestedTargetSelector);\r\n          const baseAssertion = isNestedTarget\r\n            ? !ignoreTargetChange(mutationTarget, attributeName, oldValue, attributeValue)\r\n            : !isAttributesType || contentAttrChanged;\r\n          const contentFinalChanged =\r\n            baseAssertion && !ignoreContentChange(mutation, !!isNestedTarget, target, options);\r\n\r\n          each(addedNodes, (node) => push(totalChangedNodes, node));\r\n          each(removedNodes, (node) => push(totalChangedNodes, node));\r\n\r\n          contentChanged = contentChanged || contentFinalChanged;\r\n          childListChanged = childListChanged || isChildListType;\r\n        }\r\n        // if is target observer and target attr changed\r\n        if (\r\n          !isContentObserver &&\r\n          targetIsMutationTarget &&\r\n          attributeChanged &&\r\n          !ignoreTargetChange(mutationTarget, attributeName!, oldValue, attributeValue)\r\n        ) {\r\n          push(targetChangedAttrs, attributeName);\r\n          targetStyleChanged = targetStyleChanged || styleChangingAttrChanged;\r\n        }\r\n      });\r\n\r\n      // adds / removes the new elements from the event content change\r\n      updateEventContentChangeElements((selector: string) =>\r\n        deduplicateArray(totalChangedNodes).reduce<Node[]>((arr, node) => {\r\n          push(arr, find(selector, node));\r\n          return is(node, selector) ? push(arr, node) : arr;\r\n        }, [])\r\n      );\r\n\r\n      if (isContentObserver) {\r\n        !fromRecords && contentChanged && (callback as DOMContentObserverCallback)(false);\r\n        return [false] satisfies Parameters<DOMObserverCallback<true>> as Parameters<\r\n          DOMObserverCallback<ContentObserver>\r\n        >;\r\n      }\r\n\r\n      if (!isEmptyArray(targetChangedAttrs) || targetStyleChanged) {\r\n        const args = [\r\n          deduplicateArray(targetChangedAttrs),\r\n          targetStyleChanged,\r\n        ] satisfies Parameters<DOMTargetObserverCallback> & Parameters<DOMObserverCallback<false>>;\r\n        !fromRecords && (callback as DOMTargetObserverCallback).apply(0, args);\r\n\r\n        return args as Parameters<DOMObserverCallback<ContentObserver>>;\r\n      }\r\n    }\r\n  };\r\n  const mutationObserver: MutationObserver = new MutationObserverConstructor!(\r\n    bind(observerCallback, false)\r\n  );\r\n\r\n  return [\r\n    () => {\r\n      mutationObserver.observe(target, {\r\n        attributes: true,\r\n        attributeOldValue: true,\r\n        attributeFilter: observedAttributes,\r\n        subtree: isContentObserver,\r\n        childList: isContentObserver,\r\n        characterData: isContentObserver,\r\n      });\r\n      isConnected = true;\r\n\r\n      return () => {\r\n        if (isConnected) {\r\n          destroyEventContentChange();\r\n          mutationObserver.disconnect();\r\n          isConnected = false;\r\n        }\r\n      };\r\n    },\r\n    () => {\r\n      if (isConnected) {\r\n        debouncedEventContentChange._flush();\r\n        return observerCallback(true, mutationObserver.takeRecords());\r\n      }\r\n    },\r\n  ];\r\n};\r\n","import {\r\n  createCache,\r\n  createDOM,\r\n  runEachAndClear,\r\n  addEventListener,\r\n  addClass,\r\n  push,\r\n  ResizeObserverConstructor,\r\n  removeClass,\r\n  stopPropagation,\r\n  appendChildren,\r\n  getDirectionIsRTL,\r\n  domRectHasDimensions,\r\n  bind,\r\n  noop,\r\n  isArray,\r\n  convertScrollPosition,\r\n  scrollElementTo,\r\n  domRectAppeared,\r\n  concat,\r\n} from '~/support';\r\nimport { getEnvironment } from '~/environment';\r\nimport {\r\n  classNameSizeObserver,\r\n  classNameSizeObserverAppear,\r\n  classNameSizeObserverListener,\r\n} from '~/classnames';\r\nimport { getStaticPluginModuleInstance, sizeObserverPluginName } from '~/plugins';\r\nimport type { CacheValues } from '~/support';\r\nimport type { SizeObserverPlugin } from '~/plugins';\r\n\r\nexport interface SizeObserverOptions {\r\n  /** Whether direction changes should be observed. */\r\n  _direction?: boolean;\r\n  /** Whether appearing should be observed. */\r\n  _appear?: boolean;\r\n}\r\n\r\nexport interface SizeObserverCallbackParams {\r\n  _sizeChanged: boolean;\r\n  _directionIsRTLCache?: CacheValues<boolean>;\r\n  _appear?: boolean;\r\n}\r\n\r\nexport type SizeObserver = () => () => void;\r\n\r\n/**\r\n * Creates a size observer which observes any size, padding, border, margin and box-sizing changes of the target element. Depending on the options also direction and appear can be observed.\r\n * @param target The target element which shall be observed.\r\n * @param onSizeChangedCallback The callback which gets called after a size change was detected.\r\n * @param options The options for size detection, whether to observe also direction and appear.\r\n * @returns A object which represents the instance of the size observer.\r\n */\r\nexport const createSizeObserver = (\r\n  target: HTMLElement,\r\n  onSizeChangedCallback: (params: SizeObserverCallbackParams) => any,\r\n  options?: SizeObserverOptions\r\n): SizeObserver => {\r\n  const scrollAmount = 3333333;\r\n  const { _direction: observeDirectionChange, _appear: observeAppearChange } = options || {};\r\n  const sizeObserverPlugin =\r\n    getStaticPluginModuleInstance<typeof SizeObserverPlugin>(sizeObserverPluginName);\r\n  const { _rtlScrollBehavior: rtlScrollBehavior } = getEnvironment();\r\n  const getIsDirectionRTL = bind(getDirectionIsRTL, target);\r\n  const [updateResizeObserverContentRectCache] = createCache<DOMRectReadOnly | false>({\r\n    _initialValue: false,\r\n    _alwaysUpdateValues: true,\r\n  });\r\n\r\n  return () => {\r\n    const destroyFns: (() => void)[] = [];\r\n    const baseElements = createDOM(\r\n      `<div class=\"${classNameSizeObserver}\"><div class=\"${classNameSizeObserverListener}\"></div></div>`\r\n    );\r\n    const sizeObserver = baseElements[0] as HTMLElement;\r\n    const listenerElement = sizeObserver.firstChild as HTMLElement;\r\n    const onSizeChangedCallbackProxy = (\r\n      sizeChangedContext?: CacheValues<boolean> | ResizeObserverEntry | boolean\r\n    ) => {\r\n      const isResizeObserverCall = sizeChangedContext instanceof ResizeObserverEntry;\r\n      const hasDirectionCache = !isResizeObserverCall && isArray(sizeChangedContext);\r\n\r\n      let skip = false;\r\n      let appear = false;\r\n      let doDirectionScroll = true; // always true if sizeChangedContext is Event (appear callback or RO. Polyfill)\r\n\r\n      // if triggered from RO.\r\n      if (isResizeObserverCall) {\r\n        const [currRContentRect, , prevContentRect] = updateResizeObserverContentRectCache(\r\n          sizeChangedContext.contentRect\r\n        );\r\n        const hasDimensions = domRectHasDimensions(currRContentRect);\r\n        const appeared = domRectAppeared(currRContentRect, prevContentRect);\r\n        const firstCall = !prevContentRect;\r\n        appear = firstCall || appeared;\r\n        skip = !appear && !hasDimensions; // skip if display is none or when window resize\r\n\r\n        doDirectionScroll = !skip; // direction scroll when not skipping\r\n      }\r\n      // else if its triggered with DirectionCache\r\n      else if (hasDirectionCache) {\r\n        [, doDirectionScroll] = sizeChangedContext; // direction scroll when DirectionCache changed, false otherwise\r\n      }\r\n      // else if it triggered with appear from polyfill\r\n      else {\r\n        appear = sizeChangedContext === true;\r\n      }\r\n\r\n      if (observeDirectionChange && doDirectionScroll) {\r\n        const rtl = hasDirectionCache ? sizeChangedContext[0] : getDirectionIsRTL(sizeObserver);\r\n        scrollElementTo(sizeObserver, {\r\n          x: convertScrollPosition(scrollAmount, scrollAmount, rtl && rtlScrollBehavior),\r\n          y: scrollAmount,\r\n        });\r\n      }\r\n\r\n      if (!skip) {\r\n        onSizeChangedCallback({\r\n          _directionIsRTLCache: hasDirectionCache ? sizeChangedContext : undefined,\r\n          _sizeChanged: !hasDirectionCache,\r\n          _appear: appear,\r\n        });\r\n      }\r\n    };\r\n\r\n    if (ResizeObserverConstructor) {\r\n      const resizeObserverInstance = new ResizeObserverConstructor((entries) =>\r\n        onSizeChangedCallbackProxy(entries.pop())\r\n      );\r\n      resizeObserverInstance.observe(listenerElement);\r\n      push(destroyFns, () => {\r\n        resizeObserverInstance.disconnect();\r\n      });\r\n    } else if (sizeObserverPlugin) {\r\n      const [pluginAppearCallback, pluginDestroyFns] = sizeObserverPlugin(\r\n        listenerElement,\r\n        onSizeChangedCallbackProxy,\r\n        observeAppearChange\r\n      );\r\n      push(\r\n        destroyFns,\r\n        concat(\r\n          [\r\n            addClass(sizeObserver, classNameSizeObserverAppear),\r\n            addEventListener(sizeObserver, 'animationstart', pluginAppearCallback),\r\n          ],\r\n          pluginDestroyFns\r\n        )\r\n      );\r\n    } else {\r\n      return noop;\r\n    }\r\n\r\n    if (observeDirectionChange) {\r\n      const [updateDirectionIsRTLCache] = createCache(\r\n        {\r\n          _initialValue: undefined,\r\n        },\r\n        getIsDirectionRTL\r\n      );\r\n\r\n      push(\r\n        destroyFns,\r\n        addEventListener(sizeObserver, 'scroll', (event) => {\r\n          const directionIsRTLCacheValues = updateDirectionIsRTLCache();\r\n          const [directionIsRTLCache, directionIsRTLCacheChanged, directionIsRTLCachePrevious] =\r\n            directionIsRTLCacheValues;\r\n          if (directionIsRTLCacheChanged) {\r\n            removeClass(listenerElement, 'ltr rtl');\r\n            addClass(listenerElement, directionIsRTLCache ? 'rtl' : 'ltr');\r\n\r\n            onSizeChangedCallbackProxy([\r\n              !!directionIsRTLCache,\r\n              directionIsRTLCacheChanged,\r\n              directionIsRTLCachePrevious,\r\n            ]);\r\n          }\r\n\r\n          stopPropagation(event);\r\n        })\r\n      );\r\n    }\r\n\r\n    return bind(runEachAndClear, push(destroyFns, appendChildren(target, sizeObserver)));\r\n  };\r\n};\r\n","import {\r\n  createDiv,\r\n  offsetSize,\r\n  runEachAndClear,\r\n  createCache,\r\n  push,\r\n  IntersectionObserverConstructor,\r\n  appendChildren,\r\n  bind,\r\n} from '~/support';\r\nimport { createSizeObserver } from '~/observers/sizeObserver';\r\nimport { classNameTrinsicObserver } from '~/classnames';\r\nimport type { WH, CacheValues } from '~/support';\r\n\r\nexport type TrinsicObserverCallback = (heightIntrinsic: CacheValues<boolean>) => any;\r\nexport type TrinsicObserver = [\r\n  construct: () => () => void,\r\n  update: () => void | false | null | undefined | Parameters<TrinsicObserverCallback>\r\n];\r\n\r\n/**\r\n * Creates a trinsic observer which observes changes to intrinsic or extrinsic sizing for the height of the target element.\r\n * @param target The element which shall be observed.\r\n * @param onTrinsicChangedCallback The callback which gets called after a change was detected.\r\n * @returns A object which represents the instance of the trinsic observer.\r\n */\r\nexport const createTrinsicObserver = (\r\n  target: HTMLElement,\r\n  onTrinsicChangedCallback: TrinsicObserverCallback\r\n): TrinsicObserver => {\r\n  let intersectionObserverInstance: undefined | IntersectionObserver;\r\n  const isHeightIntrinsic = (ioEntryOrSize: IntersectionObserverEntry | WH<number>): boolean =>\r\n    (ioEntryOrSize as WH<number>).h === 0 ||\r\n    (ioEntryOrSize as IntersectionObserverEntry).isIntersecting ||\r\n    (ioEntryOrSize as IntersectionObserverEntry).intersectionRatio > 0;\r\n  const trinsicObserver = createDiv(classNameTrinsicObserver);\r\n  const [updateHeightIntrinsicCache] = createCache({\r\n    _initialValue: false,\r\n  });\r\n  const triggerOnTrinsicChangedCallback = (\r\n    updateValue: IntersectionObserverEntry | WH<number> | undefined,\r\n    fromRecords?: boolean\r\n  ): void | Parameters<TrinsicObserverCallback> => {\r\n    if (updateValue) {\r\n      const heightIntrinsic = updateHeightIntrinsicCache(isHeightIntrinsic(updateValue));\r\n      const [, heightIntrinsicChanged] = heightIntrinsic;\r\n      return (\r\n        heightIntrinsicChanged &&\r\n        !fromRecords &&\r\n        onTrinsicChangedCallback(heightIntrinsic) && [heightIntrinsic]\r\n      );\r\n    }\r\n  };\r\n  const intersectionObserverCallback = (\r\n    fromRecords: boolean,\r\n    entries: IntersectionObserverEntry[]\r\n  ) => triggerOnTrinsicChangedCallback(entries.pop(), fromRecords);\r\n\r\n  return [\r\n    () => {\r\n      const destroyFns: (() => void)[] = [];\r\n\r\n      if (IntersectionObserverConstructor) {\r\n        intersectionObserverInstance = new IntersectionObserverConstructor(\r\n          bind(intersectionObserverCallback, false),\r\n          { root: target }\r\n        );\r\n        intersectionObserverInstance.observe(trinsicObserver);\r\n        push(destroyFns, () => {\r\n          intersectionObserverInstance!.disconnect();\r\n        });\r\n      } else {\r\n        const onSizeChanged = () => {\r\n          const newSize = offsetSize(trinsicObserver);\r\n          triggerOnTrinsicChangedCallback(newSize);\r\n        };\r\n        push(destroyFns, createSizeObserver(trinsicObserver, onSizeChanged)());\r\n        onSizeChanged();\r\n      }\r\n\r\n      return bind(runEachAndClear, push(destroyFns, appendChildren(target, trinsicObserver)));\r\n    },\r\n    () =>\r\n      intersectionObserverInstance &&\r\n      intersectionObserverCallback(true, intersectionObserverInstance.takeRecords()),\r\n  ];\r\n};\r\n","import {\r\n  ResizeObserverConstructor,\r\n  assignDeep,\r\n  closest,\r\n  createCache,\r\n  debounce,\r\n  getDirectionIsRTL,\r\n  each,\r\n  equalWH,\r\n  fractionalSize,\r\n  isArray,\r\n  isFunction,\r\n  isNumber,\r\n  isString,\r\n  keys,\r\n  liesBetween,\r\n  removeAttrs,\r\n  scrollSize,\r\n  getElmentScroll,\r\n  scrollElementTo,\r\n  inArray,\r\n  domRectAppeared,\r\n  concat,\r\n  getAttr,\r\n  setAttrs,\r\n} from '~/support';\r\nimport { createDOMObserver, createSizeObserver, createTrinsicObserver } from '~/observers';\r\nimport { getEnvironment } from '~/environment';\r\nimport {\r\n  classNameScrollbar,\r\n  dataAttributeHost,\r\n  dataAttributeViewport,\r\n  dataValueHostUpdating,\r\n  dataValueViewportArrange,\r\n  dataValueViewportOverflowVisible,\r\n} from '~/classnames';\r\nimport { getStaticPluginModuleInstance, scrollbarsHidingPluginName } from '~/plugins';\r\nimport type { Options, OptionsCheckFn } from '~/options';\r\nimport type { ScrollbarsHidingPlugin } from '~/plugins';\r\nimport type { SizeObserverCallbackParams } from '~/observers';\r\nimport type { StructureSetupElementsObj } from '../structureSetup/structureSetup.elements';\r\nimport type { Setup, SetupUpdateInfo, StructureSetupState } from '~/setups';\r\nimport type { CacheValues, WH } from '~/support';\r\nimport type { PlainObject } from '~/typings';\r\n\r\nexport interface ObserversSetupState {\r\n  _heightIntrinsic: boolean;\r\n  _directionIsRTL: boolean;\r\n}\r\n\r\nexport interface ObserversSetupUpdateInfo extends SetupUpdateInfo {\r\n  _takeRecords?: boolean;\r\n}\r\n\r\nexport type ObserversSetupUpdateHints = {\r\n  _sizeChanged?: boolean;\r\n  _directionChanged?: boolean;\r\n  _heightIntrinsicChanged?: boolean;\r\n  _hostMutation?: boolean;\r\n  _contentMutation?: boolean;\r\n  _appear?: boolean;\r\n  _scrollbarSizeChanged?: boolean;\r\n};\r\n\r\nexport type ObserversSetup = Setup<\r\n  ObserversSetupUpdateInfo,\r\n  ObserversSetupState,\r\n  ObserversSetupUpdateHints\r\n>;\r\n\r\nexport const createObserversSetup = (\r\n  structureSetupElements: StructureSetupElementsObj,\r\n  structureSetupState: StructureSetupState,\r\n  getCurrentOption: OptionsCheckFn<Options>,\r\n  onObserversUpdated: (updateHints: ObserversSetupUpdateHints) => void\r\n): ObserversSetup => {\r\n  let debounceTimeout: number | false | undefined;\r\n  let debounceMaxDelay: number | false | undefined;\r\n  let updateContentMutationObserver: (() => void) | undefined;\r\n  let destroyContentMutationObserver: (() => void) | undefined;\r\n  let prevContentRect: DOMRectReadOnly | undefined;\r\n  let prevDirectionIsRTL: boolean | undefined;\r\n\r\n  const { _nativeScrollbarsHiding } = getEnvironment();\r\n\r\n  const hostSelector = `[${dataAttributeHost}]`;\r\n\r\n  // TODO: observer textarea attrs if textarea\r\n\r\n  const viewportSelector = `[${dataAttributeViewport}]`;\r\n  const viewportAttrsFromTarget = ['tabindex'];\r\n  const baseStyleChangingAttrsTextarea = ['wrap', 'cols', 'rows'];\r\n  const baseStyleChangingAttrs = ['id', 'class', 'style', 'open'];\r\n  const {\r\n    _target,\r\n    _host,\r\n    _viewport,\r\n    _content,\r\n    _isTextarea,\r\n    _viewportIsTarget,\r\n    _viewportHasClass,\r\n    _viewportAddRemoveClass,\r\n  } = structureSetupElements;\r\n\r\n  const state: ObserversSetupState = {\r\n    _heightIntrinsic: false,\r\n    _directionIsRTL: getDirectionIsRTL(_target),\r\n  };\r\n  const env = getEnvironment();\r\n  const scrollbarsHidingPlugin = getStaticPluginModuleInstance<typeof ScrollbarsHidingPlugin>(\r\n    scrollbarsHidingPluginName\r\n  );\r\n\r\n  const [updateContentSizeCache] = createCache<WH<number>>(\r\n    {\r\n      _equal: equalWH,\r\n      _initialValue: { w: 0, h: 0 },\r\n    },\r\n    () => {\r\n      const _undoViewportArrange =\r\n        scrollbarsHidingPlugin &&\r\n        scrollbarsHidingPlugin._viewportArrangement(\r\n          structureSetupElements,\r\n          structureSetupState,\r\n          state,\r\n          env,\r\n          getCurrentOption\r\n        )._undoViewportArrange;\r\n\r\n      const hasOver = _viewportHasClass(dataValueViewportOverflowVisible);\r\n      const isArranged = !_viewportIsTarget && _viewportHasClass(dataValueViewportArrange);\r\n      const scrollOffset = isArranged && getElmentScroll(_viewport);\r\n\r\n      _viewportAddRemoveClass(dataValueViewportOverflowVisible);\r\n      _viewportIsTarget && _viewportAddRemoveClass(dataValueHostUpdating, true);\r\n      const redoViewportArrange = isArranged && _undoViewportArrange && _undoViewportArrange()[0];\r\n\r\n      const contentScroll = scrollSize(_content);\r\n      const viewportScroll = scrollSize(_viewport);\r\n      const fractional = fractionalSize(_viewport);\r\n\r\n      _viewportAddRemoveClass(dataValueViewportOverflowVisible, hasOver);\r\n      _viewportIsTarget && _viewportAddRemoveClass(dataValueHostUpdating);\r\n      redoViewportArrange && redoViewportArrange();\r\n\r\n      scrollElementTo(_viewport, scrollOffset);\r\n\r\n      return {\r\n        w: viewportScroll.w + contentScroll.w + fractional.w,\r\n        h: viewportScroll.h + contentScroll.h + fractional.h,\r\n      };\r\n    }\r\n  );\r\n\r\n  const contentMutationObserverAttr = _isTextarea\r\n    ? baseStyleChangingAttrsTextarea\r\n    : concat(baseStyleChangingAttrs, baseStyleChangingAttrsTextarea);\r\n\r\n  const onObserversUpdatedDebounced = debounce(onObserversUpdated, {\r\n    _timeout: () => debounceTimeout,\r\n    _maxDelay: () => debounceMaxDelay,\r\n    _mergeParams(prev, curr) {\r\n      const [prevObj] = prev;\r\n      const [currObj] = curr;\r\n      return [\r\n        concat(keys(prevObj), keys(currObj)).reduce((obj, key) => {\r\n          obj[key] = prevObj[key as keyof typeof prevObj] || currObj[key as keyof typeof currObj];\r\n          return obj;\r\n        }, {} as PlainObject),\r\n      ] as [Partial<ObserversSetupUpdateHints>];\r\n    },\r\n  });\r\n\r\n  const setDirectionWhenViewportIsTarget = (updateHints: ObserversSetupUpdateHints) => {\r\n    if (_viewportIsTarget) {\r\n      const newDirectionIsRTL = getDirectionIsRTL(_target);\r\n      assignDeep(updateHints, { _directionChanged: prevDirectionIsRTL !== newDirectionIsRTL });\r\n      assignDeep(state, { _directionIsRTL: newDirectionIsRTL });\r\n      prevDirectionIsRTL = newDirectionIsRTL;\r\n    }\r\n  };\r\n\r\n  const updateViewportAttrsFromHost = (attributes?: string[]) => {\r\n    each(attributes || viewportAttrsFromTarget, (attribute) => {\r\n      if (inArray(viewportAttrsFromTarget, attribute)) {\r\n        const hostAttr = getAttr(_host, attribute);\r\n        if (isString(hostAttr)) {\r\n          setAttrs(_viewport, attribute, hostAttr);\r\n        } else {\r\n          removeAttrs(_viewport, attribute);\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  const onTrinsicChanged = (\r\n    heightIntrinsicCache: CacheValues<boolean>,\r\n    fromRecords?: true\r\n  ): ObserversSetupUpdateHints => {\r\n    const [heightIntrinsic, heightIntrinsicChanged] = heightIntrinsicCache;\r\n    const updateHints: ObserversSetupUpdateHints = {\r\n      _heightIntrinsicChanged: heightIntrinsicChanged,\r\n    };\r\n\r\n    assignDeep(state, { _heightIntrinsic: heightIntrinsic });\r\n    !fromRecords && onObserversUpdated(updateHints);\r\n\r\n    return updateHints;\r\n  };\r\n\r\n  const onSizeChanged = ({\r\n    _sizeChanged,\r\n    _directionIsRTLCache,\r\n    _appear,\r\n  }: SizeObserverCallbackParams) => {\r\n    const exclusiveSizeChange = _sizeChanged && !_appear && !_directionIsRTLCache;\r\n    const updateFn =\r\n      // use debounceed update:\r\n      // if native scrollbars hiding is supported\r\n      // and if the update is more than just a exclusive sizeChange (e.g. size change + appear, or size change + direction)\r\n      !exclusiveSizeChange && _nativeScrollbarsHiding\r\n        ? onObserversUpdatedDebounced\r\n        : onObserversUpdated;\r\n\r\n    const [directionIsRTL, directionIsRTLChanged] = _directionIsRTLCache || [];\r\n    const updateHints: ObserversSetupUpdateHints = {\r\n      _sizeChanged: _sizeChanged || _appear,\r\n      _appear,\r\n      _directionChanged: directionIsRTLChanged,\r\n    };\r\n\r\n    setDirectionWhenViewportIsTarget(updateHints);\r\n\r\n    _directionIsRTLCache && assignDeep(state, { _directionIsRTL: directionIsRTL });\r\n\r\n    updateFn(updateHints);\r\n  };\r\n\r\n  const onContentMutation = (\r\n    contentChangedThroughEvent: boolean,\r\n    fromRecords?: true\r\n  ): ObserversSetupUpdateHints => {\r\n    const [, _contentMutation] = updateContentSizeCache();\r\n    const updateHints: ObserversSetupUpdateHints = {\r\n      _contentMutation,\r\n    };\r\n\r\n    setDirectionWhenViewportIsTarget(updateHints);\r\n\r\n    // if contentChangedThroughEvent is true its already debounced\r\n    const updateFn = contentChangedThroughEvent ? onObserversUpdated : onObserversUpdatedDebounced;\r\n\r\n    _contentMutation && !fromRecords && updateFn(updateHints);\r\n\r\n    return updateHints;\r\n  };\r\n\r\n  const onHostMutation = (\r\n    targetChangedAttrs: string[],\r\n    targetStyleChanged: boolean,\r\n    fromRecords?: true\r\n  ): ObserversSetupUpdateHints => {\r\n    const updateHints: ObserversSetupUpdateHints = {\r\n      _hostMutation: targetStyleChanged,\r\n    };\r\n\r\n    setDirectionWhenViewportIsTarget(updateHints);\r\n\r\n    if (targetStyleChanged && !fromRecords) {\r\n      onObserversUpdatedDebounced(updateHints);\r\n    } else if (!_viewportIsTarget) {\r\n      updateViewportAttrsFromHost(targetChangedAttrs);\r\n    }\r\n\r\n    return updateHints;\r\n  };\r\n\r\n  const { _addResizeListener } = env;\r\n  const [constructTrinsicObserver, updateTrinsicObserver] = _content\r\n    ? createTrinsicObserver(_host, onTrinsicChanged)\r\n    : [];\r\n\r\n  const constructSizeObserver =\r\n    !_viewportIsTarget &&\r\n    createSizeObserver(_host, onSizeChanged, {\r\n      _appear: true,\r\n      _direction: true,\r\n    });\r\n\r\n  const [constructHostMutationObserver, updateHostMutationObserver] = createDOMObserver(\r\n    _host,\r\n    false,\r\n    onHostMutation,\r\n    {\r\n      _styleChangingAttributes: baseStyleChangingAttrs,\r\n      _attributes: concat(baseStyleChangingAttrs, viewportAttrsFromTarget),\r\n    }\r\n  );\r\n\r\n  const viewportIsTargetResizeObserver =\r\n    _viewportIsTarget &&\r\n    ResizeObserverConstructor &&\r\n    new ResizeObserverConstructor((entries) => {\r\n      const currContentRect = entries[entries.length - 1].contentRect;\r\n      onSizeChanged({\r\n        _sizeChanged: true,\r\n        _appear: domRectAppeared(currContentRect, prevContentRect),\r\n      });\r\n      prevContentRect = currContentRect;\r\n    });\r\n\r\n  return [\r\n    () => {\r\n      // order is matter!\r\n      updateViewportAttrsFromHost();\r\n      viewportIsTargetResizeObserver && viewportIsTargetResizeObserver.observe(_host);\r\n      const destroySizeObserver = constructSizeObserver && constructSizeObserver();\r\n      const destroyTrinsicObserver = constructTrinsicObserver && constructTrinsicObserver();\r\n      const destroyHostMutationObserver = constructHostMutationObserver();\r\n      const removeResizeListener = _addResizeListener((_scrollbarSizeChanged) => {\r\n        const [, _contentMutation] = updateContentSizeCache();\r\n        onObserversUpdatedDebounced({ _scrollbarSizeChanged, _contentMutation });\r\n      });\r\n\r\n      return () => {\r\n        viewportIsTargetResizeObserver && viewportIsTargetResizeObserver.disconnect();\r\n        destroySizeObserver && destroySizeObserver();\r\n        destroyTrinsicObserver && destroyTrinsicObserver();\r\n        destroyContentMutationObserver && destroyContentMutationObserver();\r\n        destroyHostMutationObserver();\r\n        removeResizeListener();\r\n      };\r\n    },\r\n    ({ _checkOption, _takeRecords, _force }) => {\r\n      const updateHints: ObserversSetupUpdateHints = {};\r\n\r\n      const [ignoreMutation] = _checkOption('update.ignoreMutation');\r\n      const [attributes, attributesChanged] = _checkOption('update.attributes');\r\n      const [elementEvents, elementEventsChanged] = _checkOption('update.elementEvents');\r\n      const [debounceValue, debounceChanged] = _checkOption('update.debounce');\r\n      const contentMutationObserverChanged = elementEventsChanged || attributesChanged;\r\n      const takeRecords = _takeRecords || _force;\r\n      const ignoreMutationFromOptions = (mutation: MutationRecord) =>\r\n        isFunction(ignoreMutation) && ignoreMutation(mutation);\r\n\r\n      if (contentMutationObserverChanged) {\r\n        updateContentMutationObserver && updateContentMutationObserver();\r\n        destroyContentMutationObserver && destroyContentMutationObserver();\r\n\r\n        const [construct, update] = createDOMObserver(\r\n          _content || _viewport,\r\n          true,\r\n          onContentMutation,\r\n          {\r\n            _attributes: concat(contentMutationObserverAttr, attributes || []),\r\n            _eventContentChange: elementEvents,\r\n            _nestedTargetSelector: hostSelector,\r\n            _ignoreContentChange: (mutation, isNestedTarget) => {\r\n              const { target: mutationTarget, attributeName } = mutation;\r\n              const ignore =\r\n                !isNestedTarget && attributeName && !_viewportIsTarget\r\n                  ? liesBetween(mutationTarget, hostSelector, viewportSelector)\r\n                  : false;\r\n              return (\r\n                ignore ||\r\n                !!closest(mutationTarget, `.${classNameScrollbar}`) || // ignore explicitely all scrollbar elements\r\n                !!ignoreMutationFromOptions(mutation)\r\n              );\r\n            },\r\n          }\r\n        );\r\n\r\n        destroyContentMutationObserver = construct();\r\n        updateContentMutationObserver = update;\r\n      }\r\n\r\n      if (debounceChanged) {\r\n        onObserversUpdatedDebounced._flush();\r\n        if (isArray(debounceValue)) {\r\n          const timeout = debounceValue[0];\r\n          const maxWait = debounceValue[1];\r\n          debounceTimeout = isNumber(timeout) && timeout;\r\n          debounceMaxDelay = isNumber(maxWait) && maxWait;\r\n        } else if (isNumber(debounceValue)) {\r\n          debounceTimeout = debounceValue;\r\n          debounceMaxDelay = false;\r\n        } else {\r\n          debounceTimeout = false;\r\n          debounceMaxDelay = false;\r\n        }\r\n      }\r\n\r\n      if (takeRecords) {\r\n        const hostUpdateResult = updateHostMutationObserver();\r\n        const trinsicUpdateResult = updateTrinsicObserver && updateTrinsicObserver();\r\n        const contentUpdateResult =\r\n          updateContentMutationObserver && updateContentMutationObserver();\r\n\r\n        hostUpdateResult &&\r\n          assignDeep(\r\n            updateHints,\r\n            onHostMutation(hostUpdateResult[0], hostUpdateResult[1], takeRecords)\r\n          );\r\n\r\n        trinsicUpdateResult &&\r\n          assignDeep(updateHints, onTrinsicChanged(trinsicUpdateResult[0], takeRecords));\r\n\r\n        contentUpdateResult &&\r\n          assignDeep(updateHints, onContentMutation(contentUpdateResult[0], takeRecords));\r\n      }\r\n\r\n      setDirectionWhenViewportIsTarget(updateHints);\r\n\r\n      return updateHints;\r\n    },\r\n    state,\r\n  ];\r\n};\r\n","import {\r\n  addClass,\r\n  appendChildren,\r\n  createDiv,\r\n  getDirectionIsRTL,\r\n  each,\r\n  getTrasformTranslateValue,\r\n  isBoolean,\r\n  parent,\r\n  push,\r\n  removeClass,\r\n  removeElements,\r\n  runEachAndClear,\r\n  scrollT,\r\n  bind,\r\n  getElmentScroll,\r\n  inArray,\r\n  strWidth,\r\n  strHeight,\r\n  concat,\r\n  assignDeep,\r\n  ratioToCssPercent,\r\n  numberToCssPx,\r\n  setStyles,\r\n  createOrKeepArray,\r\n  getRawScrollBounds,\r\n  getRawScrollRatio,\r\n  getBoundingClientRect,\r\n  capNumber,\r\n} from '~/support';\r\nimport {\r\n  classNameScrollbar,\r\n  classNameScrollbarHorizontal,\r\n  classNameScrollbarVertical,\r\n  classNameScrollbarTrack,\r\n  classNameScrollbarHandle,\r\n} from '~/classnames';\r\nimport { getEnvironment } from '~/environment';\r\nimport { dynamicInitializationElement as generalDynamicInitializationElement } from '~/initialization';\r\nimport type { RTLScrollBehavior } from '~/support';\r\nimport type {\r\n  InitializationTarget,\r\n  InitializationTargetElement,\r\n  InitializationTargetObject,\r\n} from '~/initialization';\r\nimport type { StructureSetupElementsObj } from '../structureSetup/structureSetup.elements';\r\nimport type { ScrollbarsSetupEvents } from './scrollbarsSetup.events';\r\nimport type { StyleObject } from '~/typings';\r\nimport type { StructureSetupState } from '../structureSetup';\r\n\r\nexport interface ScrollbarStructure {\r\n  _scrollbar: HTMLElement;\r\n  _track: HTMLElement;\r\n  _handle: HTMLElement;\r\n}\r\n\r\nexport interface ScrollbarsSetupElement {\r\n  _scrollTimeline: AnimationTimeline | undefined;\r\n  _scrollbarStructures: ScrollbarStructure[];\r\n  _clone: () => ScrollbarStructure;\r\n  _style: (\r\n    elmStyle: (\r\n      scrollbarStructure: ScrollbarStructure\r\n    ) => [HTMLElement | false | null | undefined, StyleObject]\r\n  ) => void;\r\n}\r\n\r\nexport interface ScrollbarsSetupElementsObj {\r\n  _scrollbarsAddRemoveClass: (\r\n    classNames: string | false | null | undefined,\r\n    add?: boolean,\r\n    isHorizontal?: boolean\r\n  ) => void;\r\n  _refreshScrollbarsHandleLength: () => void;\r\n  _refreshScrollbarsHandleOffset: () => void;\r\n  _refreshScrollbarsScrollbarOffset: () => void;\r\n  _horizontal: ScrollbarsSetupElement;\r\n  _vertical: ScrollbarsSetupElement;\r\n}\r\n\r\nexport type ScrollbarsSetupElements = [\r\n  elements: ScrollbarsSetupElementsObj,\r\n  appendElements: () => () => void\r\n];\r\n\r\ntype PotentialAnimation = Animation | false | null | undefined;\r\n\r\nexport const createScrollbarsSetupElements = (\r\n  target: InitializationTarget,\r\n  structureSetupElements: StructureSetupElementsObj,\r\n  structureSetupState: StructureSetupState,\r\n  scrollbarsSetupEvents: ScrollbarsSetupEvents\r\n): ScrollbarsSetupElements => {\r\n  const { _getDefaultInitialization, _rtlScrollBehavior } = getEnvironment();\r\n  const { scrollbars: defaultInitScrollbars } = _getDefaultInitialization();\r\n  const { slot: defaultInitScrollbarsSlot } = defaultInitScrollbars;\r\n  const {\r\n    _target,\r\n    _host,\r\n    _viewport,\r\n    _targetIsElm,\r\n    _scrollOffsetElement,\r\n    _isBody,\r\n    _viewportIsTarget,\r\n  } = structureSetupElements;\r\n  const { scrollbars: scrollbarsInit } = (_targetIsElm ? {} : target) as InitializationTargetObject;\r\n  const { slot: initScrollbarsSlot } = scrollbarsInit || {};\r\n  const elementAnimations = new Map<HTMLElement, PotentialAnimation[]>();\r\n  const initScrollTimeline = (axis: 'x' | 'y') =>\r\n    scrollT &&\r\n    new scrollT({\r\n      source: _scrollOffsetElement,\r\n      axis,\r\n    });\r\n  const scrollTimelineX = initScrollTimeline('x');\r\n  const scrollTimelineY = initScrollTimeline('y');\r\n  const evaluatedScrollbarSlot = generalDynamicInitializationElement<\r\n    [InitializationTargetElement, HTMLElement, HTMLElement]\r\n  >(\r\n    [_target, _host, _viewport],\r\n    () => (_viewportIsTarget && _isBody ? _target : _host),\r\n    defaultInitScrollbarsSlot,\r\n    initScrollbarsSlot\r\n  );\r\n\r\n  /**\r\n   * Gets the scrollbar handle length ratio.\r\n   * @param isHorizontal Whether the axis is horizontal.\r\n   * @param scrollbarStructure The scrollbar structure. Only passed when the length ratio is calculated for the offset ratio (respects handle min. & max. size via. css)\r\n   * @returns The scrollbar handle length ratio.\r\n   */\r\n  const getScrollbarHandleLengthRatio = (\r\n    isHorizontal?: boolean,\r\n    scrollbarStructure?: ScrollbarStructure\r\n  ) => {\r\n    if (scrollbarStructure) {\r\n      const axis = isHorizontal ? strWidth : strHeight;\r\n      const { _track, _handle } = scrollbarStructure;\r\n\r\n      const handleSize = getBoundingClientRect(_handle)[axis];\r\n      const trackSize = getBoundingClientRect(_track)[axis];\r\n\r\n      return capNumber(0, 1, handleSize / trackSize || 0);\r\n    }\r\n\r\n    const axis = isHorizontal ? 'x' : 'y';\r\n    const { _overflowAmount, _overflowEdge } = structureSetupState;\r\n\r\n    const viewportSize = _overflowEdge[axis];\r\n    const overflowAmount = _overflowAmount[axis];\r\n\r\n    return capNumber(0, 1, viewportSize / (viewportSize + overflowAmount) || 0);\r\n  };\r\n\r\n  /**\r\n   * Gets the scrollbar handle offset ratio.\r\n   * @param structureSetupState The structure setup state.\r\n   * @param scrollbarStructure The scrollbar structure.\r\n   * @param scrollPercent The scroll percent 0..1.\r\n   * @param isHorizontal Whether the axis is horizontal.\r\n   * @returns The scrollbar handle offset ratio.\r\n   */\r\n  const getScrollbarHandleOffsetRatio = (\r\n    scrollbarStructure: ScrollbarStructure,\r\n    scrollPercent: number,\r\n    isHorizontal?: boolean,\r\n    rtlScrollBehavior?: RTLScrollBehavior\r\n  ) => {\r\n    const lengthRatio = getScrollbarHandleLengthRatio(isHorizontal, scrollbarStructure);\r\n\r\n    return (\r\n      (1 / lengthRatio) *\r\n        (1 - lengthRatio) *\r\n        (rtlScrollBehavior ? 1 - scrollPercent : scrollPercent) || 0\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Adds additional directional keyframes to the passed keyframes.\r\n   * @param keyframes The keyframes.\r\n   * @param directionRTL Whether the direction is RTL.\r\n   * @returns The passed keyframes with additional directional keyframes.\r\n   */\r\n  const addDirectionRTLKeyframes = (\r\n    keyframes: Keyframe[] | PropertyIndexedKeyframes | null,\r\n    directionRTL?: boolean | RTLScrollBehavior\r\n  ) =>\r\n    assignDeep(\r\n      keyframes,\r\n      directionRTL\r\n        ? {\r\n            clear: ['left'], // dummy keyframe for direction rtl animation because of chrome bug\r\n          }\r\n        : {}\r\n    );\r\n\r\n  /**\r\n   * Cancels the animations of the passed elements or of all elements if no elements are passed.\r\n   * @param elements The elements of which the animation shall be canceled.\r\n   */\r\n  const cancelElementAnimations = (elements?: HTMLElement | HTMLElement[]) => {\r\n    elementAnimations.forEach((currAnimations, element) => {\r\n      const doCancel = elements ? inArray(createOrKeepArray(elements), element) : true;\r\n      if (doCancel) {\r\n        each(currAnimations || [], (animation) => {\r\n          animation && animation.cancel();\r\n        });\r\n        elementAnimations.delete(element);\r\n      }\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Sets of overwrites the animation of the passed element.\r\n   * @param element The element of which the animation shall be set.\r\n   * @param timeline The animation timeline of the animation.\r\n   * @param keyframes The keyframes of the animation.\r\n   * @param composite The composite information of the animation.\r\n   */\r\n  const setElementAnimation = (\r\n    element: HTMLElement,\r\n    timeline: AnimationTimeline,\r\n    keyframes: Keyframe[] | PropertyIndexedKeyframes | null,\r\n    composite?: CompositeOperation\r\n  ) => {\r\n    const activeAnimations = elementAnimations.get(element) || [];\r\n    const activeAnimation = activeAnimations.find(\r\n      (animation) => animation && animation.timeline === timeline\r\n    );\r\n\r\n    if (activeAnimation) {\r\n      activeAnimation.effect = new KeyframeEffect(element, keyframes, { composite });\r\n    } else {\r\n      elementAnimations.set(\r\n        element,\r\n        concat(activeAnimations, [\r\n          element.animate(keyframes, {\r\n            timeline,\r\n            composite,\r\n          }),\r\n        ])\r\n      );\r\n    }\r\n  };\r\n\r\n  const scrollbarStructureAddRemoveClass = (\r\n    scrollbarStructures: ScrollbarStructure[],\r\n    classNames: string | false | null | undefined,\r\n    add?: boolean\r\n  ) => {\r\n    const action = add ? addClass : removeClass;\r\n    each(scrollbarStructures, (scrollbarStructure) => {\r\n      action(scrollbarStructure._scrollbar, classNames);\r\n    });\r\n  };\r\n  const scrollbarStyle = (\r\n    scrollbarStructures: ScrollbarStructure[],\r\n    elmStyle: (\r\n      scrollbarStructure: ScrollbarStructure\r\n    ) => [HTMLElement | false | null | undefined, StyleObject]\r\n  ) => {\r\n    each(scrollbarStructures, (scrollbarStructure) => {\r\n      const [elm, styles] = elmStyle(scrollbarStructure);\r\n      setStyles(elm, styles);\r\n    });\r\n  };\r\n  const scrollbarStructureRefreshHandleLength = (\r\n    scrollbarStructures: ScrollbarStructure[],\r\n    isHorizontal?: boolean\r\n  ) => {\r\n    scrollbarStyle(scrollbarStructures, (structure) => {\r\n      const { _handle } = structure;\r\n      return [\r\n        _handle,\r\n        {\r\n          [isHorizontal ? strWidth : strHeight]: ratioToCssPercent(\r\n            getScrollbarHandleLengthRatio(isHorizontal)\r\n          ),\r\n        },\r\n      ];\r\n    });\r\n  };\r\n  const scrollbarStructureRefreshHandleOffset = (\r\n    scrollbarStructures: ScrollbarStructure[],\r\n    isHorizontal?: boolean\r\n  ) => {\r\n    const { _overflowAmount } = structureSetupState;\r\n    const overflowAmount = isHorizontal ? _overflowAmount.x : _overflowAmount.y;\r\n    const getTransformValue = (\r\n      structure: ScrollbarStructure,\r\n      rawScrollPosition: number,\r\n      rtlScrollBehavior: RTLScrollBehavior\r\n    ) =>\r\n      getTrasformTranslateValue(\r\n        ratioToCssPercent(\r\n          getScrollbarHandleOffsetRatio(\r\n            structure,\r\n            getRawScrollRatio(rawScrollPosition, overflowAmount, rtlScrollBehavior),\r\n            isHorizontal,\r\n            rtlScrollBehavior\r\n          )\r\n        ),\r\n        isHorizontal\r\n      );\r\n    if (scrollTimelineX && scrollTimelineY) {\r\n      each(scrollbarStructures, (structure: ScrollbarStructure) => {\r\n        const { _scrollbar, _handle } = structure;\r\n        const rtlScrollBehavior =\r\n          isHorizontal && getDirectionIsRTL(_scrollbar) && _rtlScrollBehavior;\r\n\r\n        setElementAnimation(\r\n          _handle,\r\n          isHorizontal ? scrollTimelineX : scrollTimelineY,\r\n          addDirectionRTLKeyframes(\r\n            {\r\n              transform: getRawScrollBounds(overflowAmount, rtlScrollBehavior).map((bound) =>\r\n                getTransformValue(structure, bound, rtlScrollBehavior)\r\n              ),\r\n            },\r\n            rtlScrollBehavior\r\n          )\r\n        );\r\n      });\r\n    } else {\r\n      const scroll = getElmentScroll(_scrollOffsetElement);\r\n      scrollbarStyle(scrollbarStructures, (structure) => {\r\n        const { _handle, _scrollbar } = structure;\r\n        return [\r\n          _handle,\r\n          {\r\n            transform: getTransformValue(\r\n              structure,\r\n              isHorizontal ? scroll.x : scroll.y,\r\n              isHorizontal && getDirectionIsRTL(_scrollbar) && _rtlScrollBehavior\r\n            ),\r\n          },\r\n        ];\r\n      });\r\n    }\r\n  };\r\n  const doRefreshScrollbarOffset = (scrollbar: HTMLElement) =>\r\n    _viewportIsTarget && !_isBody && parent(scrollbar) === _viewport;\r\n\r\n  const destroyFns: (() => void)[] = [];\r\n  const horizontalScrollbars: ScrollbarStructure[] = [];\r\n  const verticalScrollbars: ScrollbarStructure[] = [];\r\n\r\n  const scrollbarsAddRemoveClass = (\r\n    className: string | false | null | undefined,\r\n    add?: boolean,\r\n    onlyHorizontal?: boolean\r\n  ) => {\r\n    const singleAxis = isBoolean(onlyHorizontal);\r\n    const runHorizontal = singleAxis ? onlyHorizontal : true;\r\n    const runVertical = singleAxis ? !onlyHorizontal : true;\r\n    runHorizontal && scrollbarStructureAddRemoveClass(horizontalScrollbars, className, add);\r\n    runVertical && scrollbarStructureAddRemoveClass(verticalScrollbars, className, add);\r\n  };\r\n  const refreshScrollbarsHandleLength = () => {\r\n    scrollbarStructureRefreshHandleLength(horizontalScrollbars, true);\r\n    scrollbarStructureRefreshHandleLength(verticalScrollbars);\r\n  };\r\n  const refreshScrollbarsHandleOffset = () => {\r\n    scrollbarStructureRefreshHandleOffset(horizontalScrollbars, true);\r\n    scrollbarStructureRefreshHandleOffset(verticalScrollbars);\r\n  };\r\n  const refreshScrollbarsScrollbarOffset = () => {\r\n    if (_viewportIsTarget) {\r\n      const { _overflowAmount } = structureSetupState;\r\n      const cushion = 0.5; // otherwise it sometimes happens that scrolling to 100% will cause the scrollbars to disappear\r\n      if (scrollTimelineX && scrollTimelineY) {\r\n        each(concat(verticalScrollbars, horizontalScrollbars), ({ _scrollbar }) => {\r\n          if (doRefreshScrollbarOffset(_scrollbar)) {\r\n            const setScrollbarElementAnimation = (\r\n              timeline: AnimationTimeline,\r\n              overflowAmount: number,\r\n              isHorizontal?: boolean\r\n            ) => {\r\n              const rtlScrollBehavior =\r\n                isHorizontal && getDirectionIsRTL(_scrollbar) && _rtlScrollBehavior;\r\n              setElementAnimation(\r\n                _scrollbar,\r\n                timeline,\r\n                addDirectionRTLKeyframes(\r\n                  {\r\n                    transform: getRawScrollBounds(overflowAmount - cushion, rtlScrollBehavior).map(\r\n                      (bound) => getTrasformTranslateValue(numberToCssPx(bound), isHorizontal)\r\n                    ),\r\n                  },\r\n                  rtlScrollBehavior\r\n                ),\r\n                'add'\r\n              );\r\n            };\r\n\r\n            setScrollbarElementAnimation(scrollTimelineX, _overflowAmount.x, true);\r\n            setScrollbarElementAnimation(scrollTimelineY, _overflowAmount.y);\r\n          } else {\r\n            cancelElementAnimations(_scrollbar);\r\n          }\r\n        });\r\n      } else {\r\n        const scroll = getElmentScroll(_scrollOffsetElement);\r\n        const styleScrollbarPosition = (structure: ScrollbarStructure) => {\r\n          const { _scrollbar } = structure;\r\n          const elm = doRefreshScrollbarOffset(_scrollbar) && _scrollbar;\r\n          const getTranslateValue = (\r\n            axisScroll: number,\r\n            axisOverflowAmount: number,\r\n            rtlScrollBehavior?: RTLScrollBehavior\r\n          ) => {\r\n            const percent = getRawScrollRatio(axisScroll, axisOverflowAmount, rtlScrollBehavior);\r\n            const px = axisOverflowAmount * percent;\r\n            return numberToCssPx(rtlScrollBehavior ? -px : px);\r\n          };\r\n\r\n          return [\r\n            elm,\r\n            {\r\n              transform: elm\r\n                ? getTrasformTranslateValue({\r\n                    x: getTranslateValue(\r\n                      scroll.x,\r\n                      _overflowAmount.x,\r\n                      getDirectionIsRTL(_scrollbar) && _rtlScrollBehavior\r\n                    ),\r\n                    y: getTranslateValue(scroll.y, _overflowAmount.y),\r\n                  })\r\n                : '',\r\n            },\r\n          ] as [HTMLElement | false, StyleObject];\r\n        };\r\n        scrollbarStyle(horizontalScrollbars, styleScrollbarPosition);\r\n        scrollbarStyle(verticalScrollbars, styleScrollbarPosition);\r\n      }\r\n    }\r\n  };\r\n  const generateScrollbarDOM = (isHorizontal?: boolean): ScrollbarStructure => {\r\n    const scrollbarClassName = isHorizontal\r\n      ? classNameScrollbarHorizontal\r\n      : classNameScrollbarVertical;\r\n    const scrollbar = createDiv(`${classNameScrollbar} ${scrollbarClassName}`);\r\n    const track = createDiv(classNameScrollbarTrack);\r\n    const handle = createDiv(classNameScrollbarHandle);\r\n    const result = {\r\n      _scrollbar: scrollbar,\r\n      _track: track,\r\n      _handle: handle,\r\n    };\r\n\r\n    push(isHorizontal ? horizontalScrollbars : verticalScrollbars, result);\r\n    push(destroyFns, [\r\n      appendChildren(scrollbar, track),\r\n      appendChildren(track, handle),\r\n      bind(removeElements, scrollbar),\r\n      cancelElementAnimations,\r\n      scrollbarsSetupEvents(\r\n        result,\r\n        scrollbarsAddRemoveClass,\r\n        scrollbarStructureRefreshHandleOffset,\r\n        isHorizontal\r\n      ),\r\n    ]);\r\n\r\n    return result;\r\n  };\r\n  const generateHorizontalScrollbarStructure = bind(generateScrollbarDOM, true);\r\n  const generateVerticalScrollbarStructure = bind(generateScrollbarDOM, false);\r\n  const appendElements = () => {\r\n    appendChildren(evaluatedScrollbarSlot, horizontalScrollbars[0]._scrollbar);\r\n    appendChildren(evaluatedScrollbarSlot, verticalScrollbars[0]._scrollbar);\r\n\r\n    return bind(runEachAndClear, destroyFns);\r\n  };\r\n\r\n  generateHorizontalScrollbarStructure();\r\n  generateVerticalScrollbarStructure();\r\n\r\n  return [\r\n    {\r\n      _refreshScrollbarsHandleLength: refreshScrollbarsHandleLength,\r\n      _refreshScrollbarsHandleOffset: refreshScrollbarsHandleOffset,\r\n      _refreshScrollbarsScrollbarOffset: refreshScrollbarsScrollbarOffset,\r\n      _scrollbarsAddRemoveClass: scrollbarsAddRemoveClass,\r\n      _horizontal: {\r\n        _scrollTimeline: scrollTimelineX,\r\n        _scrollbarStructures: horizontalScrollbars,\r\n        _clone: generateHorizontalScrollbarStructure,\r\n        _style: bind(scrollbarStyle, horizontalScrollbars),\r\n      },\r\n      _vertical: {\r\n        _scrollTimeline: scrollTimelineY,\r\n        _scrollbarStructures: verticalScrollbars,\r\n        _clone: generateVerticalScrollbarStructure,\r\n        _style: bind(scrollbarStyle, verticalScrollbars),\r\n      },\r\n    },\r\n    appendElements,\r\n  ];\r\n};\r\n","import {\r\n  getBoundingClientRect,\r\n  offsetSize,\r\n  addEventListener,\r\n  preventDefault,\r\n  runEachAndClear,\r\n  stopPropagation,\r\n  selfClearTimeout,\r\n  parent,\r\n  closest,\r\n  push,\r\n  bind,\r\n  mathRound,\r\n  strWidth,\r\n  strHeight,\r\n  getElmentScroll,\r\n  scrollElementTo,\r\n  addAttrClass,\r\n  getFocusedElement,\r\n  setT,\r\n  hasAttr,\r\n} from '~/support';\r\nimport { clickScrollPluginModuleName, getStaticPluginModuleInstance } from '~/plugins';\r\nimport {\r\n  classNameScrollbarHandle,\r\n  classNameScrollbarInteraction,\r\n  classNameScrollbarWheel,\r\n  dataAttributeHost,\r\n  dataAttributeViewport,\r\n  dataValueHostScrollbarPressed,\r\n} from '~/classnames';\r\nimport type { ClickScrollPlugin } from '~/plugins';\r\nimport type { ReadonlyOptions } from '~/options';\r\nimport type { StructureSetupState } from '~/setups';\r\nimport type { ScrollbarsSetupElementsObj, ScrollbarStructure } from './scrollbarsSetup.elements';\r\nimport type { StructureSetupElementsObj } from '../structureSetup/structureSetup.elements';\r\n\r\nexport type ScrollbarsSetupEvents = (\r\n  scrollbarStructure: ScrollbarStructure,\r\n  scrollbarsAddRemoveClass: ScrollbarsSetupElementsObj['_scrollbarsAddRemoveClass'],\r\n  refreshScrollbarStructuresHandleOffset: (\r\n    scrollbarStructure: ScrollbarStructure[],\r\n    isHorizontal?: boolean\r\n  ) => void,\r\n  isHorizontal?: boolean\r\n) => () => void;\r\n\r\nexport const createScrollbarsSetupEvents = (\r\n  options: ReadonlyOptions,\r\n  structureSetupElements: StructureSetupElementsObj,\r\n  structureSetupState: StructureSetupState,\r\n  scrollbarHandlePointerInteraction: (event: PointerEvent) => void\r\n): ScrollbarsSetupEvents => {\r\n  const { _host, _viewport, _viewportIsTarget, _scrollOffsetElement, _documentElm } =\r\n    structureSetupElements;\r\n\r\n  return (\r\n    scrollbarStructure,\r\n    scrollbarsAddRemoveClass,\r\n    refreshScrollbarStructuresHandleOffset,\r\n    isHorizontal\r\n  ) => {\r\n    const { _scrollbar, _track, _handle } = scrollbarStructure;\r\n    const [wheelTimeout, clearWheelTimeout] = selfClearTimeout(333);\r\n    const [requestHandleTransitionAnimationFrame, cancelHandleTransitionTimeout] =\r\n      selfClearTimeout();\r\n    const refreshHandleOffsetTransition = bind(\r\n      refreshScrollbarStructuresHandleOffset,\r\n      [scrollbarStructure],\r\n      isHorizontal\r\n    );\r\n    const scrollByFn = !!_scrollOffsetElement.scrollBy;\r\n\r\n    const clientXYKey = `client${isHorizontal ? 'X' : 'Y'}` as 'clientX' | 'clientY';\r\n    const widthHeightKey = isHorizontal ? strWidth : strHeight;\r\n    const leftTopKey = isHorizontal ? 'left' : 'top';\r\n    const whKey = isHorizontal ? 'w' : 'h';\r\n    const xyKey = isHorizontal ? 'x' : 'y';\r\n\r\n    const isAffectingTransition = (event: TransitionEvent) =>\r\n      event.propertyName.indexOf(widthHeightKey) > -1;\r\n\r\n    const createInteractiveScrollEvents = () => {\r\n      const releasePointerCaptureEvents = 'pointerup pointerleave pointercancel lostpointercapture';\r\n\r\n      const createRelativeHandleMove =\r\n        (mouseDownScroll: number, invertedScale: number) => (deltaMovement: number) => {\r\n          const { _overflowAmount } = structureSetupState;\r\n          const handleTrackDiff = offsetSize(_track)[whKey] - offsetSize(_handle)[whKey];\r\n          const scrollDeltaPercent = (invertedScale * deltaMovement) / handleTrackDiff;\r\n          const scrollDelta = scrollDeltaPercent * _overflowAmount[xyKey];\r\n\r\n          scrollElementTo(_scrollOffsetElement, {\r\n            [xyKey]: mouseDownScroll + scrollDelta,\r\n          });\r\n        };\r\n\r\n      return addEventListener(_track, 'pointerdown', (pointerDownEvent: PointerEvent) => {\r\n        const isDragScroll =\r\n          closest(pointerDownEvent.target as Node, `.${classNameScrollbarHandle}`) === _handle;\r\n        const pointerCaptureElement = isDragScroll ? _handle : _track;\r\n\r\n        const scrollbarOptions = options.scrollbars;\r\n        const { button, isPrimary, pointerType } = pointerDownEvent;\r\n        const { pointers } = scrollbarOptions;\r\n\r\n        const continuePointerDown =\r\n          button === 0 &&\r\n          isPrimary &&\r\n          scrollbarOptions[isDragScroll ? 'dragScroll' : 'clickScroll'] &&\r\n          (pointers || []).includes(pointerType);\r\n\r\n        if (continuePointerDown) {\r\n          const instantClickScroll = !isDragScroll && pointerDownEvent.shiftKey;\r\n          const getHandleRect = bind(getBoundingClientRect, _handle);\r\n          const getTrackRect = bind(getBoundingClientRect, _track);\r\n          const getHandleOffset = (handleRect?: DOMRect, trackRect?: DOMRect) =>\r\n            (handleRect || getHandleRect())[leftTopKey] - (trackRect || getTrackRect())[leftTopKey];\r\n          const axisScale =\r\n            mathRound(getBoundingClientRect(_scrollOffsetElement)[widthHeightKey]) /\r\n              offsetSize(_scrollOffsetElement)[whKey] || 1;\r\n          const moveHandleRelative = createRelativeHandleMove(\r\n            getElmentScroll(_scrollOffsetElement)[xyKey] || 0,\r\n            1 / axisScale\r\n          );\r\n          const pointerDownOffset = pointerDownEvent[clientXYKey];\r\n          const handleRect = getHandleRect();\r\n          const trackRect = getTrackRect();\r\n          const handleLength = handleRect[widthHeightKey];\r\n          const handleCenter = getHandleOffset(handleRect, trackRect) + handleLength / 2;\r\n          const relativeTrackPointerOffset = pointerDownOffset - trackRect[leftTopKey];\r\n          const startOffset = isDragScroll ? 0 : relativeTrackPointerOffset - handleCenter;\r\n          const releasePointerCapture = (pointerUpEvent: PointerEvent) => {\r\n            // eslint-disable-next-line @typescript-eslint/no-use-before-define\r\n            runEachAndClear(offFns);\r\n            pointerCaptureElement.releasePointerCapture(pointerUpEvent.pointerId);\r\n          };\r\n          const removeAttrClass = addAttrClass(\r\n            _host,\r\n            dataAttributeHost,\r\n            dataValueHostScrollbarPressed\r\n          );\r\n\r\n          const offFns = [\r\n            removeAttrClass,\r\n            addEventListener(_documentElm, releasePointerCaptureEvents, releasePointerCapture),\r\n            addEventListener(_documentElm, 'selectstart', (event: Event) => preventDefault(event), {\r\n              _passive: false,\r\n            }),\r\n            addEventListener(_track, releasePointerCaptureEvents, releasePointerCapture),\r\n            addEventListener(_track, 'pointermove', (pointerMoveEvent: PointerEvent) => {\r\n              const relativeMovement = pointerMoveEvent[clientXYKey] - pointerDownOffset;\r\n\r\n              if (isDragScroll || instantClickScroll) {\r\n                moveHandleRelative(startOffset + relativeMovement);\r\n              }\r\n            }),\r\n          ];\r\n\r\n          pointerCaptureElement.setPointerCapture(pointerDownEvent.pointerId);\r\n\r\n          if (instantClickScroll) {\r\n            moveHandleRelative(startOffset);\r\n          } else if (!isDragScroll) {\r\n            const animateClickScroll = getStaticPluginModuleInstance<typeof ClickScrollPlugin>(\r\n              clickScrollPluginModuleName\r\n            );\r\n\r\n            animateClickScroll &&\r\n              push(\r\n                offFns,\r\n                animateClickScroll(\r\n                  moveHandleRelative,\r\n                  getHandleOffset,\r\n                  startOffset,\r\n                  handleLength,\r\n                  relativeTrackPointerOffset\r\n                )\r\n              );\r\n          }\r\n        }\r\n      });\r\n    };\r\n\r\n    let wheelScrollBy = true;\r\n\r\n    return bind(runEachAndClear, [\r\n      addEventListener(_handle, 'pointermove pointerleave', scrollbarHandlePointerInteraction),\r\n      addEventListener(_scrollbar, 'pointerenter', () => {\r\n        scrollbarsAddRemoveClass(classNameScrollbarInteraction, true);\r\n      }),\r\n      addEventListener(_scrollbar, 'pointerleave pointercancel', () => {\r\n        scrollbarsAddRemoveClass(classNameScrollbarInteraction, false);\r\n      }),\r\n      // focus viewport when clicking on a scrollbar\r\n      !_viewportIsTarget &&\r\n        addEventListener(_scrollbar, 'mousedown', () => {\r\n          const focusedElement = getFocusedElement();\r\n          if (\r\n            hasAttr(focusedElement, dataAttributeViewport) ||\r\n            hasAttr(focusedElement, dataAttributeHost) ||\r\n            focusedElement === document.body\r\n          ) {\r\n            setT(() => {\r\n              _viewport.focus();\r\n            }, 25);\r\n          }\r\n        }),\r\n      // propagate wheel events to viewport when mouse is over scrollbar\r\n      addEventListener(\r\n        _scrollbar,\r\n        'wheel',\r\n        (wheelEvent: WheelEvent) => {\r\n          const { deltaX, deltaY, deltaMode } = wheelEvent;\r\n\r\n          // the first wheel event is swallowed, simulate scroll to compensate for it\r\n          if (scrollByFn && wheelScrollBy && deltaMode === 0 && parent(_scrollbar) === _host) {\r\n            _scrollOffsetElement.scrollBy({\r\n              left: deltaX,\r\n              top: deltaY,\r\n              behavior: 'smooth',\r\n            });\r\n          }\r\n\r\n          wheelScrollBy = false;\r\n          scrollbarsAddRemoveClass(classNameScrollbarWheel, true);\r\n          wheelTimeout(() => {\r\n            wheelScrollBy = true;\r\n            scrollbarsAddRemoveClass(classNameScrollbarWheel);\r\n          });\r\n\r\n          preventDefault(wheelEvent);\r\n        },\r\n        { _passive: false, _capture: true }\r\n      ),\r\n      // when the handle has a size transition, update the handle offset each frame for the time of the transition\r\n      addEventListener(_handle, 'transitionstart', (event: TransitionEvent) => {\r\n        if (isAffectingTransition(event)) {\r\n          const animateHandleOffset = () => {\r\n            refreshHandleOffsetTransition();\r\n            requestHandleTransitionAnimationFrame(animateHandleOffset);\r\n          };\r\n          animateHandleOffset();\r\n        }\r\n      }),\r\n      addEventListener(_handle, 'transitionend transitioncancel', (event: TransitionEvent) => {\r\n        if (isAffectingTransition(event)) {\r\n          cancelHandleTransitionTimeout();\r\n          refreshHandleOffsetTransition();\r\n        }\r\n      }),\r\n      // rootClickStopPropagationEvent\r\n      addEventListener(\r\n        _scrollbar,\r\n        'mousedown',\r\n        bind(addEventListener, _documentElm, 'click', stopPropagation, {\r\n          _once: true,\r\n          _capture: true,\r\n        }),\r\n        { _capture: true }\r\n      ),\r\n      createInteractiveScrollEvents(),\r\n      clearWheelTimeout,\r\n      cancelHandleTransitionTimeout,\r\n    ]);\r\n  };\r\n};\r\n","import {\r\n  isHTMLElement,\r\n  appendChildren,\r\n  createDiv,\r\n  is,\r\n  contents,\r\n  insertAfter,\r\n  parent,\r\n  removeElements,\r\n  push,\r\n  runEachAndClear,\r\n  removeAttrs,\r\n  hasAttrClass,\r\n  addEventListener,\r\n  bind,\r\n  inArray,\r\n  addAttrClass,\r\n  addRemoveAttrClass,\r\n  setAttrs,\r\n  getAttr,\r\n  noop,\r\n  stopPropagation,\r\n  isBodyElement,\r\n  getFocusedElement,\r\n  wnd,\r\n} from '~/support';\r\nimport {\r\n  dataAttributeHost,\r\n  dataAttributeInitialize,\r\n  dataAttributeHostOverflowX,\r\n  dataAttributeHostOverflowY,\r\n  dataAttributeViewport,\r\n  dataValueViewportScrollbarHidden,\r\n  dataAttributePadding,\r\n  dataAttributeContent,\r\n  dataValueHostHtmlBody,\r\n} from '~/classnames';\r\nimport { getEnvironment } from '~/environment';\r\nimport {\r\n  staticInitializationElement as generalStaticInitializationElement,\r\n  dynamicInitializationElement as generalDynamicInitializationElement,\r\n} from '~/initialization';\r\nimport type {\r\n  InitializationTarget,\r\n  InitializationTargetElement,\r\n  InitializationTargetObject,\r\n} from '~/initialization';\r\n\r\nexport type StructureSetupElements = [\r\n  elements: StructureSetupElementsObj,\r\n  appendElements: () => () => void,\r\n  canceled: () => void\r\n];\r\n\r\nexport interface StructureSetupElementsObj {\r\n  _target: InitializationTargetElement;\r\n  _host: HTMLElement;\r\n  _viewport: HTMLElement;\r\n  _padding: HTMLElement | false;\r\n  _content: HTMLElement | false;\r\n  _scrollOffsetElement: HTMLElement;\r\n  _scrollEventElement: HTMLElement | Document;\r\n  _originalScrollOffsetElement: HTMLElement;\r\n  // ctx ----\r\n  _isTextarea: boolean;\r\n  _isBody: boolean;\r\n  _documentElm: Document;\r\n  _targetIsElm: boolean;\r\n  _viewportIsTarget: boolean;\r\n  _windowElm: () => Window;\r\n  _viewportHasClass: (viewportAttributeClassName: string) => boolean;\r\n  _viewportAddRemoveClass: (viewportAttributeClassName: string, add?: boolean) => void;\r\n}\r\n\r\nexport const createStructureSetupElements = (\r\n  target: InitializationTarget\r\n): StructureSetupElements => {\r\n  const env = getEnvironment();\r\n  const { _getDefaultInitialization, _nativeScrollbarsHiding } = env;\r\n  const { elements: defaultInitElements } = _getDefaultInitialization();\r\n  const {\r\n    host: defaultHostInitialization,\r\n    padding: defaultPaddingInitialization,\r\n    viewport: defaultViewportInitialization,\r\n    content: defaultContentInitialization,\r\n  } = defaultInitElements;\r\n  const targetIsElm = isHTMLElement(target);\r\n  const targetStructureInitialization = (targetIsElm ? {} : target) as InitializationTargetObject;\r\n  const { elements: initElements } = targetStructureInitialization;\r\n  const {\r\n    host: hostInitialization,\r\n    padding: paddingInitialization,\r\n    viewport: viewportInitialization,\r\n    content: contentInitialization,\r\n  } = initElements || {};\r\n\r\n  const targetElement = targetIsElm ? target : targetStructureInitialization.target;\r\n  const isBody = isBodyElement(targetElement);\r\n  const isTextarea = is(targetElement, 'textarea');\r\n  const ownerDocument = targetElement.ownerDocument;\r\n  const docElement = ownerDocument.documentElement;\r\n  const getDocumentWindow = () => ownerDocument.defaultView || wnd;\r\n  const focusElm = (customActiveElm: Element | null) => {\r\n    if (customActiveElm && (customActiveElm as HTMLElement).focus) {\r\n      (customActiveElm as HTMLElement).focus();\r\n    }\r\n  };\r\n  const staticInitializationElement = bind(generalStaticInitializationElement, [targetElement]);\r\n  const dynamicInitializationElement = bind(generalDynamicInitializationElement, [targetElement]);\r\n  const createNewDiv = bind(createDiv, '');\r\n  const generateViewportElement = bind(\r\n    staticInitializationElement,\r\n    createNewDiv,\r\n    defaultViewportInitialization\r\n  );\r\n  const generateContentElement = bind(\r\n    dynamicInitializationElement,\r\n    createNewDiv,\r\n    defaultContentInitialization\r\n  );\r\n  const possibleViewportElement = generateViewportElement(viewportInitialization);\r\n  const viewportIsTarget = possibleViewportElement === targetElement;\r\n  const viewportIsTargetBody = viewportIsTarget && isBody;\r\n  const possibleContentElement = !viewportIsTarget && generateContentElement(contentInitialization);\r\n  // edge case if passed viewportElement is contentElement:\r\n  // viewport element has higher priority and content element will not be generated\r\n  // will act the same way as initialization: `{ elements: { viewport, content: false } }`\r\n  const viewportIsContent = !viewportIsTarget && possibleViewportElement === possibleContentElement;\r\n  const viewportElement = viewportIsTargetBody ? docElement : possibleViewportElement;\r\n  const nonBodyHostElement = isTextarea\r\n    ? staticInitializationElement(createNewDiv, defaultHostInitialization, hostInitialization)\r\n    : (targetElement as HTMLElement);\r\n  const hostElement = viewportIsTargetBody ? viewportElement : nonBodyHostElement;\r\n  const paddingElement =\r\n    !viewportIsTarget &&\r\n    dynamicInitializationElement(createNewDiv, defaultPaddingInitialization, paddingInitialization);\r\n  const contentElement = !viewportIsContent && possibleContentElement;\r\n  const generatedElements = [contentElement, viewportElement, paddingElement, hostElement].map(\r\n    (elm) => isHTMLElement(elm) && !parent(elm) && elm\r\n  );\r\n  const elementIsGenerated = (elm: HTMLElement | false) => elm && inArray(generatedElements, elm);\r\n  const originalNonBodyScrollOffsetElement = elementIsGenerated(viewportElement)\r\n    ? targetElement\r\n    : viewportElement;\r\n\r\n  const evaluatedTargetObj: StructureSetupElementsObj = {\r\n    _target: targetElement,\r\n    _host: hostElement,\r\n    _viewport: viewportElement,\r\n    _padding: paddingElement,\r\n    _content: contentElement,\r\n    _scrollOffsetElement: viewportIsTargetBody ? docElement : viewportElement,\r\n    _scrollEventElement: viewportIsTargetBody ? ownerDocument : viewportElement,\r\n    _originalScrollOffsetElement: isBody ? docElement : originalNonBodyScrollOffsetElement,\r\n    _documentElm: ownerDocument,\r\n    _isTextarea: isTextarea,\r\n    _isBody: isBody,\r\n    _targetIsElm: targetIsElm,\r\n    _viewportIsTarget: viewportIsTarget,\r\n    _windowElm: getDocumentWindow,\r\n    _viewportHasClass: (viewportAttributeClassName: string) =>\r\n      hasAttrClass(\r\n        viewportElement,\r\n        viewportIsTarget ? dataAttributeHost : dataAttributeViewport,\r\n        viewportAttributeClassName\r\n      ),\r\n    _viewportAddRemoveClass: (viewportAttributeClassName: string, add?: boolean) =>\r\n      addRemoveAttrClass(\r\n        viewportElement,\r\n        viewportIsTarget ? dataAttributeHost : dataAttributeViewport,\r\n        viewportAttributeClassName,\r\n        add\r\n      ),\r\n  };\r\n  const { _target, _host, _padding, _viewport, _content } = evaluatedTargetObj;\r\n  const destroyFns: (() => any)[] = [\r\n    () => {\r\n      // always remove dataAttributeHost & dataAttributeInitialize from host and from <html> element if target is body\r\n      removeAttrs(_host, [dataAttributeHost, dataAttributeInitialize]);\r\n      removeAttrs(_target, dataAttributeInitialize);\r\n      if (isBody) {\r\n        removeAttrs(docElement, [dataAttributeInitialize, dataAttributeHost]);\r\n      }\r\n    },\r\n  ];\r\n  const isTextareaHostGenerated = isTextarea && elementIsGenerated(_host);\r\n  let targetContents = isTextarea\r\n    ? _target\r\n    : contents(\r\n        [_content, _viewport, _padding, _host, _target].find(\r\n          (elm) => elm && !elementIsGenerated(elm)\r\n        )\r\n      );\r\n  const contentSlot = viewportIsTargetBody ? _target : _content || _viewport;\r\n  const destroy = bind(runEachAndClear, destroyFns);\r\n  const appendElements = () => {\r\n    const docWnd = getDocumentWindow();\r\n    const initActiveElm = getFocusedElement();\r\n    const unwrap = (elm: HTMLElement | false | null | undefined) => {\r\n      appendChildren(parent(elm), contents(elm));\r\n      removeElements(elm);\r\n    };\r\n    // wrapping / unwrapping will cause the focused element to blur, this should prevent those events to surface\r\n    const prepareWrapUnwrapFocus = (activeElement?: Element | null) =>\r\n      activeElement\r\n        ? addEventListener(\r\n            activeElement,\r\n            'focusin focusout focus blur',\r\n            (event) => {\r\n              stopPropagation(event);\r\n              event.stopImmediatePropagation();\r\n            },\r\n            {\r\n              _capture: true,\r\n              _passive: false,\r\n            }\r\n          )\r\n        : noop;\r\n    const tabIndexStr = 'tabindex';\r\n    const ogTabindex = getAttr(_viewport, tabIndexStr);\r\n    const undoInitWrapUndwrapFocus = prepareWrapUnwrapFocus(initActiveElm);\r\n    setAttrs(_host, dataAttributeHost, viewportIsTarget ? 'viewport' : 'host');\r\n    setAttrs(_padding, dataAttributePadding, '');\r\n    setAttrs(_content, dataAttributeContent, '');\r\n\r\n    if (!viewportIsTarget) {\r\n      setAttrs(_viewport, dataAttributeViewport, '');\r\n      setAttrs(_viewport, tabIndexStr, ogTabindex || '-1');\r\n      isBody && addAttrClass(docElement, dataAttributeHost, dataValueHostHtmlBody);\r\n    }\r\n\r\n    // only insert host for textarea after target if it was generated\r\n    if (isTextareaHostGenerated) {\r\n      insertAfter(_target, _host);\r\n\r\n      push(destroyFns, () => {\r\n        insertAfter(_host, _target);\r\n        removeElements(_host);\r\n      });\r\n    }\r\n\r\n    appendChildren(contentSlot, targetContents);\r\n    appendChildren(_host, _padding);\r\n    appendChildren(_padding || _host, !viewportIsTarget && _viewport);\r\n    appendChildren(_viewport, _content);\r\n\r\n    push(destroyFns, [\r\n      undoInitWrapUndwrapFocus,\r\n      () => {\r\n        const destroyActiveElm = getFocusedElement();\r\n        const undoDestroyWrapUndwrapFocus = prepareWrapUnwrapFocus(destroyActiveElm);\r\n        removeAttrs(_padding, dataAttributePadding);\r\n        removeAttrs(_content, dataAttributeContent);\r\n        removeAttrs(_viewport, [\r\n          dataAttributeHostOverflowX,\r\n          dataAttributeHostOverflowY,\r\n          dataAttributeViewport,\r\n        ]);\r\n        ogTabindex\r\n          ? setAttrs(_viewport, tabIndexStr, ogTabindex)\r\n          : removeAttrs(_viewport, tabIndexStr);\r\n\r\n        elementIsGenerated(_content) && unwrap(_content);\r\n        elementIsGenerated(_viewport) && unwrap(_viewport);\r\n        elementIsGenerated(_padding) && unwrap(_padding);\r\n        focusElm(destroyActiveElm);\r\n        undoDestroyWrapUndwrapFocus();\r\n      },\r\n    ]);\r\n\r\n    if (_nativeScrollbarsHiding && !viewportIsTarget) {\r\n      addAttrClass(_viewport, dataAttributeViewport, dataValueViewportScrollbarHidden);\r\n      push(destroyFns, bind(removeAttrs, _viewport, dataAttributeViewport));\r\n    }\r\n\r\n    // focus viewport if previously focused element was target, otherwise focus previously focused element\r\n    focusElm(\r\n      !viewportIsTarget && initActiveElm === targetElement && docWnd.top === docWnd\r\n        ? _viewport\r\n        : initActiveElm\r\n    );\r\n    undoInitWrapUndwrapFocus();\r\n\r\n    // @ts-ignore\r\n    targetContents = 0;\r\n\r\n    return destroy;\r\n  };\r\n\r\n  return [evaluatedTargetObj, appendElements, destroy];\r\n};\r\n","import { setStyles, strHeight } from '~/support';\r\nimport type { CreateStructureUpdateSegment } from '../structureSetup';\r\n\r\n/**\r\n * Lifecycle with the responsibility to adjust the trinsic behavior of the content element.\r\n * @param structureUpdateHub\r\n * @returns\r\n */\r\nexport const createTrinsicUpdateSegment: CreateStructureUpdateSegment =\r\n  ({ _content }) =>\r\n  ({ _observersUpdateHints, _observersState, _force }) => {\r\n    const { _heightIntrinsicChanged } = _observersUpdateHints || {};\r\n    const { _heightIntrinsic } = _observersState;\r\n    const heightIntrinsicChanged = _content && (_heightIntrinsicChanged || _force);\r\n\r\n    if (heightIntrinsicChanged) {\r\n      setStyles(_content, {\r\n        [strHeight]: _heightIntrinsic && '100%',\r\n      });\r\n    }\r\n  };\r\n","import {\r\n  createCache,\r\n  topRightBottomLeft,\r\n  equalTRBL,\r\n  assignDeep,\r\n  bind,\r\n  strMarginBottom,\r\n  strMarginLeft,\r\n  strMarginRight,\r\n  strPaddingBottom,\r\n  strPaddingLeft,\r\n  strPaddingRight,\r\n  strPaddingTop,\r\n  strWidth,\r\n  setStyles,\r\n} from '~/support';\r\nimport { getEnvironment } from '~/environment';\r\nimport type { StyleObject } from '~/typings';\r\nimport type { CreateStructureUpdateSegment } from '../structureSetup';\r\n\r\n/**\r\n * Lifecycle with the responsibility to adjust the padding styling of the padding and viewport element.\r\n * @param structureUpdateHub\r\n * @returns\r\n */\r\nexport const createPaddingUpdateSegment: CreateStructureUpdateSegment = (\r\n  { _host, _padding, _viewport, _viewportIsTarget },\r\n  state\r\n) => {\r\n  const [updatePaddingCache, currentPaddingCache] = createCache(\r\n    {\r\n      _equal: equalTRBL,\r\n      _initialValue: topRightBottomLeft(),\r\n    },\r\n    bind(topRightBottomLeft, _host, 'padding', '')\r\n  );\r\n\r\n  return ({ _checkOption, _observersUpdateHints, _observersState, _force }) => {\r\n    let [padding, paddingChanged] = currentPaddingCache(_force);\r\n    const { _nativeScrollbarsHiding } = getEnvironment();\r\n    const { _sizeChanged, _contentMutation, _directionChanged } = _observersUpdateHints || {};\r\n    const { _directionIsRTL } = _observersState;\r\n    const [paddingAbsolute, paddingAbsoluteChanged] = _checkOption('paddingAbsolute');\r\n    const contentMutation = _force || _contentMutation;\r\n\r\n    if (_sizeChanged || paddingChanged || contentMutation) {\r\n      [padding, paddingChanged] = updatePaddingCache(_force);\r\n    }\r\n\r\n    const paddingStyleChanged =\r\n      !_viewportIsTarget && (paddingAbsoluteChanged || _directionChanged || paddingChanged);\r\n\r\n    if (paddingStyleChanged) {\r\n      // if there is no padding element and no scrollbar styling, paddingAbsolute isn't supported\r\n      const paddingRelative = !paddingAbsolute || (!_padding && !_nativeScrollbarsHiding);\r\n      const paddingHorizontal = padding.r + padding.l;\r\n      const paddingVertical = padding.t + padding.b;\r\n\r\n      const paddingStyle: StyleObject = {\r\n        [strMarginRight]: paddingRelative && !_directionIsRTL ? -paddingHorizontal : 0,\r\n        [strMarginBottom]: paddingRelative ? -paddingVertical : 0,\r\n        [strMarginLeft]: paddingRelative && _directionIsRTL ? -paddingHorizontal : 0,\r\n        top: paddingRelative ? -padding.t : 0,\r\n        right: paddingRelative ? (_directionIsRTL ? -padding.r : 'auto') : 0,\r\n        left: paddingRelative ? (_directionIsRTL ? 'auto' : -padding.l) : 0,\r\n        [strWidth]: paddingRelative && `calc(100% + ${paddingHorizontal}px)`,\r\n      };\r\n      const viewportStyle: StyleObject = {\r\n        [strPaddingTop]: paddingRelative ? padding.t : 0,\r\n        [strPaddingRight]: paddingRelative ? padding.r : 0,\r\n        [strPaddingBottom]: paddingRelative ? padding.b : 0,\r\n        [strPaddingLeft]: paddingRelative ? padding.l : 0,\r\n      };\r\n\r\n      // if there is no padding element apply the style to the viewport element instead\r\n      setStyles(_padding || _viewport, paddingStyle);\r\n      setStyles(_viewport, viewportStyle);\r\n\r\n      assignDeep(state, {\r\n        _padding: padding,\r\n        _paddingAbsolute: !paddingRelative,\r\n        _viewportPaddingStyle: _padding\r\n          ? viewportStyle\r\n          : assignDeep({}, paddingStyle, viewportStyle),\r\n      });\r\n    }\r\n\r\n    return {\r\n      _paddingStyleChanged: paddingStyleChanged,\r\n    };\r\n  };\r\n};\r\n","import {\r\n  createCache,\r\n  scrollSize,\r\n  fractionalSize,\r\n  equalWH,\r\n  clientSize,\r\n  equalXY,\r\n  assignDeep,\r\n  bind,\r\n  wnd,\r\n  mathMax,\r\n  windowSize,\r\n  strHidden,\r\n  strOverflowX,\r\n  strOverflowY,\r\n  setStyles,\r\n  addRemoveAttrClass,\r\n  setAttrs,\r\n} from '~/support';\r\nimport { getEnvironment } from '~/environment';\r\nimport {\r\n  dataAttributeHost,\r\n  dataAttributeHostOverflowX,\r\n  dataAttributeHostOverflowY,\r\n  dataValueHostOverflowVisible,\r\n  dataValueViewportScrollbarHidden,\r\n  dataValueViewportOverflowVisible,\r\n  dataAttributeViewport,\r\n  dataAttributePadding,\r\n  dataValuePaddingOverflowVisible,\r\n} from '~/classnames';\r\nimport { getStaticPluginModuleInstance, scrollbarsHidingPluginName } from '~/plugins';\r\nimport type { WH, XY } from '~/support';\r\nimport type { ScrollbarsHidingPlugin } from '~/plugins/scrollbarsHidingPlugin';\r\nimport type { StyleObject, OverflowStyle } from '~/typings';\r\nimport type { CreateStructureUpdateSegment } from '../structureSetup';\r\nimport type { ViewportOverflowState } from '../structureSetup.utils';\r\nimport {\r\n  getShowNativeOverlaidScrollbars,\r\n  getViewportOverflowState,\r\n  overflowIsVisible,\r\n  setViewportOverflowState,\r\n} from '../structureSetup.utils';\r\n\r\n/**\r\n * Lifecycle with the responsibility to set the correct overflow and scrollbar hiding styles of the viewport element.\r\n * @param structureUpdateHub\r\n * @returns\r\n */\r\nexport const createOverflowUpdateSegment: CreateStructureUpdateSegment = (\r\n  structureSetupElements,\r\n  structureSetupState\r\n) => {\r\n  const env = getEnvironment();\r\n  const {\r\n    _host,\r\n    _padding,\r\n    _viewport,\r\n    _viewportIsTarget,\r\n    _isBody,\r\n    _viewportAddRemoveClass,\r\n    _windowElm,\r\n  } = structureSetupElements;\r\n  const { _nativeScrollbarsHiding } = env;\r\n  const viewportIsTargetBody = _isBody && _viewportIsTarget;\r\n  const max0 = bind(mathMax, 0);\r\n\r\n  const whCacheOptions = {\r\n    _equal: equalWH,\r\n    _initialValue: { w: 0, h: 0 },\r\n  };\r\n  const xyCacheOptions = {\r\n    _equal: equalXY,\r\n    _initialValue: { x: strHidden, y: strHidden } as XY<OverflowStyle>,\r\n  };\r\n  const getOverflowAmount = (viewportScrollSize: WH<number>, viewportClientSize: WH<number>) => {\r\n    const tollerance = wnd.devicePixelRatio % 1 !== 0 ? 1 : 0;\r\n    const amount = {\r\n      w: max0(viewportScrollSize.w - viewportClientSize.w),\r\n      h: max0(viewportScrollSize.h - viewportClientSize.h),\r\n    };\r\n\r\n    return {\r\n      w: amount.w > tollerance ? amount.w : 0,\r\n      h: amount.h > tollerance ? amount.h : 0,\r\n    };\r\n  };\r\n\r\n  const [updateSizeFraction, getCurrentSizeFraction] = createCache<WH<number>>(\r\n    whCacheOptions,\r\n    bind(fractionalSize, _viewport)\r\n  );\r\n  const [updateViewportScrollSizeCache, getCurrentViewportScrollSizeCache] = createCache<\r\n    WH<number>\r\n  >(whCacheOptions, bind(scrollSize, _viewport));\r\n  const [updateOverflowAmountCache, getCurrentOverflowAmountCache] =\r\n    createCache<WH<number>>(whCacheOptions);\r\n  const [updateOverflowEdge, getCurrentOverflowEdgeCache] = createCache<WH<number>>(whCacheOptions);\r\n  const [updateOverflowStyleCache] = createCache<XY<OverflowStyle>>(xyCacheOptions);\r\n\r\n  const scrollbarsHidingPlugin = getStaticPluginModuleInstance<typeof ScrollbarsHidingPlugin>(\r\n    scrollbarsHidingPluginName\r\n  );\r\n\r\n  return (\r\n    { _checkOption, _observersUpdateHints, _observersState, _force },\r\n    { _paddingStyleChanged }\r\n  ) => {\r\n    const { _sizeChanged, _contentMutation, _directionChanged, _scrollbarSizeChanged } =\r\n      _observersUpdateHints || {};\r\n    const scrollbarsHidingPluginViewportArrangement =\r\n      scrollbarsHidingPlugin &&\r\n      scrollbarsHidingPlugin._viewportArrangement(\r\n        structureSetupElements,\r\n        structureSetupState,\r\n        _observersState,\r\n        env,\r\n        _checkOption\r\n      );\r\n\r\n    const { _arrangeViewport, _undoViewportArrange, _hideNativeScrollbars } =\r\n      scrollbarsHidingPluginViewportArrangement || {};\r\n\r\n    const [showNativeOverlaidScrollbars, showNativeOverlaidScrollbarsChanged] =\r\n      getShowNativeOverlaidScrollbars(_checkOption, env);\r\n    const [overflow, overflowChanged] = _checkOption('overflow');\r\n\r\n    const adjustViewportArrange =\r\n      _sizeChanged ||\r\n      _paddingStyleChanged ||\r\n      _contentMutation ||\r\n      _directionChanged ||\r\n      _scrollbarSizeChanged ||\r\n      showNativeOverlaidScrollbarsChanged;\r\n    const overflowXVisible = overflowIsVisible(overflow.x);\r\n    const overflowYVisible = overflowIsVisible(overflow.y);\r\n    const overflowVisible = overflowXVisible || overflowYVisible;\r\n\r\n    let sizeFractionCache = getCurrentSizeFraction(_force);\r\n    let viewportScrollSizeCache = getCurrentViewportScrollSizeCache(_force);\r\n    let overflowAmuntCache = getCurrentOverflowAmountCache(_force);\r\n    let overflowEdgeCache = getCurrentOverflowEdgeCache(_force);\r\n\r\n    let preMeasureViewportOverflowState: ViewportOverflowState | undefined;\r\n\r\n    if (showNativeOverlaidScrollbarsChanged && _nativeScrollbarsHiding) {\r\n      _viewportAddRemoveClass(dataValueViewportScrollbarHidden, !showNativeOverlaidScrollbars);\r\n    }\r\n\r\n    if (adjustViewportArrange) {\r\n      if (overflowVisible) {\r\n        _viewportAddRemoveClass(dataValueViewportOverflowVisible, false);\r\n      }\r\n\r\n      const [redoViewportArrange, undoViewportArrangeOverflowState] = _undoViewportArrange\r\n        ? _undoViewportArrange(preMeasureViewportOverflowState)\r\n        : [];\r\n\r\n      const [sizeFraction, sizeFractionChanged] = (sizeFractionCache = updateSizeFraction(_force));\r\n      const [viewportScrollSize, viewportScrollSizeChanged] = (viewportScrollSizeCache =\r\n        updateViewportScrollSizeCache(_force));\r\n      const viewportClientSize = clientSize(_viewport);\r\n      const arrangedViewportScrollSize = viewportScrollSize;\r\n      const arrangedViewportClientSize = viewportClientSize;\r\n\r\n      redoViewportArrange && redoViewportArrange();\r\n\r\n      // if re measure is required (only required if content arrange strategy is used)\r\n      if (\r\n        (viewportScrollSizeChanged || sizeFractionChanged || showNativeOverlaidScrollbarsChanged) &&\r\n        undoViewportArrangeOverflowState &&\r\n        !showNativeOverlaidScrollbars &&\r\n        _arrangeViewport &&\r\n        _arrangeViewport(undoViewportArrangeOverflowState, viewportScrollSize, sizeFraction)\r\n      ) {\r\n        // arrangedViewportClientSize = clientSize(_viewport);\r\n        // arrangedViewportScrollSize = scrollSize(_viewport);\r\n      }\r\n\r\n      const windowInnerSize = windowSize(_windowElm());\r\n      const overflowAmountScrollSize = {\r\n        w: max0(mathMax(viewportScrollSize.w, arrangedViewportScrollSize.w) + sizeFraction.w),\r\n        h: max0(mathMax(viewportScrollSize.h, arrangedViewportScrollSize.h) + sizeFraction.h),\r\n      };\r\n\r\n      const overflowAmountClientSize = {\r\n        w: max0(\r\n          (viewportIsTargetBody\r\n            ? windowInnerSize.w\r\n            : arrangedViewportClientSize.w + max0(viewportClientSize.w - viewportScrollSize.w)) +\r\n            sizeFraction.w\r\n        ),\r\n        h: max0(\r\n          (viewportIsTargetBody\r\n            ? windowInnerSize.h\r\n            : arrangedViewportClientSize.h + max0(viewportClientSize.h - viewportScrollSize.h)) +\r\n            sizeFraction.h\r\n        ),\r\n      };\r\n\r\n      overflowEdgeCache = updateOverflowEdge(overflowAmountClientSize);\r\n      overflowAmuntCache = updateOverflowAmountCache(\r\n        getOverflowAmount(overflowAmountScrollSize, overflowAmountClientSize),\r\n        _force\r\n      );\r\n    }\r\n\r\n    const [overflowEdge, overflowEdgeChanged] = overflowEdgeCache;\r\n    const [overflowAmount, overflowAmountChanged] = overflowAmuntCache;\r\n    const [viewportScrollSize, viewportScrollSizeChanged] = viewportScrollSizeCache;\r\n    const [sizeFraction, sizeFractionChanged] = sizeFractionCache;\r\n    const hasOverflow = {\r\n      x: overflowAmount.w > 0,\r\n      y: overflowAmount.h > 0,\r\n    };\r\n    const removeClipping =\r\n      (overflowXVisible && overflowYVisible && (hasOverflow.x || hasOverflow.y)) ||\r\n      (overflowXVisible && hasOverflow.x && !hasOverflow.y) ||\r\n      (overflowYVisible && hasOverflow.y && !hasOverflow.x);\r\n    const adjustViewportStyle =\r\n      _paddingStyleChanged ||\r\n      _directionChanged ||\r\n      _scrollbarSizeChanged ||\r\n      sizeFractionChanged ||\r\n      viewportScrollSizeChanged ||\r\n      overflowEdgeChanged ||\r\n      overflowAmountChanged ||\r\n      overflowChanged ||\r\n      showNativeOverlaidScrollbarsChanged ||\r\n      adjustViewportArrange;\r\n\r\n    if (adjustViewportStyle) {\r\n      const viewportStyle: StyleObject = {};\r\n      const viewportOverflowState = setViewportOverflowState(\r\n        structureSetupElements,\r\n        hasOverflow,\r\n        overflow,\r\n        viewportStyle\r\n      );\r\n\r\n      _hideNativeScrollbars &&\r\n        _hideNativeScrollbars(\r\n          viewportOverflowState,\r\n          _observersState,\r\n          !!_arrangeViewport &&\r\n            _arrangeViewport(viewportOverflowState, viewportScrollSize, sizeFraction),\r\n          viewportStyle\r\n        );\r\n\r\n      if (_viewportIsTarget) {\r\n        setAttrs(_host, dataAttributeHostOverflowX, viewportStyle[strOverflowX] as string);\r\n        setAttrs(_host, dataAttributeHostOverflowY, viewportStyle[strOverflowY] as string);\r\n      } else {\r\n        setStyles(_viewport, viewportStyle);\r\n      }\r\n    }\r\n\r\n    addRemoveAttrClass(_host, dataAttributeHost, dataValueHostOverflowVisible, removeClipping);\r\n    addRemoveAttrClass(\r\n      _padding,\r\n      dataAttributePadding,\r\n      dataValuePaddingOverflowVisible,\r\n      removeClipping\r\n    );\r\n    if (!_viewportIsTarget) {\r\n      addRemoveAttrClass(\r\n        _viewport,\r\n        dataAttributeViewport,\r\n        dataValueViewportOverflowVisible,\r\n        overflowVisible\r\n      );\r\n    }\r\n\r\n    const [overflowStyle, overflowStyleChanged] = updateOverflowStyleCache(\r\n      getViewportOverflowState(structureSetupElements)._overflowStyle\r\n    );\r\n\r\n    assignDeep(structureSetupState, {\r\n      _overflowStyle: overflowStyle,\r\n      _overflowEdge: {\r\n        x: overflowEdge.w,\r\n        y: overflowEdge.h,\r\n      },\r\n      _overflowAmount: {\r\n        x: overflowAmount.w,\r\n        y: overflowAmount.h,\r\n      },\r\n      _hasOverflow: hasOverflow,\r\n    });\r\n\r\n    return {\r\n      _overflowStyleChanged: overflowStyleChanged,\r\n      _overflowEdgeChanged: overflowEdgeChanged,\r\n      _overflowAmountChanged: overflowAmountChanged,\r\n    };\r\n  };\r\n};\r\n","import {\r\n  assignDeep,\r\n  bind,\r\n  getElmentScroll,\r\n  isEmptyObject,\r\n  keys,\r\n  runEachAndClear,\r\n  scrollElementTo,\r\n} from '~/support';\r\nimport { createOptionCheck } from '~/options';\r\nimport type { OptionsCheckFn, Options, PartialOptions, ReadonlyOptions } from '~/options';\r\nimport type { DeepReadonly } from '~/typings';\r\nimport type { InitializationTarget } from '~/initialization';\r\nimport type { ObserversSetupState, ObserversSetupUpdateHints } from './observersSetup';\r\nimport type { StructureSetupState, StructureSetupUpdateHints } from './structureSetup';\r\nimport type { StructureSetupElementsObj } from './structureSetup/structureSetup.elements';\r\nimport type { ScrollbarsSetupElementsObj } from './scrollbarsSetup/scrollbarsSetup.elements';\r\nimport { createObserversSetup } from './observersSetup';\r\nimport { createScrollbarsSetup } from './scrollbarsSetup';\r\nimport { createStructureSetup } from './structureSetup';\r\n\r\nexport type SetupUpdateHints = Partial<Record<string, boolean>>;\r\n\r\nexport type SetupUpdateInfo = {\r\n  _checkOption: OptionsCheckFn<Options>;\r\n  _changedOptions: PartialOptions;\r\n  _force: boolean;\r\n};\r\n\r\nexport type Setup<\r\n  U extends SetupUpdateInfo,\r\n  S extends Readonly<Record<string, any>>,\r\n  H extends SetupUpdateHints | void\r\n> = [\r\n  /** The create function which returns the `destroy` function. */\r\n  _create: () => () => void,\r\n  /** Function which updates the setup and returns the update result. */\r\n  _update: (updateInfo: U) => H,\r\n  /** Function which returns the current state. */\r\n  _state: S\r\n];\r\n\r\nexport interface SetupsUpdateInfo {\r\n  /** The options that changed or `undefined` if none changed. */\r\n  _changedOptions?: PartialOptions;\r\n  /** Whether chache should be ignored. */\r\n  _force?: boolean;\r\n  /** Whether observers should take their records and thus update as well. */\r\n  _takeRecords?: boolean;\r\n  /** Whether one or more scrollbars has been cloned. */\r\n  _cloneScrollbar?: boolean;\r\n}\r\n\r\nexport interface SetupsUpdateHints {\r\n  readonly _observersUpdateHints: DeepReadonly<ObserversSetupUpdateHints>;\r\n  readonly _structureUpdateHints: DeepReadonly<StructureSetupUpdateHints>;\r\n}\r\n\r\nexport interface SetupsState {\r\n  readonly _observersSetupState: DeepReadonly<ObserversSetupState>;\r\n  readonly _structureSetupState: DeepReadonly<StructureSetupState>;\r\n}\r\n\r\nexport interface SetupsElements {\r\n  readonly _structureSetupElements: DeepReadonly<StructureSetupElementsObj>;\r\n  readonly _scrollbarsSetupElements: DeepReadonly<ScrollbarsSetupElementsObj>;\r\n}\r\n\r\nexport type Setups = [\r\n  construct: () => () => void,\r\n  update: (updateInfo: SetupsUpdateInfo) => boolean,\r\n  getState: () => SetupsState,\r\n  elements: SetupsElements,\r\n  canceled: () => void\r\n];\r\n\r\nexport const createSetups = (\r\n  target: InitializationTarget,\r\n  options: ReadonlyOptions,\r\n  onUpdated: (updateInfo: SetupsUpdateInfo, updateHints: SetupsUpdateHints) => void,\r\n  onScroll: (scrollEvent: Event) => void\r\n): Setups => {\r\n  const getCurrentOption = createOptionCheck(options, {});\r\n  const [\r\n    structureSetupCreate,\r\n    structureSetupUpdate,\r\n    structureSetupState,\r\n    structureSetupElements,\r\n    structureSetupCanceled,\r\n  ] = createStructureSetup(target);\r\n  const [observersSetupCreate, observersSetupUpdate, observersSetupState] = createObserversSetup(\r\n    structureSetupElements,\r\n    structureSetupState,\r\n    getCurrentOption,\r\n    (observersUpdateHints) => {\r\n      // eslint-disable-next-line @typescript-eslint/no-use-before-define\r\n      update({}, observersUpdateHints);\r\n    }\r\n  );\r\n  const [scrollbarsSetupCreate, scrollbarsSetupUpdate, , scrollbarsSetupElements] =\r\n    createScrollbarsSetup(\r\n      target,\r\n      options,\r\n      observersSetupState,\r\n      structureSetupState,\r\n      structureSetupElements,\r\n      onScroll\r\n    );\r\n\r\n  const updateHintsAreTruthy = (hints: SetupUpdateHints) =>\r\n    keys(hints).some((key) => !!hints[key as keyof typeof hints]);\r\n\r\n  const update = (\r\n    updateInfo: SetupsUpdateInfo,\r\n    observerUpdateHints?: ObserversSetupUpdateHints\r\n  ): boolean => {\r\n    const {\r\n      _changedOptions: rawChangedOptions,\r\n      _force: rawForce,\r\n      _takeRecords,\r\n      _cloneScrollbar,\r\n    } = updateInfo;\r\n    const _changedOptions = rawChangedOptions || {};\r\n    const _force = !!rawForce;\r\n    const baseUpdateInfoObj: SetupUpdateInfo = {\r\n      _checkOption: createOptionCheck(options, _changedOptions, _force),\r\n      _changedOptions,\r\n      _force,\r\n    };\r\n\r\n    if (_cloneScrollbar) {\r\n      scrollbarsSetupUpdate(baseUpdateInfoObj);\r\n      return false;\r\n    }\r\n\r\n    const observersHints =\r\n      observerUpdateHints ||\r\n      observersSetupUpdate(\r\n        assignDeep({}, baseUpdateInfoObj, {\r\n          _takeRecords,\r\n        })\r\n      );\r\n\r\n    const structureHints = structureSetupUpdate(\r\n      assignDeep({}, baseUpdateInfoObj, {\r\n        _observersState: observersSetupState,\r\n        _observersUpdateHints: observersHints,\r\n      })\r\n    );\r\n    scrollbarsSetupUpdate(\r\n      assignDeep({}, baseUpdateInfoObj, {\r\n        _observersUpdateHints: observersHints,\r\n        _structureUpdateHints: structureHints,\r\n      })\r\n    );\r\n\r\n    const truthyObserversHints = updateHintsAreTruthy(observersHints);\r\n    const truthyStructureHints = updateHintsAreTruthy(structureHints);\r\n    const changed =\r\n      truthyObserversHints || truthyStructureHints || !isEmptyObject(_changedOptions) || _force;\r\n\r\n    changed &&\r\n      onUpdated(updateInfo, {\r\n        _observersUpdateHints: observersHints,\r\n        _structureUpdateHints: structureHints,\r\n      });\r\n\r\n    return changed;\r\n  };\r\n\r\n  return [\r\n    () => {\r\n      const { _originalScrollOffsetElement, _viewport } = structureSetupElements;\r\n      const initialScroll = getElmentScroll(_originalScrollOffsetElement);\r\n      const destroyFns = [observersSetupCreate(), structureSetupCreate(), scrollbarsSetupCreate()];\r\n\r\n      scrollElementTo(_viewport, initialScroll);\r\n\r\n      return bind(runEachAndClear, destroyFns);\r\n    },\r\n    update,\r\n    () => ({\r\n      _observersSetupState: observersSetupState,\r\n      _structureSetupState: structureSetupState,\r\n    }),\r\n    {\r\n      _structureSetupElements: structureSetupElements,\r\n      _scrollbarsSetupElements: scrollbarsSetupElements,\r\n    },\r\n    structureSetupCanceled,\r\n  ];\r\n};\r\n","import { getEnvironment } from '~/environment';\r\nimport {\r\n  addAttrClass,\r\n  assignDeep,\r\n  each,\r\n  getElmentScroll,\r\n  noop,\r\n  scrollElementTo,\r\n  strHidden,\r\n  strMarginBottom,\r\n  strMarginLeft,\r\n  strMarginRight,\r\n  strPaddingBottom,\r\n  strPaddingLeft,\r\n  strPaddingRight,\r\n  strPaddingTop,\r\n  type TRBL,\r\n  type XY,\r\n} from '~/support';\r\nimport { dataAttributeHost, dataValueHostUpdating } from '~/classnames';\r\nimport type { StructureSetupElementsObj } from './structureSetup.elements';\r\nimport type {\r\n  ObserversSetupState,\r\n  ObserversSetupUpdateHints,\r\n  Setup,\r\n  SetupUpdateInfo,\r\n} from '~/setups';\r\nimport type { InitializationTarget } from '~/initialization';\r\nimport type { StyleObject, OverflowStyle } from '~/typings';\r\nimport { createStructureSetupElements } from './structureSetup.elements';\r\nimport {\r\n  createOverflowUpdateSegment,\r\n  createPaddingUpdateSegment,\r\n  createTrinsicUpdateSegment,\r\n} from './updateSegments';\r\n\r\nexport interface StructureSetupState {\r\n  _padding: TRBL;\r\n  _paddingAbsolute: boolean;\r\n  _viewportPaddingStyle: StyleObject;\r\n  _overflowEdge: XY<number>;\r\n  _overflowAmount: XY<number>;\r\n  _overflowStyle: XY<OverflowStyle>;\r\n  _hasOverflow: XY<boolean>;\r\n}\r\n\r\nexport interface StructureSetupUpdateInfo extends SetupUpdateInfo {\r\n  _observersState: ObserversSetupState;\r\n  _observersUpdateHints?: ObserversSetupUpdateHints;\r\n}\r\n\r\nexport type StructureSetupUpdateHints = {\r\n  _overflowEdgeChanged?: boolean;\r\n  _overflowAmountChanged?: boolean;\r\n  _overflowStyleChanged?: boolean;\r\n  _paddingStyleChanged?: boolean;\r\n};\r\n\r\nexport type StructureSetup = [\r\n  ...Setup<StructureSetupUpdateInfo, StructureSetupState, StructureSetupUpdateHints>,\r\n  /** The elements created by the structure setup. */\r\n  StructureSetupElementsObj,\r\n  /** Function to be called when the initialization was canceled. */\r\n  () => void\r\n];\r\n\r\nexport type StructureUpdateSegment = (\r\n  updateInfo: StructureSetupUpdateInfo,\r\n  updateHints: Readonly<StructureSetupUpdateHints>\r\n) => StructureSetupUpdateHints | void;\r\n\r\nexport type CreateStructureUpdateSegment = (\r\n  structureSetupElements: StructureSetupElementsObj,\r\n  state: StructureSetupState\r\n) => StructureUpdateSegment;\r\n\r\nexport const createStructureSetup = (target: InitializationTarget): StructureSetup => {\r\n  const [elements, appendStructureElements, canceled] = createStructureSetupElements(target);\r\n  const state: StructureSetupState = {\r\n    _padding: {\r\n      t: 0,\r\n      r: 0,\r\n      b: 0,\r\n      l: 0,\r\n    },\r\n    _paddingAbsolute: false,\r\n    _viewportPaddingStyle: {\r\n      [strMarginRight]: 0,\r\n      [strMarginBottom]: 0,\r\n      [strMarginLeft]: 0,\r\n      [strPaddingTop]: 0,\r\n      [strPaddingRight]: 0,\r\n      [strPaddingBottom]: 0,\r\n      [strPaddingLeft]: 0,\r\n    },\r\n    _overflowEdge: { x: 0, y: 0 },\r\n    _overflowAmount: { x: 0, y: 0 },\r\n    _overflowStyle: {\r\n      x: strHidden,\r\n      y: strHidden,\r\n    },\r\n    _hasOverflow: {\r\n      x: false,\r\n      y: false,\r\n    },\r\n  };\r\n  const { _target, _viewport, _viewportIsTarget } = elements;\r\n  const { _nativeScrollbarsHiding, _nativeScrollbarsOverlaid } = getEnvironment();\r\n  const doViewportArrange =\r\n    !_nativeScrollbarsHiding && (_nativeScrollbarsOverlaid.x || _nativeScrollbarsOverlaid.y);\r\n\r\n  const updateSegments: StructureUpdateSegment[] = [\r\n    createTrinsicUpdateSegment(elements, state),\r\n    createPaddingUpdateSegment(elements, state),\r\n    createOverflowUpdateSegment(elements, state),\r\n  ];\r\n\r\n  return [\r\n    appendStructureElements,\r\n    (updateInfo) => {\r\n      const updateHints: StructureSetupUpdateHints = {};\r\n      const adjustScrollOffset = doViewportArrange;\r\n      const scrollOffset = adjustScrollOffset && getElmentScroll(_viewport);\r\n\r\n      const removeAttrClass = _viewportIsTarget\r\n        ? addAttrClass(_viewport, dataAttributeHost, dataValueHostUpdating)\r\n        : noop;\r\n\r\n      each(updateSegments, (updateSegment) => {\r\n        assignDeep(updateHints, updateSegment(updateInfo, updateHints) || {});\r\n      });\r\n\r\n      removeAttrClass();\r\n\r\n      scrollElementTo(_viewport, scrollOffset);\r\n      !_viewportIsTarget && scrollElementTo(_target, 0);\r\n\r\n      return updateHints;\r\n    },\r\n    state,\r\n    elements,\r\n    canceled,\r\n  ];\r\n};\r\n","import { bind, noop, addEventListener, push, runEachAndClear, selfClearTimeout } from '~/support';\r\nimport { getEnvironment } from '~/environment';\r\nimport {\r\n  classNameScrollbarThemeNone,\r\n  classNameScrollbarVisible,\r\n  classNameScrollbarUnusable,\r\n  classNameScrollbarCornerless,\r\n  classNameScrollbarAutoHideHidden,\r\n  classNameScrollbarHandleInteractive,\r\n  classNameScrollbarTrackInteractive,\r\n  classNameScrollbarRtl,\r\n  classNameScrollbarAutoHide,\r\n} from '~/classnames';\r\nimport type { OverflowBehavior, ReadonlyOptions } from '~/options';\r\nimport type { ScrollbarsSetupElementsObj } from './scrollbarsSetup.elements';\r\nimport type {\r\n  ObserversSetupState,\r\n  ObserversSetupUpdateHints,\r\n  Setup,\r\n  SetupUpdateInfo,\r\n  StructureSetupState,\r\n  StructureSetupUpdateHints,\r\n} from '~/setups';\r\nimport type { InitializationTarget } from '~/initialization';\r\nimport type { OverflowStyle } from '~/typings';\r\nimport type { StructureSetupElementsObj } from '../structureSetup/structureSetup.elements';\r\nimport { createScrollbarsSetupElements } from './scrollbarsSetup.elements';\r\nimport { createScrollbarsSetupEvents } from './scrollbarsSetup.events';\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\r\nexport interface ScrollbarsSetupState {}\r\n\r\nexport interface ScrollbarsSetupUpdateInfo extends SetupUpdateInfo {\r\n  _observersUpdateHints?: ObserversSetupUpdateHints;\r\n  _structureUpdateHints?: StructureSetupUpdateHints;\r\n}\r\n\r\nexport type ScrollbarsSetup = [\r\n  ...Setup<ScrollbarsSetupUpdateInfo, ScrollbarsSetupState, void>,\r\n  /** The elements created by the scrollbars setup. */\r\n  ScrollbarsSetupElementsObj\r\n];\r\n\r\nexport const createScrollbarsSetup = (\r\n  target: InitializationTarget,\r\n  options: ReadonlyOptions,\r\n  observersSetupState: ObserversSetupState,\r\n  structureSetupState: StructureSetupState,\r\n  structureSetupElements: StructureSetupElementsObj,\r\n  onScroll: (event: Event) => void\r\n): ScrollbarsSetup => {\r\n  let mouseInHost: boolean | undefined;\r\n  let autoHideIsMove: boolean | undefined;\r\n  let autoHideIsLeave: boolean | undefined;\r\n  let autoHideIsNever: boolean | undefined;\r\n  let prevTheme: string | null | undefined;\r\n  let instanceAutoHideSuspendScrollDestroyFn = noop;\r\n  let instanceAutoHideDelay = 0;\r\n\r\n  // needed to not fire unnecessary operations for pointer events on safari which will cause side effects: https://github.com/KingSora/OverlayScrollbars/issues/560\r\n  const isHoverablePointerType = (event: PointerEvent) => event.pointerType === 'mouse';\r\n\r\n  const [requestScrollAnimationFrame, cancelScrollAnimationFrame] = selfClearTimeout();\r\n  const [autoHideInstantInteractionTimeout, clearAutoHideInstantInteractionTimeout] =\r\n    selfClearTimeout(100);\r\n  const [autoHideSuspendTimeout, clearAutoHideSuspendTimeout] = selfClearTimeout(100);\r\n  const [auotHideTimeout, clearAutoHideTimeout] = selfClearTimeout(() => instanceAutoHideDelay);\r\n  const [elements, appendElements] = createScrollbarsSetupElements(\r\n    target,\r\n    structureSetupElements,\r\n    structureSetupState,\r\n    createScrollbarsSetupEvents(\r\n      options,\r\n      structureSetupElements,\r\n      structureSetupState,\r\n      (event) =>\r\n        isHoverablePointerType(event) &&\r\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\r\n        manageScrollbarsAutoHideInstantInteraction()\r\n    )\r\n  );\r\n  const { _host, _scrollEventElement, _isBody } = structureSetupElements;\r\n  const {\r\n    _scrollbarsAddRemoveClass,\r\n    _refreshScrollbarsHandleLength,\r\n    _refreshScrollbarsHandleOffset,\r\n    _refreshScrollbarsScrollbarOffset,\r\n  } = elements;\r\n  const manageScrollbarsAutoHide = (removeAutoHide: boolean, delayless?: boolean) => {\r\n    clearAutoHideTimeout();\r\n    if (removeAutoHide) {\r\n      _scrollbarsAddRemoveClass(classNameScrollbarAutoHideHidden);\r\n    } else {\r\n      const hide = bind(_scrollbarsAddRemoveClass, classNameScrollbarAutoHideHidden, true);\r\n      if (instanceAutoHideDelay > 0 && !delayless) {\r\n        auotHideTimeout(hide);\r\n      } else {\r\n        hide();\r\n      }\r\n    }\r\n  };\r\n  const manageScrollbarsAutoHideInstantInteraction = () => {\r\n    if (autoHideIsLeave ? !mouseInHost : !autoHideIsNever) {\r\n      manageScrollbarsAutoHide(true);\r\n      autoHideInstantInteractionTimeout(() => {\r\n        manageScrollbarsAutoHide(false);\r\n      });\r\n    }\r\n  };\r\n  const manageAutoHideSuspension = (add: boolean) => {\r\n    _scrollbarsAddRemoveClass(classNameScrollbarAutoHide, add, true);\r\n    _scrollbarsAddRemoveClass(classNameScrollbarAutoHide, add, false);\r\n  };\r\n  const onHostMouseEnter = (event: PointerEvent) => {\r\n    if (isHoverablePointerType(event)) {\r\n      mouseInHost = autoHideIsLeave;\r\n      autoHideIsLeave && manageScrollbarsAutoHide(true);\r\n    }\r\n  };\r\n  const destroyFns: (() => void)[] = [\r\n    clearAutoHideTimeout,\r\n    clearAutoHideInstantInteractionTimeout,\r\n    clearAutoHideSuspendTimeout,\r\n    cancelScrollAnimationFrame,\r\n    () => instanceAutoHideSuspendScrollDestroyFn(),\r\n\r\n    addEventListener(_host, 'pointerover', onHostMouseEnter, { _once: true }),\r\n    addEventListener(_host, 'pointerenter', onHostMouseEnter),\r\n    addEventListener(_host, 'pointerleave', (event: PointerEvent) => {\r\n      if (isHoverablePointerType(event)) {\r\n        mouseInHost = false;\r\n        autoHideIsLeave && manageScrollbarsAutoHide(false);\r\n      }\r\n    }),\r\n    addEventListener(_host, 'pointermove', (event: PointerEvent) => {\r\n      isHoverablePointerType(event) &&\r\n        autoHideIsMove &&\r\n        manageScrollbarsAutoHideInstantInteraction();\r\n    }),\r\n    addEventListener(_scrollEventElement, 'scroll', (event) => {\r\n      requestScrollAnimationFrame(() => {\r\n        _refreshScrollbarsHandleOffset();\r\n        manageScrollbarsAutoHideInstantInteraction();\r\n      });\r\n\r\n      onScroll(event);\r\n\r\n      _refreshScrollbarsScrollbarOffset();\r\n    }),\r\n  ];\r\n\r\n  return [\r\n    () => bind(runEachAndClear, push(destroyFns, appendElements())),\r\n    ({ _checkOption, _force, _observersUpdateHints, _structureUpdateHints }) => {\r\n      const { _overflowEdgeChanged, _overflowAmountChanged, _overflowStyleChanged } =\r\n        _structureUpdateHints || {};\r\n      const { _directionChanged, _appear } = _observersUpdateHints || {};\r\n      const { _directionIsRTL } = observersSetupState;\r\n      const { _nativeScrollbarsOverlaid } = getEnvironment();\r\n      const { _overflowStyle, _hasOverflow } = structureSetupState;\r\n      const [showNativeOverlaidScrollbarsOption, showNativeOverlaidScrollbarsChanged] =\r\n        _checkOption('showNativeOverlaidScrollbars');\r\n      const [theme, themeChanged] = _checkOption('scrollbars.theme');\r\n      const [visibility, visibilityChanged] = _checkOption('scrollbars.visibility');\r\n      const [autoHide, autoHideChanged] = _checkOption('scrollbars.autoHide');\r\n      const [autoHideSuspend, autoHideSuspendChanged] = _checkOption('scrollbars.autoHideSuspend');\r\n      const [autoHideDelay] = _checkOption('scrollbars.autoHideDelay');\r\n      const [dragScroll, dragScrollChanged] = _checkOption('scrollbars.dragScroll');\r\n      const [clickScroll, clickScrollChanged] = _checkOption('scrollbars.clickScroll');\r\n      const [overflow, overflowChanged] = _checkOption('overflow');\r\n      const trulyAppeared = _appear && !_force;\r\n      const hasOverflow = _hasOverflow.x || _hasOverflow.y;\r\n      const updateScrollbars =\r\n        _overflowEdgeChanged || _overflowAmountChanged || _directionChanged || _force;\r\n      const updateVisibility = _overflowStyleChanged || visibilityChanged || overflowChanged;\r\n      const showNativeOverlaidScrollbars =\r\n        showNativeOverlaidScrollbarsOption &&\r\n        _nativeScrollbarsOverlaid.x &&\r\n        _nativeScrollbarsOverlaid.y;\r\n\r\n      const setScrollbarVisibility = (\r\n        overflowBehavior: OverflowBehavior,\r\n        overflowStyle: OverflowStyle,\r\n        isHorizontal: boolean\r\n      ) => {\r\n        const isVisible =\r\n          overflowBehavior.includes('scroll') &&\r\n          (visibility === 'visible' || (visibility === 'auto' && overflowStyle === 'scroll'));\r\n\r\n        _scrollbarsAddRemoveClass(classNameScrollbarVisible, isVisible, isHorizontal);\r\n\r\n        return isVisible;\r\n      };\r\n\r\n      instanceAutoHideDelay = autoHideDelay;\r\n\r\n      if (trulyAppeared) {\r\n        if (autoHideSuspend && hasOverflow) {\r\n          manageAutoHideSuspension(false);\r\n          instanceAutoHideSuspendScrollDestroyFn();\r\n          autoHideSuspendTimeout(() => {\r\n            instanceAutoHideSuspendScrollDestroyFn = addEventListener(\r\n              _scrollEventElement,\r\n              'scroll',\r\n              bind(manageAutoHideSuspension, true),\r\n              {\r\n                _once: true,\r\n              }\r\n            );\r\n          });\r\n        } else {\r\n          manageAutoHideSuspension(true);\r\n        }\r\n      }\r\n\r\n      if (showNativeOverlaidScrollbarsChanged) {\r\n        _scrollbarsAddRemoveClass(classNameScrollbarThemeNone, showNativeOverlaidScrollbars);\r\n      }\r\n\r\n      if (themeChanged) {\r\n        _scrollbarsAddRemoveClass(prevTheme);\r\n        _scrollbarsAddRemoveClass(theme, true);\r\n\r\n        prevTheme = theme;\r\n      }\r\n\r\n      if (autoHideSuspendChanged && !autoHideSuspend) {\r\n        manageAutoHideSuspension(true);\r\n      }\r\n\r\n      if (autoHideChanged) {\r\n        autoHideIsMove = autoHide === 'move';\r\n        autoHideIsLeave = autoHide === 'leave';\r\n        autoHideIsNever = autoHide === 'never';\r\n        manageScrollbarsAutoHide(autoHideIsNever, true);\r\n      }\r\n\r\n      if (dragScrollChanged) {\r\n        _scrollbarsAddRemoveClass(classNameScrollbarHandleInteractive, dragScroll);\r\n      }\r\n\r\n      if (clickScrollChanged) {\r\n        _scrollbarsAddRemoveClass(classNameScrollbarTrackInteractive, clickScroll);\r\n      }\r\n\r\n      if (updateVisibility) {\r\n        const xVisible = setScrollbarVisibility(overflow.x, _overflowStyle.x, true);\r\n        const yVisible = setScrollbarVisibility(overflow.y, _overflowStyle.y, false);\r\n        const hasCorner = xVisible && yVisible;\r\n\r\n        _scrollbarsAddRemoveClass(classNameScrollbarCornerless, !hasCorner);\r\n      }\r\n\r\n      if (updateScrollbars) {\r\n        // order is matter! length has to be refreshed before offset\r\n        _refreshScrollbarsHandleLength();\r\n        _refreshScrollbarsHandleOffset();\r\n        _refreshScrollbarsScrollbarOffset();\r\n\r\n        _scrollbarsAddRemoveClass(classNameScrollbarUnusable, !_hasOverflow.x, true);\r\n        _scrollbarsAddRemoveClass(classNameScrollbarUnusable, !_hasOverflow.y, false);\r\n        _scrollbarsAddRemoveClass(classNameScrollbarRtl, _directionIsRTL && !_isBody);\r\n      }\r\n    },\r\n    {},\r\n    elements,\r\n  ];\r\n};\r\n","import {\r\n  assignDeep,\r\n  isEmptyObject,\r\n  isFunction,\r\n  isHTMLElement,\r\n  createEventListenerHub,\r\n  isPlainObject,\r\n  keys,\r\n  isArray,\r\n  push,\r\n  runEachAndClear,\r\n  bind,\r\n  removeUndefinedProperties,\r\n} from '~/support';\r\nimport { getOptionsDiff } from '~/options';\r\nimport { getEnvironment } from '~/environment';\r\nimport { cancelInitialization } from '~/initialization';\r\nimport { addInstance, getInstance, removeInstance } from '~/instances';\r\nimport { createSetups } from '~/setups';\r\nimport {\r\n  addPlugins,\r\n  getStaticPluginModuleInstance,\r\n  optionsValidationPluginModuleName,\r\n  pluginModules,\r\n  registerPluginModuleInstances,\r\n} from '~/plugins';\r\nimport type { XY, TRBL } from '~/support';\r\nimport type { Options, PartialOptions, ReadonlyOptions } from '~/options';\r\nimport type {\r\n  InferInstancePluginModuleInstance,\r\n  InferStaticPluginModuleInstance,\r\n  InstancePlugin,\r\n  OptionsValidationPlugin,\r\n  Plugin,\r\n  PluginModuleInstance,\r\n  StaticPlugin,\r\n} from '~/plugins';\r\nimport type { Initialization, InitializationTarget, PartialInitialization } from '~/initialization';\r\nimport type { OverflowStyle } from '~/typings';\r\nimport type { EventListenerArgs, EventListener, EventListeners } from '~/eventListeners';\r\nimport type {\r\n  ScrollbarsSetupElement,\r\n  ScrollbarStructure,\r\n} from '~/setups/scrollbarsSetup/scrollbarsSetup.elements';\r\n\r\n// Notes:\r\n// Height intrinsic detection use \"content: true\" init strategy - or open ticket for custom height intrinsic observer\r\n\r\n/**\r\n * Describes the OverlayScrollbars environment.\r\n */\r\nexport interface Environment {\r\n  /** The native scrollbars size of the browser / system. */\r\n  scrollbarsSize: XY<number>;\r\n  /** Whether the native scrollbars are overlaid. */\r\n  scrollbarsOverlaid: XY<boolean>;\r\n  /** Whether the browser supports native scrollbars hiding. */\r\n  scrollbarsHiding: boolean;\r\n  /** The rtl scroll behavior of the browser. */\r\n  rtlScrollBehavior: { n: boolean; i: boolean };\r\n  /** Whether the browser supports the ScrollTimeline API. */\r\n  scrollTimeline: boolean;\r\n  /** The default Initialization to use if nothing else is specified. */\r\n  staticDefaultInitialization: Initialization;\r\n  /** The default Options to use if nothing else is specified. */\r\n  staticDefaultOptions: Options;\r\n\r\n  /** Returns the current default Initialization. */\r\n  getDefaultInitialization(): Initialization;\r\n  /** Returns the current default Options. */\r\n  getDefaultOptions(): Options;\r\n\r\n  /**\r\n   * Sets a new default Initialization.\r\n   * If the new default Initialization is partially filled, its deeply merged with the current default Initialization.\r\n   * @param newDefaultInitialization The new default Initialization.\r\n   * @returns The current default Initialization.\r\n   */\r\n  setDefaultInitialization(newDefaultInitialization: PartialInitialization): Initialization;\r\n  /**\r\n   * Sets new default Options.\r\n   * If the new default Options are partially filled, they're deeply merged with the current default Options.\r\n   * @param newDefaultOptions The new default Options.\r\n   * @returns The current default options.\r\n   */\r\n  setDefaultOptions(newDefaultOptions: PartialOptions): Options;\r\n}\r\n\r\n/**\r\n * The primary entry point to OverlayScrollbars.\r\n */\r\nexport interface OverlayScrollbarsStatic {\r\n  /**\r\n   * Returns the current OverlayScrollbars instance if the target already has an instance.\r\n   * @param target The initialization target to from which the instance shall be returned.\r\n   */\r\n  (target: InitializationTarget): OverlayScrollbars | undefined;\r\n  /**\r\n   * Initializes a new OverlayScrollbars instance to the given target\r\n   * or returns the current OverlayScrollbars instance if the target already has an instance.\r\n   * @param target The target.\r\n   * @param options The options. (Can be just an empty object)\r\n   * @param eventListeners Optional event listeners.\r\n   */\r\n  (\r\n    target: InitializationTarget,\r\n    options: PartialOptions,\r\n    eventListeners?: EventListeners\r\n  ): OverlayScrollbars;\r\n\r\n  /**\r\n   * Adds a single plugin.\r\n   * @param plugin The plugin to be added.\r\n   * @returns The plugins static modules instance or `void` if no instance was found.\r\n   */\r\n  plugin<P extends Plugin>(\r\n    plugin: P\r\n  ): P extends StaticPlugin ? InferStaticPluginModuleInstance<P> : void;\r\n  /**\r\n   * Adds multiple plugins.\r\n   * @param plugins The plugins to be added.\r\n   * @returns The plugins static modules instances or `void` if no instance was found.\r\n   */\r\n  plugin<P extends [Plugin, ...Plugin[]]>(\r\n    plugins: P\r\n  ): P extends [Plugin, ...Plugin[]]\r\n    ? {\r\n        [K in keyof P]: P[K] extends StaticPlugin ? InferStaticPluginModuleInstance<P[K]> : void;\r\n      }\r\n    : void;\r\n\r\n  /**\r\n   * Checks whether the passed value is a valid and not destroyed overlayscrollbars instance.\r\n   * @param osInstance The value which shall be checked.\r\n   */\r\n  valid(osInstance: any): osInstance is OverlayScrollbars;\r\n  /**\r\n   * Gets the environment.\r\n   */\r\n  env(): Environment;\r\n}\r\n\r\n/**\r\n * Describes a OverlayScrollbars instances state.\r\n */\r\nexport interface State {\r\n  /** Describes the current padding in pixel. */\r\n  padding: TRBL;\r\n  /** Whether the current padding is absolute. */\r\n  paddingAbsolute: boolean;\r\n  /** The client width (x) & height (y) of the viewport in pixel. */\r\n  overflowEdge: XY<number>;\r\n  /** The overflow amount in pixel. */\r\n  overflowAmount: XY<number>;\r\n  /** The css overflow style of the viewport. */\r\n  overflowStyle: XY<OverflowStyle>;\r\n  /** Whether the viewport has an overflow. */\r\n  hasOverflow: XY<boolean>;\r\n  /** Whether the direction is considered rtl. */\r\n  directionRTL: boolean;\r\n  /** Whether the instance is considered destroyed. */\r\n  destroyed: boolean;\r\n}\r\n\r\n/**\r\n * Describes the elements of a scrollbar.\r\n */\r\nexport interface ScrollbarElements {\r\n  /**\r\n   * The root element of the scrollbar.\r\n   * The HTML structure looks like this:\r\n   * <scrollbar>\r\n   *   <track>\r\n   *     <handle />\r\n   *   </track>\r\n   * </scrollbar>\r\n   */\r\n  scrollbar: HTMLElement;\r\n  /** The track element of the scrollbar. */\r\n  track: HTMLElement;\r\n  /** The handle element of the scrollbar. */\r\n  handle: HTMLElement;\r\n}\r\n\r\n/**\r\n * Describes the elements of a scrollbar and provides the possibility to clone them.\r\n */\r\nexport interface CloneableScrollbarElements extends ScrollbarElements {\r\n  /**\r\n   * Clones the current scrollbar and returns the cloned elements.\r\n   * The returned elements aren't added to the DOM.\r\n   */\r\n  clone(): ScrollbarElements;\r\n}\r\n\r\n/**\r\n * Describes the elements of a OverlayScrollbars instance.\r\n */\r\nexport interface Elements {\r\n  /** The element the instance was applied to. */\r\n  target: HTMLElement;\r\n  /** The host element. Its the root of all other elements. */\r\n  host: HTMLElement;\r\n  /**\r\n   * The element which is responsible to apply correct paddings.\r\n   * Depending on the Initialization it can be the same as the viewport element.\r\n   */\r\n  padding: HTMLElement;\r\n  /** The element which is responsible to do any scrolling. */\r\n  viewport: HTMLElement;\r\n  /**\r\n   * The element which is responsible to hold the content.\r\n   * Depending on the Initialization it can be the same as the viewport element.\r\n   */\r\n  content: HTMLElement;\r\n  /**\r\n   * The element through which you can get the current `scrollLeft` or `scrollTop` offset.\r\n   * Depending on the target element it can be the same as the viewport element.\r\n   */\r\n  scrollOffsetElement: HTMLElement;\r\n  /**\r\n   * The element through which you can add `scroll` events.\r\n   * Depending on the target element it can be the same as the viewport element.\r\n   */\r\n  scrollEventElement: HTMLElement | Document;\r\n  /** The horizontal scrollbar elements. */\r\n  scrollbarHorizontal: CloneableScrollbarElements;\r\n  /** The vertical scrollbar elements. */\r\n  scrollbarVertical: CloneableScrollbarElements;\r\n}\r\n\r\n/**\r\n * Describes a OverlayScrollbars instance.\r\n */\r\nexport interface OverlayScrollbars {\r\n  /** Gets the current options of the instance. */\r\n  options(): Options;\r\n  /**\r\n   * Sets the options of the instance.\r\n   * If the new options are partially filled, they're deeply merged with either the current options or the current default options.\r\n   * @param newOptions The new options which should be applied.\r\n   * @param pure Whether the options should be reset before the new options are added.\r\n   * @returns Returns the current options of the instance.\r\n   */\r\n  options(newOptions: PartialOptions, pure?: boolean): Options;\r\n\r\n  /**\r\n   * Adds event listeners to the instance.\r\n   * @param eventListeners An object which contains the added listeners.\r\n   * @param pure Whether all already added event listeners should be removed before the new listeners are added.\r\n   * @returns Returns a function which removes the added listeners.\r\n   */\r\n  on(eventListeners: EventListeners, pure?: boolean): () => void;\r\n  /**\r\n   * Adds a single event listener to the instance.\r\n   * @param name The name of the event.\r\n   * @param listener The listener which is invoked on that event.\r\n   * @returns Returns a function which removes the added listeners.\r\n   */\r\n  on<N extends keyof EventListenerArgs>(name: N, listener: EventListener<N>): () => void;\r\n  /**\r\n   * Adds multiple event listeners to the instance.\r\n   * @param name The name of the event.\r\n   * @param listener The listeners which are invoked on that event.\r\n   * @returns Returns a function which removes the added listeners.\r\n   */\r\n  on<N extends keyof EventListenerArgs>(name: N, listener: EventListener<N>[]): () => void;\r\n\r\n  /**\r\n   * Removes a single event listener from the instance.\r\n   * @param name The name of the event.\r\n   * @param listener The listener which shall be removed.\r\n   */\r\n  off<N extends keyof EventListenerArgs>(name: N, listener: EventListener<N>): void;\r\n  /**\r\n   * Removes multiple event listeners from the instance.\r\n   * @param name The name of the event.\r\n   * @param listener The listeners which shall be removed.\r\n   */\r\n  off<N extends keyof EventListenerArgs>(name: N, listener: EventListener<N>[]): void;\r\n\r\n  /**\r\n   * Updates the instance.\r\n   * @param force Whether the update should force the cache to be invalidated.\r\n   * @returns A boolean which indicates whether the `update` event was triggered through this update.\r\n   * The update event is only triggered if something changed because of this update.\r\n   */\r\n  update(force?: boolean): boolean;\r\n  /** Returns the state of the instance. */\r\n  state(): State;\r\n  /** Returns the elements of the instance. */\r\n  elements(): Elements;\r\n  /** Destroys the instance and removes all added elements. */\r\n  destroy(): void;\r\n  /** Returns the instance of the passed plugin or `undefined` if no instance was found. */\r\n  plugin<P extends InstancePlugin>(osPlugin: P): InferInstancePluginModuleInstance<P> | undefined;\r\n}\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-redeclare\r\nexport const OverlayScrollbars: OverlayScrollbarsStatic = (\r\n  target: InitializationTarget,\r\n  options?: PartialOptions,\r\n  eventListeners?: EventListeners\r\n) => {\r\n  const { _getDefaultOptions } = getEnvironment();\r\n  const targetIsElement = isHTMLElement(target);\r\n  const instanceTarget = targetIsElement ? target : target.target;\r\n  const potentialInstance = getInstance(instanceTarget);\r\n  if (options && !potentialInstance) {\r\n    let destroyed = false;\r\n    const destroyFns: (() => void)[] = [];\r\n    const instancePluginModuleInstances: Record<string, PluginModuleInstance> = {};\r\n    const validateOptions = (newOptions: PartialOptions) => {\r\n      const newOptionsWithoutUndefined = removeUndefinedProperties(newOptions, true);\r\n      const pluginValidate = getStaticPluginModuleInstance<typeof OptionsValidationPlugin>(\r\n        optionsValidationPluginModuleName\r\n      );\r\n      return pluginValidate\r\n        ? pluginValidate(newOptionsWithoutUndefined, true)\r\n        : newOptionsWithoutUndefined;\r\n    };\r\n    const currentOptions: ReadonlyOptions = assignDeep(\r\n      {},\r\n      _getDefaultOptions(),\r\n      validateOptions(options)\r\n    );\r\n    const [addPluginEvent, removePluginEvents, triggerPluginEvent] =\r\n      createEventListenerHub<EventListenerArgs>();\r\n    const [addInstanceEvent, removeInstanceEvents, triggerInstanceEvent] =\r\n      createEventListenerHub(eventListeners);\r\n    const triggerEvent: typeof triggerPluginEvent = (name, args) => {\r\n      triggerInstanceEvent(name, args);\r\n      triggerPluginEvent(name, args);\r\n    };\r\n    const [setupsConstruct, setupsUpdate, setupsState, setupsElements, setupsCanceled] =\r\n      createSetups(\r\n        target,\r\n        currentOptions,\r\n        ({ _changedOptions, _force }, { _observersUpdateHints, _structureUpdateHints }) => {\r\n          const {\r\n            _sizeChanged,\r\n            _directionChanged,\r\n            _heightIntrinsicChanged,\r\n            _contentMutation,\r\n            _hostMutation,\r\n            _appear,\r\n          } = _observersUpdateHints;\r\n\r\n          const { _overflowEdgeChanged, _overflowAmountChanged, _overflowStyleChanged } =\r\n            _structureUpdateHints;\r\n\r\n          triggerEvent('updated', [\r\n            // eslint-disable-next-line @typescript-eslint/no-use-before-define\r\n            instance,\r\n            {\r\n              updateHints: {\r\n                sizeChanged: !!_sizeChanged,\r\n                directionChanged: !!_directionChanged,\r\n                heightIntrinsicChanged: !!_heightIntrinsicChanged,\r\n                overflowEdgeChanged: !!_overflowEdgeChanged,\r\n                overflowAmountChanged: !!_overflowAmountChanged,\r\n                overflowStyleChanged: !!_overflowStyleChanged,\r\n                contentMutation: !!_contentMutation,\r\n                hostMutation: !!_hostMutation,\r\n                appear: !!_appear,\r\n              },\r\n              changedOptions: _changedOptions || {},\r\n              force: !!_force,\r\n            },\r\n          ]);\r\n        },\r\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\r\n        (scrollEvent) => triggerEvent('scroll', [instance, scrollEvent])\r\n      );\r\n\r\n    const destroy = (canceled: boolean) => {\r\n      removeInstance(instanceTarget);\r\n      runEachAndClear(destroyFns);\r\n\r\n      destroyed = true;\r\n\r\n      // eslint-disable-next-line @typescript-eslint/no-use-before-define\r\n      triggerEvent('destroyed', [instance, canceled]);\r\n      removePluginEvents();\r\n      removeInstanceEvents();\r\n    };\r\n\r\n    const instance: OverlayScrollbars = {\r\n      options(newOptions?: PartialOptions, pure?: boolean) {\r\n        if (newOptions) {\r\n          const base = pure ? _getDefaultOptions() : {};\r\n          const changedOptions = getOptionsDiff(\r\n            currentOptions,\r\n            assignDeep(base, validateOptions(newOptions))\r\n          );\r\n          if (!isEmptyObject(changedOptions)) {\r\n            assignDeep(currentOptions, changedOptions);\r\n            setupsUpdate({ _changedOptions: changedOptions });\r\n          }\r\n        }\r\n        return assignDeep({}, currentOptions);\r\n      },\r\n      on: addInstanceEvent,\r\n      off: (name, listener) => {\r\n        name && listener && removeInstanceEvents(name, listener);\r\n      },\r\n      state() {\r\n        const { _observersSetupState, _structureSetupState } = setupsState();\r\n        const { _directionIsRTL } = _observersSetupState;\r\n        const {\r\n          _overflowEdge,\r\n          _overflowAmount,\r\n          _overflowStyle,\r\n          _hasOverflow,\r\n          _padding,\r\n          _paddingAbsolute,\r\n        } = _structureSetupState;\r\n        return assignDeep(\r\n          {},\r\n          {\r\n            overflowEdge: _overflowEdge,\r\n            overflowAmount: _overflowAmount,\r\n            overflowStyle: _overflowStyle,\r\n            hasOverflow: _hasOverflow,\r\n            padding: _padding,\r\n            paddingAbsolute: _paddingAbsolute,\r\n            directionRTL: _directionIsRTL,\r\n            destroyed,\r\n          }\r\n        );\r\n      },\r\n      elements() {\r\n        const {\r\n          _target,\r\n          _host,\r\n          _padding,\r\n          _viewport,\r\n          _content,\r\n          _scrollOffsetElement,\r\n          _scrollEventElement,\r\n        } = setupsElements._structureSetupElements;\r\n        const { _horizontal, _vertical } = setupsElements._scrollbarsSetupElements;\r\n        const translateScrollbarStructure = (\r\n          scrollbarStructure: ScrollbarStructure\r\n        ): ScrollbarElements => {\r\n          const { _handle, _track, _scrollbar } = scrollbarStructure;\r\n          return {\r\n            scrollbar: _scrollbar,\r\n            track: _track,\r\n            handle: _handle,\r\n          };\r\n        };\r\n        const translateScrollbarsSetupElement = (\r\n          scrollbarsSetupElement: ScrollbarsSetupElement\r\n        ): CloneableScrollbarElements => {\r\n          const { _scrollbarStructures, _clone } = scrollbarsSetupElement;\r\n          const translatedStructure = translateScrollbarStructure(_scrollbarStructures[0]);\r\n\r\n          return assignDeep({}, translatedStructure, {\r\n            clone: () => {\r\n              const result = translateScrollbarStructure(_clone());\r\n              setupsUpdate({ _cloneScrollbar: true });\r\n              return result;\r\n            },\r\n          });\r\n        };\r\n        return assignDeep(\r\n          {},\r\n          {\r\n            target: _target,\r\n            host: _host,\r\n            padding: _padding || _viewport,\r\n            viewport: _viewport,\r\n            content: _content || _viewport,\r\n            scrollOffsetElement: _scrollOffsetElement,\r\n            scrollEventElement: _scrollEventElement,\r\n            scrollbarHorizontal: translateScrollbarsSetupElement(_horizontal),\r\n            scrollbarVertical: translateScrollbarsSetupElement(_vertical),\r\n          }\r\n        );\r\n      },\r\n      update: (_force?: boolean) => setupsUpdate({ _force, _takeRecords: true }),\r\n      destroy: bind(destroy, false),\r\n      plugin: <P extends InstancePlugin>(plugin: P) =>\r\n        instancePluginModuleInstances[keys(plugin)[0]] as\r\n          | InferInstancePluginModuleInstance<P>\r\n          | undefined,\r\n    };\r\n\r\n    push(destroyFns, [setupsCanceled]);\r\n\r\n    // valid inside plugins\r\n    addInstance(instanceTarget, instance);\r\n\r\n    // init plugins\r\n    registerPluginModuleInstances(pluginModules, OverlayScrollbars, [\r\n      instance,\r\n      addPluginEvent,\r\n      instancePluginModuleInstances,\r\n    ]);\r\n\r\n    if (\r\n      cancelInitialization(\r\n        setupsElements._structureSetupElements._isBody,\r\n        !targetIsElement && target.cancel\r\n      )\r\n    ) {\r\n      destroy(true);\r\n      return instance;\r\n    }\r\n\r\n    push(destroyFns, setupsConstruct());\r\n\r\n    triggerEvent('initialized', [instance]);\r\n\r\n    instance.update(true);\r\n\r\n    return instance;\r\n  }\r\n  return potentialInstance!;\r\n};\r\n\r\nOverlayScrollbars.plugin = (plugins: Plugin | Plugin[]) => {\r\n  const isArr = isArray(plugins);\r\n  const pluginsToAdd: Plugin<string, void | PluginModuleInstance, void | PluginModuleInstance>[] =\r\n    isArr ? plugins : [plugins];\r\n  const result = pluginsToAdd.map(\r\n    (plugin) => registerPluginModuleInstances(plugin, OverlayScrollbars)[0]\r\n  );\r\n  addPlugins(pluginsToAdd);\r\n  return isArr ? result : (result[0] as any);\r\n};\r\nOverlayScrollbars.valid = (osInstance: any): osInstance is OverlayScrollbars => {\r\n  const hasElmsFn = osInstance && (osInstance as OverlayScrollbars).elements;\r\n  const elements = isFunction(hasElmsFn) && hasElmsFn();\r\n  return isPlainObject(elements) && !!getInstance(elements.target);\r\n};\r\nOverlayScrollbars.env = () => {\r\n  const {\r\n    _nativeScrollbarsSize,\r\n    _nativeScrollbarsOverlaid,\r\n    _nativeScrollbarsHiding,\r\n    _rtlScrollBehavior,\r\n    _scrollTimeline,\r\n    _staticDefaultInitialization,\r\n    _staticDefaultOptions,\r\n    _getDefaultInitialization,\r\n    _setDefaultInitialization,\r\n    _getDefaultOptions,\r\n    _setDefaultOptions,\r\n  } = getEnvironment();\r\n  return assignDeep(\r\n    {},\r\n    {\r\n      scrollbarsSize: _nativeScrollbarsSize,\r\n      scrollbarsOverlaid: _nativeScrollbarsOverlaid,\r\n      scrollbarsHiding: _nativeScrollbarsHiding,\r\n      rtlScrollBehavior: _rtlScrollBehavior,\r\n      scrollTimeline: _scrollTimeline,\r\n      staticDefaultInitialization: _staticDefaultInitialization,\r\n      staticDefaultOptions: _staticDefaultOptions,\r\n\r\n      getDefaultInitialization: _getDefaultInitialization,\r\n      setDefaultInitialization: _setDefaultInitialization,\r\n      getDefaultOptions: _getDefaultOptions,\r\n      setDefaultOptions: _setDefaultOptions,\r\n    }\r\n  );\r\n};\r\n","import type {\r\n  Options,\r\n  PartialOptions,\r\n  OverflowBehavior,\r\n  ScrollbarsVisibilityBehavior,\r\n  ScrollbarsAutoHideBehavior,\r\n} from '~/options';\r\nimport type { OptionsTemplate, OptionsTemplateValue } from './validation';\r\nimport type { StaticPlugin } from '~/plugins';\r\nimport { validateOptions, optionsTemplateTypes as oTypes } from './validation';\r\n\r\nexport const optionsValidationPluginModuleName = '__osOptionsValidationPlugin';\r\n\r\nexport const OptionsValidationPlugin = /* @__PURE__ */ (() => ({\r\n  [optionsValidationPluginModuleName]: {\r\n    static: () => {\r\n      const numberAllowedValues: OptionsTemplateValue<number> = oTypes.number;\r\n      const booleanAllowedValues: OptionsTemplateValue<boolean> = oTypes.boolean;\r\n      const arrayNullValues: OptionsTemplateValue<Array<unknown> | null> = [\r\n        oTypes.array,\r\n        oTypes.null,\r\n      ];\r\n      const overflowAllowedValues: OptionsTemplateValue<OverflowBehavior> =\r\n        'hidden scroll visible visible-hidden';\r\n      const scrollbarsVisibilityAllowedValues: OptionsTemplateValue<ScrollbarsVisibilityBehavior> =\r\n        'visible hidden auto';\r\n      const scrollbarsAutoHideAllowedValues: OptionsTemplateValue<ScrollbarsAutoHideBehavior> =\r\n        'never scroll leavemove';\r\n\r\n      const optionsTemplate: OptionsTemplate<Options> = {\r\n        // resize: resizeAllowedValues, // none || both  || horizontal || vertical || n || b ||\r\n        paddingAbsolute: booleanAllowedValues, // true || false\r\n        showNativeOverlaidScrollbars: booleanAllowedValues, // true || false\r\n        update: {\r\n          elementEvents: arrayNullValues, // array of tuples || null\r\n          attributes: arrayNullValues,\r\n          debounce: [oTypes.number, oTypes.array, oTypes.null], // number || number array || null\r\n          ignoreMutation: [oTypes.function, oTypes.null], // function || null\r\n        },\r\n        overflow: {\r\n          x: overflowAllowedValues, // visible-hidden  || visible-scroll || hidden || scrol\r\n          y: overflowAllowedValues, // visible-hidden  || visible-scroll || hidden || scrol\r\n        },\r\n        scrollbars: {\r\n          theme: [oTypes.string, oTypes.null], // string || null\r\n          visibility: scrollbarsVisibilityAllowedValues, // visible || hidden || auto || v ||\r\n          autoHide: scrollbarsAutoHideAllowedValues, // never || scroll || leave || move ||\r\n          autoHideDelay: numberAllowedValues, // number\r\n          autoHideSuspend: booleanAllowedValues, // true || false\r\n          dragScroll: booleanAllowedValues, // true || false\r\n          clickScroll: booleanAllowedValues, // true || false\r\n          pointers: [oTypes.array, oTypes.null], // string array\r\n        },\r\n        /*\r\n        textarea: {\r\n          dynWidth: booleanAllowedValues, // true || false\r\n          dynHeight: booleanAllowedValues, // true || false\r\n          inheritedAttrs: stringArrayNullAllowedValues, // string || array || nul\r\n        },\r\n        */\r\n      };\r\n      return (options: PartialOptions, doWriteErrors?: boolean): PartialOptions => {\r\n        const [validated, foreign] = validateOptions(optionsTemplate, options, doWriteErrors);\r\n        return { ...foreign, ...validated };\r\n      };\r\n    },\r\n  },\r\n}))() satisfies StaticPlugin<typeof optionsValidationPluginModuleName>;\r\n","// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nimport React, { useEffect, useMemo, useRef } from 'react';\r\nimport { OverlayScrollbars } from 'overlayscrollbars';\r\nimport type { InitializationTarget } from 'overlayscrollbars';\r\nimport type {\r\n  OverlayScrollbarsComponentProps,\r\n  OverlayScrollbarsComponentRef,\r\n} from './OverlayScrollbarsComponent';\r\n\r\ntype Defer = [\r\n  requestDefer: (callback: () => any, options?: OverlayScrollbarsComponentProps['defer']) => void,\r\n  cancelDefer: () => void\r\n];\r\n\r\nexport interface UseOverlayScrollbarsParams {\r\n  /** OverlayScrollbars options. */\r\n  options?: OverlayScrollbarsComponentProps['options'];\r\n  /** OverlayScrollbars events. */\r\n  events?: OverlayScrollbarsComponentProps['events'];\r\n  /** Whether to defer the initialization to a point in time when the browser is idle. (or to the next frame if `window.requestIdleCallback` is not supported) */\r\n  defer?: OverlayScrollbarsComponentProps['defer'];\r\n}\r\n\r\nexport type UseOverlayScrollbarsInitialization = (target: InitializationTarget) => void;\r\n\r\nexport type UseOverlayScrollbarsInstance = () => ReturnType<\r\n  OverlayScrollbarsComponentRef['osInstance']\r\n>;\r\n\r\nconst createDefer = (): Defer => {\r\n  /* c8 ignore start */\r\n  if (typeof window === 'undefined') {\r\n    // mock ssr calls with \"noop\"\r\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n    const noop = () => {};\r\n    return [noop, noop];\r\n  }\r\n  /* c8 ignore end */\r\n\r\n  let idleId: number;\r\n  let rafId: number;\r\n  const wnd = window;\r\n  const idleSupported = typeof wnd.requestIdleCallback === 'function';\r\n  const rAF = wnd.requestAnimationFrame;\r\n  const cAF = wnd.cancelAnimationFrame;\r\n  const rIdle = idleSupported ? wnd.requestIdleCallback : rAF;\r\n  const cIdle = idleSupported ? wnd.cancelIdleCallback : cAF;\r\n  const clear = () => {\r\n    cIdle(idleId);\r\n    cAF(rafId);\r\n  };\r\n\r\n  return [\r\n    (callback, options) => {\r\n      clear();\r\n      idleId = rIdle(\r\n        idleSupported\r\n          ? () => {\r\n              clear();\r\n              // inside idle its best practice to use rAF to change DOM for best performance\r\n              rafId = rAF(callback);\r\n            }\r\n          : callback,\r\n        typeof options === 'object' ? options : { timeout: 2233 }\r\n      );\r\n    },\r\n    clear,\r\n  ];\r\n};\r\n\r\n/**\r\n * Hook for advanced usage of OverlayScrollbars. (When the OverlayScrollbarsComponent is not enough)\r\n * @param params Parameters for customization.\r\n * @returns A tuple with two values:\r\n * The first value is the initialization function, it takes one argument which is the `InitializationTarget`.\r\n * The second value is a function which returns the current OverlayScrollbars instance or `null` if not initialized.\r\n */\r\nexport const useOverlayScrollbars = (\r\n  params?: UseOverlayScrollbarsParams\r\n): [UseOverlayScrollbarsInitialization, UseOverlayScrollbarsInstance] => {\r\n  const { options, events, defer } = params || {};\r\n  const [requestDefer, cancelDefer] = useMemo<Defer>(createDefer, []);\r\n  const instanceRef = useRef<ReturnType<UseOverlayScrollbarsInstance>>(null);\r\n  const deferRef = useRef(defer);\r\n  const optionsRef = useRef(options);\r\n  const eventsRef = useRef(events);\r\n\r\n  useEffect(() => {\r\n    deferRef.current = defer;\r\n  }, [defer]);\r\n\r\n  useEffect(() => {\r\n    const { current: instance } = instanceRef;\r\n\r\n    optionsRef.current = options;\r\n\r\n    if (OverlayScrollbars.valid(instance)) {\r\n      instance.options(options || {}, true);\r\n    }\r\n  }, [options]);\r\n\r\n  useEffect(() => {\r\n    const { current: instance } = instanceRef;\r\n\r\n    eventsRef.current = events;\r\n\r\n    if (OverlayScrollbars.valid(instance)) {\r\n      instance.on(events || {}, true);\r\n    }\r\n  }, [events]);\r\n\r\n  useEffect(\r\n    () => () => {\r\n      cancelDefer();\r\n      instanceRef.current?.destroy();\r\n    },\r\n    []\r\n  );\r\n\r\n  return useMemo<[UseOverlayScrollbarsInitialization, UseOverlayScrollbarsInstance]>(\r\n    () => [\r\n      (target) => {\r\n        // if already initialized do nothing\r\n        const presentInstance = instanceRef.current;\r\n        if (OverlayScrollbars.valid(presentInstance)) {\r\n          return;\r\n        }\r\n\r\n        const currDefer = deferRef.current;\r\n        const currOptions = optionsRef.current || {};\r\n        const currEvents = eventsRef.current || {};\r\n        const init = () =>\r\n          (instanceRef.current = OverlayScrollbars(target, currOptions, currEvents));\r\n\r\n        if (currDefer) {\r\n          requestDefer(init, currDefer);\r\n        } else {\r\n          init();\r\n        }\r\n      },\r\n      () => instanceRef.current,\r\n    ],\r\n    []\r\n  );\r\n};\r\n","// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nimport React, { forwardRef, useEffect, useRef, useImperativeHandle } from 'react';\r\nimport type { OverlayScrollbars } from 'overlayscrollbars';\r\nimport type { PartialOptions, EventListeners } from 'overlayscrollbars';\r\nimport type {\r\n  ComponentPropsWithoutRef,\r\n  ElementRef,\r\n  ElementType,\r\n  ForwardedRef,\r\n  ReactElement,\r\n} from 'react';\r\nimport { useOverlayScrollbars } from './useOverlayScrollbars';\r\n\r\ntype OverlayScrollbarsComponentBaseProps<T extends ElementType = 'div'> =\r\n  ComponentPropsWithoutRef<T> & {\r\n    /** Tag of the root element. */\r\n    element?: T;\r\n    /** OverlayScrollbars options. */\r\n    options?: PartialOptions | false | null;\r\n    /** OverlayScrollbars events. */\r\n    events?: EventListeners | false | null;\r\n    /** Whether to defer the initialization to a point in time when the browser is idle. (or to the next frame if `window.requestIdleCallback` is not supported) */\r\n    defer?: boolean | IdleRequestOptions;\r\n  };\r\n\r\nexport type OverlayScrollbarsComponentProps<T extends ElementType = 'div'> =\r\n  OverlayScrollbarsComponentBaseProps<T> & {\r\n    ref?: ForwardedRef<OverlayScrollbarsComponentRef<T>>;\r\n  };\r\n\r\nexport interface OverlayScrollbarsComponentRef<T extends ElementType = 'div'> {\r\n  /** Returns the OverlayScrollbars instance or null if not initialized. */\r\n  osInstance(): OverlayScrollbars | null;\r\n  /** Returns the root element. */\r\n  getElement(): ElementRef<T> | null;\r\n}\r\n\r\nconst OverlayScrollbarsComponent = <T extends ElementType = 'div'>(\r\n  props: OverlayScrollbarsComponentBaseProps<T>,\r\n  ref: ForwardedRef<OverlayScrollbarsComponentRef<T>>\r\n): ReactElement | null => {\r\n  const { element = 'div', options, events, defer, children, ...other } = props;\r\n  const Tag = element;\r\n  const elementRef = useRef<ElementRef<T>>(null);\r\n  const childrenRef = useRef<HTMLDivElement>(null);\r\n  const [initialize, osInstance] = useOverlayScrollbars({ options, events, defer });\r\n\r\n  useEffect(() => {\r\n    const { current: elm } = elementRef;\r\n    const { current: contentsElm } = childrenRef;\r\n\r\n    /* c8 ignore start */\r\n    if (!elm) {\r\n      return;\r\n    }\r\n    /* c8 ignore end */\r\n\r\n    const target = elm as unknown as HTMLElement;\r\n\r\n    initialize(\r\n      element === 'body'\r\n        ? {\r\n            target,\r\n            cancel: {\r\n              body: null,\r\n            },\r\n          }\r\n        : {\r\n            target,\r\n            elements: {\r\n              viewport: contentsElm,\r\n              content: contentsElm,\r\n            },\r\n          }\r\n    );\r\n\r\n    return () => osInstance()?.destroy();\r\n  }, [initialize, element]);\r\n\r\n  useImperativeHandle(\r\n    ref,\r\n    () => {\r\n      return {\r\n        osInstance,\r\n        getElement: () => elementRef.current,\r\n      };\r\n    },\r\n    []\r\n  );\r\n\r\n  return (\r\n    // @ts-ignore\r\n    <Tag data-overlayscrollbars-initialize=\"\" ref={elementRef} {...other}>\r\n      {element === 'body' ? (\r\n        children\r\n      ) : (\r\n        <div data-overlayscrollbars-contents=\"\" ref={childrenRef}>\r\n          {children}\r\n        </div>\r\n      )}\r\n    </Tag>\r\n  );\r\n};\r\n\r\nconst OverlayScrollbarsComponentForwardedRef = forwardRef(OverlayScrollbarsComponent) as <\r\n  T extends ElementType = 'div'\r\n>(\r\n  props: OverlayScrollbarsComponentProps<T>\r\n) => ReturnType<typeof OverlayScrollbarsComponent>;\r\n\r\nexport { OverlayScrollbarsComponentForwardedRef as OverlayScrollbarsComponent };\r\n","import React, { useEffect, useRef } from \"react\";\nimport { useOverlayScrollbars } from \"overlayscrollbars-react\";\nimport type { UseOverlayScrollbarsParams } from \"overlayscrollbars-react\";\nimport clsx from \"classnames\";\n\nimport \"overlayscrollbars/overlayscrollbars.css\";\nimport \"./styles.css\";\n\nimport { ScrollAreaProps } from \"./ScrollArea.types\";\n\nfunction ScrollArea(props: ScrollAreaProps) {\n  const ref = useRef<HTMLDivElement>(null);\n  const { children, className, options, size = \"md\", ...rest } = props;\n  const defaultOptions: UseOverlayScrollbarsParams[\"options\"] = {\n    scrollbars: {\n      theme: \"ads-v2-scroll-theme\",\n      autoHide: \"scroll\",\n    },\n    ...options,\n  };\n  const [initialize] = useOverlayScrollbars({ options: defaultOptions });\n\n  useEffect(() => {\n    if (ref.current) initialize(ref.current);\n  }, [initialize]);\n\n  return (\n    <div\n      className={clsx(\n        {\n          \"scroll-sm\": size === \"sm\",\n        },\n        className,\n      )}\n      ref={ref}\n      {...rest}\n    >\n      {children}\n    </div>\n  );\n}\n\nScrollArea.displayName = \"ScrollArea\";\n\nexport { ScrollArea };\n","\n/* **********************************************\n     Begin prism-core.js\n********************************************** */\n\n/// <reference lib=\"WebWorker\"/>\n\nvar _self = (typeof window !== 'undefined')\n\t? window   // if in browser\n\t: (\n\t\t(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)\n\t\t\t? self // if in worker\n\t\t\t: {}   // if in node js\n\t);\n\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n *\n * @license MIT <https://opensource.org/licenses/MIT>\n * @author Lea Verou <https://lea.verou.me>\n * @namespace\n * @public\n */\nvar Prism = (function (_self) {\n\n\t// Private helper vars\n\tvar lang = /(?:^|\\s)lang(?:uage)?-([\\w-]+)(?=\\s|$)/i;\n\tvar uniqueId = 0;\n\n\t// The grammar object for plaintext\n\tvar plainTextGrammar = {};\n\n\n\tvar _ = {\n\t\t/**\n\t\t * By default, Prism will attempt to highlight all code elements (by calling {@link Prism.highlightAll}) on the\n\t\t * current page after the page finished loading. This might be a problem if e.g. you wanted to asynchronously load\n\t\t * additional languages or plugins yourself.\n\t\t *\n\t\t * By setting this value to `true`, Prism will not automatically highlight all code elements on the page.\n\t\t *\n\t\t * You obviously have to change this value before the automatic highlighting started. To do this, you can add an\n\t\t * empty Prism object into the global scope before loading the Prism script like this:\n\t\t *\n\t\t * ```js\n\t\t * window.Prism = window.Prism || {};\n\t\t * Prism.manual = true;\n\t\t * // add a new <script> to load Prism's script\n\t\t * ```\n\t\t *\n\t\t * @default false\n\t\t * @type {boolean}\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tmanual: _self.Prism && _self.Prism.manual,\n\t\t/**\n\t\t * By default, if Prism is in a web worker, it assumes that it is in a worker it created itself, so it uses\n\t\t * `addEventListener` to communicate with its parent instance. However, if you're using Prism manually in your\n\t\t * own worker, you don't want it to do this.\n\t\t *\n\t\t * By setting this value to `true`, Prism will not add its own listeners to the worker.\n\t\t *\n\t\t * You obviously have to change this value before Prism executes. To do this, you can add an\n\t\t * empty Prism object into the global scope before loading the Prism script like this:\n\t\t *\n\t\t * ```js\n\t\t * window.Prism = window.Prism || {};\n\t\t * Prism.disableWorkerMessageHandler = true;\n\t\t * // Load Prism's script\n\t\t * ```\n\t\t *\n\t\t * @default false\n\t\t * @type {boolean}\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tdisableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\n\n\t\t/**\n\t\t * A namespace for utility methods.\n\t\t *\n\t\t * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may\n\t\t * change or disappear at any time.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t */\n\t\tutil: {\n\t\t\tencode: function encode(tokens) {\n\t\t\t\tif (tokens instanceof Token) {\n\t\t\t\t\treturn new Token(tokens.type, encode(tokens.content), tokens.alias);\n\t\t\t\t} else if (Array.isArray(tokens)) {\n\t\t\t\t\treturn tokens.map(encode);\n\t\t\t\t} else {\n\t\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the name of the type of the given value.\n\t\t\t *\n\t\t\t * @param {any} o\n\t\t\t * @returns {string}\n\t\t\t * @example\n\t\t\t * type(null)      === 'Null'\n\t\t\t * type(undefined) === 'Undefined'\n\t\t\t * type(123)       === 'Number'\n\t\t\t * type('foo')     === 'String'\n\t\t\t * type(true)      === 'Boolean'\n\t\t\t * type([1, 2])    === 'Array'\n\t\t\t * type({})        === 'Object'\n\t\t\t * type(String)    === 'Function'\n\t\t\t * type(/abc+/)    === 'RegExp'\n\t\t\t */\n\t\t\ttype: function (o) {\n\t\t\t\treturn Object.prototype.toString.call(o).slice(8, -1);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns a unique number for the given object. Later calls will still return the same number.\n\t\t\t *\n\t\t\t * @param {Object} obj\n\t\t\t * @returns {number}\n\t\t\t */\n\t\t\tobjId: function (obj) {\n\t\t\t\tif (!obj['__id']) {\n\t\t\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });\n\t\t\t\t}\n\t\t\t\treturn obj['__id'];\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Creates a deep clone of the given object.\n\t\t\t *\n\t\t\t * The main intended use of this function is to clone language definitions.\n\t\t\t *\n\t\t\t * @param {T} o\n\t\t\t * @param {Record<number, any>} [visited]\n\t\t\t * @returns {T}\n\t\t\t * @template T\n\t\t\t */\n\t\t\tclone: function deepClone(o, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar clone; var id;\n\t\t\t\tswitch (_.util.type(o)) {\n\t\t\t\t\tcase 'Object':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = /** @type {Record<string, any>} */ ({});\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\tfor (var key in o) {\n\t\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\n\t\t\t\t\t\t\t\tclone[key] = deepClone(o[key], visited);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tcase 'Array':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = [];\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\t(/** @type {Array} */(/** @type {any} */(o))).forEach(function (v, i) {\n\t\t\t\t\t\t\tclone[i] = deepClone(v, visited);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn o;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\n\t\t\t *\n\t\t\t * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @returns {string}\n\t\t\t */\n\t\t\tgetLanguage: function (element) {\n\t\t\t\twhile (element) {\n\t\t\t\t\tvar m = lang.exec(element.className);\n\t\t\t\t\tif (m) {\n\t\t\t\t\t\treturn m[1].toLowerCase();\n\t\t\t\t\t}\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\treturn 'none';\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Sets the Prism `language-xxxx` class of the given element.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} language\n\t\t\t * @returns {void}\n\t\t\t */\n\t\t\tsetLanguage: function (element, language) {\n\t\t\t\t// remove all `language-xxxx` classes\n\t\t\t\t// (this might leave behind a leading space)\n\t\t\t\telement.className = element.className.replace(RegExp(lang, 'gi'), '');\n\n\t\t\t\t// add the new `language-xxxx` class\n\t\t\t\t// (using `classList` will automatically clean up spaces for us)\n\t\t\t\telement.classList.add('language-' + language);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the script element that is currently executing.\n\t\t\t *\n\t\t\t * This does __not__ work for line script element.\n\t\t\t *\n\t\t\t * @returns {HTMLScriptElement | null}\n\t\t\t */\n\t\t\tcurrentScript: function () {\n\t\t\t\tif (typeof document === 'undefined') {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tif ('currentScript' in document && 1 < 2 /* hack to trip TS' flow analysis */) {\n\t\t\t\t\treturn /** @type {any} */ (document.currentScript);\n\t\t\t\t}\n\n\t\t\t\t// IE11 workaround\n\t\t\t\t// we'll get the src of the current script by parsing IE11's error stack trace\n\t\t\t\t// this will not work for inline scripts\n\n\t\t\t\ttry {\n\t\t\t\t\tthrow new Error();\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// Get file src url from stack. Specifically works with the format of stack traces in IE.\n\t\t\t\t\t// A stack will look like this:\n\t\t\t\t\t//\n\t\t\t\t\t// Error\n\t\t\t\t\t//    at _.util.currentScript (http://localhost/components/prism-core.js:119:5)\n\t\t\t\t\t//    at Global code (http://localhost/components/prism-core.js:606:1)\n\n\t\t\t\t\tvar src = (/at [^(\\r\\n]*\\((.*):[^:]+:[^:]+\\)$/i.exec(err.stack) || [])[1];\n\t\t\t\t\tif (src) {\n\t\t\t\t\t\tvar scripts = document.getElementsByTagName('script');\n\t\t\t\t\t\tfor (var i in scripts) {\n\t\t\t\t\t\t\tif (scripts[i].src == src) {\n\t\t\t\t\t\t\t\treturn scripts[i];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns whether a given class is active for `element`.\n\t\t\t *\n\t\t\t * The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated\n\t\t\t * if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the\n\t\t\t * given class is just the given class with a `no-` prefix.\n\t\t\t *\n\t\t\t * Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is\n\t\t\t * closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its\n\t\t\t * ancestors have the given class or the negated version of it, then the default activation will be returned.\n\t\t\t *\n\t\t\t * In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated\n\t\t\t * version of it, the class is considered active.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} className\n\t\t\t * @param {boolean} [defaultActivation=false]\n\t\t\t * @returns {boolean}\n\t\t\t */\n\t\t\tisActive: function (element, className, defaultActivation) {\n\t\t\t\tvar no = 'no-' + className;\n\n\t\t\t\twhile (element) {\n\t\t\t\t\tvar classList = element.classList;\n\t\t\t\t\tif (classList.contains(className)) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tif (classList.contains(no)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\treturn !!defaultActivation;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tlanguages: {\n\t\t\t/**\n\t\t\t * The grammar for plain, unformatted text.\n\t\t\t */\n\t\t\tplain: plainTextGrammar,\n\t\t\tplaintext: plainTextGrammar,\n\t\t\ttext: plainTextGrammar,\n\t\t\ttxt: plainTextGrammar,\n\n\t\t\t/**\n\t\t\t * Creates a deep copy of the language with the given id and appends the given tokens.\n\t\t\t *\n\t\t\t * If a token in `redef` also appears in the copied language, then the existing token in the copied language\n\t\t\t * will be overwritten at its original position.\n\t\t\t *\n\t\t\t * ## Best practices\n\t\t\t *\n\t\t\t * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)\n\t\t\t * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to\n\t\t\t * understand the language definition because, normally, the order of tokens matters in Prism grammars.\n\t\t\t *\n\t\t\t * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.\n\t\t\t * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.\n\t\t\t *\n\t\t\t * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.\n\t\t\t * @param {Grammar} redef The new tokens to append.\n\t\t\t * @returns {Grammar} The new language created.\n\t\t\t * @public\n\t\t\t * @example\n\t\t\t * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {\n\t\t\t *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token\n\t\t\t *     // at its original position\n\t\t\t *     'comment': { ... },\n\t\t\t *     // CSS doesn't have a 'color' token, so this token will be appended\n\t\t\t *     'color': /\\b(?:red|green|blue)\\b/\n\t\t\t * });\n\t\t\t */\n\t\t\textend: function (id, redef) {\n\t\t\t\tvar lang = _.util.clone(_.languages[id]);\n\n\t\t\t\tfor (var key in redef) {\n\t\t\t\t\tlang[key] = redef[key];\n\t\t\t\t}\n\n\t\t\t\treturn lang;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Inserts tokens _before_ another token in a language definition or any other grammar.\n\t\t\t *\n\t\t\t * ## Usage\n\t\t\t *\n\t\t\t * This helper method makes it easy to modify existing languages. For example, the CSS language definition\n\t\t\t * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded\n\t\t\t * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the\n\t\t\t * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do\n\t\t\t * this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.markup.style = {\n\t\t\t *     // token\n\t\t\t * };\n\t\t\t * ```\n\t\t\t *\n\t\t\t * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens\n\t\t\t * before existing tokens. For the CSS example above, you would use it like this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'cdata', {\n\t\t\t *     'style': {\n\t\t\t *         // token\n\t\t\t *     }\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Special cases\n\t\t\t *\n\t\t\t * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar\n\t\t\t * will be ignored.\n\t\t\t *\n\t\t\t * This behavior can be used to insert tokens after `before`:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'comment', {\n\t\t\t *     'comment': Prism.languages.markup.comment,\n\t\t\t *     // tokens after 'comment'\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Limitations\n\t\t\t *\n\t\t\t * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object\n\t\t\t * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave\n\t\t\t * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily\n\t\t\t * deleting properties which is necessary to insert at arbitrary positions.\n\t\t\t *\n\t\t\t * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.\n\t\t\t * Instead, it will create a new object and replace all references to the target object with the new one. This\n\t\t\t * can be done without temporarily deleting properties, so the iteration order is well-defined.\n\t\t\t *\n\t\t\t * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if\n\t\t\t * you hold the target object in a variable, then the value of the variable will not change.\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * var oldMarkup = Prism.languages.markup;\n\t\t\t * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });\n\t\t\t *\n\t\t\t * assert(oldMarkup !== Prism.languages.markup);\n\t\t\t * assert(newMarkup === Prism.languages.markup);\n\t\t\t * ```\n\t\t\t *\n\t\t\t * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the\n\t\t\t * object to be modified.\n\t\t\t * @param {string} before The key to insert before.\n\t\t\t * @param {Grammar} insert An object containing the key-value pairs to be inserted.\n\t\t\t * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the\n\t\t\t * object to be modified.\n\t\t\t *\n\t\t\t * Defaults to `Prism.languages`.\n\t\t\t * @returns {Grammar} The new grammar object.\n\t\t\t * @public\n\t\t\t */\n\t\t\tinsertBefore: function (inside, before, insert, root) {\n\t\t\t\troot = root || /** @type {any} */ (_.languages);\n\t\t\t\tvar grammar = root[inside];\n\t\t\t\t/** @type {Grammar} */\n\t\t\t\tvar ret = {};\n\n\t\t\t\tfor (var token in grammar) {\n\t\t\t\t\tif (grammar.hasOwnProperty(token)) {\n\n\t\t\t\t\t\tif (token == before) {\n\t\t\t\t\t\t\tfor (var newToken in insert) {\n\t\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Do not insert token which also occur in insert. See #1525\n\t\t\t\t\t\tif (!insert.hasOwnProperty(token)) {\n\t\t\t\t\t\t\tret[token] = grammar[token];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar old = root[inside];\n\t\t\t\troot[inside] = ret;\n\n\t\t\t\t// Update references in other language definitions\n\t\t\t\t_.languages.DFS(_.languages, function (key, value) {\n\t\t\t\t\tif (value === old && key != inside) {\n\t\t\t\t\t\tthis[key] = ret;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn ret;\n\t\t\t},\n\n\t\t\t// Traverse a language definition with Depth First Search\n\t\t\tDFS: function DFS(o, callback, type, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar objId = _.util.objId;\n\n\t\t\t\tfor (var i in o) {\n\t\t\t\t\tif (o.hasOwnProperty(i)) {\n\t\t\t\t\t\tcallback.call(o, i, o[i], type || i);\n\n\t\t\t\t\t\tvar property = o[i];\n\t\t\t\t\t\tvar propertyType = _.util.type(property);\n\n\t\t\t\t\t\tif (propertyType === 'Object' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, null, visited);\n\t\t\t\t\t\t} else if (propertyType === 'Array' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, i, visited);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tplugins: {},\n\n\t\t/**\n\t\t * This is the most high-level function in Prism’s API.\n\t\t * It fetches all the elements that have a `.language-xxxx` class and then calls {@link Prism.highlightElement} on\n\t\t * each one of them.\n\t\t *\n\t\t * This is equivalent to `Prism.highlightAllUnder(document, async, callback)`.\n\t\t *\n\t\t * @param {boolean} [async=false] Same as in {@link Prism.highlightAllUnder}.\n\t\t * @param {HighlightCallback} [callback] Same as in {@link Prism.highlightAllUnder}.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightAll: function (async, callback) {\n\t\t\t_.highlightAllUnder(document, async, callback);\n\t\t},\n\n\t\t/**\n\t\t * Fetches all the descendants of `container` that have a `.language-xxxx` class and then calls\n\t\t * {@link Prism.highlightElement} on each one of them.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-highlightall`\n\t\t * 2. `before-all-elements-highlight`\n\t\t * 3. All hooks of {@link Prism.highlightElement} for each element.\n\t\t *\n\t\t * @param {ParentNode} container The root element, whose descendants that have a `.language-xxxx` class will be highlighted.\n\t\t * @param {boolean} [async=false] Whether each element is to be highlighted asynchronously using Web Workers.\n\t\t * @param {HighlightCallback} [callback] An optional callback to be invoked on each element after its highlighting is done.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightAllUnder: function (container, async, callback) {\n\t\t\tvar env = {\n\t\t\t\tcallback: callback,\n\t\t\t\tcontainer: container,\n\t\t\t\tselector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n\t\t\t};\n\n\t\t\t_.hooks.run('before-highlightall', env);\n\n\t\t\tenv.elements = Array.prototype.slice.apply(env.container.querySelectorAll(env.selector));\n\n\t\t\t_.hooks.run('before-all-elements-highlight', env);\n\n\t\t\tfor (var i = 0, element; (element = env.elements[i++]);) {\n\t\t\t\t_.highlightElement(element, async === true, env.callback);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Highlights the code inside a single element.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-sanity-check`\n\t\t * 2. `before-highlight`\n\t\t * 3. All hooks of {@link Prism.highlight}. These hooks will be run by an asynchronous worker if `async` is `true`.\n\t\t * 4. `before-insert`\n\t\t * 5. `after-highlight`\n\t\t * 6. `complete`\n\t\t *\n\t\t * Some the above hooks will be skipped if the element doesn't contain any text or there is no grammar loaded for\n\t\t * the element's language.\n\t\t *\n\t\t * @param {Element} element The element containing the code.\n\t\t * It must have a class of `language-xxxx` to be processed, where `xxxx` is a valid language identifier.\n\t\t * @param {boolean} [async=false] Whether the element is to be highlighted asynchronously using Web Workers\n\t\t * to improve performance and avoid blocking the UI when highlighting very large chunks of code. This option is\n\t\t * [disabled by default](https://prismjs.com/faq.html#why-is-asynchronous-highlighting-disabled-by-default).\n\t\t *\n\t\t * Note: All language definitions required to highlight the code must be included in the main `prism.js` file for\n\t\t * asynchronous highlighting to work. You can build your own bundle on the\n\t\t * [Download page](https://prismjs.com/download.html).\n\t\t * @param {HighlightCallback} [callback] An optional callback to be invoked after the highlighting is done.\n\t\t * Mostly useful when `async` is `true`, since in that case, the highlighting is done asynchronously.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightElement: function (element, async, callback) {\n\t\t\t// Find language\n\t\t\tvar language = _.util.getLanguage(element);\n\t\t\tvar grammar = _.languages[language];\n\n\t\t\t// Set language on the element, if not present\n\t\t\t_.util.setLanguage(element, language);\n\n\t\t\t// Set language on the parent, for styling\n\t\t\tvar parent = element.parentElement;\n\t\t\tif (parent && parent.nodeName.toLowerCase() === 'pre') {\n\t\t\t\t_.util.setLanguage(parent, language);\n\t\t\t}\n\n\t\t\tvar code = element.textContent;\n\n\t\t\tvar env = {\n\t\t\t\telement: element,\n\t\t\t\tlanguage: language,\n\t\t\t\tgrammar: grammar,\n\t\t\t\tcode: code\n\t\t\t};\n\n\t\t\tfunction insertHighlightedCode(highlightedCode) {\n\t\t\t\tenv.highlightedCode = highlightedCode;\n\n\t\t\t\t_.hooks.run('before-insert', env);\n\n\t\t\t\tenv.element.innerHTML = env.highlightedCode;\n\n\t\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t}\n\n\t\t\t_.hooks.run('before-sanity-check', env);\n\n\t\t\t// plugins may change/add the parent/element\n\t\t\tparent = env.element.parentElement;\n\t\t\tif (parent && parent.nodeName.toLowerCase() === 'pre' && !parent.hasAttribute('tabindex')) {\n\t\t\t\tparent.setAttribute('tabindex', '0');\n\t\t\t}\n\n\t\t\tif (!env.code) {\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t_.hooks.run('before-highlight', env);\n\n\t\t\tif (!env.grammar) {\n\t\t\t\tinsertHighlightedCode(_.util.encode(env.code));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (async && _self.Worker) {\n\t\t\t\tvar worker = new Worker(_.filename);\n\n\t\t\t\tworker.onmessage = function (evt) {\n\t\t\t\t\tinsertHighlightedCode(evt.data);\n\t\t\t\t};\n\n\t\t\t\tworker.postMessage(JSON.stringify({\n\t\t\t\t\tlanguage: env.language,\n\t\t\t\t\tcode: env.code,\n\t\t\t\t\timmediateClose: true\n\t\t\t\t}));\n\t\t\t} else {\n\t\t\t\tinsertHighlightedCode(_.highlight(env.code, env.grammar, env.language));\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Low-level function, only use if you know what you’re doing. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns a string with the HTML produced.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-tokenize`\n\t\t * 2. `after-tokenize`\n\t\t * 3. `wrap`: On each {@link Token}.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @param {string} language The name of the language definition passed to `grammar`.\n\t\t * @returns {string} The highlighted HTML.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');\n\t\t */\n\t\thighlight: function (text, grammar, language) {\n\t\t\tvar env = {\n\t\t\t\tcode: text,\n\t\t\t\tgrammar: grammar,\n\t\t\t\tlanguage: language\n\t\t\t};\n\t\t\t_.hooks.run('before-tokenize', env);\n\t\t\tif (!env.grammar) {\n\t\t\t\tthrow new Error('The language \"' + env.language + '\" has no grammar.');\n\t\t\t}\n\t\t\tenv.tokens = _.tokenize(env.code, env.grammar);\n\t\t\t_.hooks.run('after-tokenize', env);\n\t\t\treturn Token.stringify(_.util.encode(env.tokens), env.language);\n\t\t},\n\n\t\t/**\n\t\t * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns an array with the tokenized code.\n\t\t *\n\t\t * When the language definition includes nested tokens, the function is called recursively on each of these tokens.\n\t\t *\n\t\t * This method could be useful in other contexts as well, as a very crude parser.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @returns {TokenStream} An array of strings and tokens, a token stream.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * let code = `var foo = 0;`;\n\t\t * let tokens = Prism.tokenize(code, Prism.languages.javascript);\n\t\t * tokens.forEach(token => {\n\t\t *     if (token instanceof Prism.Token && token.type === 'number') {\n\t\t *         console.log(`Found numeric literal: ${token.content}`);\n\t\t *     }\n\t\t * });\n\t\t */\n\t\ttokenize: function (text, grammar) {\n\t\t\tvar rest = grammar.rest;\n\t\t\tif (rest) {\n\t\t\t\tfor (var token in rest) {\n\t\t\t\t\tgrammar[token] = rest[token];\n\t\t\t\t}\n\n\t\t\t\tdelete grammar.rest;\n\t\t\t}\n\n\t\t\tvar tokenList = new LinkedList();\n\t\t\taddAfter(tokenList, tokenList.head, text);\n\n\t\t\tmatchGrammar(text, tokenList, grammar, tokenList.head, 0);\n\n\t\t\treturn toArray(tokenList);\n\t\t},\n\n\t\t/**\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thooks: {\n\t\t\tall: {},\n\n\t\t\t/**\n\t\t\t * Adds the given callback to the list of callbacks for the given hook.\n\t\t\t *\n\t\t\t * The callback will be invoked when the hook it is registered for is run.\n\t\t\t * Hooks are usually directly run by a highlight function but you can also run hooks yourself.\n\t\t\t *\n\t\t\t * One callback function can be registered to multiple hooks and the same hook multiple times.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {HookCallback} callback The callback function which is given environment variables.\n\t\t\t * @public\n\t\t\t */\n\t\t\tadd: function (name, callback) {\n\t\t\t\tvar hooks = _.hooks.all;\n\n\t\t\t\thooks[name] = hooks[name] || [];\n\n\t\t\t\thooks[name].push(callback);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Runs a hook invoking all registered callbacks with the given environment variables.\n\t\t\t *\n\t\t\t * Callbacks will be invoked synchronously and in the order in which they were registered.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\n\t\t\t * @public\n\t\t\t */\n\t\t\trun: function (name, env) {\n\t\t\t\tvar callbacks = _.hooks.all[name];\n\n\t\t\t\tif (!callbacks || !callbacks.length) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tfor (var i = 0, callback; (callback = callbacks[i++]);) {\n\t\t\t\t\tcallback(env);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tToken: Token\n\t};\n\t_self.Prism = _;\n\n\n\t// Typescript note:\n\t// The following can be used to import the Token type in JSDoc:\n\t//\n\t//   @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n\n\t/**\n\t * Creates a new token.\n\t *\n\t * @param {string} type See {@link Token#type type}\n\t * @param {string | TokenStream} content See {@link Token#content content}\n\t * @param {string|string[]} [alias] The alias(es) of the token.\n\t * @param {string} [matchedStr=\"\"] A copy of the full string this token was created from.\n\t * @class\n\t * @global\n\t * @public\n\t */\n\tfunction Token(type, content, alias, matchedStr) {\n\t\t/**\n\t\t * The type of the token.\n\t\t *\n\t\t * This is usually the key of a pattern in a {@link Grammar}.\n\t\t *\n\t\t * @type {string}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.type = type;\n\t\t/**\n\t\t * The strings or tokens contained by this token.\n\t\t *\n\t\t * This will be a token stream if the pattern matched also defined an `inside` grammar.\n\t\t *\n\t\t * @type {string | TokenStream}\n\t\t * @public\n\t\t */\n\t\tthis.content = content;\n\t\t/**\n\t\t * The alias(es) of the token.\n\t\t *\n\t\t * @type {string|string[]}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.alias = alias;\n\t\t// Copy of the full string this token was created from\n\t\tthis.length = (matchedStr || '').length | 0;\n\t}\n\n\t/**\n\t * A token stream is an array of strings and {@link Token Token} objects.\n\t *\n\t * Token streams have to fulfill a few properties that are assumed by most functions (mostly internal ones) that process\n\t * them.\n\t *\n\t * 1. No adjacent strings.\n\t * 2. No empty strings.\n\t *\n\t *    The only exception here is the token stream that only contains the empty string and nothing else.\n\t *\n\t * @typedef {Array<string | Token>} TokenStream\n\t * @global\n\t * @public\n\t */\n\n\t/**\n\t * Converts the given token or token stream to an HTML representation.\n\t *\n\t * The following hooks will be run:\n\t * 1. `wrap`: On each {@link Token}.\n\t *\n\t * @param {string | Token | TokenStream} o The token or token stream to be converted.\n\t * @param {string} language The name of current language.\n\t * @returns {string} The HTML representation of the token or token stream.\n\t * @memberof Token\n\t * @static\n\t */\n\tToken.stringify = function stringify(o, language) {\n\t\tif (typeof o == 'string') {\n\t\t\treturn o;\n\t\t}\n\t\tif (Array.isArray(o)) {\n\t\t\tvar s = '';\n\t\t\to.forEach(function (e) {\n\t\t\t\ts += stringify(e, language);\n\t\t\t});\n\t\t\treturn s;\n\t\t}\n\n\t\tvar env = {\n\t\t\ttype: o.type,\n\t\t\tcontent: stringify(o.content, language),\n\t\t\ttag: 'span',\n\t\t\tclasses: ['token', o.type],\n\t\t\tattributes: {},\n\t\t\tlanguage: language\n\t\t};\n\n\t\tvar aliases = o.alias;\n\t\tif (aliases) {\n\t\t\tif (Array.isArray(aliases)) {\n\t\t\t\tArray.prototype.push.apply(env.classes, aliases);\n\t\t\t} else {\n\t\t\t\tenv.classes.push(aliases);\n\t\t\t}\n\t\t}\n\n\t\t_.hooks.run('wrap', env);\n\n\t\tvar attributes = '';\n\t\tfor (var name in env.attributes) {\n\t\t\tattributes += ' ' + name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n\t\t}\n\n\t\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + attributes + '>' + env.content + '</' + env.tag + '>';\n\t};\n\n\t/**\n\t * @param {RegExp} pattern\n\t * @param {number} pos\n\t * @param {string} text\n\t * @param {boolean} lookbehind\n\t * @returns {RegExpExecArray | null}\n\t */\n\tfunction matchPattern(pattern, pos, text, lookbehind) {\n\t\tpattern.lastIndex = pos;\n\t\tvar match = pattern.exec(text);\n\t\tif (match && lookbehind && match[1]) {\n\t\t\t// change the match to remove the text matched by the Prism lookbehind group\n\t\t\tvar lookbehindLength = match[1].length;\n\t\t\tmatch.index += lookbehindLength;\n\t\t\tmatch[0] = match[0].slice(lookbehindLength);\n\t\t}\n\t\treturn match;\n\t}\n\n\t/**\n\t * @param {string} text\n\t * @param {LinkedList<string | Token>} tokenList\n\t * @param {any} grammar\n\t * @param {LinkedListNode<string | Token>} startNode\n\t * @param {number} startPos\n\t * @param {RematchOptions} [rematch]\n\t * @returns {void}\n\t * @private\n\t *\n\t * @typedef RematchOptions\n\t * @property {string} cause\n\t * @property {number} reach\n\t */\n\tfunction matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {\n\t\tfor (var token in grammar) {\n\t\t\tif (!grammar.hasOwnProperty(token) || !grammar[token]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar patterns = grammar[token];\n\t\t\tpatterns = Array.isArray(patterns) ? patterns : [patterns];\n\n\t\t\tfor (var j = 0; j < patterns.length; ++j) {\n\t\t\t\tif (rematch && rematch.cause == token + ',' + j) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar patternObj = patterns[j];\n\t\t\t\tvar inside = patternObj.inside;\n\t\t\t\tvar lookbehind = !!patternObj.lookbehind;\n\t\t\t\tvar greedy = !!patternObj.greedy;\n\t\t\t\tvar alias = patternObj.alias;\n\n\t\t\t\tif (greedy && !patternObj.pattern.global) {\n\t\t\t\t\t// Without the global flag, lastIndex won't work\n\t\t\t\t\tvar flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];\n\t\t\t\t\tpatternObj.pattern = RegExp(patternObj.pattern.source, flags + 'g');\n\t\t\t\t}\n\n\t\t\t\t/** @type {RegExp} */\n\t\t\t\tvar pattern = patternObj.pattern || patternObj;\n\n\t\t\t\tfor ( // iterate the token list and keep track of the current token/string position\n\t\t\t\t\tvar currentNode = startNode.next, pos = startPos;\n\t\t\t\t\tcurrentNode !== tokenList.tail;\n\t\t\t\t\tpos += currentNode.value.length, currentNode = currentNode.next\n\t\t\t\t) {\n\n\t\t\t\t\tif (rematch && pos >= rematch.reach) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar str = currentNode.value;\n\n\t\t\t\t\tif (tokenList.length > text.length) {\n\t\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (str instanceof Token) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeCount = 1; // this is the to parameter of removeBetween\n\t\t\t\t\tvar match;\n\n\t\t\t\t\tif (greedy) {\n\t\t\t\t\t\tmatch = matchPattern(pattern, pos, text, lookbehind);\n\t\t\t\t\t\tif (!match || match.index >= text.length) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar from = match.index;\n\t\t\t\t\t\tvar to = match.index + match[0].length;\n\t\t\t\t\t\tvar p = pos;\n\n\t\t\t\t\t\t// find the node that contains the match\n\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\twhile (from >= p) {\n\t\t\t\t\t\t\tcurrentNode = currentNode.next;\n\t\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// adjust pos (and p)\n\t\t\t\t\t\tp -= currentNode.value.length;\n\t\t\t\t\t\tpos = p;\n\n\t\t\t\t\t\t// the current node is a Token, then the match starts inside another Token, which is invalid\n\t\t\t\t\t\tif (currentNode.value instanceof Token) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// find the last node which is affected by this match\n\t\t\t\t\t\tfor (\n\t\t\t\t\t\t\tvar k = currentNode;\n\t\t\t\t\t\t\tk !== tokenList.tail && (p < to || typeof k.value === 'string');\n\t\t\t\t\t\t\tk = k.next\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tremoveCount++;\n\t\t\t\t\t\t\tp += k.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tremoveCount--;\n\n\t\t\t\t\t\t// replace with the new match\n\t\t\t\t\t\tstr = text.slice(pos, p);\n\t\t\t\t\t\tmatch.index -= pos;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmatch = matchPattern(pattern, 0, str, lookbehind);\n\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// eslint-disable-next-line no-redeclare\n\t\t\t\t\tvar from = match.index;\n\t\t\t\t\tvar matchStr = match[0];\n\t\t\t\t\tvar before = str.slice(0, from);\n\t\t\t\t\tvar after = str.slice(from + matchStr.length);\n\n\t\t\t\t\tvar reach = pos + str.length;\n\t\t\t\t\tif (rematch && reach > rematch.reach) {\n\t\t\t\t\t\trematch.reach = reach;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeFrom = currentNode.prev;\n\n\t\t\t\t\tif (before) {\n\t\t\t\t\t\tremoveFrom = addAfter(tokenList, removeFrom, before);\n\t\t\t\t\t\tpos += before.length;\n\t\t\t\t\t}\n\n\t\t\t\t\tremoveRange(tokenList, removeFrom, removeCount);\n\n\t\t\t\t\tvar wrapped = new Token(token, inside ? _.tokenize(matchStr, inside) : matchStr, alias, matchStr);\n\t\t\t\t\tcurrentNode = addAfter(tokenList, removeFrom, wrapped);\n\n\t\t\t\t\tif (after) {\n\t\t\t\t\t\taddAfter(tokenList, currentNode, after);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (removeCount > 1) {\n\t\t\t\t\t\t// at least one Token object was removed, so we have to do some rematching\n\t\t\t\t\t\t// this can only happen if the current pattern is greedy\n\n\t\t\t\t\t\t/** @type {RematchOptions} */\n\t\t\t\t\t\tvar nestedRematch = {\n\t\t\t\t\t\t\tcause: token + ',' + j,\n\t\t\t\t\t\t\treach: reach\n\t\t\t\t\t\t};\n\t\t\t\t\t\tmatchGrammar(text, tokenList, grammar, currentNode.prev, pos, nestedRematch);\n\n\t\t\t\t\t\t// the reach might have been extended because of the rematching\n\t\t\t\t\t\tif (rematch && nestedRematch.reach > rematch.reach) {\n\t\t\t\t\t\t\trematch.reach = nestedRematch.reach;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @typedef LinkedListNode\n\t * @property {T} value\n\t * @property {LinkedListNode<T> | null} prev The previous node.\n\t * @property {LinkedListNode<T> | null} next The next node.\n\t * @template T\n\t * @private\n\t */\n\n\t/**\n\t * @template T\n\t * @private\n\t */\n\tfunction LinkedList() {\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar head = { value: null, prev: null, next: null };\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar tail = { value: null, prev: head, next: null };\n\t\thead.next = tail;\n\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.head = head;\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.tail = tail;\n\t\tthis.length = 0;\n\t}\n\n\t/**\n\t * Adds a new node with the given value to the list.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {T} value\n\t * @returns {LinkedListNode<T>} The added node.\n\t * @template T\n\t */\n\tfunction addAfter(list, node, value) {\n\t\t// assumes that node != list.tail && values.length >= 0\n\t\tvar next = node.next;\n\n\t\tvar newNode = { value: value, prev: node, next: next };\n\t\tnode.next = newNode;\n\t\tnext.prev = newNode;\n\t\tlist.length++;\n\n\t\treturn newNode;\n\t}\n\t/**\n\t * Removes `count` nodes after the given node. The given node will not be removed.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {number} count\n\t * @template T\n\t */\n\tfunction removeRange(list, node, count) {\n\t\tvar next = node.next;\n\t\tfor (var i = 0; i < count && next !== list.tail; i++) {\n\t\t\tnext = next.next;\n\t\t}\n\t\tnode.next = next;\n\t\tnext.prev = node;\n\t\tlist.length -= i;\n\t}\n\t/**\n\t * @param {LinkedList<T>} list\n\t * @returns {T[]}\n\t * @template T\n\t */\n\tfunction toArray(list) {\n\t\tvar array = [];\n\t\tvar node = list.head.next;\n\t\twhile (node !== list.tail) {\n\t\t\tarray.push(node.value);\n\t\t\tnode = node.next;\n\t\t}\n\t\treturn array;\n\t}\n\n\n\tif (!_self.document) {\n\t\tif (!_self.addEventListener) {\n\t\t\t// in Node.js\n\t\t\treturn _;\n\t\t}\n\n\t\tif (!_.disableWorkerMessageHandler) {\n\t\t\t// In worker\n\t\t\t_self.addEventListener('message', function (evt) {\n\t\t\t\tvar message = JSON.parse(evt.data);\n\t\t\t\tvar lang = message.language;\n\t\t\t\tvar code = message.code;\n\t\t\t\tvar immediateClose = message.immediateClose;\n\n\t\t\t\t_self.postMessage(_.highlight(code, _.languages[lang], lang));\n\t\t\t\tif (immediateClose) {\n\t\t\t\t\t_self.close();\n\t\t\t\t}\n\t\t\t}, false);\n\t\t}\n\n\t\treturn _;\n\t}\n\n\t// Get current script and highlight\n\tvar script = _.util.currentScript();\n\n\tif (script) {\n\t\t_.filename = script.src;\n\n\t\tif (script.hasAttribute('data-manual')) {\n\t\t\t_.manual = true;\n\t\t}\n\t}\n\n\tfunction highlightAutomaticallyCallback() {\n\t\tif (!_.manual) {\n\t\t\t_.highlightAll();\n\t\t}\n\t}\n\n\tif (!_.manual) {\n\t\t// If the document state is \"loading\", then we'll use DOMContentLoaded.\n\t\t// If the document state is \"interactive\" and the prism.js script is deferred, then we'll also use the\n\t\t// DOMContentLoaded event because there might be some plugins or languages which have also been deferred and they\n\t\t// might take longer one animation frame to execute which can create a race condition where only some plugins have\n\t\t// been loaded when Prism.highlightAll() is executed, depending on how fast resources are loaded.\n\t\t// See https://github.com/PrismJS/prism/issues/2102\n\t\tvar readyState = document.readyState;\n\t\tif (readyState === 'loading' || readyState === 'interactive' && script && script.defer) {\n\t\t\tdocument.addEventListener('DOMContentLoaded', highlightAutomaticallyCallback);\n\t\t} else {\n\t\t\tif (window.requestAnimationFrame) {\n\t\t\t\twindow.requestAnimationFrame(highlightAutomaticallyCallback);\n\t\t\t} else {\n\t\t\t\twindow.setTimeout(highlightAutomaticallyCallback, 16);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn _;\n\n}(_self));\n\nif (typeof module !== 'undefined' && module.exports) {\n\tmodule.exports = Prism;\n}\n\n// hack for components to work correctly in node.js\nif (typeof global !== 'undefined') {\n\tglobal.Prism = Prism;\n}\n\n// some additional documentation/types\n\n/**\n * The expansion of a simple `RegExp` literal to support additional properties.\n *\n * @typedef GrammarToken\n * @property {RegExp} pattern The regular expression of the token.\n * @property {boolean} [lookbehind=false] If `true`, then the first capturing group of `pattern` will (effectively)\n * behave as a lookbehind group meaning that the captured text will not be part of the matched text of the new token.\n * @property {boolean} [greedy=false] Whether the token is greedy.\n * @property {string|string[]} [alias] An optional alias or list of aliases.\n * @property {Grammar} [inside] The nested grammar of this token.\n *\n * The `inside` grammar will be used to tokenize the text value of each token of this kind.\n *\n * This can be used to make nested and even recursive language definitions.\n *\n * Note: This can cause infinite recursion. Be careful when you embed different languages or even the same language into\n * each another.\n * @global\n * @public\n */\n\n/**\n * @typedef Grammar\n * @type {Object<string, RegExp | GrammarToken | Array<RegExp | GrammarToken>>}\n * @property {Grammar} [rest] An optional grammar object that will be appended to this grammar.\n * @global\n * @public\n */\n\n/**\n * A function which will invoked after an element was successfully highlighted.\n *\n * @callback HighlightCallback\n * @param {Element} element The element successfully highlighted.\n * @returns {void}\n * @global\n * @public\n */\n\n/**\n * @callback HookCallback\n * @param {Object<string, any>} env The environment variables of the hook.\n * @returns {void}\n * @global\n * @public\n */\n\n\n/* **********************************************\n     Begin prism-markup.js\n********************************************** */\n\nPrism.languages.markup = {\n\t'comment': {\n\t\tpattern: /<!--(?:(?!<!--)[\\s\\S])*?-->/,\n\t\tgreedy: true\n\t},\n\t'prolog': {\n\t\tpattern: /<\\?[\\s\\S]+?\\?>/,\n\t\tgreedy: true\n\t},\n\t'doctype': {\n\t\t// https://www.w3.org/TR/xml/#NT-doctypedecl\n\t\tpattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'internal-subset': {\n\t\t\t\tpattern: /(^[^\\[]*\\[)[\\s\\S]+(?=\\]>$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: null // see below\n\t\t\t},\n\t\t\t'string': {\n\t\t\t\tpattern: /\"[^\"]*\"|'[^']*'/,\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t'punctuation': /^<!|>$|[[\\]]/,\n\t\t\t'doctype-tag': /^DOCTYPE/i,\n\t\t\t'name': /[^\\s<>'\"]+/\n\t\t}\n\t},\n\t'cdata': {\n\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\tgreedy: true\n\t},\n\t'tag': {\n\t\tpattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'tag': {\n\t\t\t\tpattern: /^<\\/?[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^<\\/?/,\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'special-attr': [],\n\t\t\t'attr-value': {\n\t\t\t\tpattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\talias: 'attr-equals'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t/\"|'/\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t'punctuation': /\\/?>/,\n\t\t\t'attr-name': {\n\t\t\t\tpattern: /[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t},\n\t'entity': [\n\t\t{\n\t\t\tpattern: /&[\\da-z]{1,8};/i,\n\t\t\talias: 'named-entity'\n\t\t},\n\t\t/&#x?[\\da-f]{1,8};/i\n\t]\n};\n\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] =\n\tPrism.languages.markup['entity'];\nPrism.languages.markup['doctype'].inside['internal-subset'].inside = Prism.languages.markup;\n\n// Plugin to make entity title show the real entity, idea by Roman Komarov\nPrism.hooks.add('wrap', function (env) {\n\n\tif (env.type === 'entity') {\n\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');\n\t}\n});\n\nObject.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n\t/**\n\t * Adds an inlined language to markup.\n\t *\n\t * An example of an inlined language is CSS with `<style>` tags.\n\t *\n\t * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addInlined('style', 'css');\n\t */\n\tvalue: function addInlined(tagName, lang) {\n\t\tvar includedCdataInside = {};\n\t\tincludedCdataInside['language-' + lang] = {\n\t\t\tpattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\t\tincludedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n\n\t\tvar inside = {\n\t\t\t'included-cdata': {\n\t\t\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\t\t\tinside: includedCdataInside\n\t\t\t}\n\t\t};\n\t\tinside['language-' + lang] = {\n\t\t\tpattern: /[\\s\\S]+/,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\n\t\tvar def = {};\n\t\tdef[tagName] = {\n\t\t\tpattern: RegExp(/(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function () { return tagName; }), 'i'),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: inside\n\t\t};\n\n\t\tPrism.languages.insertBefore('markup', 'cdata', def);\n\t}\n});\nObject.defineProperty(Prism.languages.markup.tag, 'addAttribute', {\n\t/**\n\t * Adds an pattern to highlight languages embedded in HTML attributes.\n\t *\n\t * An example of an inlined language is CSS with `style` attributes.\n\t *\n\t * @param {string} attrName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addAttribute('style', 'css');\n\t */\n\tvalue: function (attrName, lang) {\n\t\tPrism.languages.markup.tag.inside['special-attr'].push({\n\t\t\tpattern: RegExp(\n\t\t\t\t/(^|[\"'\\s])/.source + '(?:' + attrName + ')' + /\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))/.source,\n\t\t\t\t'i'\n\t\t\t),\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'attr-name': /^[^\\s=]+/,\n\t\t\t\t'attr-value': {\n\t\t\t\t\tpattern: /=[\\s\\S]+/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'value': {\n\t\t\t\t\t\t\tpattern: /(^=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)/,\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\talias: [lang, 'language-' + lang],\n\t\t\t\t\t\t\tinside: Prism.languages[lang]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\t\talias: 'attr-equals'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t/\"|'/\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n});\n\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\n\nPrism.languages.xml = Prism.languages.extend('markup', {});\nPrism.languages.ssml = Prism.languages.xml;\nPrism.languages.atom = Prism.languages.xml;\nPrism.languages.rss = Prism.languages.xml;\n\n\n/* **********************************************\n     Begin prism-css.js\n********************************************** */\n\n(function (Prism) {\n\n\tvar string = /(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/;\n\n\tPrism.languages.css = {\n\t\t'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n\t\t'atrule': {\n\t\t\tpattern: /@[\\w-](?:[^;{\\s]|\\s+(?![\\s{]))*(?:;|(?=\\s*\\{))/,\n\t\t\tinside: {\n\t\t\t\t'rule': /^@[\\w-]+/,\n\t\t\t\t'selector-function-argument': {\n\t\t\t\t\tpattern: /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'selector'\n\t\t\t\t},\n\t\t\t\t'keyword': {\n\t\t\t\t\tpattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t}\n\t\t\t\t// See rest below\n\t\t\t}\n\t\t},\n\t\t'url': {\n\t\t\t// https://drafts.csswg.org/css-values-3/#urls\n\t\t\tpattern: RegExp('\\\\burl\\\\((?:' + string.source + '|' + /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source + ')\\\\)', 'i'),\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'function': /^url/i,\n\t\t\t\t'punctuation': /^\\(|\\)$/,\n\t\t\t\t'string': {\n\t\t\t\t\tpattern: RegExp('^' + string.source + '$'),\n\t\t\t\t\talias: 'url'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'selector': {\n\t\t\tpattern: RegExp('(^|[{}\\\\s])[^{}\\\\s](?:[^{};\"\\'\\\\s]|\\\\s+(?![\\\\s{])|' + string.source + ')*(?=\\\\s*\\\\{)'),\n\t\t\tlookbehind: true\n\t\t},\n\t\t'string': {\n\t\t\tpattern: string,\n\t\t\tgreedy: true\n\t\t},\n\t\t'property': {\n\t\t\tpattern: /(^|[^-\\w\\xA0-\\uFFFF])(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'important': /!important\\b/i,\n\t\t'function': {\n\t\t\tpattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\\()/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'punctuation': /[(){};:,]/\n\t};\n\n\tPrism.languages.css['atrule'].inside.rest = Prism.languages.css;\n\n\tvar markup = Prism.languages.markup;\n\tif (markup) {\n\t\tmarkup.tag.addInlined('style', 'css');\n\t\tmarkup.tag.addAttribute('style', 'css');\n\t}\n\n}(Prism));\n\n\n/* **********************************************\n     Begin prism-clike.js\n********************************************** */\n\nPrism.languages.clike = {\n\t'comment': [\n\t\t{\n\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t}\n\t],\n\t'string': {\n\t\tpattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\tgreedy: true\n\t},\n\t'class-name': {\n\t\tpattern: /(\\b(?:class|extends|implements|instanceof|interface|new|trait)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'punctuation': /[.\\\\]/\n\t\t}\n\t},\n\t'keyword': /\\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\\b/,\n\t'boolean': /\\b(?:false|true)\\b/,\n\t'function': /\\b\\w+(?=\\()/,\n\t'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n\t'operator': /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n\t'punctuation': /[{}[\\];(),.:]/\n};\n\n\n/* **********************************************\n     Begin prism-javascript.js\n********************************************** */\n\nPrism.languages.javascript = Prism.languages.extend('clike', {\n\t'class-name': [\n\t\tPrism.languages.clike['class-name'],\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:constructor|prototype))/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'keyword': [\n\t\t{\n\t\t\tpattern: /((?:^|\\})\\s*)catch\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t],\n\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n\t'function': /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n\t'number': {\n\t\tpattern: RegExp(\n\t\t\t/(^|[^\\w$])/.source +\n\t\t\t'(?:' +\n\t\t\t(\n\t\t\t\t// constant\n\t\t\t\t/NaN|Infinity/.source +\n\t\t\t\t'|' +\n\t\t\t\t// binary integer\n\t\t\t\t/0[bB][01]+(?:_[01]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// octal integer\n\t\t\t\t/0[oO][0-7]+(?:_[0-7]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// hexadecimal integer\n\t\t\t\t/0[xX][\\dA-Fa-f]+(?:_[\\dA-Fa-f]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// decimal bigint\n\t\t\t\t/\\d+(?:_\\d+)*n/.source +\n\t\t\t\t'|' +\n\t\t\t\t// decimal number (integer or float) but no bigint\n\t\t\t\t/(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[Ee][+-]?\\d+(?:_\\d+)*)?/.source\n\t\t\t) +\n\t\t\t')' +\n\t\t\t/(?![\\w$])/.source\n\t\t),\n\t\tlookbehind: true\n\t},\n\t'operator': /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n});\n\nPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|extends|implements|instanceof|interface|new)\\s+)[\\w.\\\\]+/;\n\nPrism.languages.insertBefore('javascript', 'keyword', {\n\t'regex': {\n\t\t// eslint-disable-next-line regexp/no-dupe-characters-character-class\n\t\tpattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/,\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'regex-source': {\n\t\t\t\tpattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'language-regex',\n\t\t\t\tinside: Prism.languages.regex\n\t\t\t},\n\t\t\t'regex-delimiter': /^\\/|\\/$/,\n\t\t\t'regex-flags': /^[a-z]+$/,\n\t\t}\n\t},\n\t// This must be declared before keyword because we use \"function\" inside the look-forward\n\t'function-variable': {\n\t\tpattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n\t\talias: 'function'\n\t},\n\t'parameter': [\n\t\t{\n\t\t\tpattern: /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t}\n\t],\n\t'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\n\nPrism.languages.insertBefore('javascript', 'string', {\n\t'hashbang': {\n\t\tpattern: /^#!.*/,\n\t\tgreedy: true,\n\t\talias: 'comment'\n\t},\n\t'template-string': {\n\t\tpattern: /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'template-punctuation': {\n\t\t\t\tpattern: /^`|`$/,\n\t\t\t\talias: 'string'\n\t\t\t},\n\t\t\t'interpolation': {\n\t\t\t\tpattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation-punctuation': {\n\t\t\t\t\t\tpattern: /^\\$\\{|\\}$/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /[\\s\\S]+/\n\t\t}\n\t},\n\t'string-property': {\n\t\tpattern: /((?:^|[,{])[ \\t]*)([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2(?=\\s*:)/m,\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\talias: 'property'\n\t}\n});\n\nPrism.languages.insertBefore('javascript', 'operator', {\n\t'literal-property': {\n\t\tpattern: /((?:^|[,{])[ \\t]*)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/m,\n\t\tlookbehind: true,\n\t\talias: 'property'\n\t},\n});\n\nif (Prism.languages.markup) {\n\tPrism.languages.markup.tag.addInlined('script', 'javascript');\n\n\t// add attribute support for all DOM events.\n\t// https://developer.mozilla.org/en-US/docs/Web/Events#Standard_events\n\tPrism.languages.markup.tag.addAttribute(\n\t\t/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source,\n\t\t'javascript'\n\t);\n}\n\nPrism.languages.js = Prism.languages.javascript;\n\n\n/* **********************************************\n     Begin prism-file-highlight.js\n********************************************** */\n\n(function () {\n\n\tif (typeof Prism === 'undefined' || typeof document === 'undefined') {\n\t\treturn;\n\t}\n\n\t// https://developer.mozilla.org/en-US/docs/Web/API/Element/matches#Polyfill\n\tif (!Element.prototype.matches) {\n\t\tElement.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n\t}\n\n\tvar LOADING_MESSAGE = 'Loading…';\n\tvar FAILURE_MESSAGE = function (status, message) {\n\t\treturn '✖ Error ' + status + ' while fetching file: ' + message;\n\t};\n\tvar FAILURE_EMPTY_MESSAGE = '✖ Error: File does not exist or is empty';\n\n\tvar EXTENSIONS = {\n\t\t'js': 'javascript',\n\t\t'py': 'python',\n\t\t'rb': 'ruby',\n\t\t'ps1': 'powershell',\n\t\t'psm1': 'powershell',\n\t\t'sh': 'bash',\n\t\t'bat': 'batch',\n\t\t'h': 'c',\n\t\t'tex': 'latex'\n\t};\n\n\tvar STATUS_ATTR = 'data-src-status';\n\tvar STATUS_LOADING = 'loading';\n\tvar STATUS_LOADED = 'loaded';\n\tvar STATUS_FAILED = 'failed';\n\n\tvar SELECTOR = 'pre[data-src]:not([' + STATUS_ATTR + '=\"' + STATUS_LOADED + '\"])'\n\t\t+ ':not([' + STATUS_ATTR + '=\"' + STATUS_LOADING + '\"])';\n\n\t/**\n\t * Loads the given file.\n\t *\n\t * @param {string} src The URL or path of the source file to load.\n\t * @param {(result: string) => void} success\n\t * @param {(reason: string) => void} error\n\t */\n\tfunction loadFile(src, success, error) {\n\t\tvar xhr = new XMLHttpRequest();\n\t\txhr.open('GET', src, true);\n\t\txhr.onreadystatechange = function () {\n\t\t\tif (xhr.readyState == 4) {\n\t\t\t\tif (xhr.status < 400 && xhr.responseText) {\n\t\t\t\t\tsuccess(xhr.responseText);\n\t\t\t\t} else {\n\t\t\t\t\tif (xhr.status >= 400) {\n\t\t\t\t\t\terror(FAILURE_MESSAGE(xhr.status, xhr.statusText));\n\t\t\t\t\t} else {\n\t\t\t\t\t\terror(FAILURE_EMPTY_MESSAGE);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\txhr.send(null);\n\t}\n\n\t/**\n\t * Parses the given range.\n\t *\n\t * This returns a range with inclusive ends.\n\t *\n\t * @param {string | null | undefined} range\n\t * @returns {[number, number | undefined] | undefined}\n\t */\n\tfunction parseRange(range) {\n\t\tvar m = /^\\s*(\\d+)\\s*(?:(,)\\s*(?:(\\d+)\\s*)?)?$/.exec(range || '');\n\t\tif (m) {\n\t\t\tvar start = Number(m[1]);\n\t\t\tvar comma = m[2];\n\t\t\tvar end = m[3];\n\n\t\t\tif (!comma) {\n\t\t\t\treturn [start, start];\n\t\t\t}\n\t\t\tif (!end) {\n\t\t\t\treturn [start, undefined];\n\t\t\t}\n\t\t\treturn [start, Number(end)];\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tPrism.hooks.add('before-highlightall', function (env) {\n\t\tenv.selector += ', ' + SELECTOR;\n\t});\n\n\tPrism.hooks.add('before-sanity-check', function (env) {\n\t\tvar pre = /** @type {HTMLPreElement} */ (env.element);\n\t\tif (pre.matches(SELECTOR)) {\n\t\t\tenv.code = ''; // fast-path the whole thing and go to complete\n\n\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_LOADING); // mark as loading\n\n\t\t\t// add code element with loading message\n\t\t\tvar code = pre.appendChild(document.createElement('CODE'));\n\t\t\tcode.textContent = LOADING_MESSAGE;\n\n\t\t\tvar src = pre.getAttribute('data-src');\n\n\t\t\tvar language = env.language;\n\t\t\tif (language === 'none') {\n\t\t\t\t// the language might be 'none' because there is no language set;\n\t\t\t\t// in this case, we want to use the extension as the language\n\t\t\t\tvar extension = (/\\.(\\w+)$/.exec(src) || [, 'none'])[1];\n\t\t\t\tlanguage = EXTENSIONS[extension] || extension;\n\t\t\t}\n\n\t\t\t// set language classes\n\t\t\tPrism.util.setLanguage(code, language);\n\t\t\tPrism.util.setLanguage(pre, language);\n\n\t\t\t// preload the language\n\t\t\tvar autoloader = Prism.plugins.autoloader;\n\t\t\tif (autoloader) {\n\t\t\t\tautoloader.loadLanguages(language);\n\t\t\t}\n\n\t\t\t// load file\n\t\t\tloadFile(\n\t\t\t\tsrc,\n\t\t\t\tfunction (text) {\n\t\t\t\t\t// mark as loaded\n\t\t\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_LOADED);\n\n\t\t\t\t\t// handle data-range\n\t\t\t\t\tvar range = parseRange(pre.getAttribute('data-range'));\n\t\t\t\t\tif (range) {\n\t\t\t\t\t\tvar lines = text.split(/\\r\\n?|\\n/g);\n\n\t\t\t\t\t\t// the range is one-based and inclusive on both ends\n\t\t\t\t\t\tvar start = range[0];\n\t\t\t\t\t\tvar end = range[1] == null ? lines.length : range[1];\n\n\t\t\t\t\t\tif (start < 0) { start += lines.length; }\n\t\t\t\t\t\tstart = Math.max(0, Math.min(start - 1, lines.length));\n\t\t\t\t\t\tif (end < 0) { end += lines.length; }\n\t\t\t\t\t\tend = Math.max(0, Math.min(end, lines.length));\n\n\t\t\t\t\t\ttext = lines.slice(start, end).join('\\n');\n\n\t\t\t\t\t\t// add data-start for line numbers\n\t\t\t\t\t\tif (!pre.hasAttribute('data-start')) {\n\t\t\t\t\t\t\tpre.setAttribute('data-start', String(start + 1));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// highlight code\n\t\t\t\t\tcode.textContent = text;\n\t\t\t\t\tPrism.highlightElement(code);\n\t\t\t\t},\n\t\t\t\tfunction (error) {\n\t\t\t\t\t// mark as failed\n\t\t\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_FAILED);\n\n\t\t\t\t\tcode.textContent = error;\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t});\n\n\tPrism.plugins.fileHighlight = {\n\t\t/**\n\t\t * Executes the File Highlight plugin for all matching `pre` elements under the given container.\n\t\t *\n\t\t * Note: Elements which are already loaded or currently loading will not be touched by this method.\n\t\t *\n\t\t * @param {ParentNode} [container=document]\n\t\t */\n\t\thighlight: function highlight(container) {\n\t\t\tvar elements = (container || document).querySelectorAll(SELECTOR);\n\n\t\t\tfor (var i = 0, element; (element = elements[i++]);) {\n\t\t\t\tPrism.highlightElement(element);\n\t\t\t}\n\t\t}\n\t};\n\n\tvar logged = false;\n\t/** @deprecated Use `Prism.plugins.fileHighlight.highlight` instead. */\n\tPrism.fileHighlight = function () {\n\t\tif (!logged) {\n\t\t\tconsole.warn('Prism.fileHighlight is deprecated. Use `Prism.plugins.fileHighlight.highlight` instead.');\n\t\t\tlogged = true;\n\t\t}\n\t\tPrism.plugins.fileHighlight.highlight.apply(this, arguments);\n\t};\n\n}());\n","import createGetFormMeta from './selectors/getFormMeta';\nimport plain from './structure/plain';\nexport default createGetFormMeta(plain);","export default function createGetFormMeta(_ref) {\n  var getIn = _ref.getIn,\n      empty = _ref.empty;\n  return function (form, getFormState) {\n    return function (state) {\n      var nonNullGetFormState = getFormState || function (state) {\n        return getIn(state, 'form');\n      };\n\n      return getIn(nonNullGetFormState(state), form + \".fields\") || empty;\n    };\n  };\n}"],"names":["t","s","_templateObject","_taggedTemplateLiteral","a","_e$useState","e","_e$useState2","_slicedToArray","r","i","imageSource","className","alt","src","thumbnailSource","style","visibility","onLoad","opacity","c","d","p","g","n","l","m","_templateObject2","v","_templateObject3","f","_templateObject4","h","columns","data","_a$isLoading","isLoading","loaderComponent","b","noDataComponent","_e","autoResetExpanded","o","u","getTableBodyProps","x","getTableProps","E","headerGroups","y","prepareRow","w","rows","Object","assign","map","getHeaderGroupProps","key","headers","getHeaderProps","getSortByToggleProps","title","render","isSorted","isSortedDesc","colSpan","length","size","getRowProps","cells","getCellProps","_ref","url","_templateObject5","_templateObject6","concat","_","banner","N","description","j","footer","M","isBeta","T","isOpen","open","kind","isClosable","displayName","START","END","isExpanded","handleOpenChange","_n$arrowPosition","arrowPosition","children","_a","C","onClick","name","onOpenChange","_s","_s2","Provider","value","createCache","cacheUpdateContextual","window","document","Math","max","min","round","abs","cancelAnimationFrame","requestAnimationFrame","setTimeout","clearTimeout","getApi","Node","ELEMENT_NODE","_Object$prototype","prototype","toString","hasOwnProperty","isUndefined","isNull","isNumber","isString","isBoolean","isFunction","isArray","Array","isObject","isArrayLike","isPlainObject","call","replace","toLowerCase","type","isHTMLElement","HTMLElement","nodeType","isElement","Element","each","keys","inArray","indexOf","push","apply","from","createOrKeepArray","isEmptyArray","deduplicateArray","Set","runEachAndClear","S","$","O","H","z","I","equal","equalWH","equalXY","equalTRBL","noop","bind","_len","arguments","_key","selfClearTimeout","debounce","this","mergeParms","flush","assignDeep","slice","removeUndefinedProperties","isEmptyObject","capNumber","getDomTokensArray","split","filter","getAttr","getAttribute","hasAttr","hasAttribute","setAttrs","setAttribute","removeAttrs","removeAttribute","domTokenListAttr","domTokenListOperation","join","reduce","includes","removeAttrClass","addAttrClass","addRemoveAttrClass","createDomTokenListClass","removeClass","addClass","find","querySelectorAll","is","matches","isBodyElement","contents","childNodes","parent","parentElement","closest","getFocusedElement","activeElement","liesBetween","querySelector","findFirst","removeElements","removeChild","before","createDocumentFragment","previousSibling","appendChild","nextSibling","firstChild","insertBefore","appendChildren","insertAfter","createDiv","createElement","createDOM","innerHTML","trim","A","getCSSVal","getPropertyValue","validFiniteNumber","isFinite","parseToZeroOrNumber","parseFloat","ratioToCssPercent","toFixed","numberToCssPx","setStyles","test","setProperty","getStyles","getComputedStyle","kt","getDirectionIsRTL","topRightBottomLeft","getTrasformTranslateValue","getElmWidthHeightProperty","windowSize","D","k","R","fractionalSize","getBoundingClientRect","domRectHasDimensions","domRectAppeared","removeEventListener","addEventListener","passive","capture","stopPropagation","preventDefault","absoluteCoordinates","left","scrollX","top","scrollY","convertScrollPosition","getRawScrollBounds","getRawScrollRatio","scrollElementTo","_ref2","scrollLeft","scrollTop","getElmentScroll","manageListener","createEventListenerHub","Map","removeEvent","get","forEach","clear","addEvent","set","add","opsStringify","JSON","stringify","getPropByPath","V","paddingAbsolute","showNativeOverlaidScrollbars","update","elementEvents","attributes","ignoreMutation","overflow","scrollbars","theme","autoHide","autoHideDelay","autoHideSuspend","dragScroll","clickScroll","pointers","getOptionsDiff","createOptionCheck","L","P","U","B","F","q","X","J","K","Z","G","Q","tt","nt","ot","st","et","rt","ut","dt","ft","_t","vt","ht","pt","gt","bt","wt","yt","St","mt","$t","Ot","Ct","xt","registerPluginModuleInstances","_t$s","static","instance","_ref3","_ref4","getStaticPluginModuleInstance","zt","getShowNativeOverlaidScrollbars","_t4","_t5","overflowIsVisible","getViewportOverflowState","getStatePerAxis","_getStatePerAxis","_getStatePerAxis2","_getStatePerAxis3","_getStatePerAxis4","setViewportOverflowState","setAxisOverflowStyle","_setAxisOverflowStyle","_setAxisOverflowStyle2","_setAxisOverflowStyle3","_setAxisOverflowStyle4","Et","Tt","getEnvironment","getNativeScrollbarSize","body","_createEventListenerH","_createEventListenerH2","_createCache","_createCache2","_i4","getNativeScrollbarsHiding","elements","host","padding","viewport","content","slot","cancel","nativeScrollbarsOverlaid","_defineProperty","getRtlScrollBehavior","Y","createEnvironment","resolveInitialization","staticInitializationElement","dynamicInitializationElement","Rt","WeakMap","getInstance","createDOMObserver","_ref12","ct","lt","it","_createEventContentCh","updateElements","_ref10","_ref11","contains","delete","createEventContentChange","_createEventContentCh2","observerCallback","attributeName","target","oldValue","addedNodes","removedNodes","observe","attributeOldValue","attributeFilter","subtree","childList","characterData","disconnect","takeRecords","createSizeObserver","_ref13","_createCache3","onSizeChangedCallbackProxy","ResizeObserverEntry","_a5","contentRect","_a6","pop","_r5","_r6","_createCache5","_o5","createTrinsicObserver","_createCache7","triggerOnTrinsicChangedCallback","isIntersecting","intersectionRatio","isHeightIntrinsic","intersectionObserverCallback","root","onSizeChanged","createObserversSetup","_createCache9","W","setDirectionWhenViewportIsTarget","updateViewportAttrsFromHost","onTrinsicChanged","_t14","_ref14","_ref15","_ref16","onContentMutation","_z","Ht","onHostMutation","_ref17","_ref18","_createDOMObserver","_createDOMObserver2","_z3","It","_ref19","At","_t15","_t17","_t18","_t19","_t20","_t21","_t22","_createDOMObserver3","ignoreMutationFromOptions","_createDOMObserver4","createScrollbarsSetupElements","_getEnvironment4","Dt","initScrollTimeline","source","axis","getScrollbarHandleLengthRatio","Mt","Vt","Lt","Pt","addDirectionRTLKeyframes","cancelElementAnimations","setElementAnimation","timeline","effect","KeyframeEffect","composite","animate","scrollbarStructureAddRemoveClass","Ut","scrollbarStyle","_n15","_n16","scrollbarStructureRefreshHandleLength","scrollbarStructureRefreshHandleOffset","getTransformValue","getScrollbarHandleOffsetRatio","transform","doRefreshScrollbarOffset","scrollbarsAddRemoveClass","generateScrollbarDOM","Bt","Nt","jt","_ref23","setScrollbarElementAnimation","styleScrollbarPosition","getTranslateValue","Ft","qt","Wt","Xt","Yt","Jt","createScrollbarsSetupEvents","Kt","_selfClearTimeout","_selfClearTimeout2","_selfClearTimeout3","_selfClearTimeout4","scrollBy","isAffectingTransition","propertyName","focus","deltaX","deltaY","deltaMode","behavior","animateHandleOffset","createRelativeHandleMove","button","isPrimary","pointerType","shiftKey","getHandleOffset","releasePointerCapture","pointerId","setPointerCapture","createInteractiveScrollEvents","createStructureSetupElements","_ref27","ownerDocument","documentElement","getDocumentWindow","defaultView","focusElm","elementIsGenerated","cn","Zt","rn","ln","hasAttrClass","unwrap","prepareWrapUnwrapFocus","stopImmediatePropagation","createTrinsicUpdateSegment","_ref28","_ref29","Gt","an","createPaddingUpdateSegment","_ref31","_createCache11","_createCache12","_ref32","_r8","_r9","_ref33","_t49","_t50","_c7","_c8","un","dn","createOverflowUpdateSegment","getOverflowAmount","devicePixelRatio","_createCache13","_createCache14","_createCache15","_createCache16","_createCache17","_createCache18","_createCache19","_createCache20","_createCache21","_ref34","_ref35","_ref36","_ref37","_getShowNativeOverlai3","_getShowNativeOverlai4","_n20","_n21","_ref38","_ref39","_ot","_ot2","_st","_st2","_ct","_ct2","_et","_et2","at","_st3","_st4","_ot3","_ot4","_H2","_H3","en","sn","tn","nn","createSetups","_createStructureSetup3","_createStructureSetup","_createStructureSetup2","_getEnvironment7","createStructureSetup","_createStructureSetup4","_createObserversSetup","_createObserversSetup2","_createScrollbarsSetu3","isHoverablePointerType","_selfClearTimeout5","_selfClearTimeout6","_selfClearTimeout7","_selfClearTimeout8","_selfClearTimeout9","_selfClearTimeout10","_selfClearTimeout11","_selfClearTimeout12","_createScrollbarsSetu","manageScrollbarsAutoHideInstantInteraction","_createScrollbarsSetu2","manageScrollbarsAutoHide","manageAutoHideSuspension","onHostMouseEnter","_ref24","_ref25","Qt","_ref26","_t30","_t31","_t32","_t33","_t34","_t35","_t36","_t37","_t38","_t39","_t40","_t42","_t43","_t44","_t45","_t46","_t47","setScrollbarVisibility","createScrollbarsSetup","_createScrollbarsSetu4","updateHintsAreTruthy","some","fn","_n","vn","hn","pn","gn","OverlayScrollbars","validateOptions","_createEventListenerH3","_createEventListenerH4","_createEventListenerH5","_createEventListenerH6","triggerEvent","_createSetups","_ref40","_ref41","updateHints","sizeChanged","directionChanged","heightIntrinsicChanged","overflowEdgeChanged","overflowAmountChanged","overflowStyleChanged","contentMutation","hostMutation","appear","changedOptions","force","_createSetups2","destroy","removeInstance","options","on","off","state","_b6","overflowEdge","overflowAmount","overflowStyle","hasOverflow","directionRTL","destroyed","_w3$pn","_w3$gn","translateScrollbarStructure","scrollbar","track","handle","translateScrollbarsSetupElement","clone","scrollOffsetElement","scrollEventElement","scrollbarHorizontal","scrollbarVertical","plugin","addInstance","_ref9","_getEnvironment","_r$cancel","cancelInitialization","addPlugins","valid","env","_getEnvironment9","scrollbarsSize","scrollbarsOverlaid","scrollbarsHiding","rtlScrollBehavior","scrollTimeline","staticDefaultInitialization","staticDefaultOptions","getDefaultInitialization","setDefaultInitialization","getDefaultOptions","setDefaultOptions","requestIdleCallback","cancelIdleCallback","timeout","events","defer","_C","_C2","current","_l$element","element","_objectWithoutProperties","_excluded","_F","_F2","osInstance","getElement","_objectSpread","ref","_t$size","_o","Prism","_self","lang","uniqueId","plainTextGrammar","manual","disableWorkerMessageHandler","util","encode","tokens","Token","alias","objId","obj","defineProperty","deepClone","visited","id","getLanguage","exec","setLanguage","language","RegExp","classList","currentScript","Error","err","stack","scripts","getElementsByTagName","isActive","defaultActivation","no","languages","plain","plaintext","text","txt","extend","redef","inside","insert","grammar","ret","token","newToken","old","DFS","callback","property","propertyType","plugins","highlightAll","async","highlightAllUnder","container","selector","hooks","run","highlightElement","nodeName","code","textContent","insertHighlightedCode","highlightedCode","Worker","worker","filename","onmessage","evt","postMessage","immediateClose","highlight","tokenize","rest","tokenList","LinkedList","addAfter","head","matchGrammar","list","array","node","next","tail","toArray","all","callbacks","matchedStr","matchPattern","pattern","pos","lookbehind","lastIndex","match","lookbehindLength","index","startNode","startPos","rematch","patterns","cause","patternObj","greedy","global","flags","currentNode","reach","str","removeCount","to","matchStr","after","removeFrom","prev","removeRange","nestedRematch","newNode","count","tag","classes","aliases","message","parse","close","script","highlightAutomaticallyCallback","readyState","WorkerGlobalScope","self","module","exports","markup","tagName","includedCdataInside","def","attrName","html","mathml","svg","xml","ssml","atom","rss","string","css","addInlined","addAttribute","clike","javascript","regex","js","msMatchesSelector","webkitMatchesSelector","EXTENSIONS","STATUS_ATTR","STATUS_LOADING","STATUS_LOADED","SELECTOR","pre","extension","autoloader","loadLanguages","success","error","xhr","XMLHttpRequest","onreadystatechange","status","responseText","statusText","send","loadFile","range","start","Number","comma","end","undefined","parseRange","lines","String","fileHighlight","logged","console","warn","getIn","empty","form","getFormState","nonNullGetFormState"],"sourceRoot":""}